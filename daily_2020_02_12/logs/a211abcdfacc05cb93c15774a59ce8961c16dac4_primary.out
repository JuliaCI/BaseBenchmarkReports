cset: moving following pidspec: 32669
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.42872655 seconds)
loading group "string"... done (took 0.604737347 seconds)
loading group "linalg"... done (took 7.876460754 seconds)
loading group "parallel"... done (took 0.179086698 seconds)
loading group "find"... done (took 1.188283913 seconds)
loading group "tuple"... done (took 1.949067485 seconds)
loading group "dates"... done (took 1.302996091 seconds)
loading group "micro"... done (took 0.249380058 seconds)
loading group "io"... done (took 0.973973991 seconds)
loading group "scalar"... done (took 39.08771937 seconds)
loading group "sparse"... done (took 12.326855208 seconds)
loading group "broadcast"... done (took 0.988677923 seconds)
loading group "union"... done (took 13.254585553 seconds)
loading group "simd"... done (took 4.684738173 seconds)
loading group "random"... done (took 9.452105938 seconds)
loading group "problem"... done (took 1.853595046 seconds)
loading group "array"... done (took 21.527697991 seconds)
loading group "misc"... done (took 1.70443773 seconds)
loading group "sort"... done (took 3.431186167 seconds)
loading group "collection"... done (took 17.910621296 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527915257 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129771476 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132114543 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124258465 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152520529 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119081135 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131018235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090043631 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.8293098 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153763354 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122624886 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439409052 seconds)
done (took 5.263538845 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178366913 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087481527 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086911602 seconds)
  done (took 1.31135979 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069147135 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130484215 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071002416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070470777 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071066323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070403949 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0708837 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069879877 seconds)
  done (took 1.692210889 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078071986 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072285257 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069442875 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071484022 seconds)
  done (took 1.431687601 seconds)
done (took 5.831186445 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809578768 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220469923 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193047868 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.428483489 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133646002 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16392502 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64172255 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309683261 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192711232 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085014572 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113179968 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353289232 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113119577 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650427091 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080837513 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095850236 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.147187368 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436261661 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071187574 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085654629 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092552313 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132423732 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089440044 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078495942 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14985032 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071204875 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140836434 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083937354 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070359651 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225121279 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175961579 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671105348 seconds)
  done (took 10.482450773 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103872946 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105121171 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071847909 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130359922 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103708339 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073446527 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078537839 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070711939 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094965933 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135162227 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096417055 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107255251 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06875336 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072549128 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089008505 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209780646 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083982274 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086140099 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074743077 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083440687 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111862304 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082523959 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085223011 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084913095 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133526312 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183636379 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101383962 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101387293 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069873153 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086859204 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117977787 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131642405 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068908283 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069955399 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131310574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097694975 seconds)
  done (took 4.774198928 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.046084824 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149792796 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093741551 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13963497 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069182321 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113532078 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069788142 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084886367 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215979901 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.341128533 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.639017375 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.117669586 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114539359 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110490273 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071626351 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072517632 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073521814 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.582152474 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10174655 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112958036 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085692566 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073760003 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073029873 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37356816 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071854961 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068092871 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073007164 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061123728 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130509753 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072095624 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.974469383 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166763436 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070515467 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10416143 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.3008888 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094663887 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148031857 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073082595 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068502563 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162097382 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074269195 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068710251 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070211595 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088160565 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107288911 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122364333 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069314769 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072627255 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169124027 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069051762 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084575329 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.129053206 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157989199 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081082413 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068659883 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265125676 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093076963 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073985071 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069579029 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186494226 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130864346 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071357166 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070384533 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071834404 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072773638 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378135596 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072725872 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990831491 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07419115 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079556977 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072663106 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07400485 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076836292 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076813865 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092304147 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069928083 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068136386 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069416254 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069887586 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070611409 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079235618 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087590002 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.403618097 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069916454 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072100348 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067512728 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068612345 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092855536 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099934242 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.174623877 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070036951 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103777762 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072881549 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070061971 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113195654 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070532197 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087091251 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073222231 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116364837 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070765694 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101581072 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071493894 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100280134 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074314332 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10215221 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084311928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071654716 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.446801203 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068985002 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068945927 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072768896 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06906631 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071752558 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070949451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082654531 seconds)
  done (took 22.333944671 seconds)
done (took 39.773464972 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268594423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077286269 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077126461 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077082505 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077610024 seconds)
  done (took 1.812894717 seconds)
done (took 3.027585724 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128519037 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10448023 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068044182 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101558265 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067967539 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106440119 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105132869 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08119814 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105545167 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068035254 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103051765 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068180218 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067789299 seconds)
  done (took 2.412242716 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08875497 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088837151 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07375328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088018546 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06686907 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087696315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085871795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093197168 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085992582 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076311083 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067003516 seconds)
  done (took 2.110749402 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087956464 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089299049 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073854225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086818128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067486855 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086629877 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086384934 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090055988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08698794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078347549 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067571905 seconds)
  done (took 2.107389835 seconds)
done (took 7.832754496 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082855981 seconds)
  done (took 1.276729753 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.603629738 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.099954248 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086046033 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116374663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197680233 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122189047 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276110647 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.09053969 seconds)
  done (took 8.976777049 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093724621 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087123987 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076044042 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073723258 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074998784 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072867639 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072597608 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07438514 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071956438 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076062782 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075111081 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07697296 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075714891 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072581251 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0720604 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072016992 seconds)
  done (took 2.492758859 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096799288 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096929321 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076919385 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079218837 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07590526 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075621983 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077952121 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077231374 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074433566 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076217531 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07796308 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076633887 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075387999 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067931379 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077444852 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079195274 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074782345 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077626519 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078160464 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079182394 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078496735 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067920122 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075062635 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077388365 seconds)
  done (took 3.184729623 seconds)
done (took 17.1349603 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111816735 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071716101 seconds)
  done (took 1.387426856 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087816076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088792841 seconds)
  done (took 1.387221892 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088278317 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069110417 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093551677 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08135438 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069947071 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06928271 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090951851 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069375135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069254654 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069352535 seconds)
  done (took 1.981440637 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074133381 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08094303 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074314346 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084761285 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077215376 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067437715 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075214849 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071368634 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080701378 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06635834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074811952 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086619865 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07460952 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08843098 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076103998 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072150961 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074523589 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07059536 seconds)
  done (took 2.585523157 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07099887 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070278051 seconds)
  done (took 1.360030707 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07218697 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06692054 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070585497 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070570073 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067219459 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066028669 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067135951 seconds)
  done (took 1.694409169 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396199014 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119632457 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325058989 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075223684 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085357979 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.269473385 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069379546 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074644715 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074999597 seconds)
  done (took 2.749054267 seconds)
done (took 14.366198505 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085453368 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091589883 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100103029 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394500397 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095574455 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069871059 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117285445 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192632933 seconds)
done (took 2.3777375 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219855736 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.722964618 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.445507325 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219430851 seconds)
  done (took 2.609750811 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358481115 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093260259 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065092755 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070432039 seconds)
  done (took 1.814387639 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07171862 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072669636 seconds)
  done (took 1.371090181 seconds)
done (took 7.242423234 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071492077 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091057028 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070119998 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068112692 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07044417 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067514415 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066697783 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070118226 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070398907 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.069575601 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069869042 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06967055 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067353909 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06682072 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069367725 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067140681 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067238709 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06992249 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066796122 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06723891 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069803044 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067361754 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067181154 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067577668 seconds)
  done (took 2.930520753 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09014342 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.07022619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075046539 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075213156 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073063572 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074649158 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074712081 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069887977 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074715001 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071440778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072666394 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072666189 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07129737 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072659308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071852216 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073089809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074476214 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069213088 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071739611 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072561342 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.186999711 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069288035 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07221781 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074330783 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072592223 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072905114 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071316481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069285843 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074259757 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072835231 seconds)
  done (took 3.544333133 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.076019622 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066430389 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068333903 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074140887 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06721215 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067747745 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066290782 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067461712 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068375756 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067022109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068992347 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066349674 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067275482 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067656141 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067884406 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070757629 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082890246 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067007132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06815039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067762232 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070232596 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066747143 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066850622 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06637311 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066734147 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06634416 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06756075 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066994834 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067851439 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067134977 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070078034 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070844257 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066516607 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073784183 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070897664 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067488692 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071245717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066951416 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067179439 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067189585 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067265718 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06659915 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066819061 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074340104 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06683592 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068560902 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067246968 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067740329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067760571 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069359288 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066824499 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067631284 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069297526 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06816547 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07146638 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066663903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067756132 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066778264 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067895426 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067221932 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066514902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066998437 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069541457 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067850131 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082990832 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074477258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067193566 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068395991 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068134703 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070587665 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068917753 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081822172 seconds)
  done (took 6.203867921 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095324097 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091949954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06925627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068508285 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06540643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067891193 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073146409 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067939666 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069422283 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085845227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06834947 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068523859 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068927549 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07114456 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06811325 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069299033 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075714014 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064857951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067467369 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071122272 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068006402 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073106598 seconds)
  done (took 2.836439908 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161096805 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073777445 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110369141 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078810243 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07368547 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078741688 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073481894 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073335781 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073420211 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071208574 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07110468 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073486344 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073776737 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071155798 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070653875 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071519723 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073357061 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070644892 seconds)
  done (took 2.683689096 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081086861 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069996916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09037635 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069202173 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069488137 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071732363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074103378 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078132782 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072017644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069366705 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077426985 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071763415 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071789916 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069038706 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071829044 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06917515 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071796759 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069411202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077270097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073457678 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073388903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07752634 seconds)
  done (took 2.860589294 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084928323 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072287009 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085441646 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071551757 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065351642 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067787293 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073775829 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069385032 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073325392 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071078026 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069079915 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068153742 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072769967 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069416601 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072137889 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069501593 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071809817 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069292375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071189685 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065361095 seconds)
  done (took 2.676843972 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091491538 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0715775 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07124723 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079132211 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071145384 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071147653 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078344768 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071734416 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071066465 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092313533 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071342463 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071742226 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078719926 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076030093 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071482453 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078228491 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078262139 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078094135 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071022355 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071635287 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092424507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071246217 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078266279 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070995185 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071687478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071456926 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071318519 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075849049 seconds)
  done (took 3.362890588 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072442079 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069356147 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066497336 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067845315 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066988217 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067066227 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067335482 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067072966 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069578398 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066829926 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070152647 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069496778 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069920757 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069336492 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069334175 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069338097 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06938534 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06696179 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06667005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066782455 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069153555 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071158013 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071610657 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068952504 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068956646 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071608314 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06891013 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068665186 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070967653 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066989107 seconds)
  done (took 3.311627085 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080472858 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076801498 seconds)
  done (took 1.406038635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068035028 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083689781 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06626762 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074062343 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07324805 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07045899 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077200858 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073133212 seconds)
  done (took 1.829134897 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08841617 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081141591 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071091835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083379662 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080386247 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087910156 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140872907 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070570901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076267052 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067832047 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085985939 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06925298 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076463538 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07029109 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075887109 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076946669 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067462064 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075472276 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071670216 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068555411 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071339735 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079021322 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07344076 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065283496 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071695584 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093445582 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081514569 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069567412 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073117182 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078025568 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076510468 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063695112 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069855814 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070307285 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06791363 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080340305 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084937114 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072656483 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079186592 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070636112 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079411293 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064805188 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074393283 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076595413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080666604 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070545718 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070952589 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064761492 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068571139 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074527361 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065555029 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070586529 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064287401 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077961526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07387612 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081075219 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069596421 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071586253 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072810029 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073422565 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076953953 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071816983 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073201581 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069868792 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080181582 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074987703 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078685813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065005531 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063994118 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068077401 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079632083 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093903689 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076818137 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071102561 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070748676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06803989 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073289497 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070471565 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07642318 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076472508 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07002383 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075516751 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078563868 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070417436 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073078021 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078033492 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068233839 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072579284 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068205377 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086920765 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069105628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067965705 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068584679 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080389891 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073568056 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069914512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067475331 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076645629 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063787424 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069438216 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069884935 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070009159 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079421296 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073856082 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074230282 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077462034 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076349057 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069265509 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071879438 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065924099 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069876707 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068257352 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077099993 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06332956 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072097348 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196624583 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071018846 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079086279 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06878054 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070488175 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079905183 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077886209 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069543637 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067556682 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073899175 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0702017 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073819259 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079566504 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069155251 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065522738 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06485557 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074154568 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069528281 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074756287 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075129942 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073190505 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063928933 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068546499 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075137796 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079597159 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07071774 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071027284 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076036031 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072341509 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070663167 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077362767 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072727825 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070245179 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076162769 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071796998 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065332254 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073150828 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07284668 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069628778 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074910883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073023947 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072952291 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070248717 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068888406 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076898494 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070497249 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069088813 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070446243 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069505853 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080567779 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071759465 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064778076 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067129411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077318362 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06854859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069604261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069520376 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07334202 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070295408 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068386979 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069258165 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072444436 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080742202 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074290387 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071121195 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075722548 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08198176 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069384181 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072466928 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069446541 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070718839 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070040003 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07907144 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075918811 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07439137 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072658881 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066442895 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075396662 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078271816 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068905814 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06750636 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06953497 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074644843 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075911508 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073496619 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070449364 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068768446 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071038926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072921784 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073210374 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070490618 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069087835 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075905165 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067944751 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076475662 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070488428 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080920054 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073661151 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064608455 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072313986 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068361866 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076355026 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064719665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067865486 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068566721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070316721 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068812238 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071732839 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06291779 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076171353 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076864069 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069235332 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068209887 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06867651 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075689978 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070757041 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072316895 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072852779 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.202316684 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081731407 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070180146 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074062395 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081969449 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071053648 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064617038 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076440684 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069203396 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068509452 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070493112 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068885478 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073874224 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078231441 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077293376 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064000757 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073086819 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068784802 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070623407 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065337066 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075249967 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073180978 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071332782 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076530923 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07140848 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070444899 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073987879 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069730864 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07226832 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072197232 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073067952 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071253814 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072198357 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070547385 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073699279 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069270779 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067421433 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072049214 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069916402 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070903033 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075459546 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069106154 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07020789 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072796792 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070502029 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071097721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070350203 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070537278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074137586 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07103984 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07084399 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07293696 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065127344 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077635811 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069714158 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078657819 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071700531 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067882048 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077445545 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072864149 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0763326 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070413828 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071257158 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071363751 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069212332 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073476234 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077605751 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068238464 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080640775 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077324804 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071951233 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073195408 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070864657 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072121666 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069148934 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071168481 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070477679 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070764749 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070238221 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074681459 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072818974 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070773139 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072992387 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070707078 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070587463 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072094878 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064404914 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069675257 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069438284 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072624227 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080346036 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070829623 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070674592 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069516319 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071275169 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070295088 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066799901 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077616033 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078636346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070430012 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07704666 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069273416 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071097681 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081422289 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063707482 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067762437 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066890286 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067992343 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077203808 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069757092 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078914878 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07034597 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068135959 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066040665 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069927192 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067587246 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063049944 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066968287 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072344378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068149277 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068229275 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068965919 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.20313816 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071795802 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080322685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070630042 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07212599 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071306921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067780353 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069928911 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069280953 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073521581 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071211792 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067785664 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067786106 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070025323 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071505431 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071826914 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070140518 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071524869 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077437891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070429966 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073657076 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073701286 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065613218 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07281777 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070649632 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070819837 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069174118 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07367928 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073651408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071516188 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079086795 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070304431 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070675718 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070747919 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068526992 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07082027 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069871501 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070115487 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070564277 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071543603 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078772004 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067785581 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07351827 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071223083 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070734956 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076777261 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070418463 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072617082 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075970556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070027017 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072440109 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078808765 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074566027 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074285597 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07001169 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0720792 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075646085 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069759081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077230233 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071445771 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070568471 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071488949 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068238053 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070208568 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070442652 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069704415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076606824 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070740861 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069945352 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06943239 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066780815 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071377436 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072024847 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078002217 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072793869 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073573275 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064980155 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066770271 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070410017 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068097706 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071704872 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072750294 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076569068 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073512228 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070308061 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069522337 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079515627 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075988138 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073933228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068939052 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074842206 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070832355 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07324271 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071981849 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07047893 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072097435 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074207903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071984117 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070367719 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077449836 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07415313 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070960905 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071545129 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070918422 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070313276 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06477337 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06986008 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071871486 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074781344 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072326468 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069657014 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080885692 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06700955 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069782893 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072359543 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068516184 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073930121 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064082157 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071071998 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069997182 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07058227 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064515876 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.199917628 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069925246 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074347534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070671554 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065584067 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082125039 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080251741 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074729102 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0699603 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069844581 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065541474 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064974204 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069838029 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071670493 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073546817 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082801982 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069970695 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070256338 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065673332 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070428916 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073628715 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07366315 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068094675 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065736324 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069995174 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073390703 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075487085 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069487132 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070265456 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07360718 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072979887 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068281938 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073212653 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066707848 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074543301 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0826883 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070921601 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071072376 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076791205 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078586145 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070187739 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065532175 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070982408 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073163684 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070976181 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071364514 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07144526 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08655675 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073963048 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069565355 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070272429 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074121145 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069295821 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078581683 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071943113 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070295031 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074763926 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072048044 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078686643 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074476382 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077820475 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073102504 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073000597 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069285962 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070896267 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067812168 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069557674 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07103972 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070603619 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075097286 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077928695 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06995345 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080858328 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079259445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072175836 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067184953 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069594987 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070385882 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065385282 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071174331 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068558016 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068700965 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06831724 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06936488 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071597958 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075841071 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071234736 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071134128 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070668275 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064396239 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073498435 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072679774 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07152382 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067463756 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070381953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.07084477 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074479567 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073223176 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068127903 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07166488 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071936219 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070763858 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064762346 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076242992 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068950605 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071634324 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068986727 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069915522 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070240105 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074067396 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073899253 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070913698 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071724846 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073667383 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071300833 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066766363 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066555184 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074847617 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067129782 seconds)
  done (took 44.836089562 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107253546 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066406271 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066039538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065605325 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07667435 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066404239 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065470436 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066278929 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066265356 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068158991 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065193406 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065135542 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073469914 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08095621 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076328639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069782669 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065236031 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066079682 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064870423 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066079789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073186501 seconds)
  done (took 2.838910865 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079894898 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081478827 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078728122 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085583454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074240867 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073557411 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078568947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073275479 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081916586 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075534529 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08129319 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07343275 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075458537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075868402 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076270702 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073633414 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084071904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074025802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073776406 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078816772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073737661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078353922 seconds)
  done (took 3.028058601 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07350125 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071063677 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071052596 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064482002 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06913559 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065772728 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073049404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067235539 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072328698 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06851165 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068824591 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068702846 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071084425 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064309452 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069405408 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067210102 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111320423 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.0726907 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069703666 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070433377 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064961861 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071344595 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065087534 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065329386 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069210066 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072522054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06988258 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067757024 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069694306 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068165167 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069627734 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067196159 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071336042 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069869779 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068774795 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068481769 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068844425 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06963181 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065386268 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067236736 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070504813 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064888506 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070033105 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070618358 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068512935 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067014242 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071109372 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069946463 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064137527 seconds)
  done (took 4.746179928 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084753815 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113628407 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070403316 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094091197 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082721391 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075714109 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073444777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094017203 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066683071 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067626727 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084161916 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081648393 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068551629 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073370143 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07564083 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068425159 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070058082 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067813559 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072277814 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068340357 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072482378 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075938645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083287491 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081077536 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072489315 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067620507 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067831472 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073136664 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081032842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073257591 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073422978 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073803995 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083472289 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07091558 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068369147 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071233759 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084474611 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069008141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071443242 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06645602 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071015981 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073638504 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075412608 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08442589 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069350056 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073610184 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068587868 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065979061 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080622314 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071188328 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07630111 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08229328 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07228427 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068684602 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073333241 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083489749 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068918145 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066870601 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072086504 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080253341 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066411508 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07237799 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082231076 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071382241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076338329 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082331188 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074718777 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072531737 seconds)
  done (took 6.587663192 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082815127 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099730916 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086338977 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086552581 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079236747 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078878006 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079287233 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078897958 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078579927 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083583166 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07904636 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119471086 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074507585 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080672793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078949056 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07897898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07890492 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079001502 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078722906 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078442196 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0790077 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086007705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078627686 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08595829 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091158879 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074456631 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078435681 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078661384 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086873637 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078929909 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082829384 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078727736 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078543738 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085735408 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083058349 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078917422 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069259237 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078882766 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078923789 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079303573 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074425277 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08644626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078845862 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074588562 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079188033 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078589404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086171154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082555469 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08148289 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083624633 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078800425 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086198687 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078532889 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078940304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086480235 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089005185 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086156716 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087367584 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079104225 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086333346 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086165594 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089038043 seconds)
  done (took 6.441064376 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089782028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079251797 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085793443 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064829103 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067334297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075292167 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067331891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068472596 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076897933 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077064737 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079989843 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074925863 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077532405 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079488436 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074957438 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077776649 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074860258 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075111713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076984773 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07486198 seconds)
  done (took 2.867414289 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081087267 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088666507 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070179632 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074404537 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07286993 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074512782 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071880276 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072738553 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070775379 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072702738 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078998394 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079002979 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070769497 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074741695 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078573836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075321955 seconds)
  done (took 2.549667557 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090609372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077435225 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083531882 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071056569 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070173345 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065590968 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069117149 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064599428 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065350431 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081228714 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069000929 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079532338 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068943061 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06813127 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065830323 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074360831 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065563272 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066260963 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069624569 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081798166 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072963416 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06785356 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072840982 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069118893 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071631354 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073867758 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068307158 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069245733 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066272378 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069250566 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072440478 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072147445 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066340286 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067163775 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067879196 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066191361 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069250641 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069040375 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074078526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06951821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06748961 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070793514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069307368 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07062326 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065507487 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069401687 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065481317 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071612656 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066482945 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071464357 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069572826 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072047655 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07047293 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076391505 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07225621 seconds)
  done (took 5.235232931 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087161126 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07524935 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065789733 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068036925 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073479804 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070942468 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072573974 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071028093 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070577563 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067294677 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070423188 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072345583 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07072278 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073039649 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070912759 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072942414 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065169746 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070609233 seconds)
  done (took 2.643678347 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076846342 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071736043 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078288823 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07227054 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071808912 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073584502 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067361962 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.070079496 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070322897 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07178412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071499665 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074290636 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072325788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074153207 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071240445 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071031693 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073860441 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069970672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071453462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067358948 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074057242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069453784 seconds)
  done (took 2.932791054 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101417636 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087972314 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143901672 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082572409 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089302234 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075199673 seconds)
  done (took 1.930157472 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097808638 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106461391 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069775403 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073041909 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079311846 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07357544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073403296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073828682 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081773136 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079004275 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073599734 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08202765 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081954041 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080566577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07924422 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079176251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072974102 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07347307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069557059 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086370632 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074039362 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081373524 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073168805 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07305862 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074105521 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080824412 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081185612 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079660364 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073043579 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081254515 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078723328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0735272 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08186838 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079177625 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072766248 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082392259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073515256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087278058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079212014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081320534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072321191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079413497 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081885705 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078404855 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082160287 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073732244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078317898 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073757526 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0737165 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089511312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080148235 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080650636 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079542865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08199338 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08170112 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089382672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079570627 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081200078 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080421045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079329514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081491375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07959095 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080896818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07921916 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079774091 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080971995 seconds)
  done (took 6.581786966 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112313715 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071521427 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074014206 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079839883 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080990267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074547679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073772964 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073585903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073534325 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070516177 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112290072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074047524 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080888592 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080893909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073748836 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073358583 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073939372 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080806725 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070662543 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088529334 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073309122 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080952494 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081132038 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081221474 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079116509 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078912391 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073892392 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073717776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073601229 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073920801 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078298482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073593773 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081347273 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070251232 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080650956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073623155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073869281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078177408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073493867 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079771003 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081074053 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087192679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0739369 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073570414 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079477393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073597616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0737434 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071654235 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073654286 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070854261 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078965195 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079310043 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078955795 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080696676 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073717909 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073375041 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073688338 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07353297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074597413 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079075338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080669413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073647871 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088628233 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073884499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073673085 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081003682 seconds)
  done (took 6.49247417 seconds)
done (took 134.580639272 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195715311 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173781588 seconds)
  done (took 1.713888227 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075480319 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105596162 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080756627 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132725923 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070275728 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103398178 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103107796 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08184216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069937377 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069780203 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069834813 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072706866 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134760454 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069788098 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070228582 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072604427 seconds)
  done (took 2.7412947 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106617261 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170196368 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1072121 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069424006 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103084446 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07668608 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068801893 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079550603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074969754 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069097551 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076323663 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074454596 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068774271 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074272157 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074614378 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076031498 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068348193 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076111397 seconds)
  done (took 2.876536191 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106058047 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095184027 seconds)
  done (took 1.566791033 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162308718 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13768125 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206568349 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.359125857 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165561585 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151885835 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147769141 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146456526 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118044201 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142538921 seconds)
  done (took 3.098086059 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.108192901 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160288846 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279585471 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122206589 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077816674 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097068877 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126634791 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082047713 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083881989 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084087171 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084150762 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080182992 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105015755 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076666138 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078424613 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080063703 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108470857 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076694901 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078363276 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079382162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105235384 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070511263 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076926047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077937373 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080966846 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080289286 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069584088 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071183494 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079169258 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07887704 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079595504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095964625 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081076898 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110398861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075050889 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111486958 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080274767 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077284026 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078807186 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076573911 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08203109 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081436585 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077453581 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080327812 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069492208 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080573361 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070028561 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069960841 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08158629 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0712838 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081385259 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081059424 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110759738 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.0717012 seconds)
  done (took 6.226129998 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1134461 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111264155 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075102283 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11898993 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108993877 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075460904 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109632629 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101556025 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110761215 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073867443 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071696637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074097039 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085932835 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086123668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121093066 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113270419 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076964042 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07512093 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112174108 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112260196 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072635462 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104136704 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097381081 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109711337 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0706144 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073755653 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071970915 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073987594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080783098 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0818543 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074199809 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084370346 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088351048 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081892669 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070724572 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071488496 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072811405 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082963763 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083481227 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082481694 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.082321989 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071688938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071968172 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073879584 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074321006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071672364 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082481966 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084121807 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082724931 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073717451 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07394629 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075336033 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073053364 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083531186 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081134784 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084305491 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083609524 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072607716 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07230617 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076399812 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084371705 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083213669 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082909128 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073447985 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083812582 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072650357 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084203831 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088225691 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072531109 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073947642 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073115305 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072998068 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073055971 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081855368 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082113556 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073237049 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073275998 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072378229 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083137907 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082014171 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072372727 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080955667 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071165182 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071906785 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073287233 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073711411 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081230012 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082929633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072989717 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071877719 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072383093 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072107781 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070660521 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079552646 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082169587 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081476197 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080942783 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072483963 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081174513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080825122 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072443537 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081218249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07124492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.204307776 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074446265 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082816809 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082175944 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084699276 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073997333 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073100829 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081973576 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085150084 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072944004 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082571063 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085552084 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084201509 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071633847 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08580243 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072343079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084839489 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073376881 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083924893 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072734313 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083430803 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072862706 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071797611 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072343672 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083619955 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074030625 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073133013 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073713315 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075280326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083403674 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086728111 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074415095 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082287799 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083310104 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073667273 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082883712 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07321945 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083405486 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073650162 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072883643 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071272692 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085512725 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072177902 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072032101 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073398693 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084014253 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073040311 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084106921 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082454837 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072127886 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085301139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083607979 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080725992 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084218414 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074966547 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072914536 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071915145 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073269874 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081929359 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082658616 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073970993 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072253132 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081723555 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084080913 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071262991 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082210354 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082260818 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082061294 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072672184 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073363465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083686453 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083778421 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082198915 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081990663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081828468 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072460799 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081538959 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08249615 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07233559 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088556006 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072052982 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086965549 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08333973 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081355982 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083220399 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083988027 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083567403 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083968198 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086606566 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071486209 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071528884 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082558648 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07159005 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072620067 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081249741 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072388691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072923102 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085347934 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071521422 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082321518 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07083116 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080893924 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070077828 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072577403 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.21867244 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073480467 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073862636 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083628479 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073922937 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082273873 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085731516 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083799376 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073284389 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074986939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083797724 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082731405 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072683223 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073033409 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075177003 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081613894 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08168514 seconds)
  done (took 19.568471052 seconds)
done (took 39.162501019 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217839381 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158958701 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178976735 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123589702 seconds)
  done (took 2.149229001 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123174808 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10613753 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097044985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069248666 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103604834 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068782767 seconds)
  done (took 1.970663113 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31939795 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216017695 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193753905 seconds)
  done (took 2.12670201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216764933 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201267411 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461435404 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284155842 seconds)
  done (took 2.680412153 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153448113 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093266078 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071546886 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089119332 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137895539 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165627788 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104894342 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130568173 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084125674 seconds)
  done (took 2.488513301 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153768098 seconds)
done (took 12.977746059 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118552854 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 0.16346878 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07978527 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074485127 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.236279863 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.254215305 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083933624 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08756065 seconds)
    (9/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.191275575 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078349743 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.128350231 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083426116 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078960719 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079052285 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.202180271 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087144896 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108856625 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.187445394 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086095742 seconds)
    (20/309) benchmarking ("sort", Float32, false)...
    done (took 0.139711817 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098977094 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166366466 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186820509 seconds)
    (24/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.189063201 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107658015 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.185504789 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055767791 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100348048 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077332761 seconds)
    (30/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.125153359 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072575423 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075032497 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08842755 seconds)
    (34/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081815717 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076250649 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084460606 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088986672 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18895625 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.108143661 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078094788 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115675889 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069010858 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077493098 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.184697114 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085177627 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.192528638 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.189859176 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080679161 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095843853 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224626653 seconds)
    (51/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.172129609 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.182637124 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123791962 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.158135376 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.207676884 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069517557 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07777006 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.168091239 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0666173 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105368664 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077605988 seconds)
    (62/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117906356 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.294263649 seconds)
    (64/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.172788542 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162632602 seconds)
    (66/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215421645 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095880626 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.122469103 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071551242 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053779494 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076945945 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099042393 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151147 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.22478005 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.106955794 seconds)
    (76/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119638274 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069195852 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09391614 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 0.136023287 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077223807 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071135851 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097924074 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.145776817 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078724 seconds)
    (85/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.235755497 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073960371 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.071284932 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.099401738 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081259758 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.081704126 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069637418 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074197208 seconds)
    (93/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107304561 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121773192 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082008547 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.118536018 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082024936 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077383676 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079879424 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093934289 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077176414 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093636001 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068372883 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201450025 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159266319 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135401082 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055803333 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054388382 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076444103 seconds)
    (110/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.173383217 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078329392 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117738786 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071483609 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153750807 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156996805 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076996142 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073593351 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05513628 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077482934 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067732353 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145878036 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.145273353 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078212714 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162365266 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054439943 seconds)
    (126/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080794349 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06999938 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070017304 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0769347 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066867356 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054140435 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069286545 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075472862 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077537669 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076566151 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.213435581 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098784169 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098153968 seconds)
    (139/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054198199 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095970652 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069981162 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071059416 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202437416 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126183963 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076543119 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070539082 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05573198 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199957606 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069691486 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.17195377 seconds)
    (151/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078523533 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078036095 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11032575 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069708871 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077268929 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055411077 seconds)
    (157/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055049464 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167950064 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096713155 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069671921 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078222773 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069346104 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06961315 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055839859 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.121239344 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.105483648 seconds)
    (167/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.115905878 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091578211 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055683923 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07028896 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091412386 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08010619 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084122916 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069887903 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075904564 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077280252 seconds)
    (177/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055033318 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092076343 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073143748 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0766131 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147364839 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080430729 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092604767 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.185727342 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087105584 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078846598 seconds)
    (187/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055005552 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069330883 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07021956 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054236483 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205774466 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.189736918 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055308167 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080126272 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.355953776 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055155998 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055807039 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06929772 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.190976794 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055757564 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.073368575 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079028401 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055118108 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055697691 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099293896 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194806565 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16371415 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125108157 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.095207355 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071993778 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.164491156 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079660071 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078954417 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05549263 seconds)
    (215/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056935776 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071153364 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055252761 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119544678 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14117516 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155131255 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193309982 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054432127 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054615586 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095209947 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075560308 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055319584 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095832882 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05512468 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129710231 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056781026 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068809404 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056377234 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054374704 seconds)
    (234/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075421286 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06970825 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073695841 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093517593 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.075461711 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147078083 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072772613 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055951455 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081776774 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183220536 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078592563 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067562925 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071601335 seconds)
    (247/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093176008 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095537745 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055954807 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116078992 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053942063 seconds)
    (252/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05568542 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071148087 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069595436 seconds)
    (255/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055191161 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154034978 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055083396 seconds)
    (258/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070987232 seconds)
    (259/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200597104 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160374373 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07020105 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06958587 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065489762 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055045336 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056279629 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068761972 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055607734 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076249103 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054177747 seconds)
    (270/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05439237 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145372266 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055525832 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103555658 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077930013 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054459293 seconds)
    (276/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074815279 seconds)
    (277/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066562142 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069620173 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076663784 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055356835 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079839905 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07821456 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055405534 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077936281 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071242164 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068124748 seconds)
    (287/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055667948 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068399925 seconds)
    (289/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054633 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094611785 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077729947 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076244774 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056935436 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096259288 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097956682 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054521022 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092850984 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17853106 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054499217 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071012064 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074672459 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069815811 seconds)
    (303/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072169809 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074477027 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081573201 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085953823 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053935739 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06967125 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067055678 seconds)
  done (took 32.63280107 seconds)
done (took 34.045193743 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091809101 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09710516 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080083255 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097156845 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084961171 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080323827 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076888323 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082770294 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084306549 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086157786 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082345028 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058198914 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078792966 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078596665 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079078441 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096081042 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08370619 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077273641 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077571649 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068639709 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077101666 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069696104 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071120589 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057705912 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083362089 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075532798 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077048448 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078335955 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069504419 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069573109 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073569039 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077636737 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069205658 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083702254 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076429374 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077774169 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078670321 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081571933 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071293172 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069555803 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078890838 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069192362 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07676407 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077878508 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076286503 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075494334 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077147701 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081167095 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095054235 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071637206 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079760489 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079934132 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079474873 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076972073 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073562968 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077258918 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074105191 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095104255 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07796155 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071566209 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078400706 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078625467 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074766788 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07743135 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077420108 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079529988 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07999602 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07543632 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079076581 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075894369 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069691132 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077057624 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073234676 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069487008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081169895 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081881921 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067968735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076152324 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076509469 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075733228 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068631944 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071978971 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073855327 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076389795 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071604535 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057807515 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07372167 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076806411 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068813271 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077411642 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076514317 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077244457 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071147083 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080015939 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068599977 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074331954 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069636225 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069639192 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070898698 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073778635 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069582011 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071439611 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079957663 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071440211 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076699089 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082824421 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069409949 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07724922 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067672515 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068096924 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083108368 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078727439 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06981418 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071576899 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067619622 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076118796 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067617827 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068279079 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068409843 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068943708 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075348479 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068087335 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070078695 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075742582 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081206697 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068410711 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071888931 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070299977 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068217754 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074813898 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.205019879 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071041425 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072194552 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066517118 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072931684 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069794599 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077065216 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071386531 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078164919 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071267268 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078926692 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075182667 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075792426 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074843416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069229583 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06278281 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071602732 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071448803 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071197384 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069675357 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071607858 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070293386 seconds)
done (took 13.111695903 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071602757 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145896297 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101772976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100502627 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089530938 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070640278 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079711824 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103726825 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072483299 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10551738 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092573882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090252576 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119338327 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068663056 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07026843 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074318488 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070953609 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085424709 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104110091 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090725161 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119200619 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069369042 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096771348 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093468368 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092334333 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107315114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070938132 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073704773 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07356878 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097831841 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093634393 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074853753 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070480918 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102550065 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098226079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087647419 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07037134 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086949366 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070172224 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06967106 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071272228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103347559 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084736363 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085021422 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074182198 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080523299 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071062695 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087776101 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094606612 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083031951 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090045526 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105713619 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072376204 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088075939 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068476809 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090585285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08110691 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072454152 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070698197 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07828301 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069970082 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073794393 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085296597 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084543384 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075038479 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089038788 seconds)
  done (took 7.129887255 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090791564 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097588402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087832288 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088700461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0695475 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070338637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070799351 seconds)
  done (took 2.084892576 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072442299 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093180548 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094152294 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094665572 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085841984 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092289409 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0805937 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070461724 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092731924 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071540683 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092233167 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105157754 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073719926 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078119343 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095823037 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070418976 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095421861 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070427309 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073500072 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095260465 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072892265 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100929012 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074626528 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071156936 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085363106 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071349707 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12027712 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075186861 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0723454 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073478588 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06811822 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112205078 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084464197 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078101434 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070579729 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085710311 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085626734 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06854638 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087693936 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079874459 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08494267 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070853004 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072813441 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068693813 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074979469 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081328261 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071682266 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071857419 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073526487 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091025015 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071799784 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084634362 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073504442 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076443767 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072109319 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0776417 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081698246 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071396308 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091762156 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072377171 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088161303 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08709986 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084418503 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087023645 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072646806 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084530169 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085410021 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073260316 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073238321 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074443829 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087804248 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069014402 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072176844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081809244 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072626685 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094889077 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095037964 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072311822 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084886646 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071200352 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070571343 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070678687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095195774 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076155721 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070359114 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075418445 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074126988 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068730455 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069801523 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074337512 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06838828 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072037639 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074398485 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073546936 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07378137 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088091593 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073005233 seconds)
  done (took 9.247818847 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073836129 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071469528 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074401914 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071710093 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072135735 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071574518 seconds)
  done (took 1.963249317 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098634224 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072957808 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084589692 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075659213 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110369721 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091315632 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091786629 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081916312 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088042855 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083184363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091408637 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092645603 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09660955 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076391814 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.092184431 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07525433 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092388461 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078141483 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08211296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076679719 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090032825 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07627187 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076738359 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086330051 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080423502 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076226371 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082240435 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082785014 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082644711 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082476675 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076556911 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080242869 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07395443 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081689083 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092481074 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075119074 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075875063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08150836 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075420525 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079627905 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092496102 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076057569 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078124835 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081113829 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081799362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074574874 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080765726 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08337386 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091108266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081301675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081110034 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07524466 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079217633 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080842275 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07430548 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082015467 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080801552 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091638947 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076377161 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074670132 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073108759 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079449789 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08131896 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079952572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084749552 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081149172 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074956528 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07632746 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076680124 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075539611 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080875782 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072219083 seconds)
  done (took 7.39913608 seconds)
done (took 29.320591918 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541554527 seconds)
  done (took 2.032324826 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.639649266 seconds)
  done (took 2.157432548 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.54021421 seconds)
  done (took 8.055802467 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403305603 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511449397 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755619537 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138929277 seconds)
  done (took 3.359811782 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.733499925 seconds)
  done (took 2.26139127 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235371894 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220993923 seconds)
  done (took 1.99200681 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.38726588 seconds)
  done (took 1.902605273 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.150718862 seconds)
  done (took 2.668635892 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267090942 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18384218 seconds)
  done (took 1.975893449 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.493282228 seconds)
  done (took 2.015403452 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.906671598 seconds)
  done (took 6.430955933 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225284564 seconds)
  done (took 1.78869726 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246200426 seconds)
  done (took 1.770193825 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.758902562 seconds)
  done (took 3.28358996 seconds)
done (took 43.218012734 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089896167 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089793145 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089864508 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086122791 seconds)
  done (took 1.863998347 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083615978 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077216045 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081112501 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07757355 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081075601 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077742921 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078571635 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080135187 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077054505 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07792618 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077289793 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077471019 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079864824 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078814708 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075658971 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079722924 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080576158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07698822 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080270579 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077507129 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074998771 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079200816 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079379839 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076463006 seconds)
  done (took 3.412689472 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083784635 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07759247 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079908087 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076767154 seconds)
  done (took 1.852735989 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083791948 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096900341 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094591947 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083830608 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097214077 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091511477 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07389354 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073635364 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075247673 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083742937 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073309212 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101576209 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093503834 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08298484 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085335522 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070335496 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072800098 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092731629 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083225232 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083630138 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074752414 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083901022 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072508204 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093443598 seconds)
  done (took 3.548937762 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.092581701 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11043672 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085500111 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093889259 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096111334 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070526783 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09252477 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096588065 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132859855 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06948275 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075702552 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070121434 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078897069 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069644381 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086162145 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113718611 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117681318 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073639419 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102256795 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070143795 seconds)
  done (took 3.337064549 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078336727 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074130226 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072089111 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070042992 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082205331 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077444018 seconds)
  done (took 1.997177074 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073289766 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072499879 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071643608 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071497443 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077246811 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072089002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070944261 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072281782 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072407035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072590661 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071216919 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071075043 seconds)
  done (took 2.405913473 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.210711692 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073417778 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073545121 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071051827 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075426317 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071142636 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086456884 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072113781 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097086643 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071213274 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071504818 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073982443 seconds)
  done (took 2.587425329 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214966721 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080937803 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245859993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158395197 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116662529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12162665 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117737565 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11867262 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148007151 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105343157 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172869204 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173220735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113099845 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142985612 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094189751 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103859799 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159852085 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169440116 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111375945 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171173147 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156794797 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132488211 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152801367 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107749444 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110850217 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127300268 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076101958 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085830456 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176426108 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13914851 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149479506 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116619235 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096964481 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182827147 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1786196 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145698453 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153929926 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089232872 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107372032 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138554811 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206863638 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093016154 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166462429 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113314926 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085348207 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135304083 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119944697 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120863416 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104934671 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092357761 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145715152 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182216837 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136980545 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090183152 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126072928 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114619825 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114798434 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114250125 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174462544 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157726519 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125639902 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073539596 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10823615 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147996857 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131515461 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108050356 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122923931 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091815809 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131397816 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151326312 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120088593 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139067554 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116760369 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089435128 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118219093 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137458832 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1231951 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155219843 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121906643 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074763643 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121411609 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100314908 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081802898 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149917548 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076583324 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169982966 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099053107 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106000039 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124776576 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108737869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108762379 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154430272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141004529 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103772183 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.325416766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113216957 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128870591 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154500097 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095420054 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117297232 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123606114 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.084951058 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143177912 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.082785713 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130220395 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080967852 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131043477 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136552846 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.084530634 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129760906 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11119422 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106883067 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139870331 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165793683 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094703813 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088827186 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1758984 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12816958 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108962592 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1508504 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16288665 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104683818 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106622982 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157136401 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186619622 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095390976 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16944491 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112624455 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088854446 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092898272 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129133134 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117278849 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129633754 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086996774 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12359526 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174661131 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080085377 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100555743 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140329721 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084032357 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087162303 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109680102 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110069374 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.101050843 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.105065221 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107112849 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141151062 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129525113 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109980196 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1291711 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103360025 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174688798 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091048729 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106060548 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107847424 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07398674 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139039432 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158863283 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08269106 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162916324 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123284395 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119018708 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119944925 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086462881 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141117225 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082059421 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073087802 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14561257 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1117671 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112081372 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150923487 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118345901 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126543484 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12296871 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132550428 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131100998 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131606281 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108521203 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091248056 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113506151 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128685672 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076280389 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092366846 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082558405 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106556165 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097801841 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086001464 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14227074 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12444117 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111618251 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113135747 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098268005 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147257172 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078378162 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127902723 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120064105 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097378433 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152017566 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151517967 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132659518 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101094196 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137887209 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073118654 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076550464 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090173247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.386473839 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090387498 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090678771 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125124377 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156026693 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13703455 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144468354 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133024894 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127937953 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163314313 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076215566 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.128239851 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153388881 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128051454 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111602275 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096988809 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106245498 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149295556 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113333515 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18983464 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119401691 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12888496 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159572094 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107081016 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086027441 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108781754 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141143162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109843517 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148848362 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104825997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0940395 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114405972 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080218185 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104536513 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132578591 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12375569 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140489601 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121086392 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138774716 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08359273 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120733702 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127241678 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127496381 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068797381 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125339268 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167454178 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100229989 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122157472 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157449239 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084974601 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.141243183 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179448279 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305783359 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09164133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115190415 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125148958 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133467287 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125199129 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14641456 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113112348 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142613333 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114674802 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090670276 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092535492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103374442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110184862 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099758018 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109963363 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1183738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101328236 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136499234 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108700744 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115014457 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121990299 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.1050129 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096343804 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102144769 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182229803 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123583941 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177385157 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105142156 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148615211 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169358123 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079981871 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083857016 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082957085 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145387138 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089237229 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135446109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112708548 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12314922 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128887549 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146914459 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101153908 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073112185 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115865635 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138166752 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130426572 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103504375 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108255736 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168610355 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104184394 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083739593 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118716847 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121878831 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107665571 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175606603 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065732877 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110332907 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231041528 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085772761 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133285169 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15934254 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08490034 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109246206 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124218898 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117023112 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133467 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10556378 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115062774 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132501792 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155943115 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133578994 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095417473 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116703683 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133046113 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161037236 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111407866 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102749862 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178529321 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15707919 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164663356 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092493212 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118238101 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118188562 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113052353 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142333406 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088214243 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168861142 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086706496 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141963504 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108221759 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093440345 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134155928 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11489889 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093042535 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151859149 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122354212 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087895997 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082515097 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123077217 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127677262 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111196734 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080205371 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143577139 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078036613 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136220088 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16485764 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085356935 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109960573 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100381221 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083906726 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110345425 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106766213 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091391441 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103114236 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17578058 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089703483 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15175203 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137091922 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116662941 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137864509 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105907835 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6440672 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081834269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151980628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117682065 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173342204 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102425357 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118378747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111049267 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122596492 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146581574 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105307489 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188947313 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133362428 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117511713 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082364246 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103889692 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105079299 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089417913 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109572683 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114459517 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115735709 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094539628 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11682083 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124554059 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084940355 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098056217 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155467476 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117930727 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144328846 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141352513 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088200272 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118317161 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136603796 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082726561 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121973425 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15221679 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107655826 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102938743 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083516421 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102274486 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.425889341 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080873151 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168382812 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128592225 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116778232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120207151 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119396864 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139445099 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114138547 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129673712 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099476563 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115997959 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120401521 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088348843 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083788876 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116228354 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11769295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104257635 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103297248 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102806506 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158285137 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078316782 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105510663 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122425775 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151026311 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181883426 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09458013 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089029857 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125700512 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120576527 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119663726 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128617292 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084825843 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08835313 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085550683 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083642034 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11488588 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118932032 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121402052 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115981952 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169735931 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088833717 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.246487743 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101049973 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109829551 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074789884 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083346454 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101636061 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103332506 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113115348 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115585287 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165082777 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100946335 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095218913 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096079902 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078450827 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087505944 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132001048 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114831382 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277084334 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107078651 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068072208 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114444981 seconds)
  done (took 61.029513803 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113093419 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086820354 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101376939 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149379321 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128876841 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206554431 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159630615 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195473435 seconds)
  done (took 2.875296848 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073484383 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100895527 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10847825 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088752999 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071809014 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073219388 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237837149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087117011 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071327339 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101969988 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083196291 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073231697 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.44615473 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070600707 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072948663 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065829632 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071810655 seconds)
  done (took 3.622733752 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.41308895 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626646366 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365385042 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081748898 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.942460115 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096188551 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.152683138 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139332748 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083003077 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.530314265 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414348748 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133671327 seconds)
  done (took 18.712783562 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086873867 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080380588 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095288051 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095370813 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083014733 seconds)
  done (took 2.173622111 seconds)
done (took 110.996573904 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088602801 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617346202 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057215043 seconds)
  done (took 2.44164731 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089914251 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0906588 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090426386 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08847569 seconds)
  done (took 2.100836316 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080157285 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081745247 seconds)
  done (took 1.896254919 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243069709 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174431278 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101991597 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088939332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083810928 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084344862 seconds)
  done (took 1.996837174 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077209067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.0801359 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07781834 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081840626 seconds)
  done (took 2.052357849 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082693904 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055561053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057712504 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061202505 seconds)
  done (took 1.99321324 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093413916 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083631828 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083621329 seconds)
  done (took 1.994106968 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108879361 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091222293 seconds)
  done (took 1.933674287 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088114641 seconds)
  done (took 1.822018839 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101087447 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106403858 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137442425 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117107623 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145218776 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115174371 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089637075 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090384864 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081019962 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090748272 seconds)
  done (took 2.807400769 seconds)
done (took 23.377916119 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085980709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375344162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365575191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095568294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674813213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362007362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995910976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098635859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121571423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072685531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08973837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651477284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986636664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333862828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974903442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329728503 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653998772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072605311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072427282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072034286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980381162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072227481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071841196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072621979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65258862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376973386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073047792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333140945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072326083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073980965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359702841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072580996 seconds)
  done (took 16.414087035 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076015082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127188928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077559478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090656575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074772153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074752604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075459176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073393357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144326291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072476022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090089119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072042643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076054588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073057363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092650418 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072623698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073021861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072709335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07254237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073000567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092278129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072397814 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072835326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074030556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072243201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085606769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073263279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072960136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073872049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074947477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075611006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073452069 seconds)
  done (took 4.31729674 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122880512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130783756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078390879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109214973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116923639 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074478009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149981902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098972805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133002417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072375532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090656448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072817613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107899582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073795141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093593001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072811546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073579616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073329555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072638773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073752979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0933385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072823845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073204562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073514405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072944318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087797697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073580368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072704762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072956932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075750324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076240078 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07352129 seconds)
  done (took 4.562546832 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079276964 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080406807 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088314819 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08898517 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074094871 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076524661 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07851742 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074121823 seconds)
  done (took 2.397029137 seconds)
done (took 29.432193698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084783488 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072725828 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077499626 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086790954 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078016424 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084754282 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071886301 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080768287 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077061782 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078153441 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079847997 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071354287 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07613857 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071384764 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07907402 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07217838 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084228202 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076246931 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083974255 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084719382 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074834167 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078357096 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079970909 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084079454 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084451418 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083903329 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082920581 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077946159 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073304083 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075813735 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082744651 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089394733 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073477538 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084334573 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072529583 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072021158 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076168492 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072563029 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084120267 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081204434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074220917 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.08114719 seconds)
  done (took 5.041962772 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096575765 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098258996 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090251738 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065666683 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071268257 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069870406 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094772554 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064172639 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063768907 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094128125 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06044806 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063723249 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067598393 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057766086 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064867619 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060842998 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066630473 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059917972 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064738432 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064849813 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095044396 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0582589 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082903562 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06799771 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060279991 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065906456 seconds)
  done (took 3.638913296 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080325084 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090280548 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095731614 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137177862 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111080258 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084750415 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084147395 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100921045 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094240375 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071427147 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075430413 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098690226 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094719376 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07875313 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072250884 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091769823 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089336821 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074356562 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078313575 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099748035 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092133997 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090771042 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102783366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088587252 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071813831 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074821543 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076012369 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086941562 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075298248 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081770722 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075569995 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076481821 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074314599 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084377931 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075311776 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073437331 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10033321 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082637452 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084284734 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073875949 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080704164 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074103007 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098694996 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133688169 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071680325 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07925603 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075966055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082455308 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07142795 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09348913 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084145099 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071743419 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075531165 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071638531 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07150563 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075255562 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073929973 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074517086 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08139778 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079056976 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097072341 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077771843 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088364291 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071730531 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080565131 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071467285 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074122441 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07103758 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102293565 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073687587 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117395687 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072697502 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073381319 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081632988 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080493571 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089743492 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071719202 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088482486 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082308802 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075820486 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080837234 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075309745 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075125294 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096208573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074415622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07385968 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073182995 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07828663 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074907049 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073518962 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086492217 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071783367 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074817553 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089564955 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072141894 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073362776 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077888572 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076764708 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071573399 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083661521 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076470373 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073432945 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082272025 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072497849 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075678406 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085049253 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078930735 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071047407 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076414348 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07825988 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073112336 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073777193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075290553 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074094901 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081087022 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078766991 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076505908 seconds)
  done (took 11.332273859 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173511108 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.166955836 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074894069 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156344718 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081348248 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084002144 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158528148 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100117727 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073039396 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07383892 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073146228 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116667784 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112022041 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122479646 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083400345 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073091358 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089792152 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.12193886 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160970841 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154795329 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.0897352 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082727781 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074611074 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073667507 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075077406 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083869903 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090443522 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084372617 seconds)
  done (took 4.704682297 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087248197 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111560902 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079426844 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097096235 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095854158 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07249951 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075217484 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074692615 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087377863 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082879787 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072051011 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078239623 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079777716 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075769956 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073630549 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079475695 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080421246 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073980629 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075900798 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078077757 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083756022 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097218556 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076871876 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072062092 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077937132 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071992442 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067594514 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089176724 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073420108 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101284998 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070473887 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078069746 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088434101 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074257092 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072140712 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072813221 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072788751 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072971824 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074239075 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070934855 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071678441 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061990766 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072517531 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084070013 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079467927 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060617545 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077431246 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078185944 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078065251 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070091278 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075809011 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075557718 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075324785 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080228868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076556106 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077802143 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074059345 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079383164 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082039303 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072063309 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069516971 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070664062 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076935007 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069696459 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081500776 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077477293 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07039596 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07199785 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074613657 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080196463 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072440813 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077438353 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070099213 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074504962 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077459971 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074775227 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073754314 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071298364 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072373706 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073215364 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059198809 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072770668 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057318423 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075805156 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070607342 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071340263 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07273242 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077914039 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084759846 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074085413 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079612345 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073679323 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072109894 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07605757 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064455305 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075474122 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084680564 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087416684 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072793903 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070391658 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086745404 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07737655 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071144815 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060292251 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077371239 seconds)
  done (took 9.809119892 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097376523 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075200934 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089416411 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097000083 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092293853 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080138186 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082848178 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074524671 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089395457 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079598358 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082441521 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072864027 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083416098 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082731661 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074934442 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082985093 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076708268 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090393486 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0880787 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07259285 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082016882 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086006843 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.0966296 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087407797 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085733044 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087001996 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096588593 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082902843 seconds)
  done (took 4.177819379 seconds)
done (took 40.454270413 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.840534514 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.092909712 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.837857346 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.216228213 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.922400632 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.004507325 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.929156653 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.840225121 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.994591342 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.864117455 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.063187625 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.066695641 seconds)
done (took 66.442413706 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.891657575 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.978695573 seconds)
    (2/2) benchmarking "String"...
    done (took 2.074586356 seconds)
  done (took 5.818868818 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.113661142 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.932581959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.081855352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.834399353 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.839009195 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.152591171 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.640045817 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.372562524 seconds)
  done (took 31.622971199 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.026728278 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.0500882 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.540208136 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.568621159 seconds)
  done (took 16.00341083 seconds)
done (took 65.299376406 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.849996111 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.874516448 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.839778673 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.815635562 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.893253775 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.845824118 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.951345376 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.850161346 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.833812712 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.8257372 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.833961055 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.315480883 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.842998228 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.047089836 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.834860015 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.843173795 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.912005479 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.323234438 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.995650915 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.843498688 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.849693788 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.876581053 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.836396772 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.845610204 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.85458058 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.836069103 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.233998677 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.84385287 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.664991457 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.832855529 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.880455027 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.156810532 seconds)
  done (took 205.849959628 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.836804193 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.826913306 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.911256186 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.869789498 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.424079869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.01133544 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.937344744 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.538528658 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.834791955 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.834634245 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.947851889 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.832418876 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.961008064 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.783188746 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.86437019 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.935521011 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.04595424 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.983988751 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.867070856 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.994499246 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.847791488 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.740883513 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.72203485 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.961372701 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.87682369 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.838237168 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.848561319 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.861243539 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.031120728 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.023147153 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.879297297 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.843216351 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.037447225 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.705701136 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.85866241 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.863015136 seconds)
  done (took 171.950709032 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.004882184 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.843229504 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.842750053 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.840073416 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.845043776 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.842028489 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.972966517 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.968351334 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.457650764 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.381768434 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.893505305 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.843273835 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650632569 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.837667832 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.908530344 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.854491512 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.843666181 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.857623624 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.869675321 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.841119937 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.841925536 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.968870587 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.85024617 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.066709102 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.85034219 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.842029801 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.846268565 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.213816835 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.840256881 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848054104 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.085980079 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.839828091 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.842721281 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.684691872 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.008860598 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.928093366 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.841087756 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.847485162 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.841691003 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.061590377 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.838962112 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.842488585 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.841806923 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.84612232 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.983338222 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.84020956 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.968980082 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.839607346 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.323012263 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.837773982 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.840848755 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.797284124 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.433382744 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.839173511 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.841872456 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.84163375 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.841785292 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.839976046 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.847608551 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.62863455 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.915149328 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.843493274 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.84674652 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.846181872 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.843909721 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.976129222 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.840792827 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.121346737 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.902328022 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.971469592 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.962998714 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.842699494 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.908346069 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.934585382 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.841607272 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.841921399 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.84112684 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.842694859 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.92557858 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.840423899 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.843178863 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.969206388 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.848068341 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.845590559 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.895221869 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.843256026 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.914173651 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.840351775 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682636605 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.84622923 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.845487091 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.103192649 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.907126838 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.84126441 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.843910416 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.845053235 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.971305487 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.965314229 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.552040842 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.844009429 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.646731324 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 2.015727332 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.050420559 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.84355788 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.042159123 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.842285155 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.93706222 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.847767006 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.843938757 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.843659707 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.877818603 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.843622251 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.901538057 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.846316461 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.216143727 seconds)
  done (took 410.979877538 seconds)
done (took 792.606493815 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.495916265 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.463559663 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.574663484 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.477838815 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.455950711 seconds)
  done (took 14.244369454 seconds)
done (took 16.020617043 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.936203575 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.938364317 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.868036174 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.934807383 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.864595103 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.934562717 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919788691 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.869971213 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903559136 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.867632743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906578521 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.86903459 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.855725694 seconds)
  done (took 26.447108942 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.08532176 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.084363581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.91607386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.089919993 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.891452159 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.086003993 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.009151595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.000039399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.000409519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.863562174 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.858118204 seconds)
  done (took 23.663849551 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.080649635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.089401118 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.924035656 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.078454978 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.894990298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.088407932 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.013711526 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.999157082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.99879235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.861095619 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.861312939 seconds)
  done (took 23.66959243 seconds)
done (took 75.5573069 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.854927737 seconds)
  done (took 3.633020255 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.882996559 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.050231597 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.860887937 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.860587516 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.856086708 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.855281252 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.858711555 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.855144582 seconds)
  done (took 16.863220707 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.852006652 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.854575593 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.855524412 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.855121005 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.854220583 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.853082833 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.853275316 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.855920475 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.85323434 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.855169677 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.855282059 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.854010962 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.857373037 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.855086616 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.85248939 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.852870221 seconds)
  done (took 31.449893028 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.853693002 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.851853421 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.854991787 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.854307145 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.854528931 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.854029387 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.852993457 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.853039965 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.854538445 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.853623683 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.855793448 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.853447866 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.852943328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.852084075 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.853520704 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.854920895 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.85360672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.853282236 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.859453921 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.855080805 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.856702648 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.852926568 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.852886083 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.853680746 seconds)
  done (took 46.280995664 seconds)
done (took 100.004932957 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.645144616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.51311557 seconds)
  done (took 9.938627629 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.859805819 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.858362424 seconds)
  done (took 5.5563652 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.858280904 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.857998529 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.855763945 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.858361158 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.857324744 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.857744855 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.857000095 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.855084841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.857277936 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.856117666 seconds)
  done (took 20.352265 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.856613671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.85706665 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.855258643 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.856792548 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.856312332 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.855737372 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.856149277 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.85580586 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.85596869 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.854820635 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.860622825 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.856462357 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.859299214 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.853603024 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.85861531 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.854840047 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.856890442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.856806223 seconds)
  done (took 35.199975945 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.857504415 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.858378992 seconds)
  done (took 5.498537585 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.853926815 seconds)
    (2/7) benchmarking "second"...
    done (took 1.857082765 seconds)
    (3/7) benchmarking "month"...
    done (took 1.855901222 seconds)
    (4/7) benchmarking "year"...
    done (took 1.855191244 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.856449266 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.855108267 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.855339381 seconds)
  done (took 14.772590895 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.85931534 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.018292497 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.085285336 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.515691862 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.860434648 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.862549516 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.785467322 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.863314551 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.864129777 seconds)
  done (took 20.497637583 seconds)
done (took 113.596690124 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.692944581 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.853757007 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.097043225 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.904205026 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.907184583 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.196672632 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.868114804 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.160544493 seconds)
done (took 43.465529967 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.861809451 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.149023317 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.144828889 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.877714223 seconds)
  done (took 16.955824799 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.840433988 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.387722805 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.890174297 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.443471733 seconds)
  done (took 20.378045154 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223299527 seconds)
    (2/2) benchmarking "read"...
    done (took 2.203111715 seconds)
  done (took 6.218266504 seconds)
done (took 52.20021653 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862108187 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.860398711 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.860270081 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.858932585 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.86061913 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.859609326 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.858756775 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.861494526 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.86039231 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.863067351 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.860912336 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860743009 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859069704 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859539357 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862135546 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.858277732 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857206226 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.863595345 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860883506 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.858509113 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862569654 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.858131057 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.860381716 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.861702923 seconds)
  done (took 46.435212514 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.860806915 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.861597946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.862603498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.862456631 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.858524762 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.863316668 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.861756417 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.85882048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.860927133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.863911527 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860599335 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.858761797 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.863664989 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.861542105 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862721543 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.860605593 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.863526553 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861963093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862473835 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.860586033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.861614154 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859927479 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.860750109 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86363385 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.860524257 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860754501 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.863594135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.862447677 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862444282 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.860676416 seconds)
  done (took 57.634732248 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.866746944 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.871840929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.86422065 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.862978141 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.864673297 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.863787165 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.864490437 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.863320514 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.863480751 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.863713357 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.864801701 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.863402001 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.864976637 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.864475111 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.864732231 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.861972655 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.865085993 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.863648565 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.865231839 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.863811673 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.864220921 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.866727524 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.864487981 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.864412025 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.864259513 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.864715384 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.865398449 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.865258221 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.865230666 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.86399466 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.865767658 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.867449652 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.866339622 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.865329445 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.867335899 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.866319546 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.868663227 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.873907003 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.866090976 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.865866368 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.868238004 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.865953905 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.868740395 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.867393227 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.867688038 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.867066541 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.867051424 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.866694809 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.867302599 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.866203561 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.866877139 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.868409622 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.86746732 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.867770272 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.867659504 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.867334176 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.867843492 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.866316895 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.867017981 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.867584412 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.867784755 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.865610914 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.866199832 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.865757772 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.86752815 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.867296328 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.86711671 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.867488492 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.866965145 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.867952601 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.867225317 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.867281301 seconds)
  done (took 136.153839578 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.865238762 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.865933229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.865424047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.865031268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863979768 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.866588274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.864887143 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868441169 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864523402 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.868171698 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869158912 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.865558084 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864116327 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.867436886 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867034314 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.864418414 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.867433342 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.864663774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.867753372 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.868073669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.867709636 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.865775933 seconds)
  done (took 42.848343901 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.86840251 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.86791896 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.863962318 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868929605 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865834496 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.868837558 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.868456399 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.868673545 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868571631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866176329 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867058033 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869348232 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.86705789 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867766837 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.865596095 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.866407008 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868931931 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867234581 seconds)
  done (took 35.407451549 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.865705754 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.867379732 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.868940587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.86656572 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.866736753 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.868317972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865409111 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.867687183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.870707447 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.865557332 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.870599922 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869080681 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.870959522 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867104773 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870339816 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.867508292 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.871457608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868378253 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.869339964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866433822 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.869236113 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871267644 seconds)
  done (took 42.897363705 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869882558 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8716511 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.868384454 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.867299494 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.867108671 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.868930323 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.871654367 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.867449213 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.871805607 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.870829711 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.867479746 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.870676685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.868372341 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.868868528 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.866828657 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867833184 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.869951735 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.868553881 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870415258 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.86761542 seconds)
  done (took 39.176178436 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.87173646 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873255183 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.872233012 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873007209 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871941982 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.871965166 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873208968 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.871493065 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.872473869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.872479397 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.871862462 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871081205 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871181689 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.872494201 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871928901 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871999058 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.872757243 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.872255129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.873897917 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873451554 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.873366117 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.871848434 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.873181675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.872932446 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.872987978 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.873335107 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873320414 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870851445 seconds)
  done (took 54.222863289 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.871095563 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87066006 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.868769331 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.868430535 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.868828781 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.86964137 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.869440884 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.867771485 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.87088676 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.868943055 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.870886231 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.871805078 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.871193537 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.870828186 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.872017495 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.872560633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872275281 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.869701459 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.871419172 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870060481 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.873145794 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873375534 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.873604669 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.871065205 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870265033 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.87435293 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870971881 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.871232994 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.873229168 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.870463011 seconds)
  done (took 57.926150727 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.891877418 seconds)
    (2/2) benchmarking "in"...
    done (took 1.891832848 seconds)
  done (took 5.580964541 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.869771904 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872887269 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.873108774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.871347118 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.871002943 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.87364954 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.874127379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869380137 seconds)
  done (took 16.772302663 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.871549814 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.873771716 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.874015098 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.872955646 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.873939751 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.873931591 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.877640597 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.875215372 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.873731224 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.875053711 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.880473056 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.88406005 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.875668137 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.873936828 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.874304984 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.875843342 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.874487566 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.875767392 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.875829046 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.874442494 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873943126 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.8760116 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.87708442 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.871877895 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.876150071 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.88691662 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.879994095 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.875428763 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873273798 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.879859774 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.876857321 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.872632322 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.878596119 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.876419666 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.876692194 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.876335058 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.883094705 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.875215478 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.881729742 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.876604297 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.877597404 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.872524346 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.875730495 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.877416564 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.877974133 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.878373392 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.876296937 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.875519287 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.874911124 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.880908452 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.884117058 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.87419278 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.873953598 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.879989115 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.878072105 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.881590699 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.877973541 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.877890114 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.887409044 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.885952114 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.890765396 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.8859032 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.877647109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.87695745 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.886486143 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.903894772 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.88290031 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.874730291 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.87312997 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.876681782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.883307615 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.890058705 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.887862752 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.878055752 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.879807892 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.876474346 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.876896687 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.878019251 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.882589177 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.881140306 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.878115329 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.87958932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886935405 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.903053924 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.876771443 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.880365588 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.877468999 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.877796032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.879590511 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.887086477 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.881911657 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.878664641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.877315674 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.877355555 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.879863183 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.879562711 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.878765194 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.878911158 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.87517952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.878238963 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.87927928 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.882038893 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.889747622 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.881348149 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.880014511 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.886175235 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.880125597 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.876521857 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.885174153 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.879923719 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.879272669 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.881414496 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.886868588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.876588297 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881554182 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.887776129 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.881295844 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.881748332 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.88113436 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.87933952 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.890451608 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.908516237 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.880706064 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.878690782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.884490213 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.892279953 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.882183418 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.882879292 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.881914713 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.87944999 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.878149239 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.88356116 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.882537207 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.882779836 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.883484098 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.883922296 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.879737697 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.88284767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.882834625 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.884096245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.882498499 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.883425291 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.883849796 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.882812655 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.882384651 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.882052137 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.886812201 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.882314174 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.882748644 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.883571779 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.879802943 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.882245844 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.881973306 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.883558178 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.881291648 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.883453186 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.881685561 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.881966631 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.882753671 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.88168481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.881973737 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.882906609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887182428 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.883958642 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.885239166 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.883607285 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.880497829 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.882922874 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.884044939 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.883832785 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.884090983 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.880947744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.886092691 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.891639334 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.883737844 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.884355986 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.885751155 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.884064334 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883117153 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.882288042 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.885006227 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.891644719 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.884512557 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.888621296 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.884894108 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.883999241 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.883713332 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.882592038 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.882676337 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.884166833 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.886445243 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.891779053 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.896413512 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.893889223 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.884350113 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.887054455 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.884754014 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.887892132 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.886742417 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.884919063 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.883418709 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.883355011 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.884408476 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.884521769 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.885027795 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.886332215 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.88354897 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.883689789 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.884290368 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.884195504 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.884318594 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.885511149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.885101817 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.88178339 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.884142536 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.884932538 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.882621774 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.882485073 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.882886766 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.883727191 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.885924306 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.886257654 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.890422635 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.883653298 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.885200538 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.885747176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.884137698 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.884461878 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.885784327 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.887896715 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.885729567 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.889965057 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.887451314 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.885305902 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.891223151 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.887167245 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.884981663 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.889365039 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.886762209 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.88491108 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.888234029 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.895749194 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.887889914 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.886701777 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.886981636 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.885965379 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.889960405 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.893874104 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.885881671 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.884576398 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.887922376 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.888897075 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.886012168 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.887946925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.888619371 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.88874347 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.889772945 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.889262756 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.885940998 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887204134 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.887890046 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.888319389 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.887681273 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.891625146 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.897298459 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.891194004 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.887555022 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.888684262 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.888514749 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.892517726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.887992361 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.889651486 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.887858446 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.901789565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.898618507 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.894734394 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.889844885 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.889078915 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.892801014 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.888320102 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.892316486 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.889421228 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.889320782 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.888638074 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.887418946 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.886165747 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.888153685 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.889095097 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.890402723 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.891041531 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.895066149 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.889777446 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.888270754 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.889178169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.889343556 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.887565816 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.888911995 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.888852556 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.892023754 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.890514344 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.890388486 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.88885345 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.896096113 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.892475978 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.889761538 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.890342088 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.89044833 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.888242363 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.889811145 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.890007971 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.892178277 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.899547295 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.89275024 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.899135441 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.891921928 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.898702754 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.890757434 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.892558874 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.898737162 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.888630019 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.888844679 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.891407113 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.890468911 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.895631797 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.893504755 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.890765614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.895159342 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.892385164 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.892249152 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.892494887 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.891490884 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.891465306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.892138312 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.899566673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.891688257 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.895649426 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.893868992 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.890147872 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.893251111 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.890882893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.891254507 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.894923179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.893620214 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.891874499 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.892470848 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.892289514 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.892281917 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.891801753 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.8938836 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.88896682 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.893502329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.898267392 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.893272166 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.897202806 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.892261179 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.899110368 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.89476291 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.898300094 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.895106005 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.893281132 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.893602075 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.89190275 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.89220706 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.891963834 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.892535262 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.892563654 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.894444074 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.896883543 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.892476181 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.893484903 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.895122129 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.89570165 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.893567627 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.905886473 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.920564101 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.895925545 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.900201132 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.890842844 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.895922236 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.898919575 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.893708634 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.892781846 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.897789185 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.907128884 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.904193342 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.89389404 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.894782186 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.892582623 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.89639034 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.892886163 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.894108813 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.895757619 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.893189598 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.894619597 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.895608864 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.896705902 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.895778774 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.897332408 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.896291096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.89726361 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.906055524 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.897858307 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.893592495 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.897852782 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.89550777 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.893801555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.896241814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.898295878 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.896886291 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.896284654 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.899195095 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.904156336 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.903003281 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.897386356 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.897994943 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.896887377 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.897779583 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.897741269 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.895737445 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.896767467 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.897852346 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.896509215 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.896196753 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.896311939 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.894349975 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.894829779 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.895495527 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.896737207 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899426631 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.904262643 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.896820638 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.895843284 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.897217551 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.895478909 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.895937911 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.895396461 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.90321295 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.900571758 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.907827263 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.905889554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.901403556 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.895780238 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.899118202 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.905061334 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.895853229 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.896450481 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.896999885 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.898244422 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.897971058 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.900207773 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.897779343 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.902515992 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.898130001 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.896487043 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.903271337 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.898652356 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.89820125 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.898063 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.901378293 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.895987721 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.893721865 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.898026949 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.896352578 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.904344706 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.900148511 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.898652939 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.897632956 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.896632142 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.8995569 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.901905393 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.897029626 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.897729853 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.894338675 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.898481625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.899674381 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.897940272 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.896867475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.896520052 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.897210468 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.901357265 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.907654085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.898004154 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.902959604 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.899427009 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.899529692 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.900067352 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.898344802 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.895709792 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.896058555 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.897631935 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.899367317 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.898660712 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.900162124 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.901365307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.901389373 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.899573077 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899524648 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.902150424 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.910800377 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.909939133 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.895210804 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.898568037 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.900916712 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.904736758 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.902450201 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.9005267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.899289436 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.902051302 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.899404059 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.901958894 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.89936101 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.904416846 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.917298792 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.902192464 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.900103626 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.900999491 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.90400504 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.901026857 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.897928705 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.900381097 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.902709138 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.904049637 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.910655691 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.901397263 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.906877949 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.902533646 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.901937468 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.906059532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.904310385 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.910658315 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.903565522 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.903356091 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.901287825 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.904321084 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.919528417 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.902265732 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.910156301 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.932306983 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.90084999 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.902137556 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.903180932 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.900264932 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.902504977 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.901997729 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.905063756 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.90051079 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.902769831 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.903462628 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.902511794 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.909558504 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.905134952 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.903625 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.902023756 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.902578017 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.903765511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.902499833 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.904876324 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.901983912 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.902219856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.903175973 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.904973852 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.902706898 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.914910885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.914942649 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.904237036 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.902901551 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.900252639 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.905563449 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.905685743 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.914293117 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.911496669 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.902772286 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.903255646 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.903898515 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.904935874 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.900536653 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.902930124 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.904562239 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.904452889 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.902717201 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.917915675 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.91604556 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.907957382 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.903859445 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.905354798 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.904275995 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.902888885 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.903939845 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.904411435 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.904523781 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.905188226 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.909018737 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.903415797 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.903054191 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.907037589 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.914494727 seconds)
  done (took 1129.049079445 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.902485847 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.900915595 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902533476 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.902929727 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.901142971 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902092409 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.903215801 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.902362341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.901691661 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.90134356 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.901476826 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902525676 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.90185662 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.902559312 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.902129028 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.902438106 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.903248341 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.901358589 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.901864308 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902744688 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.901451118 seconds)
  done (took 41.773074231 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.904874556 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.902633987 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.903178236 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.905786797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.903006609 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.906309565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.904468172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905856369 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.905401459 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902110587 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.906807003 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.905420793 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.903315017 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.902994209 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903252714 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.905198833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.907143377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.903731559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.906952602 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.904427152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.905163502 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.903730824 seconds)
  done (took 43.73219238 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.907294773 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.907655376 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.905127383 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.903380905 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.906272373 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.903792731 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.906734891 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.906885149 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.907242851 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.907553375 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.905588329 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.906701061 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.914885442 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.913666885 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.910084272 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.908868289 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.050664875 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.908414024 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.908235742 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.907631438 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.904748536 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.914234788 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.905563486 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.904368566 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.907827613 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.90998437 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.908745202 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.907622237 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.908883151 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.908476761 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.91393239 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.908473431 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.908670282 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.909531349 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.907672864 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.908900032 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.912901581 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.909070521 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.905493369 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.908812534 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.918922124 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.932523076 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.909926977 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.915096812 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.909536871 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.907713676 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.912083854 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.918525584 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.905952873 seconds)
  done (took 95.532405219 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.908732451 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.909282694 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.907026129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.908939111 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.909463551 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.908934655 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.910121097 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.909764944 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.906864401 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.907111506 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.909301441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.907222177 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.907564006 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.909860297 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.909492259 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.907321117 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.906903248 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.90848847 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.907557368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.906633979 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.907268237 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.910623013 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.910255661 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.907949347 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.910767092 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.908079677 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.906812372 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.910271867 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.909118436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.907977148 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.909929414 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.911092524 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.911180441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.908637261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.907833145 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.911833225 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.911317841 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.909091387 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.91142861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.908299032 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.911407041 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.910357207 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.910916006 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.911153611 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.907973402 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.90917005 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.907649603 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.908179193 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.909224579 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.911142147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.911691002 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.908702284 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.911360668 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.90899052 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.913361912 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.91246157 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.909374771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.908255972 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.912168799 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.910000629 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.909002147 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.91220707 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.908562811 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.911916086 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.911310902 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.909478843 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.909804573 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.912364888 seconds)
  done (took 131.680198419 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.913555128 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.912896445 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.912687292 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.912827897 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.913921572 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.914122429 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.913520199 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.914165939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.913349596 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.913989997 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.914677513 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.913456995 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.914523531 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.915114098 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.914471872 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.91449518 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.914229982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914947446 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.914878828 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.91555369 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.913984452 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.91447665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.915581482 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.91519842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.915425366 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.915435937 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.914495619 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.915500258 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.915276883 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.914914703 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.915166266 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.916038583 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.915616063 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.914286033 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.914871782 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.91555062 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.914340011 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.915884034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.9153913 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.91694642 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.916173659 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914615903 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.915300622 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.915443795 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.91564182 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.915291515 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.91553413 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.915899939 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.916358262 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.915301054 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.915883203 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.915284868 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.916501341 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.916156802 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.916858767 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.916085383 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.91720137 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.917674967 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.91729585 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.91630408 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.91671235 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.91757088 seconds)
  done (took 120.579547917 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.917036272 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.916387095 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.915382391 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.914095454 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.916709916 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.913505286 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.915590958 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.916534086 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.914993952 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.916616433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.91616316 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.914552047 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.914945446 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917406313 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.91462579 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.915027235 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.915422911 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.913664896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.916546881 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.915211249 seconds)
  done (took 40.150921985 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.914607118 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.917225231 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.914414085 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.913794019 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.91661523 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.914481503 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.917091838 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.918473091 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.9166056 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917990234 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.918335094 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.918396788 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91492806 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.915045924 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.917272728 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.91518942 seconds)
  done (took 32.501226427 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.916507937 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.918168395 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.918995572 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.919526348 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.916332625 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.915384343 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.918432846 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.915891067 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.915806098 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.919653849 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.919356061 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.917869076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.918500901 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.919687371 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.916827155 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.918728286 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.916590842 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.917789553 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.918793949 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.920162647 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.917989051 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.917080008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.920605735 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.919685483 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.917342982 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.917233328 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.918005938 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.916545616 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.917757981 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.918873419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.917324063 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.916911502 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.920333308 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.916723018 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.919843972 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.916603708 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.919932577 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.921792297 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.918141898 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.918706407 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.918805947 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.916413021 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.91934355 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.919203995 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.916168273 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.918310502 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.91647254 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.918581683 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.917502301 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.91721351 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.919854107 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.920080225 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.919193096 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.918829198 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.919051392 seconds)
  done (took 107.346028281 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.917935478 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.919421007 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.916787114 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.91947467 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.917886268 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.915960126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.919378329 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.917087706 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.915002496 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.918995631 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.916226127 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.920039434 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.916920645 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.919828304 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.917374603 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.918561085 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.916753829 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.919350922 seconds)
  done (took 36.366369399 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.914320576 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.915738549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.918275449 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.914139606 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.913920458 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.911552407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.908754998 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.910623198 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911288986 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.912562505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.907089031 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.910627686 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.909968954 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.911134135 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.911751714 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907213641 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.910619137 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.909128111 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.905203483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.910154454 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.910004926 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.908709535 seconds)
  done (took 43.884997132 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.908790464 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.906400754 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.924433506 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.931974851 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.929789276 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.94644249 seconds)
  done (took 13.380711334 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90997559 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911015956 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.90872589 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909414212 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911783304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909808857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909463678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908657273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912196591 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909602493 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910822553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910500497 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910520671 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908625952 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911393447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911289714 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.910131816 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909454834 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908702376 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912115056 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908520214 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912773542 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90816459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908762953 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907962996 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909884744 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913413722 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907062452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909075339 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909349484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.9111802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909288562 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911449453 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907766281 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909948193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911642892 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907006981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911222521 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911843523 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910299615 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911851759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911337942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914357296 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908192438 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912246435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907287533 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906809532 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910717238 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908922693 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912008981 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.9112283 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907158322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911375576 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911500105 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908489607 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912022241 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909171631 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91144081 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909655914 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907438976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907680996 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908834346 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91085731 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909182173 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911173086 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909763429 seconds)
  done (took 127.89675968 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907721635 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.911540879 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906150815 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909516396 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906212556 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907088961 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910561209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908133287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908920125 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91023205 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912875563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913326341 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90525228 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905707241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905572457 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904910766 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907101053 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907584504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90470593 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905804689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907333585 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905564812 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908319727 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905506198 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903988499 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906921092 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903971893 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906862668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904741325 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907423097 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904537686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902627956 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90533841 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.900871644 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906576684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90399243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903457505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904541867 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906525899 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90540899 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902254272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908600352 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902140901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906357989 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90543852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905010144 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903999098 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903115892 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903698846 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904185762 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902180783 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905866939 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905578916 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905046799 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905500414 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903795225 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903598598 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905198265 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903287346 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908660989 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90541241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903922549 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910240547 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903436693 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905651395 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905385606 seconds)
  done (took 127.62938089 seconds)
done (took 2628.343951727 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.927920375 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.917412428 seconds)
  done (took 15.676761361 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.063016329 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.015598989 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.901164255 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.936359699 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.900328213 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.894380474 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.912104169 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.896385233 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.90053495 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.899559119 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.898630856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.088719944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.947982154 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.895539974 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.897076645 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.987519404 seconds)
  done (took 52.86768386 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.901070654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.899702911 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.910227158 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.897167648 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.894654551 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.907113802 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.927032478 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.897845357 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.928373647 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.907846104 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.964539209 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.90679389 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.893330736 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.945538111 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.906086869 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.908574818 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.98655926 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.97064283 seconds)
  done (took 36.377359034 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.971535484 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.899054483 seconds)
  done (took 10.697489776 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.907091169 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.948791056 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.949515179 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.907833465 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.896917876 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.889087283 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.901299854 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.900064584 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.922287645 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.909243087 seconds)
  done (took 70.950128782 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.893935464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.890437 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.889569604 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.889515564 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.880720191 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.882215734 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.887666938 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.881813258 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.558318274 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.921916676 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.891786731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.892874887 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.885777735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.886215548 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.886321309 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.909368148 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979369827 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.881193887 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.882410894 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.890115846 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.885650558 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.936095654 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.89753266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.88473732 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.9139686 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.557658182 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.894253474 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.889908999 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.977714909 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.880646994 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.883646437 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.887143529 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.885356163 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.253588546 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.187579552 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.881473991 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.895239026 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.890287855 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.881639898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.975374181 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.884184648 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.888952821 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.542352606 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.166526929 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.989928185 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.92280019 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.20600401 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.899758458 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.885005333 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.911134672 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.884686584 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.886805634 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.896620339 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.366259829 seconds)
  done (took 133.052376946 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879553301 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.228134781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049620152 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.881099677 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.167506581 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091198973 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.882640604 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929042502 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884583945 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111168891 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.134388414 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.992944835 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87992365 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.880311885 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876395703 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.873132976 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.040698771 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.953885725 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.880912031 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.87803377 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908915015 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126281832 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.00309883 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.878611455 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.909380607 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093331433 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.002475261 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.987285875 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.673828553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872300546 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944926679 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875336798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.872134668 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.87150597 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036076492 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.976356362 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962314389 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.875568895 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875205639 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871684064 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.549158564 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079047372 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.975631099 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.01741236 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075914655 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090377912 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.660088061 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.875505124 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.623343886 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042563216 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.108333257 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.110120542 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999413094 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877733707 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.201991145 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.87469406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874487373 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130825548 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019329069 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.979851167 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876666542 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.876037869 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875003195 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124302562 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.875972391 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.973869903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877039188 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.873059542 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.98125302 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.979050175 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.018225272 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093761147 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906572564 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.770800653 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.412169973 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.1299372 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.94399593 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127896747 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.875698488 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871773504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959311504 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.726296609 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134770474 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128491885 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.131599612 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913229663 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.603535487 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.874662638 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.106556805 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100688013 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.12786569 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081988441 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.120629427 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.193242009 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.875455955 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.876081692 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.118392529 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014085308 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.877347498 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.230251705 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112397587 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.449763396 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.899739093 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187713701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009511721 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879215034 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.521607728 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.876972961 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.102209486 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.921499356 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.877255197 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877029867 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.09871107 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.849503129 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879022891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.759033595 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.941503049 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876580789 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117318903 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.876749427 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144571195 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880614777 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122885767 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.066576834 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.911359111 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.05485701 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.085220514 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.877271643 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131206817 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.125989037 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993941134 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153970976 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.777007709 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.876806415 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.169312575 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878541467 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.880338465 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052185819 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.882188444 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025767264 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880555121 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.169254995 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902118667 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115347804 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879965669 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135823514 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.914368713 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931779759 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.881546658 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007891454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877872872 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.711008268 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040619249 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88002089 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.877677986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.435368201 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.876790464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.04073394 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.114282093 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902809824 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.954451683 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.554849755 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877966895 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970626819 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908665066 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.273204909 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.881659802 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.134009956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.879796652 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.87689099 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.879641308 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123939602 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.120387756 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.882250174 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.876878136 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.775950158 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.878822835 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.879630445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.065399286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.253886246 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876563001 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086457911 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883553678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010115497 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.879960683 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.963615465 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.218569877 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878474384 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.877888482 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.881644877 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.878621379 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.878870419 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094496994 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909888558 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.41907747 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.019838659 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152061625 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.194603947 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.134379368 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.926134252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88456957 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.137001943 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880092146 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.945607683 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.879935545 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904491195 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116233474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882294091 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.147052254 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164270072 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.924073948 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931334003 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.880945248 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879945615 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.878933752 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031900525 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972684871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880221608 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.880535605 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999051947 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006716098 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.093858572 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.88311388 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.971747412 seconds)
  done (took 905.904530903 seconds)
done (took 1227.35703569 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.883584546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.879183546 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.867459729 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.888133082 seconds)
  done (took 29.329985097 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.896481425 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.89265848 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.895740361 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.893934342 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.895584394 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.894059965 seconds)
  done (took 13.184689469 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.958048467 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884789143 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.887572409 seconds)
  done (took 21.547778194 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.96082712 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.276584374 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.005643689 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.314520853 seconds)
  done (took 10.373984524 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.897035425 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.894411138 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.896146327 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.89695613 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.897968515 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.89919114 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.895892659 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.895585661 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.899246808 seconds)
  done (took 18.890422078 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.456724439 seconds)
done (took 99.595258943 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.011533329 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 4.874193651 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.986872997 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.962250444 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.392268344 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.050683111 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.00347912 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.02921974 seconds)
    (9/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.026853614 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.933560607 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.89981318 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.94590872 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.927332818 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.926842287 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.916525768 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.989066062 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.854664532 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.153808097 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.905212783 seconds)
    (20/309) benchmarking ("sort", Float32, false)...
    done (took 5.695195457 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.588906838 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.153472775 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.04526 seconds)
    (24/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.092871482 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.474296463 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.059714717 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011449453 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.206008526 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.04641909 seconds)
    (30/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.449487979 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.966290638 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.004095626 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.227870104 seconds)
    (34/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.903649553 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.08094406 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.581163846 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.177827588 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.199524901 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.222665328 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.985626963 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.830398755 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.004554301 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.288767111 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.35626945 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.097125978 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.248042617 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.819825029 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.991300344 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.230002713 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.175728378 seconds)
    (51/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.407081047 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.979536155 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.887667215 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.073175411 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.228177143 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.083692536 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.055167702 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.903166698 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.005813446 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.291274303 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.155162791 seconds)
    (62/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.930449777 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.2842797 seconds)
    (64/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.306199652 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.008086998 seconds)
    (66/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.480980381 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.420894928 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.966793268 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.962165611 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085114807 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.938073204 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.902402916 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.074060361 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.017232926 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.005657565 seconds)
    (76/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.130109379 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.235770855 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.229857846 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 5.670597559 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.931669859 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.293012331 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.024035996 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.889762527 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.061074343 seconds)
    (85/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.922332701 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.044569253 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.596585341 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.805984407 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.920276577 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.906025175 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.752055312 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.889863874 seconds)
    (93/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.334220448 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.981210949 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.926871959 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.063982364 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.911896395 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.987981683 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.925784221 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.956607131 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.070085992 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.204108422 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.021191657 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.208516696 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.042194419 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.005225167 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341022275 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.08261351 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.137819098 seconds)
    (110/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.329692548 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.13010898 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.892135297 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.979183299 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.981197409 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.029717852 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.102226605 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.970778086 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.15083349 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.907027088 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.691662012 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.937472989 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.128359236 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.932207838 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.998339737 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.254983086 seconds)
    (126/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.008278795 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.201633477 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.18842237 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.163668371 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.086040498 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.809961641 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.15287128 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.128406159 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.936231456 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.160026414 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.891550152 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.007651274 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.158986073 seconds)
    (139/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.421166235 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.566152737 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.136246564 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.944218351 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.570144666 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.912361069 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.008293794 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.957766878 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.892706353 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.890075227 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.376604887 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.403298279 seconds)
    (151/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.92318769 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.932565922 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.981662006 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.138350077 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.936093574 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.193928815 seconds)
    (157/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.014510867 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105769085 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.592033147 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.372118035 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.991598285 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.248282823 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.006910535 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.873581969 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.895651938 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.082198098 seconds)
    (167/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.040536329 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.051609016 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.374420432 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.914193114 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.944765278 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.999949651 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.887280472 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.531836252 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.066144532 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.043328395 seconds)
    (177/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.982903927 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.874115677 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.903196374 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.023260939 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.910527077 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.92666026 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.068897149 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.913296285 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.766911285 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.950182574 seconds)
    (187/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.979165253 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.589024814 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.911598696 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.447120858 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.256815009 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.078714825 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.38894533 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.030251141 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.912101768 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.015895909 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.273246323 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.975848942 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.912585887 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.218973406 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.002399031 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.939056454 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.007334109 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.252453686 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.290976859 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.913932432 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.534576508 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.998696567 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.84167209 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.055372644 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.176440362 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.72707597 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.111201222 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.896398342 seconds)
    (215/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.822473446 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.51807659 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.349364516 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.990369805 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.928951617 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.912100063 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.914042007 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.097687353 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.220318993 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.735017352 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.935620233 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.09709147 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.027797535 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.812685903 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.018341607 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.546253697 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.094370108 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.19950017 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.030540393 seconds)
    (234/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.93223777 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.303340639 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.935599426 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.928620503 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429006243 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.784337686 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.985925772 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.899541023 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.005192434 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.15945013 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.925891874 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.164412824 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.166980716 seconds)
    (247/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.097792828 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.559411509 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.217949446 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.903226524 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.221139097 seconds)
    (252/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.399800808 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.916731224 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.771192395 seconds)
    (255/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.997827062 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.917843329 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.899863293 seconds)
    (258/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.090354588 seconds)
    (259/309) benchmarking ("sort", BigInt, false)...
    done (took 7.851871225 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.020612463 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.917169437 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.052215483 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.360104138 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.923330391 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.900534799 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.403333398 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.332995626 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.941511157 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.213078057 seconds)
    (270/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.106570885 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.915088063 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.897953263 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.118216633 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.185721238 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.183242196 seconds)
    (276/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.003032824 seconds)
    (277/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.042441731 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.18014337 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.946407592 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.982874594 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.049736557 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.93350401 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.008708213 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.025908113 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.917484996 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.076323962 seconds)
    (287/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.296797023 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.056065024 seconds)
    (289/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.055254582 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.737018475 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.637420621 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.948313155 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.903594896 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.003614985 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.115221849 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.10931371 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.865848169 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.917190836 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.210415572 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.055909892 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.937816692 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.00273436 seconds)
    (303/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.918961803 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.136549629 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.44263315 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.783453742 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.977947367 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.923578992 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.22313731 seconds)
  done (took 1020.020099882 seconds)
done (took 1022.137237856 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.951452916 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945210138 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.92662286 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.952585389 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.040007155 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.957288336 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.939444268 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.930561938 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.97855224 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.978511851 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.928263923 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.954669653 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.930873125 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.930883838 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.926872819 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942960168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.244822375 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.960079224 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.948890497 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.94022011 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.949312155 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.929124889 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.980150864 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.957575163 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.935453388 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.932361274 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.935277651 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.952067813 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.044828434 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.936416919 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.933687554 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.943482696 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.247744247 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.961590651 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.927682909 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.951520077 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.941545312 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.939369684 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.935451136 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.962555613 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.340932385 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.971420385 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.932185863 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.932330934 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.932649358 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.934996204 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.933211884 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.936754765 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.947819547 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943763838 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.336179917 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.986518218 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.935490416 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.932109042 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.943460098 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.93218719 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.933897072 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.949403929 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.951642773 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948347779 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.236784306 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96440885 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.936226106 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.949289154 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.940903318 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.376077219 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.966893471 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.936278305 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.344677345 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.976914687 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.374753207 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.978609855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.934377721 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.949098513 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.964245379 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.248812029 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.957680992 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.93401325 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.942960446 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.932508474 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.941906181 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.948793919 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.936407945 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.935506724 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948892215 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.961098667 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.94349605 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.935357815 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.941107691 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.953638492 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.940221255 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.944141792 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.936499715 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.928801702 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.943629795 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.937955412 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.938889135 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.935612611 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.937721229 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.948262852 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.343723011 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.989634584 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.929931026 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.929115416 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.93231065 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.949629527 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341926382 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.97316466 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.956826699 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.981235646 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.934809339 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.240245387 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.966797938 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950072867 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.942350541 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.936902061 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.929750913 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.240853816 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.370781695 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.988028428 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.935654459 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.934133069 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.950064131 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.93953451 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.930975666 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.254791694 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.965094013 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.948776614 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.057563331 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.945198189 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.967593587 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.933467495 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.937193731 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.965243168 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.951281451 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.96752261 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.938233543 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.951723162 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.950687267 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.931952482 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.947773818 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.948116496 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.937152018 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.940900162 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.932571509 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.965039174 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948973862 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947789634 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.955989612 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.059885768 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.933789195 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.244963473 seconds)
done (took 303.752639123 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.011031583 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.923572866 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.029306833 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.931828447 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.025696359 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.015995538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.928630413 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.931502713 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.930632538 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.325305874 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.929436692 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.931138832 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.930571006 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.931479604 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.028019615 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.934794735 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.930546442 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.288491581 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.936100775 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.008076205 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.930255168 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.931014755 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.93383972 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.303981607 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.923325013 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.935138684 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.005556156 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.934406104 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.270086403 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.927150361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.929204912 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.269466455 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.02516005 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.951779763 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.943657802 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.940347347 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.014988477 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.937385499 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.016132641 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.028164491 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.029696328 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.97587863 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.929151087 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.93502668 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.935315088 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.934876393 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.931640427 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.961940189 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.927179996 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.933778398 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.291677404 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.942734804 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.933086556 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.932975132 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.933440515 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.967850911 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.933531573 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.937003891 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.03018764 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.936179578 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.999253815 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.304429485 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.326480569 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.935201105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.927574153 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.93369578 seconds)
  done (took 188.667333169 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.003982166 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.006367528 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.002666862 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.936857236 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.98366338 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.002018926 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.939512348 seconds)
  done (took 15.730844771 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.944103267 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.935962757 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.989187289 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.991764803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.937218731 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.083758509 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936025075 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.946568984 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.938109991 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.98824918 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.936864804 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.936154615 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.94336341 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.938534563 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.987386405 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.949054747 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.055121527 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.938010792 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.937942418 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.090588898 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935574029 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.944151139 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.99186384 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.948379494 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.938672797 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.943314492 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.520588389 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937639001 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.93362864 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.937341863 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.93454573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.978728356 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.937778122 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.934753342 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.934663954 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.051079556 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.937362817 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.934990101 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.937644161 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.930665584 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.938901623 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.93839608 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.936983312 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.935355395 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.935958841 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.959658045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.938008545 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.937067997 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.937129832 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.938909577 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.98901434 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.943207814 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.934439344 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.936105536 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.991042666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.945053493 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.940984221 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.936744494 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.938332109 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.937132117 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.092495233 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.991425261 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.938944448 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.988909676 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.939666523 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939791818 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.939690562 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.939270467 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.036989536 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.939512956 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.990814962 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.9412181 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.096901181 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.963072485 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.94090305 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.941260277 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.944344782 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.941083634 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.933355843 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.946396388 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.935359919 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.941037425 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.944349923 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937402622 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.937030139 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.052018767 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.047555407 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.937064867 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.951380124 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.947922256 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.937516116 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.991626591 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.940976407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.937549415 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.997203145 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.057443266 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.995520661 seconds)
  done (took 212.57017927 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.946576428 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.949602081 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.941305628 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.958389305 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.941067568 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.940214595 seconds)
  done (took 13.537806814 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.943615824 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.943075422 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.940010899 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.940315121 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.94151909 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.942470002 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.942544866 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.943042952 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.943995479 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.940658962 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.945104733 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.942757463 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.943662805 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.941655398 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.943456131 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.942186401 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.94407555 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.939097872 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.942451201 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941999433 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.090341014 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.941923005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.942482824 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.94184049 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.947785616 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.942591459 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.949419241 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.942496163 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.942492358 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.949596398 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.947159566 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.943642421 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.943430401 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.947739199 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.947823432 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.94236003 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.946137848 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.945021687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.941063299 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.943628782 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.948390544 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.942758099 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.942814716 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.943701915 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.944583053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.949195243 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.948970412 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.950980795 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.944083478 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.944844651 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.945688681 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.943902165 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.946017859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.945810457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.945029988 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.949136651 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.949437262 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.944376605 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.945101055 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.944132933 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.945161778 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.946732455 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.945738675 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.947786293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.950812849 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.945787011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.943901793 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.948740161 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.944072008 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.943490964 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.946206277 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.942009032 seconds)
  done (took 143.020308799 seconds)
done (took 575.397246741 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.118986476 seconds)
  done (took 8.983451922 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.126813126 seconds)
  done (took 9.03442775 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.50597155 seconds)
  done (took 10.37470901 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.967509826 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.959535229 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.948415365 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.945451326 seconds)
  done (took 29.70997998 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.063654768 seconds)
  done (took 8.931104808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.963586886 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.942159564 seconds)
  done (took 15.80428537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.960468928 seconds)
  done (took 8.830678546 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.02698586 seconds)
  done (took 8.922758412 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.960946239 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.970791007 seconds)
  done (took 15.815036969 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.925914005 seconds)
  done (took 8.796352403 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.59309339 seconds)
  done (took 11.555873113 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.962815402 seconds)
  done (took 8.937728272 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.985562903 seconds)
  done (took 8.856745771 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.026676603 seconds)
  done (took 8.896714627 seconds)
done (took 165.316289282 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.945910247 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.939621347 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.938292684 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.940077139 seconds)
  done (took 29.636315941 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.98496061 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.98538748 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.982581402 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.993449065 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.985426146 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.984557801 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.974110974 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.975953927 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.994742297 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.987184273 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.985664917 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.985013526 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.982471503 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.974004804 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.984715524 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.987356522 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.993826131 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.995880742 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.972184039 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.984498331 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.950809572 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.994900061 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.986673388 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.951035581 seconds)
  done (took 49.448266909 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.152486005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.022968652 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.102657352 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.999832192 seconds)
  done (took 10.149531841 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.004202983 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.003039779 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.016613347 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.054523859 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.081096825 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.016596965 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.975405899 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.972542132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.958533483 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.005164782 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.077832596 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.999613554 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.088639013 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.949625849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.132976957 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.952756523 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.951407966 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.002235124 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.05477543 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.069139768 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.951453586 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.003199399 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.008243008 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.998913576 seconds)
  done (took 50.200504077 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.952329746 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.959114569 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.956703142 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.952139843 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.952070889 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.954181238 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.957676715 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.953505822 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.972444234 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.954069135 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.952763513 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.950768067 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.951450913 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.94961171 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.950016235 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.962594364 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.965105756 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.952302813 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.953813586 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.957107791 seconds)
  done (took 40.981258129 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.946783163 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.798856716 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.298779823 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.200617403 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.945671055 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.946882836 seconds)
  done (took 32.011192926 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.967732408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.959145014 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.951121057 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.007796623 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.089787805 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.958051553 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.953407328 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.96470829 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.997421601 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.015108153 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.971422166 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.981516506 seconds)
  done (took 25.691291307 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.95583309 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.947663471 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.948528425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.966322275 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.964009638 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.959683155 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.960738415 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.946373639 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.966177598 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.97137026 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.956974581 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.967323219 seconds)
  done (took 45.389833196 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039530082 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.841361376 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.004749051 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738856311 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.483750938 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159361778 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.570926196 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29543277 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.954253214 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223077158 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99250615 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190662717 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201979737 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946521792 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.036768413 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.397748728 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249890579 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171296177 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969544516 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628510961 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071378664 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.489970239 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.657142725 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078795564 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158124534 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.080006534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.210941854 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.906510846 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089922637 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985956179 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962078908 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949678216 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22334786 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332492861 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067632011 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961450032 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.608634476 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.667420123 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.935445162 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.759414925 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.859664814 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.079500733 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958770349 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950740681 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888351791 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.521111258 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28948954 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.958007041 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.650419701 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.951941058 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96287367 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039722558 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.954499861 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.770032778 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904323555 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.228614446 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.94837044 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959984635 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.518781508 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.043811538 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.587699201 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.886517303 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.048035573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.708444875 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434347986 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.098885439 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.954113022 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957470268 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887533374 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.631368879 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076913351 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096643179 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.96747824 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604715679 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261703299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.065241326 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.030749903 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238996973 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.746895459 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.886741086 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180132602 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.902177432 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887159133 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.809127868 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.890639026 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23569701 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986822562 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.572400636 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989616655 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297046985 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967298275 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976532892 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963528147 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.178946891 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.835057145 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957556612 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.721092917 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234868031 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976085626 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294853168 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890151764 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.956164413 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212083873 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.168386475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.084699221 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.510093074 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119505154 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956674533 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.04231936 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.775747611 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067014651 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.23528749 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012260306 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.042462193 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087972252 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.91144498 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253772021 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978861251 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.128197429 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97028191 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2174051 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.265453557 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205241663 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037360511 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959816001 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.959845999 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670591539 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.581732859 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.18208118 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.957565185 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352651452 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071142932 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.959998228 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893705117 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.580890756 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954454297 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.063243778 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.18300686 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.799710019 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334850852 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891893719 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101938878 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.068844066 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.179087533 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.616834591 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.039029192 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221434467 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397694872 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.185803352 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070808626 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978628471 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051776914 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98080614 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.280727499 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317006228 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.962653733 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.964148348 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.730456 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.035357556 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962189971 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.963988233 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786851791 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245306261 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982127605 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.965489597 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.85143071 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.973126753 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027399896 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96601926 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970621506 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.462024036 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709693461 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.969097603 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.621357288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185702324 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971583378 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.734178223 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154346759 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.044406467 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240182707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020778173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.894131866 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.663350825 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.664048487 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961660809 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896923496 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.960384181 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969156019 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97218332 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.159768699 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243423353 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002138499 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.719601822 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.077832568 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966573379 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.966479232 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962067377 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.453153001 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.050766039 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487370294 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074500423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099942109 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.975967085 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.897499858 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.967798823 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96659837 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.962626251 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.929203785 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015062292 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.647053307 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42630225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222450391 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.611311559 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980037398 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.744320223 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.093331643 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.986655193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.753426446 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941659496 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.061892178 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031290268 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.974786151 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.654747264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.745935744 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526783652 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280332917 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276707801 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414382418 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.344632896 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288736009 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305664405 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20110949 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49546534 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026212247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315355876 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915444014 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052893991 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.622946522 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321355349 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976008593 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194262009 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362222203 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.829471685 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122862087 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174145174 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001526515 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.787514095 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99410096 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.20450507 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122537658 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804106858 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194108323 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307290069 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.748027105 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.081440019 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.963501715 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.661096157 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047453482 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.678119848 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.328816765 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.505615977 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.025922483 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46500386 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978633488 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.413496158 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325198475 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308350539 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.05474472 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904218427 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.977784304 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.977877532 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.96642871 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.946904986 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.819479318 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.21868699 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978590274 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201524493 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.237362131 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224887419 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.869685868 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.968265205 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967028147 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26978387 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.638930995 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205973246 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.299871773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.541563415 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976740993 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.902494773 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900679203 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.670182899 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.970928132 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943072917 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179919276 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.087537442 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919108476 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336336061 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278637825 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220965415 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.976508763 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24687399 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241198529 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.703312759 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993072553 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.064164641 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.756674911 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.692974368 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.186657861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199535135 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767903683 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195607792 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.008981665 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.924911778 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.964612584 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180940534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190219789 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033436708 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215857251 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.686702963 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.970730242 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338417549 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02463513 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.017324327 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.180102495 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.058000836 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973126245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045553479 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977254792 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.977889565 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977200258 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014054272 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036956905 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.100441268 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.978884835 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058157757 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.058269351 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.552024924 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.9762369 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253078331 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327801822 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302827026 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025638075 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.966310394 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971992447 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90802866 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103838512 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.416229081 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244435058 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.098138001 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.145814513 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997015673 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766100487 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25101943 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280200594 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240684351 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.866483393 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970464139 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076833593 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.196004493 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979346355 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.180793169 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192064515 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279244097 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441650709 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.097930663 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4101729 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244518046 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.340382893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.97335955 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562756606 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.972283345 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.722963469 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.011443168 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039898183 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258617155 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979693607 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352401447 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989397503 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.169511584 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.488251241 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.743766605 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340544946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.959616414 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027617908 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251316574 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367676653 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281613318 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035125167 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979497086 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.667851417 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105898291 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.815498634 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19144332 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.972280788 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181439244 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.680705092 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982950178 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257244711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286641437 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.966404328 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.814331344 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97693535 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.981684235 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195664587 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229131533 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223052049 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97830635 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.972319506 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.784910219 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256855579 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030181701 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903819748 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.970851483 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068673928 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221528607 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988077318 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.488067579 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.672717872 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275400547 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.888181191 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990164819 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375485511 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41546759 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307706463 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.492443146 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192738221 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.526101079 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.817389303 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34380866 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.978511634 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363217942 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.345834278 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.978251809 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.466359922 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079268212 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.257812206 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291583541 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.978836964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731974862 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.020542718 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195919587 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61539514 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918047581 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976741604 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.035144473 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.975444356 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10592363 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981126569 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.849525792 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787329729 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.805265963 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467661128 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.975654619 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.96558345 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.808268666 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.519817057 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0758529 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131208449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984297848 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.68974028 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.269634765 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.231924484 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.471963493 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.038942177 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.982370145 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976033105 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90540584 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.171974846 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.169707313 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277108416 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.288099539 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.080495652 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980764776 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.19290865 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187315809 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.058703172 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138539258 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336942105 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082403524 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.897871501 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.693452277 seconds)
  done (took 1731.564669354 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.997578731 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.004907554 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.986070135 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.98283621 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005790088 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.981157401 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.989723162 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.056737388 seconds)
  done (took 57.907191268 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.977016868 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.189101379 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.985130291 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.978747092 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.001660573 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.978498185 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.179336239 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.985646768 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.996388549 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.988141075 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.978519482 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.982233847 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.322649158 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.998270532 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.97867537 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.002361035 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.983975177 seconds)
  done (took 76.417757924 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.975950043 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.15170582 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.014850075 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.003425495 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.845827142 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.981748071 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.894089602 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.980701215 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.977660952 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.141151795 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.312983546 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.032558007 seconds)
  done (took 91.216320388 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.993210951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.984654864 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.982621634 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.987243347 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.984590347 seconds)
  done (took 11.846171136 seconds)
done (took 2254.344695279 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.2452568 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.205054647 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.219047048 seconds)
  done (took 6.328843941 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.129286128 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.178595406 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.298174357 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.303425032 seconds)
  done (took 10.81848581 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.266498512 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.351671042 seconds)
  done (took 6.52272539 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.312798721 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.997562384 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.367921546 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.98285262 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.983388193 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.979771286 seconds)
  done (took 22.857244731 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.986155553 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.988967672 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.987470521 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.989861355 seconds)
  done (took 9.858875112 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.964207842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.703607864 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.962735122 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.978933679 seconds)
  done (took 21.515581547 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.733943064 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.381668189 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.728496543 seconds)
  done (took 9.750394496 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.546403216 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.905374008 seconds)
  done (took 9.358454693 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.234640317 seconds)
  done (took 4.140933144 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.012766682 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.256172551 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.502809044 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.506364984 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.605511079 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.849593628 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.275903768 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.206302598 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.421786499 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.434079444 seconds)
  done (took 25.978453357 seconds)
done (took 142.956431685 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.393586183 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.996546802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.182310694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.329043827 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.207111005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.182744162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.200690795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.324294377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.852851073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.850899952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.335295767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.203232154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.145389966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.994215556 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.15413016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.994539517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.20363797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.408245183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.051418404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.254733124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.20633217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.983210826 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.174069883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.993304106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.204971684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.131884408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.525398775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.994171572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.195780802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.535458438 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.131527554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.384185183 seconds)
  done (took 171.632836073 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.986164995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.981847805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.982677567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.980897114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.267960017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982344887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.982694355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.981625691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.005262423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.994597502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.983292363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.256804746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983510499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.982512692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983436479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.981372297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.149943135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.982962093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.982883512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.982043024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.980871623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.104365305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.983406528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.137473064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.155859189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.997089508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.983048638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.002164264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.007976687 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.007484733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.007548747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.981957735 seconds)
  done (took 210.677090217 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987082834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.984043906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.983950058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.982372267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.983766499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.991827235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.984009411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.982344661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.5081233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.531111324 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.010789132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.989774512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.010225617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.984725546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.015204265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.984987799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.017773177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.022133764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.015231298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.006443615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.005898581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.656465383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.009962552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.670693526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.000538398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.002618627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.984221848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.005752242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.008235136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.001812509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005377917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.985933306 seconds)
  done (took 224.256185659 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.180066589 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.993045715 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.994714121 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.90265064 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.994758101 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.994065587 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.98888895 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.177234272 seconds)
  done (took 20.167062286 seconds)
done (took 628.647754517 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.45993894 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.294726369 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.167569041 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.02020131 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.262161297 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.048435288 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.014183515 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.078152035 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.736995383 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.08030967 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.654171924 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.032585775 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.742786433 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.03796555 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.137133343 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.070722803 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.55735203 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.650748954 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.187996918 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.073768349 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.183167566 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.948411327 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.094338122 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.771113781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.768495394 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.003689548 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.180385377 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.562876771 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.022799369 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.174050544 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.780376391 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.429259234 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.025080591 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.012380974 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.072337898 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.047778798 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.352195657 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.023634773 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.135356124 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.754091361 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.075169618 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.61777512 seconds)
  done (took 108.256374287 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.986356438 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.983527944 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.98376055 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.985202332 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.985762769 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.984291707 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.984358793 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.983739499 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.983790909 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.982756784 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.983378264 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.984254081 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.983874686 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.985292243 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.984992804 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.98341368 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.984309058 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.987019589 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.985612366 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.983569777 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.985124606 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.984702134 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.999668566 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.984953448 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.985594625 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.986555584 seconds)
  done (took 53.541333495 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.999738532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.151294293 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.234353672 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014481932 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.998298579 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.002414644 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.015794905 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.002422105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.999654717 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.000087126 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.109601142 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.003153774 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.017999851 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.23788919 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.012658853 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.999382499 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.998691513 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.999625268 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.158899076 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.016514515 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.017601392 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.002110147 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.017515802 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.010821081 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.000870418 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.999379482 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.002943442 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.499488982 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.006251256 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.109687097 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.041144829 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.019043797 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.41157932 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.24345638 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.049852835 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.006140424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.000003107 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.110121172 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.002346006 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.998828049 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.016312583 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.002295521 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.233583374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.485798859 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.0116993 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.999749013 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.50685197 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.120962741 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.038888656 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008131391 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.23828175 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.014151174 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.999639806 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.002312627 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.035618587 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.003586907 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.999252615 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.351307592 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.013821716 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.018519957 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.003438262 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.002123501 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.16439752 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.006174372 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.151963127 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.008871256 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.007270316 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.00095372 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.235982933 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.015887753 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.485563822 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.012731852 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.999533999 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.111618648 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.153256882 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.540875199 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.01138552 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.165771087 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.428946741 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.023406935 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.004679615 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.485461497 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.027487741 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.00665209 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.003475963 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.005959525 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.001682315 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.046913604 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.01512011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.42336084 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.491819384 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.368758253 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.027404768 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.014618042 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.002547775 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.351021389 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.010447055 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.001107717 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.231128911 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.499159706 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.015444829 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.009223809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.478741301 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.016539545 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.020925179 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.00932581 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.242292139 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.016708793 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.047900887 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.003432866 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.008686815 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.005317819 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.020947088 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.007980135 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.003760077 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.46994479 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.131095531 seconds)
  done (took 247.600426595 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.998562672 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.999067088 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.996788324 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.999102703 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.998329687 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.003944254 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.996726455 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.996042508 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.005026392 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.996490913 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.996873319 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.997706421 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.997928081 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.002849067 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.686059375 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.007537729 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.616631898 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.001284564 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.000279495 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.008751475 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.780183199 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.005224979 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.00277333 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.9973339 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.002753779 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.00485068 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.00869876 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.120736241 seconds)
  done (took 172.154915217 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.009877112 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.191132274 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.029862903 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.048253493 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.014830314 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.00637961 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.032448617 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.026310054 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.011287339 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.005872014 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.006842311 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.068223995 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.017792123 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.146683968 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.037105527 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.03716252 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.111912102 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.014369987 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.007473187 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.006707845 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.037295744 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.004370822 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.070111875 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.134563354 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.026308783 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.124490951 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.011477096 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.010508857 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.008182179 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.126173152 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.022946044 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.069804865 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.035059111 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.025539626 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.128034863 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.12498405 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.112055399 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.036671743 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.01051354 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.005266295 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.007140503 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.995050448 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.123920313 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.027939831 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.009093069 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.117734089 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.026036607 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.010628486 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.016470473 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.006032252 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.020618874 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.024920083 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.073792838 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.141015283 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.042898356 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.034766521 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.034982922 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.295331423 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.019066567 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.106457359 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.000334604 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.128102615 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.03028743 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.996989393 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.010601016 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.01543951 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.038456997 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.040566991 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.115798638 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.015330072 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.108021343 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.041963601 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.015635676 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.009717644 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.012615409 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.125032109 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.126126328 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.043728904 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.048233254 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.041116639 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.00644049 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.011881693 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.999048946 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.027644613 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.013696054 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.128997731 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.126900194 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.017455143 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.011114649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.013491109 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.011963898 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.035648108 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.136659581 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.044415368 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.106878637 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.077138781 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.088637406 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.028249791 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.02385046 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.013823079 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.074696627 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.027914708 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.022772334 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.34381615 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.082520485 seconds)
  done (took 217.457605898 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.456508303 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.063919171 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.06890684 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.325763409 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.437244761 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.859141477 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.057464771 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.059782066 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.0843362 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.246964327 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.131992992 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.080280127 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.047752439 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.035399284 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.060109735 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.085185474 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.073042896 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.370550976 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.184387435 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.146445271 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.039860909 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.36980481 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.380555204 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.441229489 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.095018455 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.403431426 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.742421556 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.201531194 seconds)
  done (took 65.487516016 seconds)
done (took 866.410944755 seconds)
SAVING RESULT...
DONE!
