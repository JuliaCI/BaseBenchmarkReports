cset: moving following pidspec: 29418
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353530963 seconds)
loading group "string"... done (took 0.484440518 seconds)
loading group "linalg"... done (took 8.06022712 seconds)
loading group "parallel"... done (took 0.186720241 seconds)
loading group "find"... done (took 1.246029892 seconds)
loading group "tuple"... done (took 2.02531167 seconds)
loading group "dates"... done (took 1.361448493 seconds)
loading group "micro"... done (took 0.250455978 seconds)
loading group "io"... done (took 0.689785821 seconds)
loading group "scalar"... done (took 42.958695183 seconds)
loading group "sparse"... done (took 13.222159037 seconds)
loading group "broadcast"... done (took 1.154977734 seconds)
loading group "union"... done (took 14.926369778 seconds)
loading group "simd"... done (took 4.956242062 seconds)
loading group "random"... done (took 9.996224619 seconds)
loading group "problem"... done (took 2.027598581 seconds)
loading group "array"... done (took 22.793496459 seconds)
loading group "misc"... done (took 1.479680034 seconds)
loading group "sort"... done (took 3.633272024 seconds)
loading group "collection"... done (took 19.786114808 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.462787488 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144470661 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148653118 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.154178133 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188461389 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139114773 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158553749 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.111463855 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.952227214 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18623533 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143787421 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514826026 seconds)
done (took 5.037277565 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.287758804 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081357641 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096919695 seconds)
  done (took 0.853689713 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090146294 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143312808 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090616402 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076376198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090990727 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0767856 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.076064518 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089679421 seconds)
  done (took 1.320049212 seconds)
done (took 3.234541189 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733977851 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277047203 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203695556 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500634628 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.178290064 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.208139786 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672605462 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346058222 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.242501721 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100895194 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130420389 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394812559 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115803649 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679729953 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089135714 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125688338 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169904798 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444926567 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089042337 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091473207 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.112855955 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149630803 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.109726836 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083552968 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.177195926 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07775138 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.184081975 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104477844 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076467865 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.281005197 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198812372 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68100829 seconds)
  done (took 10.742915032 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112293971 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135700979 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093345543 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135127726 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137530303 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081639152 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098202172 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076922221 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119958202 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176524009 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130910248 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138031898 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074888257 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079179376 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11362147 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244695418 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105233414 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120168204 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097019979 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089056124 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13741495 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096194477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106901848 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.089305103 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165941099 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215973496 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108267438 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122139493 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091457066 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095188787 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143140288 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156250396 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076336658 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093054351 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17779416 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106202856 seconds)
  done (took 5.029499201 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187698426 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100617052 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183653912 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.141240739 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138723549 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163527564 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.093303486 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257080472 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.118290073 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175740314 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128958224 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113262988 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079294403 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097606047 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077115647 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.73501412 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162529478 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111340588 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113643905 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096293089 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108298971 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10109547 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082202583 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092643326 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07965511 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.131216695 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121491718 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307015796 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158645901 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097277819 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.174571586 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117816244 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077972164 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131295991 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185747999 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124175045 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134848066 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078163775 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073788831 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174529298 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099664987 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075464488 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121428667 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.073664806 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131757997 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132704948 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09001946 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076601352 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207340991 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091385196 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090616736 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.022319687 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175876105 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089949465 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075455631 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337964504 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.1125172 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075844775 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092470946 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.313654759 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11169595 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093975992 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074874352 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095185975 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082019245 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385453698 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090484739 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.047903269 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077674713 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085136014 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093946923 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090916414 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072942628 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082926135 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100111401 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094558739 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093101665 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077364161 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092806066 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074906089 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09408876 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094427028 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096677434 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075920276 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158900346 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076673865 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112851561 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122220097 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080617329 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076413754 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129761686 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093195803 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07612553 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133274696 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076485538 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113252547 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092218176 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122880926 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091021957 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.205180678 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088685634 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108006874 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095023843 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126738145 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103715187 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078179092 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098777907 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074486178 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090472249 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142953192 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076476554 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092837539 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077425323 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108041614 seconds)
  done (took 22.653844331 seconds)
done (took 39.101289805 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348115218 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105018019 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105870731 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105187301 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104427356 seconds)
  done (took 1.520668405 seconds)
done (took 2.246527284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.269305981 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170432283 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072712106 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.183408408 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07257828 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172925107 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156120713 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.106427736 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.181752675 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088481587 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161657381 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072627427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089297791 seconds)
  done (took 2.549399194 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092365469 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113528366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081608898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093107813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091227801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093140386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108047116 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099513052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108630804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082106376 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091769261 seconds)
  done (took 1.780351718 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090833611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109608299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079268174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090876802 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091176456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091014249 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1087078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096811893 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108370881 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082968816 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09160906 seconds)
  done (took 1.765376971 seconds)
done (took 6.812172716 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090541471 seconds)
  done (took 0.808732091 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.014310333 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.039040219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120796099 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16826047 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.334038211 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210557605 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.605051822 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13453225 seconds)
  done (took 15.550500525 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.125740432 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097101066 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076356469 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093949853 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081680333 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094075882 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080538455 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095148524 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078758827 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095766042 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078611195 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093490643 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080407418 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092329822 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079426124 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077072826 seconds)
  done (took 2.203524097 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1142654 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114977622 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099730613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085673639 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09814845 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.08197355 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099982181 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098354764 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081277875 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096879067 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086236688 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099735673 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084228068 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095159915 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084709128 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101980766 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.080208033 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099113618 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.084781035 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100324477 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101753749 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082313836 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099091199 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.084752599 seconds)
  done (took 3.083489689 seconds)
done (took 22.370111329 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147572922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081745013 seconds)
  done (took 0.955530924 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098115238 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114221945 seconds)
  done (took 0.945606694 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103149163 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09298081 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131391973 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095325946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0944238 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078831707 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125325312 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094946811 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078027946 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09509985 seconds)
  done (took 1.724605806 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082771645 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098039438 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087872282 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113674732 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088773648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0964421 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083006902 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097680904 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084156594 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091781444 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087034384 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111245828 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101182837 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097871879 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09902496 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099508052 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088429299 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098533433 seconds)
  done (took 2.43912348 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078791553 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079717147 seconds)
  done (took 0.892483407 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081413968 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092178067 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081603804 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094852382 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077118555 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092337728 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076994343 seconds)
  done (took 1.332959887 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481975253 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138394837 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263189279 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081162168 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.117437078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312466581 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.093193468 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08152731 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097922278 seconds)
  done (took 2.458274784 seconds)
done (took 11.481827622 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089567279 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113091101 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109472061 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460236906 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113544785 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07536284 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.154870456 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255591373 seconds)
done (took 2.112446206 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145012996 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335903738 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12040802 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084542868 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077262902 seconds)
  done (took 1.36108257 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076073495 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079429711 seconds)
  done (took 0.898469344 seconds)
done (took 3.145498301 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077015588 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07596091 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089528699 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076032302 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089756503 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074246611 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.126494459 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075476806 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093087854 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.07611508 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.075884278 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093947094 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074165812 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090301421 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075800315 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091142199 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074292945 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073239925 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089026839 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074371547 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088998904 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076310729 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073809507 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089202092 seconds)
  done (took 2.769320354 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105989264 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09324316 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083087561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097678599 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080775394 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098641101 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08183106 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092217491 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082363752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094254613 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096175573 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081609456 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093819343 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081167739 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09360809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081254005 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098070494 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077253043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094025348 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.080914275 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097863662 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076983581 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096619779 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081542133 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.096388226 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080199792 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095229212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.076886851 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097794885 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095821971 seconds)
  done (took 3.428109744 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081702219 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073865827 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090341633 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.080879084 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089695707 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0793244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088876341 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074608705 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.074712978 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089550119 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075362831 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089387722 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.073514706 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.091619656 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.075181122 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076755106 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102407264 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074157934 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089635747 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.075142234 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09308471 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.074232138 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076906653 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091779646 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.074824225 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091552519 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07594323 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091128353 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076680912 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076315289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094671011 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079158268 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092194028 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082270227 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095160696 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075896683 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.189418319 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089702499 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.074800483 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088539001 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073123808 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073299964 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089688454 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08027033 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092542339 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076431555 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09043973 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075890146 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.073989575 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094419918 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073389033 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08985202 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075485681 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091285056 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079575927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08948493 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075240244 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073234782 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091106058 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074559701 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091689863 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076087783 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094430612 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07767257 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.092195368 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100487467 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075706291 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09415571 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079849484 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094454704 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078904194 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107192533 seconds)
  done (took 6.872602916 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079920679 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100570352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076975339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075839126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089333007 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075597267 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094979272 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074094782 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091707805 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092979469 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090885409 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075836607 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092028596 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078847267 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091154313 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077311384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101388243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072207216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090822989 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078717451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091291238 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079138649 seconds)
  done (took 2.61853045 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210932398 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100335598 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13670499 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092337437 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11345145 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108367423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081094154 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099889127 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081949523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101304575 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084363521 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097968667 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110288197 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084502069 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101192605 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085962187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097634462 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101604833 seconds)
  done (took 2.640632392 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090244804 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09299244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09955709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0941728 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07837295 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096609652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084256386 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109070176 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07937706 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093576122 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08728457 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096051171 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079981526 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093577027 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079705877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09413529 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.079660456 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093560475 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087689691 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099205326 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099774029 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087788421 seconds)
  done (took 2.746947179 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0951348 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095290671 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098313046 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097064179 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076293907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09462884 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084567921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093728555 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086360709 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09544239 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076976282 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094110093 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084396287 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092745678 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082748349 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093093361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07920446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093502551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07955613 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092130366 seconds)
  done (took 2.542905934 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116572815 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107806599 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092312378 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119588701 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091097808 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107903589 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118977076 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092022991 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108161551 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104639925 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10875508 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106816636 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103193722 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115917331 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091803549 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119190683 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118714269 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101632466 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108506054 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09183426 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121578133 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108103664 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103088105 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107606985 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09174838 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10875858 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091725212 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114636497 seconds)
  done (took 3.728655695 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077520686 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075863432 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091167672 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075229682 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09049381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07572827 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075072636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092493406 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077246668 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09107733 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077219358 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093134209 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078204551 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077263315 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09325432 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076899723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093022562 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075061001 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076115028 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090809933 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076795938 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093614378 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077131555 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090843897 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074756489 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076673352 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090778158 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074733967 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093310015 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075875287 seconds)
  done (took 3.237624146 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088718805 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101647291 seconds)
  done (took 0.952324921 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075903762 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109860436 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075332031 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080715652 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09956934 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077003349 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104285517 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098793504 seconds)
  done (took 1.481633503 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095496066 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1119342 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082704588 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105129491 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094975481 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.110464807 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153397343 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083929542 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083221167 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092248587 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093288957 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093211129 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.082826276 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094764656 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083001539 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100403482 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078982803 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104243029 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085719069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095489247 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084137828 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105107714 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080721796 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.091551821 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079114773 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104289442 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088159583 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095694913 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081875899 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.104029354 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084264961 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071709205 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099283631 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083152413 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095044621 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095753096 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107247314 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080828173 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103062127 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0831168 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103808363 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076994454 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101349048 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.082884235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105298214 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083012135 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099795897 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076741005 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090809224 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080449461 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092369829 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078385042 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071896479 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102438452 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.081971195 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108439652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080169426 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.096284084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08071968 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.097506605 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086976845 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096776984 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080811419 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09886163 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08534215 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.097854232 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085587171 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092572248 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071755119 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078755021 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102855138 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116785132 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087649764 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100180119 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084131439 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094966015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081842266 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100119041 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085000823 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102896451 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082399999 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100846381 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085450779 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094057709 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080823696 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084560353 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097046808 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.080194251 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092406396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093424213 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097167029 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078417719 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.092195086 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08688114 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.097604112 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081954494 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.091426184 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08624214 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071970118 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099242548 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082908502 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096453934 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.08686953 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099759759 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084633331 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.102772528 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087935823 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093992673 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080742071 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090814034 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082601325 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097573511 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084526343 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088207428 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081895048 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080531646 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100016516 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101532617 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081055548 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082536974 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102836931 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.084681289 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09824752 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075606046 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097636865 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082751794 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103216273 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086178827 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097220862 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077087123 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092774087 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08253013 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098907517 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08348964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099557033 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081643091 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072228389 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096643353 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082545531 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10381192 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078148267 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095359259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082857439 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095377908 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081701542 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.100645984 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080365319 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.093771448 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.082466759 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.096751381 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076952084 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104149952 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081180639 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079935465 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09859462 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086272656 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.097957594 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083229614 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097793058 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.083195998 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100603253 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076801814 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094200267 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080534534 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.104242827 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080687317 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075867522 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091981133 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.083945338 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093344323 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081757948 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094375486 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.079850118 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100167527 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079393093 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098248396 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079646924 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110207309 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091300437 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100073642 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08410628 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.104959538 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083000978 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096484591 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081982267 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083283247 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099975745 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08558764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100945495 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083297261 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097253112 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07447865 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101178929 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085476834 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094763919 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080031099 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093891536 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083214928 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.102516659 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083389246 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100456546 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081049677 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078426616 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104047991 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080907913 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098916279 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077797158 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100653666 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077727719 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101421299 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083734121 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.104769062 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081777704 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094440307 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086748784 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096961189 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084354655 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09408466 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.075695913 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076919919 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101951817 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081430073 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097848606 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072932373 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10318534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086434291 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095740515 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.077228245 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099109272 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087938875 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096450476 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081824642 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081318726 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.101105386 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110663825 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079030881 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080813384 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.105946206 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082671065 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089815036 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084514928 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098048322 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077174031 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098424085 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079831549 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098811032 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084983051 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101244891 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072180164 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.097906972 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080880603 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076638951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094372122 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085508564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099644784 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080812754 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104776768 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084572453 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100907238 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082532015 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100006086 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084043132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100866225 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082024884 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100405309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080552884 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094361054 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082282112 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076875754 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096132457 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079451598 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100122235 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078963571 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101084058 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082384007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095740398 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083149224 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100552633 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080223202 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095971002 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078127242 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082690152 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096415093 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07835951 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.098222227 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077049222 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103709276 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083056267 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104444504 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079731656 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092030985 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084461283 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098378392 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08489533 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083684937 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101366822 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0809033 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099957268 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081474198 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105764825 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.076254527 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.106570351 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085481199 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096793004 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082422874 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09617464 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080832351 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.094342938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.080820416 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10128279 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079699487 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083179915 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101074225 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081901442 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095794797 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081086592 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101581397 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07912772 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102895154 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074047755 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096320989 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080351136 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084093558 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10543729 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086927006 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100014693 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081249132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102088173 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082329365 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092930651 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087108317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103173569 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083578737 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105512768 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.077970803 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097839086 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089743606 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089930402 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080977461 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079377526 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.094890712 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086991121 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101740174 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09609611 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095908394 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078767346 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092472459 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084888475 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098790391 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073864844 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079416204 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09882326 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080647614 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098828133 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084158911 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09932805 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084659731 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103901701 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08163801 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.098425921 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084876019 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.092518067 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078650394 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077354583 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.099399749 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083666607 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094243508 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076086631 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100405258 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081340502 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097351602 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084446023 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081371068 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106350769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082583942 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101203315 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090878921 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094152238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084266875 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104096898 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085694396 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098801171 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086491934 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103734433 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087864569 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108040019 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086200097 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100311193 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086352459 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100959443 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085729132 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08595338 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104538993 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080857504 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106017597 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09053708 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101523288 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084280898 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099166282 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082509936 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10538154 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087613102 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102506598 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090254562 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10257629 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084607908 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088649525 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105458906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08566246 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106738085 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083495108 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108405767 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080171602 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109194539 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081937948 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106747173 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083526905 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09786432 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086484226 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102806753 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085711389 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087477822 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10652877 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080425496 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099759233 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083491414 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102292132 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092110592 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108246747 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084922586 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104031925 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081371059 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097444354 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087796589 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078634335 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102427045 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084914067 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106680944 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083605703 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100840713 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085174752 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10814708 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088559151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105556304 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079579824 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105525074 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087313265 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102622756 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082973032 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100257801 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088564586 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106415166 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084227864 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080800091 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109031843 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085606563 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106805679 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082877713 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101331919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081631726 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098908371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087462758 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103568763 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0895589 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103193681 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086530306 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110507974 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081903427 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099525926 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091408636 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103585875 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088763416 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077277925 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.1000184 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084829147 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103037214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078235634 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096100176 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.076202184 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099285542 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079244362 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095037884 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090052868 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.104327219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082080827 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099200833 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082967692 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077643785 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09605131 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079444944 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104036369 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081268382 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.106744797 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078701786 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095749243 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077992391 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100242179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083033996 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081878476 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095153333 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077417652 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.095818722 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.081951905 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104459884 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082456863 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101051692 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084195105 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099784302 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080554917 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105625449 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076656585 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083505529 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111643307 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086464742 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101147947 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087838161 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109504231 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087795853 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099456775 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087569672 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104106188 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082177869 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106576609 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088773817 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116479392 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086639248 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100887029 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085820703 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104835241 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082035378 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108499763 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089256988 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106163627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088740025 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102279333 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090835662 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084300011 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108629304 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0842233 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104471061 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085268581 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101059647 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084927079 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098791456 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089055483 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106534946 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086657375 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107506703 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081105715 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11015993 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090963442 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104403107 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075637213 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079285123 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097713296 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078142327 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102973749 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078277113 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099097064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081640932 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082542522 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097742061 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084580372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100617607 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084106341 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101063371 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073868753 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09945429 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.082502253 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098372309 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076370226 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083023586 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103498846 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085262193 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107045306 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079449118 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101827221 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080921626 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098236403 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079272184 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.103837449 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081992022 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09967564 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078819151 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083340399 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104083612 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082587038 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103181929 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085827171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.100664958 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088643639 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10437455 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076580943 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095476626 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08625498 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099054061 seconds)
  done (took 55.082847148 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145177174 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085852465 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074712715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094551602 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120644512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079910166 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092289388 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080579348 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097104313 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089690052 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092564477 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075262975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116014761 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123557238 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118503362 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090323203 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092577302 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0798025 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092620052 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08067745 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11487755 seconds)
  done (took 2.84465818 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102748981 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111878315 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110555136 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09699595 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10527209 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.110932339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092043127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112696382 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115671777 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089418596 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11627581 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111594205 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087748601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106916015 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087773115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108640928 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115563992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085538164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11451243 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111709299 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091833547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111492596 seconds)
  done (took 3.104981836 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0888177 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08331513 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101772825 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074696894 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101017299 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074138466 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105905879 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077410725 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105529301 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.078932122 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.077696248 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.096996261 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083834331 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.095525724 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.079387101 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.095906326 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150626621 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.088490929 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100977945 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.084516298 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.095797906 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.081962918 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076880233 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.100465262 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081868064 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114688984 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08729526 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.106066853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085593633 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.100015879 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087181898 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079999313 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103121619 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.082748614 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.100548711 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.081949168 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105058487 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086317007 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080629247 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103519129 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083146392 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09937403 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083853246 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10160891 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080916027 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.095039145 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081777019 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082825289 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.093573308 seconds)
  done (took 5.300818304 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114549599 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131630115 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102334699 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145159562 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117763008 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091820083 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103982648 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142719159 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078083289 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101811709 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.100022541 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117431681 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104009083 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088517287 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106878818 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083443651 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104987814 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077924762 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107422142 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09893277 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090019912 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106557352 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097795149 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11565444 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107637863 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082231449 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099155189 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08924895 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114333396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109027719 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089305184 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10962807 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118437255 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.08687359 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098985941 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08588779 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118865378 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084437955 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104992128 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077240409 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105245192 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107471094 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087618762 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120274 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082870371 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104665261 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103006818 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076992528 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114662679 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086672072 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112705412 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116842562 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088377759 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103401931 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089349464 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117143355 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104101349 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082102643 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106986021 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095771014 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098072915 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087811365 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116683068 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104799694 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092663099 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117647455 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10516296 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089016343 seconds)
  done (took 7.877848043 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113041921 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108103268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100209464 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119079386 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108862072 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088147674 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108028203 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088274856 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108569227 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115474244 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089621202 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155053988 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106155157 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094757722 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111757697 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089060273 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108564154 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08853204 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108640829 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088675818 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108402763 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119814493 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088133268 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118448055 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123252602 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085809158 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109532026 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089254307 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118907926 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108745276 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122579136 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089319822 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109029087 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099678013 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122776633 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108373456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08307583 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11240014 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092829492 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114097419 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089719888 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123347384 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11389196 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090358009 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113130334 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092837913 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122943432 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123813783 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093984794 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115827476 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109873642 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100234919 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109039888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107754266 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1008253 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127011828 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119816576 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118581996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089339639 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11914378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119279626 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107103587 seconds)
  done (took 7.456136339 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112770597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114489203 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121115694 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076657034 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098661156 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088758803 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098045654 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.078203793 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114819617 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094396617 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11766223 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109268119 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092872213 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117352139 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108756234 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092712778 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108505662 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108698281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095828035 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10831917 seconds)
  done (took 2.886125648 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090208287 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121111022 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081287714 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110153761 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083883405 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10993501 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082845267 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104281923 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081800985 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103948602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094260887 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113592004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100998593 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088622327 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114126347 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.08912907 seconds)
  done (took 2.397371205 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09476093 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123586703 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121869888 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.081134934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099201152 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.077714013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083679951 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09636349 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07657113 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118297735 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.080770149 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108260778 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08357395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100045127 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07777009 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107409161 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076773187 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.09961249 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.083606364 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120389326 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092894973 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102283042 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083875721 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103729284 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100759411 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087287912 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100784478 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.078335541 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09950617 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085334911 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100714296 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089521718 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09714543 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.080130963 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09869145 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.079191381 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.083962763 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105510108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107517552 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084396227 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.078891444 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102099901 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084455326 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102659741 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076462082 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104720831 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077033445 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107927643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.079425193 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101698076 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084233256 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10501376 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.082615004 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11317426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.085492514 seconds)
  done (took 5.991890047 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097101881 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105268151 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076540964 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078746574 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10541557 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083030437 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106270862 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083708663 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103704665 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078434416 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10417753 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086035124 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103058867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085107903 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103185343 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085096662 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097368295 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083599793 seconds)
  done (took 2.500909095 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087532405 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081059316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110455912 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081386412 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101600189 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083167078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097755549 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080050508 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099532569 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081650229 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101072161 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.083991458 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099419504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.084239624 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080964395 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102575204 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083315502 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100388829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081895353 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098111402 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083172777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099713257 seconds)
  done (took 2.840478479 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118274689 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121593238 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.089455064 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.2077532 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122152702 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.106892224 seconds)
  done (took 1.601405182 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106724187 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137499653 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082134448 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104898929 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093776954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107251831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085836697 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106525556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118481713 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120039467 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086537681 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119235026 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097757398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116850047 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114290212 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094165502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106484354 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105454474 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083889918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127703324 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086374594 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117943297 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106180931 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08658832 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107292975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09605808 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118103158 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12092124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085644813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118671581 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1137804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086483042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118971377 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120520963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08392015 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11881317 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105654755 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107880382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114087584 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117073146 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084130209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114610431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097932414 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114155743 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119893859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086444274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113989538 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106512704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086340341 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134953024 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114698301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096628672 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11434561 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118804742 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09795465 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134324435 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119720213 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117720036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113960087 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100087782 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118286181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114916208 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096172629 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120444305 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114666049 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116274849 seconds)
  done (took 7.954707341 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120992504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104026364 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086254738 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12180991 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118793328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086241966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106408456 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106715735 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087615515 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102751288 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150872523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087182939 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117155766 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117300946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086353933 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107081357 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086992502 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118080765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083382939 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134717853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106743071 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117612306 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097208899 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117704372 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120895869 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113077219 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087195163 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10664119 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086799705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106866776 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093058574 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107022608 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118348269 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083663894 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117387601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086478188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107309328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113576007 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086812444 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114715633 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117675399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107996741 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107819715 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08641195 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121825158 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108113101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08684633 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104372515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086575105 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103685022 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120635593 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100774684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121733992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11812897 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106437629 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087204721 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107610397 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086916226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107155437 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094676167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117152316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107453141 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135233028 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087099921 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107151921 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098155293 seconds)
  done (took 7.794936536 seconds)
done (took 149.397306784 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098196044 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134864561 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095373989 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164312873 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081310172 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135963899 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11453266 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116545449 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082346239 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080942524 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103291592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083102382 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167153373 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082119511 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101379475 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085011689 seconds)
  done (took 2.566309791 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179364935 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.290926717 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100113604 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100919695 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085654222 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103537432 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.080241068 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088968492 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103948632 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081919779 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102633984 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.082540188 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.101418981 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.081834374 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103251016 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081989124 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080775248 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10264925 seconds)
  done (took 2.805804079 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110062781 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148150297 seconds)
  done (took 1.108015907 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117706721 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174121472 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271119916 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.151659039 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132832336 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096727084 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152591785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123758511 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201021751 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126942927 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125222316 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089516013 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136807749 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092099641 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110806221 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088110053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.136841368 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110303312 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091274481 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111231446 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115256544 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102970724 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092760706 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110221447 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186265983 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124700071 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.081579442 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080722704 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11152013 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111285115 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.089215132 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116909409 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.104012715 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167297728 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095333488 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.148677352 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109847145 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08763528 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11257701 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.087135823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113881276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113266744 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.097585638 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110273931 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.081278984 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109366765 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084551949 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081628049 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111075477 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.090400069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.111293683 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108663242 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148200771 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.090698048 seconds)
  done (took 7.178311447 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.8089075 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152850434 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086557654 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.905514836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134242116 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100130724 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.799320978 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133090509 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229662987 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.821203541 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103347218 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1187619 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20580449 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.24706414 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898324461 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30801466 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.688124111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.345066722 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137436517 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146883314 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092977272 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133454305 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127737601 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.403529816 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109790327 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086771494 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113434516 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115900314 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158472759 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087435022 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110633713 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174903038 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.239298629 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20414395 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090540155 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107144337 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086413878 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163203437 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267483224 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214810176 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151640338 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104494941 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085863285 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118694465 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126728227 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082805902 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158193813 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.167395115 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188454768 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08967637 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117722469 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093877906 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116968628 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158660558 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105713133 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293958781 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318001423 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114153657 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099217092 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128984337 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24676525 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108854517 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22408371 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116110628 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21883771 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089758356 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800568849 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164346141 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109775464 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092229642 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113505569 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091619143 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116128689 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160313289 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386484364 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098279037 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110694896 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084899411 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23914184 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089748515 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110840687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161145259 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087706505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116853061 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098372294 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117072539 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165166453 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.223254523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118325392 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115530938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089041434 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119724724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087248402 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212071881 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226299628 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161755993 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.216415887 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116700865 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159204237 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164755231 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120461023 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167764027 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117290088 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099834693 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118056169 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215386222 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139459682 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087286776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114037378 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093384095 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141113306 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088843108 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114565974 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162054367 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479481106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160339181 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082682575 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111238213 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092671888 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156984436 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113885966 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235732998 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115364474 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160188866 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113993207 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082568168 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115222875 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160319571 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118826855 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093459333 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118624794 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092172079 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245067176 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194673699 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119162244 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218279822 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176590173 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115298522 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167886925 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115997039 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163466038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094203749 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116853629 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0874237 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787066744 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118884143 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092433474 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112253327 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181180199 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085815495 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0859364 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1073426 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082291008 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775291123 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088448851 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105937012 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086283526 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114732295 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09320854 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112902831 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090313874 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179302989 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207025598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117401425 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114418539 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085972347 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158191982 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110367948 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086083917 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109736416 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087619635 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116836987 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089919296 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108992346 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168809414 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156157703 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219441678 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581791793 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113809954 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087644555 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225834013 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085250865 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283816027 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115683196 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202813475 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189147717 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084055609 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306162707 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164783856 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184093282 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089346373 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166872539 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105806563 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091331459 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178223294 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08635391 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114511864 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155236023 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098955602 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119845611 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922037757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086370559 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222961796 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105719821 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164968105 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088204786 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117536108 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289411156 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086237275 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125063171 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158479683 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110963035 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087400728 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.726419661 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110470543 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096891446 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114843128 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221199266 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162616036 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11552823 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09309981 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118117887 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159715198 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206645906 seconds)
  done (took 42.63280583 seconds)
done (took 57.137945649 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27484076 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211093271 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261283829 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.162670041 seconds)
  done (took 1.863298463 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174719427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121575924 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141404899 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101954789 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.127277266 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101688023 seconds)
  done (took 1.644159747 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361390413 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269225695 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235402524 seconds)
  done (took 1.745178486 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243842302 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.264083951 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.323753594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.394041692 seconds)
  done (took 2.205016093 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202029569 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122615789 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.097276222 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.13558522 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.142143489 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203072518 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137484329 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.148849498 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104508166 seconds)
  done (took 2.220165221 seconds)
done (took 10.56019528 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.330229735 seconds)
    (2/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.241924704 seconds)
    (3/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.154376539 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.18936525 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.145874555 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.234718251 seconds)
    (7/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.085162258 seconds)
    (8/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110571133 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102273953 seconds)
    (10/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11043681 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096643183 seconds)
    (12/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.244114242 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.08954609 seconds)
    (14/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092688635 seconds)
    (15/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.149626237 seconds)
    (16/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.208747366 seconds)
    (17/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117400379 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.227059758 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.174758286 seconds)
    (20/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.247610559 seconds)
    (21/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.130774215 seconds)
    (22/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088318403 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113930743 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 0.231350306 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11227097 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.157495453 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092479412 seconds)
    (28/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121415826 seconds)
    (29/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113800708 seconds)
    (30/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.126346194 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.248394381 seconds)
    (32/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200039185 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099051931 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.228216509 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111362693 seconds)
    (36/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.086123918 seconds)
    (37/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.118358268 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.207266298 seconds)
    (39/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092771949 seconds)
    (40/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.234789247 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.089009827 seconds)
    (42/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.150256042 seconds)
    (43/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.134662938 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09042859 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11202358 seconds)
    (46/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09085878 seconds)
    (47/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192519435 seconds)
    (48/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.229946139 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109918581 seconds)
    (50/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.160433516 seconds)
    (51/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.10290144 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08080623 seconds)
    (53/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.08940259 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131196048 seconds)
    (55/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085104187 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118993807 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088267351 seconds)
    (58/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.112675004 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.184911415 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159957214 seconds)
    (61/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120818819 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194853705 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184526967 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.070831982 seconds)
    (65/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18577201 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151241189 seconds)
    (67/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174746883 seconds)
    (68/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.155481982 seconds)
    (69/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08994601 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.135493868 seconds)
    (71/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072769055 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.106236402 seconds)
    (73/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08770529 seconds)
    (74/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.147918436 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.097267109 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166580104 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116860692 seconds)
    (78/286) benchmarking ("sort", BigInt, true)...
    done (took 0.239961203 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08545376 seconds)
    (80/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068516024 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104931051 seconds)
    (82/286) benchmarking ("sort", Float64, true)...
    done (took 0.234946504 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.083014459 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0697815 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.093674032 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082160329 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.188783923 seconds)
    (88/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080726188 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.187253218 seconds)
    (90/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092076348 seconds)
    (91/286) benchmarking ("sort", Float64, false)...
    done (took 0.151418487 seconds)
    (92/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119556326 seconds)
    (93/286) benchmarking ("sort", Float32, false)...
    done (took 0.177441059 seconds)
    (94/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087918085 seconds)
    (95/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.175685448 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129516242 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11035429 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105426939 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.082096125 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114570536 seconds)
    (101/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095521287 seconds)
    (102/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081679072 seconds)
    (103/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.106969401 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 0.225667204 seconds)
    (105/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.240574193 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088718445 seconds)
    (107/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.095886953 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178933228 seconds)
    (109/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108240624 seconds)
    (110/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.069704546 seconds)
    (111/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106134045 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.168937321 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18688933 seconds)
    (114/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069612051 seconds)
    (115/286) benchmarking ("sort", Float32, true)...
    done (took 0.23700542 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.184075484 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116868753 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092114012 seconds)
    (119/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223031216 seconds)
    (120/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11689157 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089569322 seconds)
    (122/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118231183 seconds)
    (123/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.083633729 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111551135 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090028161 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.094973988 seconds)
    (127/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070696133 seconds)
    (128/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.080644475 seconds)
    (129/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.105797453 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072732814 seconds)
    (131/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112010123 seconds)
    (132/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.138109316 seconds)
    (133/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.117686553 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.090587501 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085117752 seconds)
    (136/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092359396 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082012855 seconds)
    (138/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137180783 seconds)
    (139/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187174648 seconds)
    (140/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095239208 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105112305 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089945441 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132828541 seconds)
    (144/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069984626 seconds)
    (145/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071438702 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.092948251 seconds)
    (147/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.126660948 seconds)
    (148/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.092728497 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092678827 seconds)
    (150/286) benchmarking ("sort", Int8, false)...
    done (took 0.193064514 seconds)
    (151/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11445137 seconds)
    (152/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131287956 seconds)
    (153/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.107684455 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082162025 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184605865 seconds)
    (156/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187382416 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082386559 seconds)
    (158/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.220967437 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070497587 seconds)
    (160/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133439177 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116668173 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08314073 seconds)
    (163/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06951333 seconds)
    (164/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134011698 seconds)
    (165/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081366241 seconds)
    (166/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.149894715 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173559888 seconds)
    (168/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128412261 seconds)
    (169/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.096118068 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.108693547 seconds)
    (171/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0962213 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074170997 seconds)
    (173/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.117825429 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090240264 seconds)
    (175/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175419412 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071343271 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.162262928 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083946985 seconds)
    (179/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199818643 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09474029 seconds)
    (181/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15916309 seconds)
    (182/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185063149 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071933159 seconds)
    (184/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119518997 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072947287 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112380042 seconds)
    (187/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.10880479 seconds)
    (188/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071073514 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105354465 seconds)
    (190/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143881566 seconds)
    (191/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110457394 seconds)
    (192/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186574743 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.229267326 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.082350811 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.105703645 seconds)
    (196/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103013889 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103144619 seconds)
    (198/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.126403562 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116240026 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090940041 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104644854 seconds)
    (202/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071163743 seconds)
    (203/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069799246 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096513111 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071014675 seconds)
    (206/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078989067 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129516663 seconds)
    (208/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070544162 seconds)
    (209/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.10764279 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082576582 seconds)
    (211/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.093080203 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.072815131 seconds)
    (213/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084467138 seconds)
    (214/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13447615 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.08097211 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113059219 seconds)
    (217/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070237118 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.104685134 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082673591 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.118352578 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093706549 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073490138 seconds)
    (223/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.106525362 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073679524 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131864111 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111674841 seconds)
    (227/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.104044759 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072328008 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095900108 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083289766 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075611102 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106675968 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084289296 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176371759 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.079212668 seconds)
    (236/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.097420457 seconds)
    (237/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088991201 seconds)
    (238/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161211559 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084255565 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.110186323 seconds)
    (241/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082038219 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105726678 seconds)
    (243/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085607392 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081680125 seconds)
    (245/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108471831 seconds)
    (246/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080339899 seconds)
    (247/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.096908783 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089226391 seconds)
    (249/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081321205 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106317747 seconds)
    (251/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138703323 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.115548573 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072965015 seconds)
    (254/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.104608079 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110702014 seconds)
    (256/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.096020487 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073428804 seconds)
    (258/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.084851949 seconds)
    (259/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.110233867 seconds)
    (260/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081455489 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172343686 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.084558871 seconds)
    (263/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.172637364 seconds)
    (264/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.094788165 seconds)
    (265/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072116345 seconds)
    (266/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.070598596 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112816601 seconds)
    (268/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079819486 seconds)
    (269/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.101191266 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083642041 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.091362832 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.120189123 seconds)
    (273/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.081100695 seconds)
    (274/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.106310045 seconds)
    (275/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081482327 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114328464 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096816317 seconds)
    (278/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070633101 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105621917 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.081213351 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.094326069 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.144974979 seconds)
    (283/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.110273865 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081140374 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10903796 seconds)
    (286/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070817098 seconds)
  done (took 35.466184404 seconds)
done (took 36.356503916 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096648606 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148440094 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092290098 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134719481 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.09647722 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120924969 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090514143 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119189597 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.095634053 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121405257 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095238967 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096117338 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094306538 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117831547 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093419258 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138726524 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096602781 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089858212 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109496563 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082004715 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.110305225 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.082222399 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.107680809 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073292916 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094368772 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113727097 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089687003 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118805742 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08266387 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.106768616 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.081726634 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11384218 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.082779689 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096419798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112681333 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08609945 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118758187 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.092824735 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108136526 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083297119 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115167243 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085982249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090359347 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.113587722 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084308478 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105219464 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086868551 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121422735 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114452174 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112113838 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091129636 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.117548436 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093237612 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.113975952 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.082370639 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08633139 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.106875511 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114561177 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110784643 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08780731 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11522532 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091045851 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.106345955 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.086661811 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109700591 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.093929654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094248395 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.105329289 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092945657 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.112475249 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082455271 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11087201 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08245449 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08280695 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.116404349 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093597406 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106083855 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.084155091 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114230755 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088019252 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105111362 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086185092 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.084520918 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108334682 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085266048 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096462835 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.082786631 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.088806454 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106400243 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086398212 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112938256 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089624992 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.10824713 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094701842 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082618477 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.105869068 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083876108 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106386164 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085041675 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.082204382 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106130787 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08622927 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115162489 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08429754 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.108085593 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.095422727 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.105906206 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090604035 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082118516 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.106210557 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099305072 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117081401 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.082720206 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112023296 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.082978892 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.085734988 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106645571 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.082617049 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.106822579 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083639762 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.085140328 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.107003649 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086499431 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.108097926 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097710324 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.10700815 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.082574893 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086036119 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.10676031 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.088595962 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107502206 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08289389 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.108694986 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081551663 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086051915 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107050759 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085338554 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110671377 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086666248 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107541297 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087605021 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088001968 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108555727 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082301194 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.105584633 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07798855 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08857758 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109084014 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084568256 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.107227484 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0846365 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.10645332 seconds)
done (took 15.902809408 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.083744791 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181378878 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.142741427 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.117081871 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129359353 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083958359 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118663535 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.139839889 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.08578227 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141155148 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106894839 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127669126 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146401772 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.082374797 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083421376 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111443792 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.084396535 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.12365987 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144484655 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.105153666 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141649567 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.082501208 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.137844811 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130995226 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093175428 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125121084 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.084119818 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087379421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110468127 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109341412 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127859716 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087519996 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107510988 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105702361 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125713023 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091703716 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.107862533 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090825757 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107471838 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.083651484 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130110096 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105343358 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113466983 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.089924586 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11257372 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092109915 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.108590482 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.092675452 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117864767 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.088165312 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123343122 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.112374977 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11107386 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099592937 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106808749 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094290009 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123876397 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091297097 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108670038 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09123152 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1076284 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.086972776 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123352788 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.108504688 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112214534 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098780921 seconds)
  done (took 8.164921253 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101906138 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137571372 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10212736 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126825572 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.08327795 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108029753 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084297088 seconds)
  done (took 1.693195096 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085089358 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.12664316 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135396027 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134132259 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107204107 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.135466373 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089658148 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108348031 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104656255 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.109571973 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109289781 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149977379 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085472992 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117070936 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.112095393 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109351099 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111407349 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109755629 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088429616 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136834237 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087782518 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128101516 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.086926796 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.108582378 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103156301 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.084526235 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158159372 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113672824 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082840311 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.087751278 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107515962 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149787544 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102414781 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118215955 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084789247 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128476329 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.103535584 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106658403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101644585 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114345307 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.102795718 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085038473 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110572541 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08365629 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.113833477 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098661138 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112653221 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08561558 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087931185 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133088071 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085392206 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127402197 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08507159 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113612025 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086593279 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112624592 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.094874217 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110735887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108954838 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083145991 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129838611 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129797375 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102352719 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129132511 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08780703 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126861401 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102814055 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.087338547 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111529362 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.08845594 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129946335 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.082426559 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112116866 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099288276 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111683722 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112540502 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136489195 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086764456 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120193665 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085238128 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.085136376 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.110406464 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112090672 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113528906 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084684395 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115035636 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088625291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107281128 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084624756 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088980484 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10700774 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.087012492 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112891536 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08565148 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112031466 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106317427 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111090672 seconds)
  done (took 11.283423895 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.086976834 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086005055 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112883724 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.08646972 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111311825 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08594248 seconds)
  done (took 1.524282381 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114899732 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111233505 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.099681117 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114427019 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.125719758 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13704409 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110328341 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119615972 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.127295023 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.097550324 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138746491 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111683315 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141650337 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09033095 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135594511 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.089189239 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135642445 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090956796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12101495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09056982 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.127121005 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09176525 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115489238 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.104949634 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119480315 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090536531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115568807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097210296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121338409 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095468196 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115218904 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095438572 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.115413013 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119844587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110501187 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115120091 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090481147 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121982449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092909088 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119485879 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11256783 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116309038 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.096951344 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12184904 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095478073 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116309085 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09663943 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115886906 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110293038 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121677927 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096808422 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114632421 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095168837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122913341 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090978332 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120712462 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097362351 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136713226 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091367441 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117031063 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.087619285 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120616951 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.094509905 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120535857 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095456619 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121238913 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115213748 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091505427 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090873629 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115060491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096811647 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11327656 seconds)
  done (took 8.891122888 seconds)
done (took 32.49568383 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.678822664 seconds)
  done (took 1.633802362 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820806328 seconds)
  done (took 1.776289186 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.54439321 seconds)
  done (took 17.528624774 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.455699153 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.530633517 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.965995809 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160725009 seconds)
  done (took 3.069837827 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952052753 seconds)
  done (took 1.926467477 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280093716 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229776555 seconds)
  done (took 1.47328525 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76067154 seconds)
  done (took 1.732958223 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.426829923 seconds)
  done (took 2.396793046 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321832625 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157093946 seconds)
  done (took 1.459327177 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567633876 seconds)
  done (took 1.544901109 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.695212308 seconds)
  done (took 11.671631678 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23917307 seconds)
  done (took 1.227184472 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288851887 seconds)
  done (took 1.267018565 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.4784614 seconds)
  done (took 4.454085097 seconds)
done (took 54.124235093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095798151 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098328359 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122678572 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094911383 seconds)
  done (took 1.383203237 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101403362 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117163873 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100944786 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.115953358 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103094503 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116584356 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095320715 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.127904429 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091985626 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.117217195 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.092373949 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090935881 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119524228 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119093017 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090057511 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094814541 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124374299 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091769373 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123067047 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092692162 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.113660678 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094021031 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121161267 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.090318468 seconds)
  done (took 3.530950044 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097597712 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090745356 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117958107 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090088317 seconds)
  done (took 1.378655322 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.097400604 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127106619 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102493109 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.121641095 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104194743 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.128066576 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089762228 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088451562 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11531559 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095879836 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112275838 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110384006 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12725181 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.096007131 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123476598 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085829609 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112502857 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.102394993 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121708975 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.096805914 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.114311886 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.096511602 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086622887 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12915686 seconds)
  done (took 3.568719282 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170321894 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124828459 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.110287554 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116841586 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.130611368 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137053089 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08417842 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136524514 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083476843 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124921607 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088344806 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155210813 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123584055 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08465575 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083893499 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.108935017 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.096790009 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.122324368 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.087113274 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124696892 seconds)
  done (took 3.279111901 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09512514 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087905597 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109881257 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087260924 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120731845 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091988055 seconds)
  done (took 1.576317888 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093497311 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085868765 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115634766 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087462801 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116255003 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085373649 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10951829 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086613564 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085508031 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110203743 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088137686 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109868702 seconds)
  done (took 2.162027127 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507229892 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115046456 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088224338 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109313325 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096569626 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11152454 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101655826 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113349425 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113654549 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.111167302 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086117769 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08794535 seconds)
  done (took 2.624029942 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198494322 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09629519 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254841837 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344802181 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153846762 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159800921 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273150658 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162485547 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17428093 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137162078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191227698 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153162419 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125015891 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170892397 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135751927 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151383705 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169190701 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1855478 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119225706 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219835803 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130613125 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162465367 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177001756 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147029284 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135603499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155866402 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092835149 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125661512 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167640997 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164324964 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169072135 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119372813 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136962963 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.453268382 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201041894 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169910446 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277752061 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131026414 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176133453 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13873213 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242550416 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109826965 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208453461 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124176243 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128761297 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174255443 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314343492 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.171688621 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129299802 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138163841 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173928325 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173362115 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171617976 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110631862 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318923327 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12003721 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139338825 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179939441 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176637606 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185411193 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161254748 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.1147688 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180794707 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178393314 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173377929 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113151253 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15891613 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121852626 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166291737 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188359069 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16850017 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15709791 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177176571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13398034 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158995101 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166406268 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149935135 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144761957 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15380729 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117842889 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120753526 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134710447 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12678277 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164861249 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121265298 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191336446 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130384673 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142998093 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223894793 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127825204 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155491116 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158255014 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157644932 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144015231 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08720422 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142847235 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147506777 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126186832 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127767987 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152323451 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138398747 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099037196 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148545108 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094427129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154132409 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124192574 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32713491 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15861695 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.121790443 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133380565 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14341371 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146590831 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164278332 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179835715 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104109182 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129657936 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189163308 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154277345 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10397394 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169956986 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176196981 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149090627 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135347322 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162835878 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182813004 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111617589 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206867121 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112990968 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130716972 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13689777 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128277109 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152546578 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155617349 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129499443 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12166741 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213183953 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09597906 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133854262 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168454884 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098391116 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125995654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112141941 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13336276 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131799654 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111470398 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133418989 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151853096 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127642982 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150263766 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148073454 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139309781 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182767912 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104738363 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.145250576 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143307318 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.091196363 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166747948 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180241383 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126987238 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189277879 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159024436 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194000993 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157162554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128300235 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172500145 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099354727 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116521945 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159345655 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127202657 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156064562 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17608994 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214087567 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159142812 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119530052 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14561125 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160472345 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161385956 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145909021 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107195534 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157465756 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15272533 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092025287 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122791464 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097908785 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137702204 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128513588 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105989141 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172672678 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160019457 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209239794 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130789153 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138232412 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178329081 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123289872 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130051238 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.391644063 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138126671 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178030214 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176996445 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161658507 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136603071 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138611615 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117885405 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094181287 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13077874 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159255787 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105772521 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13200237 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137221162 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178013864 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324469276 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146152696 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22414384 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134455386 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213398469 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092437354 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165214086 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163806408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128286182 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170175067 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105642148 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.143557836 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175232179 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140773171 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178213666 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15713915 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161369606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184814405 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145370485 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101843822 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144629777 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158667207 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108143465 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16256923 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143036006 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132821156 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30969256 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.09624952 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123495031 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170423112 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141956124 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166976373 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115764231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158631476 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12422066 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138736765 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153852526 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116410404 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111631928 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326343316 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176639064 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142585627 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310766521 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169121422 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127501051 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306113963 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185838005 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.357572409 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107472758 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140336384 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156592624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156408817 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315803714 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174275521 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142288995 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172561383 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126201082 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133177055 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132701487 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118684214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147222826 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139298244 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102384659 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149059616 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13154092 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170340284 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111275907 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153522656 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158260464 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147409964 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113517767 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141527855 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194262424 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154282586 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169298053 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.116478744 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159258158 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190376924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122320973 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125763154 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.097858165 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173971621 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129864209 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127152258 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.206187148 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193049498 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156157088 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159115458 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11015539 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115108614 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128129476 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145226524 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193261527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138355998 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131644507 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182798122 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112907677 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128836881 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15628171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282839299 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142812763 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170168644 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083621296 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274437759 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124896366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103519337 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158345408 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167825615 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133710932 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.142661946 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159614335 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139497735 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131277395 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134807916 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18552909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198218893 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16212447 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165023879 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130901178 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155034026 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314386591 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172017259 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142188158 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104491713 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158992539 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178278957 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180278906 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130966749 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157740239 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130072944 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155640338 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161258773 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13343281 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190954489 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126946336 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132337843 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136591042 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121366827 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127658011 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.207881621 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103959898 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166788743 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154015973 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128800813 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096865423 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147677912 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154784955 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112840059 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122678035 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169505797 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092740536 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158892578 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173571454 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129152109 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124385782 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14327545 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133827984 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112207645 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140801246 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133655447 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.134701856 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174444865 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127534211 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172176443 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166649674 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158212581 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310889578 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137679411 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635747911 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125220866 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178267406 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116587615 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174893344 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146156289 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161287821 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158919959 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14633372 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133290741 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146006752 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229620815 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161385889 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153326555 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102118759 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140572028 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139355444 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101108261 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149422407 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158794054 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108899179 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135106861 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153476486 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139727976 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103774461 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136870463 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178548654 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118189428 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169220414 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17423288 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135951877 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161493061 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162276365 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099329356 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156066086 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167296557 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140038546 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14498941 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104155939 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131112852 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173270837 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093741107 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157254291 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155559713 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129164022 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157464822 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13096009 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15609685 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110454385 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158604141 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127312363 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148703055 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125847083 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131194984 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124791796 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124921977 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148968919 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146881453 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095605306 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162126999 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178830354 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092527379 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130155172 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277285521 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154707393 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18414498 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111687941 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133175826 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139490623 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11538779 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149471523 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155626682 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098934832 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129863213 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099308063 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162593857 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140036423 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152780206 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156216969 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34264392 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192133131 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13407813 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251437315 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136335935 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151807645 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092448316 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127203748 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111414157 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130613126 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1415699 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184676118 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175182395 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.116622651 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131029877 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122971201 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.094138206 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129336604 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13057115 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14909185 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155963747 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139451613 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084885973 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14127154 seconds)
  done (took 75.321610587 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165711349 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137285003 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150934502 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207086357 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17136602 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256268867 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214763472 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241145091 seconds)
  done (took 2.620451158 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090050203 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.140466683 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.125863531 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131358709 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113152851 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.113947056 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.299941608 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131182323 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.112370773 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118348026 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130635395 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.114643939 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.521871381 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.114315266 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.087536963 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109119888 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.112718361 seconds)
  done (took 3.639238431 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.096027092 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.470596096 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.890986967 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190498127 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174643196 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092033274 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.700030508 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09118958 seconds)
  done (took 11.781190161 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115705571 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137036021 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.1286556 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155687075 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.114427155 seconds)
  done (took 1.740960188 seconds)
done (took 115.578007545 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09450502 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122869108 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095524199 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125761471 seconds)
  done (took 1.50843715 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100752659 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073529152 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10574567 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078312642 seconds)
  done (took 1.435366559 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190654229 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165849864 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403194682 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074989594 seconds)
  done (took 1.590312233 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.110818298 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127206959 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.101764783 seconds)
  done (took 1.429479707 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103546639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097566971 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127258874 seconds)
  done (took 1.414147354 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100944529 seconds)
  done (took 1.182260936 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10749614 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136158732 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109136491 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134792553 seconds)
  done (took 1.573505928 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094329739 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095537769 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136743397 seconds)
  done (took 1.411582807 seconds)
done (took 12.985041659 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10368484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420978102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386380007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133706364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710589348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405666992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002464386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142545727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164890854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088754569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134324309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677845756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021776056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342016851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00768817 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340911907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697186022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089058291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115130674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089916692 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.01391405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090537051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087659016 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116139376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668440666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421970684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08897744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368481047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088744438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124534223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375752645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115234103 seconds)
  done (took 16.708109774 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095429346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175129326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100486727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119003828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096413948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118443301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.09289725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089401546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178731659 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117315784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105477876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116439163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092656677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117718377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109556088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116111909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089826694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116155106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089841292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089568529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136320253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08914135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117647973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088665236 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116628745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102085572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117877368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089329212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116608435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097512249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090997172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117685889 seconds)
  done (took 4.590047514 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141240281 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186555765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128811934 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124593901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170759671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090457769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198141669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144373572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18239108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088843108 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134297461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089504165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152185103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08990739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137260686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089378985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116870441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088835855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115343446 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089723676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107968416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11626782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089293661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117009901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0896042 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132400557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08934757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116631177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089263775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124256854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.093244333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116593749 seconds)
  done (took 4.933130671 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093416018 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094380908 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133144798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.104680561 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118981028 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091936387 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.121372828 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090320889 seconds)
  done (took 1.9367569 seconds)
done (took 29.250134752 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1077334 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094621952 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132299228 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102340311 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127319647 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101488217 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115872506 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100563067 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.129776952 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.097389013 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133638069 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088016009 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090065093 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116864338 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102923096 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12283929 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.101572791 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.127439789 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.102832315 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131986373 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090134819 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128918878 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099421598 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131441989 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103552056 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130340338 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.106408039 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123755544 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090209769 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090241799 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130564345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109298691 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120084506 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103902604 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122582916 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092963084 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118712252 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093435081 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131304192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101647325 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123517912 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100984979 seconds)
  done (took 5.754275948 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11585096 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14657583 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110436787 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112534067 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091581436 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.111532798 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115705399 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08167199 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112972727 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11343666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.105646018 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080122529 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110011946 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075710904 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078999254 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107397191 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082304993 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.1056255 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080796847 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079721467 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.112447445 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075953444 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082323938 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110008057 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077990126 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112976168 seconds)
  done (took 3.692187124 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097302706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103253095 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138038007 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172760251 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123577614 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126068422 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097721639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13520008 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104901046 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115873526 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091644465 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146029119 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105920422 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124193339 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092231011 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103154693 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130723292 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090874015 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122914293 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10868146 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133735245 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.098822111 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129508812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100023668 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116253136 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090384065 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121385923 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099686675 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.095994131 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125873367 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095026954 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120734496 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089759168 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129436478 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094640577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118704046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10904218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128022312 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098653645 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118308262 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096753327 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093308446 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139216309 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156425775 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090019253 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.095440546 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120147905 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099134011 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119979429 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107118861 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128414243 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089179434 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.120540852 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090289428 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089081718 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13378561 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090723232 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119398358 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101772323 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123408258 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.100644246 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121778815 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104128848 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118475942 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095712246 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089280641 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118210061 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.087935336 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141613563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095048465 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160606352 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.090140717 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120035722 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097606937 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1251318 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095683777 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117501499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104406581 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12730578 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093565701 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099459851 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120015747 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091389385 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136587078 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091376909 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118851378 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089616735 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124591836 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092167746 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089802449 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1330773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.087825329 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121229492 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.102609015 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118151159 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090109553 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123927672 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093651474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.116853263 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104531432 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122984153 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.08971806 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127952811 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089997292 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091196603 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128165056 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093473532 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117516332 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094549631 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12416031 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089429569 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120986102 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093121449 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091122227 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128293363 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096101478 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121959161 seconds)
  done (took 14.02316729 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22762726 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216665095 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187336955 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294791553 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.102435041 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.1445651 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210529145 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125447517 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119594252 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158260297 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169397466 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181982898 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139237281 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178481287 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169267802 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119073455 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110295261 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165402095 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214287273 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260131954 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139292362 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098004161 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160174764 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159078631 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133116346 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099461783 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136840727 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102966537 seconds)
  done (took 5.633783845 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107018478 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152012258 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095155732 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141170071 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116645748 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11911719 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093578526 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120324309 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103157607 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133249812 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089386631 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125525939 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096555611 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.12840364 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090655532 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128538617 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099673621 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120202116 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.09297879 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094001746 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128093402 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136985518 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09376467 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089239471 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.128555274 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.088308128 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121771056 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141074191 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089938695 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141133614 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08775441 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097433924 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132286914 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090238829 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119379652 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.091919245 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120693516 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091394058 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091558463 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116041263 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087935013 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110715577 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089044848 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133928401 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096259332 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112706146 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096824044 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12415851 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09044415 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086743264 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121139585 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092728685 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122211489 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097627627 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.120425663 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091270875 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092420786 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118111149 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096668528 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122005439 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087391773 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088088336 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123451386 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122634171 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099070217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094333332 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.116927137 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091421431 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.124109869 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096930529 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119865752 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095824634 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086805006 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.120968383 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.091463971 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126120252 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092828326 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.11655966 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089881087 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089154846 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107895807 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.089761099 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.10624801 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093504704 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.087286334 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.118950571 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091779713 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127565554 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106379778 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12037898 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097856423 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120547566 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088876594 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120952631 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086850629 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09228524 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137055386 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139353303 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08944781 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116865443 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105122796 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091958719 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11784977 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079319095 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128854258 seconds)
  done (took 12.409249212 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128071863 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150442191 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091437215 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137292236 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123468031 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154095757 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096250262 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126691302 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091061423 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139188345 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090246536 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.128627374 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.089423091 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133822798 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124562381 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129853678 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091806074 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134536934 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094166493 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168088568 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108416155 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138278199 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108476452 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120673035 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095440677 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138618617 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127774294 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133625238 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104018658 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139629168 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103818637 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158413766 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138656681 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09528383 seconds)
  done (took 5.260091191 seconds)
done (took 47.867449931 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.21643327 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.405843825 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180335405 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.040096363 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.234675368 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215394343 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194355149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.179096181 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.215855127 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183881597 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.41953762 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.704890959 seconds)
done (took 58.305895762 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.31344826 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339923394 seconds)
    (2/2) benchmarking "String"...
    done (took 1.475234595 seconds)
  done (took 3.937228802 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.75780233 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.124716979 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.443953091 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180559057 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197226432 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.474164502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.835238904 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.523179465 seconds)
  done (took 27.891260123 seconds)
done (took 42.014321365 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.197414436 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.245011012 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.220544175 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.167813822 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293208598 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209057972 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.303510714 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.249761997 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212096344 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.168189579 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.204000429 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.192807718 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.186701104 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.224070406 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.197629786 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.198891008 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.242840156 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.793278605 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.586705755 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.183882291 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.186200524 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.207944576 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.195001686 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193686174 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.241133867 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200648741 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18351273 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.196436349 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.673721484 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.183018975 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.194867332 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.449679548 seconds)
  done (took 189.497532851 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.1833227 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.146423514 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.258864549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.206413876 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.583073755 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.390184782 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335663048 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.662684142 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.204527279 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209451557 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.395925283 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.185499177 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.46284688 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.219922546 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213653409 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.258580538 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.40838371 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.481282124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222254646 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.317288913 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21080057 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.275081508 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.1972545 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.378279659 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.197524869 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.240307766 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.189861011 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.230185919 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383235629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.3359196 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.244142135 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.193089986 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.804338425 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041525014 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.196259773 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.203908228 seconds)
  done (took 148.78238247 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.185161228 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185444747 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184827208 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217671297 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.18543063 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.742288039 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.761478493 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.755445056 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.632869269 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.574855693 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.444043276 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.186931336 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279853255 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199893452 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188292443 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.202233879 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.213402855 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187414507 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18689951 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762344339 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.19043436 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197950731 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.361718721 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.202679679 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218271033 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.583074561 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.186893451 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.205939767 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187114328 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218095195 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.516272422 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235615069 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18664718 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.565648325 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.356172516 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299483775 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188659585 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220000112 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.187668859 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467459008 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187675559 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188249017 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.190673951 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187881972 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.857861305 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.192451398 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.745461679 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188413667 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.139837053 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188653224 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188965822 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.561749224 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.909932724 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208658312 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188607527 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191283173 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18888556 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188745935 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220511286 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.439873895 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306469269 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189851333 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.192430635 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221907697 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188584028 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.501260186 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189931478 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.950211095 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266020372 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303228678 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767145478 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195076412 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190935332 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289345431 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310816771 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189476151 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189471376 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190582781 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.190007697 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302316006 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.190385556 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.612060799 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363605769 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206025743 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.603461772 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290775567 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189497875 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604952448 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194145677 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189480817 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939068618 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285832496 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189895389 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189691227 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190172264 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.613677555 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768899844 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.461432408 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194420818 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.974109724 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197566834 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.62521658 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.742213488 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.873114884 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.196651136 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3029825 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.366834176 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208708569 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190121407 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.605006771 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195230941 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249720338 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190610892 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588077648 seconds)
  done (took 365.438733008 seconds)
done (took 704.832445925 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.804591225 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.789289277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.904746692 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.78859161 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.743572974 seconds)
  done (took 10.152953631 seconds)
done (took 11.273987362 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381286512 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.380946704 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251303469 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383848464 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223933497 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400808476 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362340217 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216651438 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295439842 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276723148 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29463013 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246882607 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227247725 seconds)
  done (took 18.064934835 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521587773 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.503181007 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256453361 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515452194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233723797 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508254759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393827799 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399528567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411518918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207513397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206619026 seconds)
  done (took 16.282270691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511252079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509223125 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26386741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50851053 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238228477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502681841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388939349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414171545 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405316193 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209275037 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206329345 seconds)
  done (took 16.282754584 seconds)
done (took 51.753031879 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.20544664 seconds)
  done (took 2.330091437 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242120072 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407477869 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226840871 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209961026 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.20386593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210920901 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210256448 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207638887 seconds)
  done (took 11.046353522 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202101501 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202953676 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199483287 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.200383307 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203355778 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200342031 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.202759213 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.202771235 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201160246 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.202568112 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.199755751 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.199183062 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.202700399 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.199685328 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203001519 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.199952943 seconds)
  done (took 20.348683155 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201849819 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200822872 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.199892555 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.200758304 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201175901 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201987368 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202242789 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200153366 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202070094 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.200399943 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201372532 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.200263618 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.200711225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.200938776 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200368 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.201188494 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.200267753 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.201523196 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.205754233 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.200987279 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.201231574 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201083214 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202211201 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.202366001 seconds)
  done (took 29.960559457 seconds)
done (took 64.810204702 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.841149747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.801474904 seconds)
  done (took 6.770620687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.26169676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.264382625 seconds)
  done (took 3.655759949 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205100426 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203874844 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205496606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204664083 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204473374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204934165 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205336408 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.204434889 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.20437781 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204740383 seconds)
  done (took 13.176470916 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204893493 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.204870106 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.202293995 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205415996 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.204877555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202080582 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203440807 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20528011 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206273654 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.203700373 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205485969 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.203300381 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.205351697 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203533868 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.205080418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.203872851 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203823965 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.203341291 seconds)
  done (took 22.805826851 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219896457 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226900872 seconds)
  done (took 3.577268836 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334813559 seconds)
    (2/7) benchmarking "second"...
    done (took 1.245557436 seconds)
    (3/7) benchmarking "month"...
    done (took 1.314320472 seconds)
    (4/7) benchmarking "year"...
    done (took 1.301362251 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.246413445 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.223882869 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.244635665 seconds)
  done (took 10.041470038 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20732352 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387690565 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.496571705 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.78028078 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207311723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.210577276 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.083997356 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210958511 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21274105 seconds)
  done (took 13.928451191 seconds)
done (took 75.083096501 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.206122828 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.200103567 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.502699514 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.224226888 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.217093397 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.543536661 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.203483209 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.360170265 seconds)
done (took 37.587429489 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.224822632 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190707359 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.023390577 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.226780004 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.301421164 seconds)
  done (took 18.87297793 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242256837 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540304018 seconds)
  done (took 4.914034282 seconds)
done (took 31.142176596 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207857556 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.209579005 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.205854841 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208285342 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.205776191 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.205693413 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210345809 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207539568 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.208604848 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.209173072 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.208376919 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209251705 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206869619 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206130781 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208087481 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208658022 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206462776 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205811145 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205661678 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205593981 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205847465 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208969784 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20644107 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206103607 seconds)
  done (took 30.109316814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.209577456 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.206446235 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210022735 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209452613 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208001976 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.209140036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210402799 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.205769045 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209745836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211106959 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206629263 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.206681874 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209817723 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207021106 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209412494 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208228395 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209789907 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20672316 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210133225 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208636539 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.210285252 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207894693 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207929498 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210083352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209098353 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20842009 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211182301 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207955185 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20950767 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.208776682 seconds)
  done (took 37.397805145 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.216038544 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.217697093 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.211188003 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21095876 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.210769378 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210936352 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209664063 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210160718 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.211216286 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210928049 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212202793 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211481336 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210804664 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.211845159 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211668431 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.211224822 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.211437395 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211606088 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.211308836 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213006391 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.212851558 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.211573293 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.211942804 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212621731 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212184646 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212401915 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21129652 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.212575731 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211659167 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21175952 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213101271 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212657771 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212980768 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213111291 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212168693 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212179907 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218835684 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220242439 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212208915 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.212679167 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211892836 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213230503 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214603498 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213581479 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213091105 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.213991525 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213646803 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213543198 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213129836 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213894418 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213131874 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213181117 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214864295 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213903178 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214644875 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213448666 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214009791 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212909801 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214453751 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.215143359 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215625184 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21433484 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215213086 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214069449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215565024 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.214985896 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.214611895 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215390724 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.214067717 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214675519 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214180033 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.214760825 seconds)
  done (took 88.485671017 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.21433274 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21189213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212080351 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212586448 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213053498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215785953 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212977398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215327661 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212700032 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215472049 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215191952 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213505529 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213133655 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21570179 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215549871 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214198675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215534323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212891991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215015396 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216689108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214880263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214237103 seconds)
  done (took 27.851790479 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216574869 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218445218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213866825 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218114718 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215946111 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218744079 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215453287 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217922397 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222955349 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215072861 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214337932 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217624535 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215848194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214937066 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214569068 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216109176 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216947702 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217401846 seconds)
  done (took 23.041034526 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215936296 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214901217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217048252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214658895 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215607957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218242471 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215342643 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217016626 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217814913 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216428413 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217754442 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21901098 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218492732 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214690959 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217944317 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215224632 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218789099 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216120105 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219484962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216559084 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216249036 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218088897 seconds)
  done (took 27.913099855 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217999032 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220061067 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21658935 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216319348 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215582173 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218840854 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219318619 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215947004 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220477168 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219201427 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217125892 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219629806 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218596988 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218420086 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216455551 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217038791 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219435318 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217797314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219340793 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216985639 seconds)
  done (took 25.50424301 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221344199 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222591372 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221453545 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221494908 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222069184 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222343163 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221603942 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222837919 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221113056 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222173904 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221470555 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222409351 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223031849 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222655983 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222703124 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223126995 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222026091 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223029806 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222729257 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224568437 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223936308 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223378731 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223393581 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223088489 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223430546 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223307708 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224313918 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224033628 seconds)
  done (took 35.380231324 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22199153 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222055667 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219462768 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219744766 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220269507 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220852303 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219731215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220048093 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.690916869 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220034573 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222822605 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22325649 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223677791 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223110307 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223374889 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223336961 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222086462 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220565844 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221257422 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220091958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222623405 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223758746 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223145495 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220773051 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220172735 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224039936 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220725437 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221418256 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223351168 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220577255 seconds)
  done (took 38.265575324 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242504964 seconds)
    (2/2) benchmarking "in"...
    done (took 1.241802404 seconds)
  done (took 3.630699097 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222291267 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224439429 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224007412 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220960629 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222219258 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224024927 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225239521 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22292794 seconds)
  done (took 10.932937613 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225658688 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225237438 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225308141 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225156738 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226255838 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224755172 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232707651 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243436114 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225925513 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227148752 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232971838 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.232388466 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22872344 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224432521 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.224960662 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22702615 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226053271 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227237054 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227179211 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226574068 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226214807 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227204005 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22840279 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.223899412 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.228228004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.23722519 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.230099529 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226339467 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226150479 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229860115 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225737974 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224210332 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227157395 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228515152 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227868099 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227989716 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237059662 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248758488 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233703526 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22910875 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227574583 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22497469 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.227433738 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229092783 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228738871 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228279143 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228786023 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225376398 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227338733 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232453242 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234257457 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227224795 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226512084 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23092826 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.230057904 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2345572 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250257616 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232998685 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238510059 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240621903 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.242439423 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252826636 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230375714 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.22978452 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2403965 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252845439 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236723695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245189146 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225876147 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230252409 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235993177 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242231661 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254642635 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230176367 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230349596 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229410271 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22957743 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23110784 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236699521 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.25091363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.231658336 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231799943 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240688164 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253098266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.229863526 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231365961 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.231381185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232563226 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232432607 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240914636 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.252319649 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230910113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228771891 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230403366 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231638322 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232738968 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230580227 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231447251 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228506991 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231228449 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232740703 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235508535 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239804474 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232594361 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232578998 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.238141259 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232904092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23210364 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.238435288 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232567196 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232881383 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233665198 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238974384 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.22939367 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236459493 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240958168 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233771664 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.23348134 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234256789 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233043733 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243386031 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257650997 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234542535 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.23272239 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237511013 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245144888 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233343379 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236581717 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233597362 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230583471 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231636348 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23408215 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235296297 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23416119 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234944978 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234757508 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230994555 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234049028 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233965408 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233783262 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.23535859 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.234043096 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.236401909 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235950801 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23579514 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.235347379 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240973968 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232975159 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235430004 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.233980975 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231035462 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23534757 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.23512895 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23623259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235010857 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237334861 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235312323 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235264249 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235948687 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234850266 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235725429 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236397596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239024002 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236780052 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238311639 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.235477806 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.232998182 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236099034 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.235294674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235118953 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236442913 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234633604 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239952124 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.244356718 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.237157561 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236993649 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.237821024 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237854925 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236861059 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237719101 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239403765 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244255372 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2376922 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244580826 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238721107 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237874992 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237493126 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236615866 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.236902361 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239017522 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242082935 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244499482 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250516214 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26288902 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239091434 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241813254 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.23920921 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242827053 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241883358 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.239549728 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238780315 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239709456 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23749844 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23904838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239370462 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238395726 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.237303341 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238016068 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238177658 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.239694914 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238743544 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.238192552 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239603489 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235730669 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239151404 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239337953 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239602623 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.235317345 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237521636 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237837384 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238837141 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.240717087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244680913 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235858601 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240268315 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239853284 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239044423 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238179967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241120791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240857141 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23958739 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246511872 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258307958 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239962379 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246870454 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.25878536 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238467964 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.242476068 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240334919 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238194444 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243381503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248144434 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239964168 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.240889 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241666607 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240568381 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241277216 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246873802 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.23855787 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.23976244 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240165841 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242297811 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238407742 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241880019 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241075168 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241142174 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243112357 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241300176 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241620036 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241304065 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.242182305 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243563173 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.242560243 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245615902 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.251507284 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.247200002 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241974679 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243027434 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243366142 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246974454 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.242046124 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243398839 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241999787 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255605398 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268563238 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25006442 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.243374869 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243952432 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247974392 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.243917104 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246390318 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243035977 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243864495 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.24286141 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24214728 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.240885951 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243404404 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.244527986 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244135904 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245213412 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247166774 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243281148 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243639934 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.244652234 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.245476459 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245173612 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243842265 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244426602 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246344626 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244619563 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243388596 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244142224 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252720288 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263533162 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245969288 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244847228 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244847761 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.242917615 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246483559 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.246121386 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249221597 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253942182 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248532104 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253952717 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248038028 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254324715 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246305444 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249934428 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253105813 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243554469 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.243776204 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245443689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246634855 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252706625 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265514824 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247050882 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251151734 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2469886 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246651348 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246265088 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.248367678 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247529926 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247449123 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255575089 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269744828 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24912685 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247728041 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244131813 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.248341126 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247216699 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245953583 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249036847 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247866542 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247863529 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246365575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246896666 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.246906662 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247552809 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.247754919 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244150058 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247240617 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254439652 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.268625683 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253639457 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248924989 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254520867 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248006908 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255257388 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.267786414 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248950747 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.249536937 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.24906716 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250002628 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248107939 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249172029 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249803421 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25086237 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253280697 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.249350957 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250861958 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.248797057 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.250895093 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249050483 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259975583 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274905029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251343782 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253713423 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246987115 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250345353 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25569728 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251082323 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249467157 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.25337421 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261302405 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258406455 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.248871274 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252204706 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250757229 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251093947 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249300156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250401505 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250329669 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250632187 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.250134554 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.250379459 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252072625 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.250777516 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250664922 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251755786 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252544181 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261863152 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.252077545 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25197077 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250880348 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251170458 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250604744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250977889 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252220311 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252028935 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251044699 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252309921 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258173812 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.25663204 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252755234 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250734521 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251406102 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251964519 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252583453 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252466798 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251818198 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252717909 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.252914556 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252445186 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252093943 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250268833 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.251956069 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252773576 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252130832 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25527207 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260182062 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252305974 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.250136238 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252676801 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252408825 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.251881984 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.251582138 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.259635483 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256925688 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264411012 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262115736 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257683834 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253835007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257194333 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262173334 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251578242 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25436093 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254230329 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.254649037 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254534245 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258313553 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254709813 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.260264428 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.253594043 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253773547 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261202823 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277232779 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255270733 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.256198867 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258260837 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254702516 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.251460225 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.255063498 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.254383041 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260919866 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273767316 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255284294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255813667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254351186 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256566343 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259615146 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255264962 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255247126 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.253318794 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255154216 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255752216 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256056962 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.25306395 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254413532 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255566248 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.258907743 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262728211 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.253042319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256146849 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255956537 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256063479 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257017212 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256495472 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25335181 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252672211 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.255220675 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257201151 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.257598363 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.257995691 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256262928 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257986671 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258773001 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258098452 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260462966 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268289747 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264333751 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25391275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256884238 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257622295 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258622155 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258562445 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258821404 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257708415 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257262621 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25807347 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257714594 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258204567 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260839554 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273083573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.280881877 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256924704 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.25826922 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260759415 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.258163324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.254812448 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.258698787 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.259324016 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262465211 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.266472417 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.260825627 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265246682 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277841751 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.260677821 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263075554 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.261982618 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266546362 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.260715677 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259833588 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260272197 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264073084 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276588351 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259956101 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27052736 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29024316 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.277146812 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.259472957 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.259702286 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258923826 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.260805968 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262182799 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261453442 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.260105328 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260566901 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261271559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261529047 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265689444 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260512877 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.261952918 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.260432713 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.259497518 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261976449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.257696327 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261472897 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.260299222 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261447135 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261848712 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262631331 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262283962 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273933305 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.288330116 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262547118 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261915158 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.258814255 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.263629141 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265682948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273460679 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2685077 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260980446 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26147231 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.262898926 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263146745 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.260610971 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261971807 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26128013 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261220931 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.260136287 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275433581 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288198971 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.26723167 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262234108 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263701261 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263231347 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261883173 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26354169 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263531795 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264666561 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.265679469 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268048866 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.263411379 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.263117965 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266970129 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271428316 seconds)
  done (took 744.302407817 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260606194 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260538614 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260181131 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261402726 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260634914 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260568126 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261705246 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261644694 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.260408423 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26204944 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262015291 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261091295 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261070981 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262379983 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26124014 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260572114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261936069 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26136433 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262537802 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262306921 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26161548 seconds)
  done (took 27.671098207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.264442786 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.261711237 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261953919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264362026 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262781605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264406403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261804735 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264563038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26455023 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261633484 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264711348 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26526161 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.262286824 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.262116616 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263013433 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265005884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264551132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262682156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.265188864 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263097816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2651681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262622445 seconds)
  done (took 28.983091174 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.26696638 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267151129 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.265836685 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.262927159 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267360798 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.262309682 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.266491954 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.266336571 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.266793212 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266846533 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.265098629 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.267541153 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274886592 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272936808 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.26819194 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.266380392 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.411770877 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267860391 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267780667 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.268151872 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.264663957 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273350174 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.265713441 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.263780889 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.265944582 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26942061 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268734422 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.266576353 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.267811002 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.268011018 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273211697 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.268026252 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.267374923 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.2694224 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.26728795 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.269852295 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272282837 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269361994 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.264708691 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.268149968 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.278657065 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.289834288 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2696693 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273897233 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.268814858 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.267963598 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27251491 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277492038 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.266530523 seconds)
  done (took 63.504903914 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.269099781 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26918119 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267143842 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.269114003 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.269003742 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.269683362 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.269785938 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268508562 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267075215 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.266402569 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.269005597 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268079892 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26677725 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.269881952 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270103279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267423751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268454981 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26848398 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.267377495 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268193352 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.268207306 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.269288005 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.270098713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.267978761 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27144917 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26873949 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26877461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.26975122 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.268124956 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.267998839 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.270588243 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.270869959 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.270872798 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.26820838 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268387122 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.271312258 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.270626353 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.268589195 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271001894 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.268551617 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.270640386 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272903315 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.271311176 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.271922906 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269687973 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.269763595 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269655236 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268669332 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.26980679 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.272898949 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27249814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.268723271 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27277629 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.269904483 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271682616 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.272600673 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.270176641 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.270320796 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.272558356 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.270175739 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.269859985 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272735489 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269804812 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.272189712 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.272615314 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.270356559 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.270416784 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273154739 seconds)
  done (took 87.538807079 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274529935 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274382939 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275145574 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274752712 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2754666 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275717753 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275022351 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274796048 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274770504 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274066839 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275867905 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274394102 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.27444763 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274538357 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27507162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275330731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274523139 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275470564 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275592667 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275980946 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275970351 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276304928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276193374 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273964989 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275332581 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276441705 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275408116 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275996912 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275185519 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275627632 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276654393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275306286 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277005043 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275525658 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276279792 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275521043 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277541138 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27635678 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276304539 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.275633994 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276009667 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276421291 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276515108 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.27749835 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276492141 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2763843 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278056753 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277474039 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276238111 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277202963 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276432788 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277038519 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276634766 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277214232 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278035844 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.276193935 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276486048 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278040387 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277513203 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277601849 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276878935 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277356418 seconds)
  done (took 80.306394149 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277395696 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276849121 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275558306 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.273591709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276418082 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27544159 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276483093 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.277030242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277705759 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.277759328 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279061977 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275654183 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278417342 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278612639 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276034823 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277319706 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277160926 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276192614 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278088866 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276610126 seconds)
  done (took 26.733005863 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275592003 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278438634 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.276450007 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275785437 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278093311 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275842515 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.278694627 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279326907 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276733363 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279419496 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279498254 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278560403 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2774286 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276241409 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279140001 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277196911 seconds)
  done (took 21.639391365 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278167002 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.279623739 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280476251 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280507494 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.277547094 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276984915 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.279980301 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.27692739 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277498085 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280492844 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.279641587 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.279860826 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279829524 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280726957 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277709588 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280066304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277126806 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27745024 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28015625 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281487466 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.278611128 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.277147655 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.280805376 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28089485 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.278492315 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.278744805 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277131299 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.277365763 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278743792 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.280564298 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27909462 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278875887 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.278930955 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27954309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28186687 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.27911262 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281714645 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.281570001 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282004625 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281751438 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281324474 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279182856 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282215536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282489032 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278974483 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.282143979 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.278522866 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280484282 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.279306098 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280312549 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281396428 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.2831812 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.281821844 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282849906 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283095347 seconds)
  done (took 71.59252375 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283300892 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282272076 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280371645 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282391359 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282040268 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.280751387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282040301 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281231085 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281487135 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.282456144 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282096435 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285719525 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279732875 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282505923 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281863029 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283776559 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281169248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280639913 seconds)
  done (took 24.276923473 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282608655 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281919233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283333071 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281602147 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.281822913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284037797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281394489 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.283708372 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284426027 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282904111 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282567586 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284716198 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285188348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285450118 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282970127 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282438873 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.284865041 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28626672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.282363318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282487275 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285367738 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28516402 seconds)
  done (took 29.440238368 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.285160832 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.28428294 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.288500987 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.302364875 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.304768589 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.307555769 seconds)
  done (took 8.975551673 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293363806 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285539896 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282756312 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286373927 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285801426 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284294609 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283668959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284564536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2866072 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283735839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284166612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285882133 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286052904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283603198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286900843 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287087893 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284549127 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283891982 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284581142 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28671963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283876497 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286347608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284282185 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284084052 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28484663 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284774277 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286728407 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285634777 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284564676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287994652 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286359365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28555242 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288287428 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285632953 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288010837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288066567 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286609126 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288467299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287682838 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284506647 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287180729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288071073 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288208142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286205765 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288778972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286887762 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286454729 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28558177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285897696 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288921569 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288566088 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287415457 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289225562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288774501 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288762191 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288377744 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287089727 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286688692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289684414 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287106247 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288432724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289869573 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28732248 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287417786 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289704735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289133662 seconds)
  done (took 86.146273654 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287670634 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287498662 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287702907 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289515529 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289275547 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287470547 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28987404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288121607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28764619 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287693565 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290639281 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287949793 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288986959 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288178095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288164113 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288192338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289100331 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289884544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28897102 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291334806 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28841943 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288417047 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289049204 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289589275 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289065388 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291588312 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289028958 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289551492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28831981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288073035 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289008101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289333504 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28947024 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289198411 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289848046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289039243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289602882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290235341 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289591137 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292721435 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289861512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293103922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290511664 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289980726 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289961989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290590583 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290224202 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291141366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291260399 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290265419 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289893202 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291306109 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289973298 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289500194 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290243281 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290656254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29208212 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291145255 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290827342 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293537923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291207734 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29089962 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293329022 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291031948 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291854011 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29225271 seconds)
  done (took 86.340797154 seconds)
done (took 1737.095095019 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458087921 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410252134 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293196944 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.326273434 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.293490494 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.289803683 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304529002 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.293803268 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.293732512 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.293177537 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.293206254 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482697188 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.349267282 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.294645481 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293904145 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388594342 seconds)
  done (took 42.571075326 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324293352 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.300839538 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420505189 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322344178 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324657615 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.493356445 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361423561 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306824205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485269095 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345394944 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.016109756 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.330403726 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299624734 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.529418671 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.325254553 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501281057 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.572391728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.048289469 seconds)
  done (took 30.520723849 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785143592 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.299323323 seconds)
  done (took 9.297183587 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321302262 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.300716145 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3011635 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299946769 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.291957672 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.292546039 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.29869377 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297820283 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.249709365 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.434676797 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308208164 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310012488 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.3204981 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301055028 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297449127 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.338661154 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.456940569 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298320407 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.295701298 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305264614 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301785684 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405174126 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351041594 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30559912 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.43517019 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.263688762 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302423188 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.307815481 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437578208 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299254664 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300193376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301309365 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302552666 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.215450282 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.809564517 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.294845293 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328025132 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.309876932 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29900232 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456853642 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302627659 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30899546 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.29329767 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803005749 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44621225 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429240943 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.623547575 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.302993563 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.30369308 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.365114091 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304299962 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304661426 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.346983352 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.140426388 seconds)
  done (took 110.851711843 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.342617805 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.691394198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463818107 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316034766 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.063110568 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.900974592 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312776595 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.60395406 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.324763185 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297907934 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582094904 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823304591 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319466831 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.321566709 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.485464179 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.318718051 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296600165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.047555524 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314444487 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.301550542 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81671251 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304927828 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.314046188 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.47060648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.33731754 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773554423 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.771841512 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.695830264 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317075751 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297080037 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.783746673 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32343591 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.370216402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29828497 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.568774071 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676902562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653184733 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.303513664 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337849239 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303485122 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.326986543 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76831384 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658641868 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.297844505 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.298641967 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787676521 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.298076568 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.30623727 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.306165542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501850054 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.908007577 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299541277 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.77234411 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.299987163 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.576363547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.373384505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.299980645 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.803977908 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298917289 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.352725539 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365920986 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300302608 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304968523 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299809682 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300347907 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667593784 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.546423488 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302160424 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665466461 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778073159 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317055637 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850933485 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.122800364 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327711742 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.371929697 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301167323 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.926292854 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819047148 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.314127325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.299920562 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653622229 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302318447 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599311465 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316911774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319321998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832162556 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.313795283 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.356712069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300890062 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.313498416 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.950009131 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306236462 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598701792 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.329249642 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30179591 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300720055 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.319519922 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300758715 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.302150577 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.30440399 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855615775 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.328399176 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.428026869 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324694073 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301984228 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30208469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303430418 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302985127 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521100891 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.887192989 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.319764708 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303020261 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30202825 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.328351753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.495814945 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.307079321 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.639916827 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313612853 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307576361 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.307380395 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.975817655 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343915697 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303012397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.306431883 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.231238269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.507315159 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322514106 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.302688758 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302175651 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321844707 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.606966068 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323942856 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.363231567 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305144418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031084519 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.362821546 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.325813129 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.570466074 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312674726 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.23623231 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32657618 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303753681 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594133706 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580069384 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.463574741 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.306145734 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.322846822 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006520945 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.338365854 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453459492 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325235121 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.351878064 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50233313 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.517499317 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305824514 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.910396945 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.306195043 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519443485 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.306525174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623449612 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814637966 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322707229 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305322865 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.029487502 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048334201 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.987218605 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.307057439 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.593055264 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.285469398 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.789729571 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.306624406 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.306180211 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.780081939 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.308323295 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307724219 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.306408871 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.307336833 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.462255771 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482373054 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.45958282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313835085 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777706736 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324946311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315677858 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309132573 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307323282 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.655354614 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368729914 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31128033 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.347433934 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.308555688 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312502452 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798034848 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.150530703 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.308515548 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461941657 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968020451 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.332844556 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309863988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.035899794 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.990900294 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839256596 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.355723674 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.636663528 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.308919626 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347012772 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.921612474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.392407979 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800425752 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310549866 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.30713991 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926110336 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.326122806 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.412553336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.307785468 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310150239 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872486586 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333631665 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.310582742 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.619131406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32977441 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558025749 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.310534226 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.347187903 seconds)
  done (took 1104.716349103 seconds)
done (took 1299.167284836 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.310206437 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318134224 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30465285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315834639 seconds)
  done (took 26.481054177 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320545383 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316304286 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317900917 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316039716 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322420061 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31576374 seconds)
  done (took 9.141644379 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.367825132 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31679326 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316979416 seconds)
  done (took 19.234778325 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.537260718 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.65543618 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.669124178 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.638069034 seconds)
  done (took 10.733595745 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.31842793 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.317735336 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.318316433 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321662043 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.322167751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322878532 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.323125209 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323017992 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.322660473 seconds)
  done (took 13.121664732 seconds)
done (took 79.942747073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.363651329 seconds)
    (2/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.630279744 seconds)
    (3/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.336830831 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.674652612 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.30859407 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.304490901 seconds)
    (7/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.377497953 seconds)
    (8/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393972725 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.59748313 seconds)
    (10/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.834606636 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.352087695 seconds)
    (12/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.842828495 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.338689197 seconds)
    (14/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.354723517 seconds)
    (15/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.367922191 seconds)
    (16/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.930636491 seconds)
    (17/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.416953094 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.29881524 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.899310782 seconds)
    (20/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.299242209 seconds)
    (21/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.410970737 seconds)
    (22/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.337860696 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.312276863 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 6.335759817 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.826587005 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.686644619 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.421954591 seconds)
    (28/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.315222572 seconds)
    (29/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.327245008 seconds)
    (30/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.2246563 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.071965971 seconds)
    (32/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.307094708 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.917734874 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.559153404 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.194286308 seconds)
    (36/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37752208 seconds)
    (37/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.438759482 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.142380979 seconds)
    (39/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.439802403 seconds)
    (40/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.221482859 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.42689647 seconds)
    (42/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.983305532 seconds)
    (43/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.060648721 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.599192584 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.257514412 seconds)
    (46/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340230579 seconds)
    (47/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.301012136 seconds)
    (48/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.417489313 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.903703123 seconds)
    (50/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.141678308 seconds)
    (51/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.50749026 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.372140615 seconds)
    (53/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341025446 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.679496497 seconds)
    (55/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.395312725 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.052256851 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.84622674 seconds)
    (58/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33072305 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.865910979 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.102088708 seconds)
    (61/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.325666343 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.301556401 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.333050883 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.046181474 seconds)
    (65/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.565818605 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.307584231 seconds)
    (67/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.341326941 seconds)
    (68/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.691165802 seconds)
    (69/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.398174069 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.332158573 seconds)
    (71/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.394406929 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.616092508 seconds)
    (73/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.537665393 seconds)
    (74/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.735636046 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.424843682 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.302335245 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.446466211 seconds)
    (78/286) benchmarking ("sort", BigInt, true)...
    done (took 6.315922356 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.432798926 seconds)
    (80/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.221937056 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.738703717 seconds)
    (82/286) benchmarking ("sort", Float64, true)...
    done (took 6.333084722 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335610246 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.621162045 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.166101679 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.330674411 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.31905612 seconds)
    (88/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.44069026 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.304663283 seconds)
    (90/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.601798321 seconds)
    (91/286) benchmarking ("sort", Float64, false)...
    done (took 5.614828912 seconds)
    (92/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.317947208 seconds)
    (93/286) benchmarking ("sort", Float32, false)...
    done (took 5.378958272 seconds)
    (94/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.33644721 seconds)
    (95/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317251864 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533838421 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.28884269 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330018822 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.801984834 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.318609285 seconds)
    (101/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.395777885 seconds)
    (102/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.222880403 seconds)
    (103/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342482235 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 6.317119326 seconds)
    (105/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.33559909 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.343584092 seconds)
    (107/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.319411653 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.321299281 seconds)
    (109/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.824201318 seconds)
    (110/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.72084192 seconds)
    (111/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.372092597 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.318654417 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.641500949 seconds)
    (114/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.275826749 seconds)
    (115/286) benchmarking ("sort", Float32, true)...
    done (took 6.324275698 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.840255375 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.340638605 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.991584493 seconds)
    (119/286) benchmarking ("sort", BigInt, false)...
    done (took 6.319974298 seconds)
    (120/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.363632799 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.610274302 seconds)
    (122/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.319160184 seconds)
    (123/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.334508968 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.161249079 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.597606233 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.344862835 seconds)
    (127/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822796427 seconds)
    (128/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.442909888 seconds)
    (129/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.403735088 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.305326253 seconds)
    (131/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.36283716 seconds)
    (132/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.798998345 seconds)
    (133/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.227426276 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.474693764 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.317719489 seconds)
    (136/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.428265116 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.322814456 seconds)
    (138/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.955937579 seconds)
    (139/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.805450295 seconds)
    (140/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.408300576 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.143379477 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.346022288 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.032658389 seconds)
    (144/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.294244096 seconds)
    (145/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.308255509 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.326702844 seconds)
    (147/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.995442484 seconds)
    (148/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.522823468 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.343053017 seconds)
    (150/286) benchmarking ("sort", Int8, false)...
    done (took 4.34144796 seconds)
    (151/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.41885988 seconds)
    (152/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.61644306 seconds)
    (153/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.430996595 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.185992358 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35015751 seconds)
    (156/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.443469288 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.099733373 seconds)
    (158/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.309735388 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.334036897 seconds)
    (160/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.351826637 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.320624553 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.744821008 seconds)
    (163/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.868735446 seconds)
    (164/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.203753978 seconds)
    (165/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.86892891 seconds)
    (166/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.516211437 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.308775755 seconds)
    (168/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.339827844 seconds)
    (169/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.340267934 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.990840146 seconds)
    (171/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.308960633 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.351021474 seconds)
    (173/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.455746736 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.34817367 seconds)
    (175/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.310666491 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.314241456 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.331384369 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.397197146 seconds)
    (179/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.088344979 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.370550384 seconds)
    (181/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.828970529 seconds)
    (182/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.439166241 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.544403817 seconds)
    (184/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.355323278 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.309291611 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143753043 seconds)
    (187/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.010898932 seconds)
    (188/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.337451257 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.743021998 seconds)
    (190/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.4134309 seconds)
    (191/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.330335839 seconds)
    (192/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.175437165 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 5.398671526 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.309919676 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.385780654 seconds)
    (196/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.686791095 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.055456102 seconds)
    (198/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.570373481 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.365048039 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.529096943 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.938614726 seconds)
    (202/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.861414814 seconds)
    (203/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.044669267 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.413783178 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.330622524 seconds)
    (206/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.763137073 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341297025 seconds)
    (208/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.602373796 seconds)
    (209/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.390680699 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.308107376 seconds)
    (211/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.003361944 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.318958339 seconds)
    (213/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.433944972 seconds)
    (214/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.407930353 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.34676626 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35073541 seconds)
    (217/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.036763551 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.365549405 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330529289 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.768051709 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.410370631 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.312070468 seconds)
    (223/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325455553 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.322162957 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.344120413 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.94640789 seconds)
    (227/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.052148228 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.875582292 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.312328817 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.752112503 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.330561706 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.12359804 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.432796498 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.794240609 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.730951827 seconds)
    (236/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.328160295 seconds)
    (237/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.352687559 seconds)
    (238/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.423053496 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.326753016 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.418150395 seconds)
    (241/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.585151773 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.164258435 seconds)
    (243/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.413848829 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.550551985 seconds)
    (245/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.353415226 seconds)
    (246/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.736014609 seconds)
    (247/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.313093375 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.372947465 seconds)
    (249/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.408917657 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271818219 seconds)
    (251/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.329374543 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.711362178 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.312295934 seconds)
    (254/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.359417353 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350633533 seconds)
    (256/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.322288765 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.315194265 seconds)
    (258/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.450962992 seconds)
    (259/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.35389256 seconds)
    (260/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.333276163 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.34993082 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.367908879 seconds)
    (263/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.318748151 seconds)
    (264/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.129337381 seconds)
    (265/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.315279598 seconds)
    (266/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.315091701 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355637367 seconds)
    (268/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.15748865 seconds)
    (269/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.716783821 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.008173654 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.411922319 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.770723306 seconds)
    (273/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.411947527 seconds)
    (274/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.343718687 seconds)
    (275/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45409031 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.164728922 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.795149661 seconds)
    (278/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.04955518 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.313565419 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.371947752 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.586781197 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.315999989 seconds)
    (283/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.572139238 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.352139925 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.330294069 seconds)
    (286/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.328457928 seconds)
  done (took 946.648241786 seconds)
done (took 947.880611272 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.362269226 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358523104 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.340548707 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.362893256 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.452722082 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.51553565 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.35079191 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.34275575 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388251162 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.390085815 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.339243162 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.515493041 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34204489 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.340888201 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.341072192 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356846438 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.507919805 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.347333035 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.357147647 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350591139 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.357628826 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340883824 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39044043 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.516146887 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.345349775 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.344024753 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.344420941 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361390693 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.45462551 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.344055169 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.343709817 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.352904526 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.456358806 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340260847 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.336191587 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.361646887 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354023531 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.352804104 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.34613988 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.375137145 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.89924016 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.342044559 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.344473316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343223105 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.343386564 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.349751027 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.344028209 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.349484778 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358003104 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358364601 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.92833692 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.365236312 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347187885 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.344904366 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.354020627 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343220937 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.347780057 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362421517 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.362693063 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362818494 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.443687083 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.349551241 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.34538362 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360573641 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.35267307 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.927279344 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339622748 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.348708388 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.904007143 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.351799812 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.927886512 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.352830804 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.345471076 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.357950551 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.378314802 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.462369508 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.339911899 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.345140045 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353492036 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.344590239 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355473257 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359282387 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350488218 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.346744047 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36033592 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520986846 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.355684223 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34742911 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356092557 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.365313605 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.353054612 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.357581439 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.348442766 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341099176 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356265247 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.348868903 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.348885299 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349327609 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351686416 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358215702 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.960038018 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371847759 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.344666836 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.343511182 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.346520709 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.360306355 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.903867955 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.347806328 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.369511985 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395466839 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.349524436 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.45375708 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.352074174 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367057389 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.357337612 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.351262922 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.343391393 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.458733331 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.900812882 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.362813451 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350560758 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.348172525 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367291875 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352099689 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345859902 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.473659159 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350240037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363602219 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.470476522 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.358992931 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.380745409 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.348326022 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.352431429 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.378295159 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367390028 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381116828 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.352475945 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36655389 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.365517927 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.34664456 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361109416 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.36079335 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350293957 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.354911326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.343924011 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.379080802 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364116865 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364465855 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.370547949 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.471479148 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347792027 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.457886606 seconds)
done (took 229.639699457 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407771917 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.340753727 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438884902 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.34683536 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44914264 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.448959633 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344506809 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345759735 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344282621 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.721648234 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.34448914 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34589227 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.348308306 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345376919 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.43072262 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.347261902 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.346349353 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.687761375 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349193194 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417206655 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347397723 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.345821816 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348163874 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.729697795 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.347007136 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.346135794 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.418774203 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348376762 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.693106663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.341081447 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.345823092 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.694689645 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437238583 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366288558 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357780166 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357396481 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450700565 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366750274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.429020891 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429014908 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.440667848 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388630788 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.34455368 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.345147104 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.351244121 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.351872978 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346898464 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37633502 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.346402396 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347674909 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.688631006 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.359177568 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.356266339 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348123323 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348219113 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370406259 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347822759 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.351502713 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439070921 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351334932 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.413005139 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.729751969 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.727984811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.351484933 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.349054595 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349015767 seconds)
  done (took 149.433114491 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417410737 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422606082 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.466965051 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.352352815 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.400453739 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473063888 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352337809 seconds)
  done (took 11.148044329 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357254805 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.353210863 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40153154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401088234 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35197563 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.529970023 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35216446 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362622998 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349260546 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404234716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.35666439 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352958468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359946919 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345816128 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400160962 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364395161 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467902687 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354436786 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353865176 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.504606017 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351831496 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360678905 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.405821886 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.364400322 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357734626 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.359573778 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.17270863 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354032854 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350943118 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352719346 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350098553 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428037166 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.353801708 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.354348831 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3519167 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469671133 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.354316759 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351908416 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353541024 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.351778365 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.354939066 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354058873 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.355092597 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352055694 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.354938482 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37748073 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356038824 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.354859541 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35518474 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.35554037 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406219137 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356271417 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352420234 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351849721 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.408897451 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361657131 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356510359 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353039616 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.355443089 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35241978 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.506332152 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403473454 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.355149017 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.403227863 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356156583 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356121234 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356138335 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.355997156 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41024609 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355970965 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403439944 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352832013 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.53439673 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37846273 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357951339 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35850944 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358526631 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357022617 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351986374 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361816451 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.353620854 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357615752 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.363345304 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354298425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354331248 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521356937 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46320304 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353910967 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368665607 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364205051 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.354471165 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409619362 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.35746377 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.354746051 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408576423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472971428 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.409949265 seconds)
  done (took 155.662181596 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362031868 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.366534077 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361099091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.3816804 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.358832008 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357507879 seconds)
  done (took 9.457221087 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360933892 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359759041 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358473457 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358536867 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359908649 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362331157 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.359198135 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360418203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363395319 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358541403 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.36354683 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360766774 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.363090293 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360452193 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360706228 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.360079897 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360257111 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356612121 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359054923 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360025413 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.464867975 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36056799 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359605258 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361951266 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.367052923 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360399869 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368200634 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359514366 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.360402018 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.368040705 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.380463049 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.364068803 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362723959 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.366412827 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365333848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.362133244 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364618745 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363357634 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358620485 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363681284 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363904611 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36198723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360778069 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36350133 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.363910846 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366680908 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367181619 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369579162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362228092 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363109262 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36428727 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36154031 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.364216661 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363128897 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364728898 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384426144 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369096817 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364193788 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362481064 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363587619 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363479145 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364299382 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365054769 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.367940896 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.360112534 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364362206 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364335105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367722224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364014282 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363333776 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364947841 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.361129884 seconds)
  done (took 100.535488609 seconds)
done (took 427.494635255 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.556726185 seconds)
  done (took 7.831792245 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.793903647 seconds)
  done (took 8.072011775 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.605390372 seconds)
  done (took 24.888890663 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.451918995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.362894225 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.374584561 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366169577 seconds)
  done (took 26.831207167 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.570589427 seconds)
  done (took 7.846138765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.357323694 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.356479699 seconds)
  done (took 13.991417944 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.779805175 seconds)
  done (took 8.054898218 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.37042637 seconds)
  done (took 7.654097217 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.355957396 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.399405885 seconds)
  done (took 14.046054952 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.343427764 seconds)
  done (took 7.618997533 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.711638449 seconds)
  done (took 12.988861572 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360014374 seconds)
  done (took 7.638641966 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.430566563 seconds)
  done (took 7.706655962 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.070894108 seconds)
  done (took 10.347459413 seconds)
done (took 166.792325302 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.357547102 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.357707154 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.357212595 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.357224064 seconds)
  done (took 26.705944903 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399836182 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400063206 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399862717 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.410646631 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.402014967 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398900648 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391826635 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.392172295 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409398032 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402007362 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400687853 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401837518 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400306704 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.392394978 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.401713654 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.400653299 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41034135 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.401461882 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391829009 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403127254 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.366513519 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410726196 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402820546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367627681 seconds)
  done (took 34.836043 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.893613991 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.438473015 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527594551 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42312747 seconds)
  done (took 7.561819137 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418689596 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420380918 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.433514329 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472877305 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496493612 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430296053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393918054 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388472997 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375047781 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420595565 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494673409 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.43617138 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509581369 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367458256 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.553824537 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367575503 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.367599741 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.419779541 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470723304 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.487961241 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368208871 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.419009206 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427078825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436355413 seconds)
  done (took 35.654978307 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.367038663 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386163651 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.366674221 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366143422 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375407759 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366920026 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368028492 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367678525 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.365889223 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.373685851 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366531911 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.379377042 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.36689574 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367132764 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373909955 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36983053 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374662719 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36664755 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.367198175 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.373754709 seconds)
  done (took 28.6899213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363108868 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218531355 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714358992 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621031637 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.362989702 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.363061108 seconds)
  done (took 27.923194748 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.448324249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.600390434 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.372787591 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.777697793 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.869834996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.379666831 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371753781 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.636718515 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.010283421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991208142 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.440755688 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.445440255 seconds)
  done (took 20.628500293 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.374022534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.370181851 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.383290532 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.386266723 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430551707 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.377116358 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377822691 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.364637261 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43803684 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436084822 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.375244321 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431803924 seconds)
  done (took 38.027921803 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453264095 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415919518 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.447020734 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442596601 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11833435 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578152374 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435219594 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169675255 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396915902 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639809736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36630083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473868422 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623937758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378075813 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374566294 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.437541717 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593096164 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895223042 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369863696 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.819955175 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392129485 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38439215 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.761143726 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631597543 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586083993 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350092618 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.626809973 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142757439 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680544618 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381929245 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378172677 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36846169 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64108407 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.505238233 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471653533 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611790346 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375547407 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.943356925 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.379543691 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.697718354 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372115882 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370668992 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378070595 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368321357 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302124275 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374927339 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784595923 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381586125 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.080077921 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368419077 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657175686 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465874521 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37279042 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.942212385 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38064706 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.382081509 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.371714781 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466307143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01138831 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.930703156 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379263321 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.311048944 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384968832 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.679926742 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031533308 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.375633001 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373140236 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373265038 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30467753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.686172757 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387720948 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507586441 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395167049 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032755077 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123434954 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38059321 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301805196 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952943185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378435708 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.311955442 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600368463 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146218374 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310808998 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.333010527 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.303264577 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117153844 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381502457 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.046383543 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400771961 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.169032409 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647581914 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398016405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395525885 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595988214 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.257447569 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371482891 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.375416491 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489005374 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392894475 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.180631019 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33700344 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376359879 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630858296 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.58422309 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375841872 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.45961561 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461451651 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396166771 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.399788704 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383686946 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624464617 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.008791017 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390693603 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960098853 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390297748 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.149572596 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158449568 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374606026 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.385137352 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376390375 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663630325 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.203980094 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272035545 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441142399 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379378658 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373498844 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.711222093 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225604814 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257429094 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.608747866 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401829861 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.391125913 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.375707359 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333470653 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.371909335 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407366701 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.152413321 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599883649 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375206808 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657627304 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308594017 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513065457 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391354521 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.600044108 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.66580295 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.380863808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637482012 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382125176 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382590747 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41583913 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395028439 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475343091 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399192331 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375493365 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642553485 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379763183 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378314893 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.716811592 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.154803057 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378703171 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.382672072 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375743169 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023711249 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349973889 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385169804 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269868352 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.3908692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443932328 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382713549 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617834475 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.832350237 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401732379 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383175496 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.375882327 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607425706 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387644231 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.709843798 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456846237 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.929535116 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044000254 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391386368 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311260925 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.088867702 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.071778696 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37867213 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.582651818 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378280684 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61752881 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391610476 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390954237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011600286 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380904745 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.708559667 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383785955 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391377118 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.719688679 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378576188 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.835066236 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.103217233 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399001318 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398016548 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521176404 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.3922478 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312838334 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.89578155 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384710488 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380035887 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.155732095 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41280105 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.722053515 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863016074 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673368765 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389483643 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671572471 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.793414993 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414236366 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381640908 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389863432 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397456688 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.409938195 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389060789 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.390965585 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.717301186 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.829916848 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949884797 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189496997 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954357428 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.782644658 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.389759387 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272507754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181909005 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344133218 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041205268 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635931005 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188543407 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368070799 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544179889 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.687450226 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222241822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673262469 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612843068 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722538648 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.383516794 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676704522 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595612609 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41661154 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390907554 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318820249 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.905729845 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65594177 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392802081 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463485687 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.752732457 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392271155 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.16230942 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.44747882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.223796529 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.254607186 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.938610222 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.778668245 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399461566 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397017605 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885852117 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42638221 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911956252 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050121277 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397786737 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.945020037 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351841988 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632869711 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404280003 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.387069915 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.132598597 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.389896214 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639949517 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67935239 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328485027 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389519456 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004810268 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.249315896 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390393929 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384884001 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210854418 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403458272 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71508303 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.393865468 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.824948984 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389663324 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319457604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31880167 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.07892453 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396135822 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355907797 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930270145 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.403277643 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399456683 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404054845 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241275461 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643493585 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.400545102 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032956311 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621012732 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383979301 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434252753 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.390302812 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395202515 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.383599264 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277937748 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622288564 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427817809 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618375586 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.494376346 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.303139028 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395107093 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606943119 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.272807611 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399172592 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657566012 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.106074469 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.411959387 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164233209 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413989136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403809225 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413473924 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393986599 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418831003 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457642816 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637631905 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407295503 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399261059 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.259355783 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395813451 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398436636 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401849281 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481427761 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182758702 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.834795138 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.160524866 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041594917 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240879288 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055562463 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697369736 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398085467 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392891624 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32288991 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537321339 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917901778 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66208703 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508364965 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.392879068 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441538415 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388816652 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408047719 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609960699 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664875909 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265124968 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389805627 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06173328 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.291249122 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400673922 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.603215572 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939980314 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020997345 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522439526 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394323773 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.219148652 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693478968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483274423 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389811039 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98657231 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.393139482 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.242497984 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405230575 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408227351 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547259076 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689015107 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.545805726 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.408480972 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552584664 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.165969556 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919738029 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65739253 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.967421916 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.652001313 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054554703 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188130632 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665143878 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462425404 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645500384 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.526690032 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540053835 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.397417138 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29361021 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392889849 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240872621 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.101801826 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403021289 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055256649 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665176613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396582978 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.399187011 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416993444 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402473576 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618385583 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157453014 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619170594 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4042492 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401766781 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.384509561 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055207713 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702715004 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337642705 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.397653135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65420214 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638384728 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419505535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846609766 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10461727 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988203092 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.370337447 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415319395 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394078211 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202033593 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064963925 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.850238348 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922125919 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057008765 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395846153 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676569911 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40016991 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396438972 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677957473 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.399023253 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401437381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656643982 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056116797 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253309776 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.398891427 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.112691423 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.340472968 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.624092557 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44903987 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341143294 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396569233 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.879748364 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425325592 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516814694 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408458089 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.395165831 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403573326 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.180095032 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689162853 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402004863 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.396711211 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.385546745 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411409079 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499854433 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675088895 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408988052 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.071441586 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.749912556 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654618575 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397488371 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390949634 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.402353304 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398799237 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123365597 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375233418 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41274469 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99537828 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.402693413 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.414734855 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400652632 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.615101037 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610569962 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400520732 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652665302 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417230632 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418593954 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.310690573 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172608105 seconds)
  done (took 1713.715861686 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414284582 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.420715974 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.435456811 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.487698303 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433350397 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.493836077 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.506866345 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.504458611 seconds)
  done (took 53.010433523 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.398839964 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.568922924 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.432230688 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.417117816 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.415486565 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.403457595 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.902107744 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.412018323 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.411326579 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.410358454 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.410184266 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.400443694 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.069438821 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.409790674 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.401486795 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.399459639 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.41135024 seconds)
  done (took 66.596224171 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.18458794 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.445239219 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.075774146 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.432251319 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.420149942 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.418215412 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.024900658 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435435098 seconds)
  done (took 55.752670333 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417770333 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417255963 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.417997543 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418543201 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419656027 seconds)
  done (took 8.407477732 seconds)
done (took 2118.788637815 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405290067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407026038 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405065458 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406789295 seconds)
  done (took 6.939174821 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.385200686 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.137652243 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.38890436 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.402675059 seconds)
  done (took 18.630150216 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.402895912 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.410038215 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.178759579 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.103085039 seconds)
  done (took 5.600971474 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.153312217 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.165980379 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.149189203 seconds)
  done (took 7.785881403 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.400232902 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.409181203 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.409306707 seconds)
  done (took 20.535806741 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.710498176 seconds)
  done (took 3.028744908 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.550014708 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.601265958 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.776257832 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.769612506 seconds)
  done (took 8.014997516 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.789434741 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.78939948 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.593629189 seconds)
  done (took 6.489337015 seconds)
done (took 91.152851148 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.623861989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.428850251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.614348267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.593974166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.681960495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.616179695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.692948447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.557786673 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.103099387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.091488107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.60062208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643887701 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.64744583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.429349724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.645916917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428257151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.632657764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.680997387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287744195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41850546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.694530099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.236699951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.426124018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.262422033 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.632871875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563556571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.823054973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428925066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403576473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.843415013 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.563529661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411800734 seconds)
  done (took 198.02947268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.403667008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403270016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404146718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.404431793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.433521625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.403979747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404048616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422730765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404677378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408834702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.419577879 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405647048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405961677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404454739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.407339227 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.40476563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.404664925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404575886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.404563669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405569095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.425284267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421397624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.405185215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409649314 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405381658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.404498878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.437098647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.405906702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437939531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.405458305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.405888724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427877198 seconds)
  done (took 206.471944891 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.418154299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405049399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404871754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.406536373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41319862 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.406989914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.424394394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.42435793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410059914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.40532425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411308884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.406527289 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406588022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.405380673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.407026379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.406521976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.405223916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.429870798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.42223644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405952437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.428170956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406576805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.438592757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.407160766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407264578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440192935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.406492906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.405605152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408007606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.407473097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.423618113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.409970194 seconds)
  done (took 206.537657715 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.603325146 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.414883304 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.415816763 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376758383 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41603387 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.415708161 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.410127626 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.614332357 seconds)
  done (took 14.989161135 seconds)
done (took 627.345317031 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.788470657 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.49473664 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.625478032 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.435834855 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.286742196 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.455177401 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.435162918 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.624052009 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.387648014 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.631092036 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.789400093 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.434328523 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.94257704 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.434483172 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.707229329 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542673179 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.352473557 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.472614023 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.774849603 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.088443082 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.722066409 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.014699733 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.625276244 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.372246439 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.943183325 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.98403325 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.194442468 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.387101139 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.461888937 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.778164163 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.310181079 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.512819501 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.48787978 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.486052411 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.543649964 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.540490023 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.44521548 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.502273345 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.630066099 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.777743638 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.096672936 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.218952584 seconds)
  done (took 97.064278388 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.406555527 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.406108694 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.405992307 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407032117 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.40733729 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.406760093 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.407294449 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.406104682 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.407228929 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.40666026 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.406749118 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.407927379 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.406355409 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.408675131 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.406839054 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.40773595 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.408881196 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.410959626 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.406144165 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.406616577 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.407697157 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.409020965 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.408079272 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.407212242 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.407830437 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408520803 seconds)
  done (took 37.919922345 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.420994491 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.677569687 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.871869321 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.430996537 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.42038593 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.424539063 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.508824065 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.428748752 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424292677 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424854262 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.5977294 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423519519 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457404844 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.890960673 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.423153834 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.421219759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.422005447 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421259573 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.686168596 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431436486 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.529710131 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.422986791 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.509534644 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431410414 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.445519123 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423275118 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42673836 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.997891988 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.423621425 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.600448601 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.325390405 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.513620989 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.943755707 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.874210275 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.328704506 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.432965706 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.423426364 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.604384311 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424497739 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.422163904 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.50979278 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.423276975 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.8753739 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.107059153 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.442976714 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.424439369 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020526236 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.602636659 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.706144555 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440371253 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902967685 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.426942881 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.426115194 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42568016 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700505942 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.430355802 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.424954364 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.012828166 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.447045485 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.511148955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426489174 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424274967 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.697311817 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.425570834 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.691068988 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425572265 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.432539748 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.446901689 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.875651781 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42721848 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.131844079 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443422945 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.426361418 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.603193685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.691330049 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.057520737 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.428288029 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.701789951 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.959246131 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.509978267 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.429115644 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.988688909 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.513714165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.429897998 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.4292052 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.427935488 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.425074057 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.472545953 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.50996612 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.058318543 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122726353 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.040006553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.533705149 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.433799802 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.426383536 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.015918569 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446914756 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.425961317 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.869776425 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128980946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.446290642 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.43546681 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.133303841 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447757218 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.514381694 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.433161922 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.882863455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.429071263 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475212969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428877933 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.433567053 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453006196 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.516484676 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.43113199 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.428694341 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.098696668 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.629098861 seconds)
  done (took 188.276549353 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.42313866 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.445040243 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.437033384 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.422814069 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.422474382 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430673253 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.422364899 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.422652393 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.426151969 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.422834843 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.423708651 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.423540343 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.424075651 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.424398595 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.434549859 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429088694 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.035286063 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424043313 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.423484534 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.424295401 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.253232054 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.4319016 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.424549849 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.423190325 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.422667559 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.422796315 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.446304588 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.425528334 seconds)
  done (took 154.727972558 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.430606786 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.062787248 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.432112041 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.577934161 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.454739208 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.427603815 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.574935787 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.493007649 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.431761072 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.429636329 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.428147302 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.770399915 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.432502752 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005992398 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.64801911 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.575651896 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.004427505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451125943 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.429167487 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.429853281 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.579581758 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443719022 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.770873584 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065929925 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.432386296 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068667297 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.424172969 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.432515389 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.430159575 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.067329496 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.430112963 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.771616113 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.518031424 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49846286 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.067081248 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.009053792 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.025338239 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.602018295 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.438991107 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.429458363 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.430174731 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.421556796 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.070765457 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.433923176 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433142145 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.062579251 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.45237184 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434629542 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.438429698 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.431484632 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497688435 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.500227068 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.779655215 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.072679323 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.517587387 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.443674021 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.584194704 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.86014139 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.435925795 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.010735142 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421978387 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072472248 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.454417739 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422002659 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.432461391 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.437848898 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.599947604 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.585244603 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.038945633 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.453401551 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.013188134 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.61922719 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.432522919 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.432815692 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435670852 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.103019395 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.02213897 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.62043381 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.584031423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.654266375 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.424003092 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.433928535 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.424830952 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.520283023 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.43424305 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.107362612 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.040833726 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.455571873 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.436876591 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.436481503 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.436987229 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.635827483 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.09183338 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.530138653 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.014103247 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.796902404 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.779205748 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.437014753 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.501090977 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.452647417 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.782098492 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438141406 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500348699 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.924272686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.781797178 seconds)
  done (took 172.301533659 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.70064037 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.70219395 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.530740182 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.592010531 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.078990854 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.027881015 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.79866214 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.582808114 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.554008405 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712476088 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.749545211 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532536278 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.665467901 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.535103514 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.200330405 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51062276 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532414718 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.592755746 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.581143574 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.54884295 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170671005 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.735059813 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.636347431 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.459857974 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.543291679 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.274596917 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.045462557 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.985756548 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.625069024 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.900284379 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.006529512 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.634828013 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.482453223 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.155947739 seconds)
  done (took 69.729646407 seconds)
done (took 721.342658136 seconds)
SAVING RESULT...
DONE!
