cset: moving following pidspec: 17087
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.526164789 seconds)
loading group "string"... done (took 0.526352322 seconds)
loading group "linalg"... done (took 9.163898403 seconds)
loading group "parallel"... done (took 0.185460694 seconds)
loading group "find"... done (took 1.341275132 seconds)
loading group "tuple"... done (took 1.967051047 seconds)
loading group "dates"... done (took 1.396747217 seconds)
loading group "micro"... done (took 0.200319046 seconds)
loading group "io"... done (took 0.518410697 seconds)
loading group "scalar"... done (took 52.752547651 seconds)
loading group "sparse"... done (took 14.223474277 seconds)
loading group "broadcast"... done (took 1.347464776 seconds)
loading group "union"... done (took 10.340917499 seconds)
loading group "simd"... done (took 3.112868831 seconds)
loading group "random"... done (took 11.721578131 seconds)
loading group "problem"... done (took 2.243556199 seconds)
loading group "array"... done (took 24.717370625 seconds)
loading group "misc"... done (took 1.154536314 seconds)
loading group "sort"... done (took 3.847029724 seconds)
loading group "collection"... done (took 19.560027077 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.622484515 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12262216 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.263315515 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.2839638 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238120789 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154906042 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139567952 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.260968513 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.704646509 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208689936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.131538719 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.497867963 seconds)
done (took 6.453752192 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253335722 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.181295778 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167696038 seconds)
  done (took 1.121391348 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074223944 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15487617 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106088847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091872735 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090879848 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106572233 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090280715 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106121526 seconds)
  done (took 1.520977221 seconds)
done (took 3.743236392 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.514996889 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.877844924 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514832303 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145598684 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.321648152 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.300241564 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319821757 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.20275735 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105087692 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08993317 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175909531 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.384357431 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.441847648 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.952014664 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090694716 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097179095 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133750845 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.779922323 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076936024 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112516607 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.51311919 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19489308 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096099956 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125592708 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.182734799 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132908211 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160671549 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100430594 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665994003 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129938038 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.191019329 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096390899 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15945681 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194493485 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208629775 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090522265 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684082298 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199557564 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09099617 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097016078 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667274364 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117376791 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186431623 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10095159 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089102992 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181950207 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095139338 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075772735 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114975371 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082574212 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167576743 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.445375539 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104796858 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170013543 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091007814 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68772105 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097423237 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275373382 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124491298 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090736465 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089437625 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085592863 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158478884 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09302913 seconds)
  done (took 20.156863515 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147676049 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164574542 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075689812 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154705296 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122233594 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07737154 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099881009 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076111376 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106933098 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242098893 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136486264 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154729055 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089102368 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0863671 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125551406 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248641387 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106320281 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121967733 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08587535 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087738884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137958206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093822862 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105517818 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092143405 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168578307 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203072523 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106554415 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12056894 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.085422582 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094556343 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140618947 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145261464 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092608412 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084473961 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188438096 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105309981 seconds)
  done (took 5.267049776 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199573273 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122632912 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211448716 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161214928 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142394659 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167142457 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149841523 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.288035807 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.226782055 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159407925 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128590172 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103699153 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076369482 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07676889 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094655562 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.483283971 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182902798 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129016639 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154493062 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101847682 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079820569 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368535409 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101904267 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077840587 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101146825 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069057207 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198232749 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085010405 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.212967785 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.082459845 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.080847031 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105722517 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118875713 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129549712 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114568352 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118382619 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104141834 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078009835 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217934845 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090180122 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093586741 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105859271 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130889626 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113326104 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096995619 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092367783 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220751915 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082012333 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095773888 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105411674 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.047005968 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200095325 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141492151 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077791903 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288027984 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114702573 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08586564 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079577668 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263393796 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114050605 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080598332 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094383375 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085473065 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0756669 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.433102399 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107169426 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.963602966 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082552171 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16110641 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082750875 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10424784 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084419987 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082312928 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116618414 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078716577 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07616399 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094337861 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077667461 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082049477 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.154480953 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080009799 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111167464 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082836678 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076874947 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161100233 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100603549 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097848966 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12337872 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082546011 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094725838 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110675591 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095321403 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08202606 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.162822985 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085912566 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093067433 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100613075 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141060833 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083398439 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.207671105 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098377759 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106389748 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09785641 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110884121 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11814581 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078526647 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080543343 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093656911 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078991643 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144760359 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098054968 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083411796 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083577777 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108163188 seconds)
  done (took 23.033321567 seconds)
done (took 49.228500855 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.457312571 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08743596 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08596604 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106759624 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087239009 seconds)
  done (took 1.678040529 seconds)
done (took 2.504768131 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.327989444 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196923791 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097390509 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191522245 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083753496 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198822788 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18574996 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092035041 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212072759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081828781 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190877058 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081416972 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10196162 seconds)
  done (took 2.898401348 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097472501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104952941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095915945 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113445404 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078099642 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093969938 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11218132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106457064 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095067772 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107681841 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079215704 seconds)
  done (took 1.910016607 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094871521 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101347825 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093027384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113088723 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079063165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092941649 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110783579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10446796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093657165 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1092511 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080501037 seconds)
  done (took 1.905092168 seconds)
done (took 7.540144203 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.131298767 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.967016776 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167232956 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.215287402 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350820575 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239564527 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.573679702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.15317118 seconds)
  done (took 14.785461592 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.12095753 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090287144 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104902816 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090524042 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.137689322 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111786085 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089674148 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090055692 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10663002 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087331345 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086807918 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106580262 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08983526 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090382728 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08674265 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109369128 seconds)
  done (took 2.491233191 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13660553 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120745595 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111622439 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093842624 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089031673 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.112546283 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095816895 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091616554 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.109775559 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089601363 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094955689 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11044431 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09171727 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087478131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110198307 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107897062 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087092192 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110408113 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106303673 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092033617 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111841923 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090690652 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090632797 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111715926 seconds)
  done (took 3.368341368 seconds)
done (took 21.475873977 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148998235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099634853 seconds)
  done (took 1.083449658 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139146758 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159384969 seconds)
  done (took 1.137220814 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108009434 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084715863 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135020231 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098491183 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085214949 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102447636 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113100147 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102133921 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085643197 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085058873 seconds)
  done (took 1.840819329 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088330417 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088639045 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.11850235 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139225729 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111512007 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.088872408 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089845 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087791901 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110321787 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084969931 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09358189 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122864268 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090818123 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123742149 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09063585 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091639545 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111842492 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090317171 seconds)
  done (took 2.666015987 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085363654 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087392698 seconds)
  done (took 1.015454725 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088144244 seconds)
    (2/7) benchmarking "second"...
    done (took 0.084840512 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087677729 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106590889 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085319798 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083899095 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102014703 seconds)
  done (took 1.480030208 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.497022069 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265224395 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372001789 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101749579 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14054473 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348010736 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142544034 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099315024 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096996814 seconds)
  done (took 2.939937784 seconds)
done (took 12.99983584 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091469796 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216526896 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637858811 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.108516541 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.204813316 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161770116 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.291254275 seconds)
done (took 2.560796738 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355438897 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151148814 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086416528 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085074105 seconds)
  done (took 1.519691484 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080376408 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0931623 seconds)
  done (took 1.02466246 seconds)
done (took 3.392906351 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085890519 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083516413 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081612696 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103005072 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.082647388 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082202135 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.136628062 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08404798 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083273292 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081882723 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10524986 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084347717 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084060807 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101536681 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083728647 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084660522 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0828342 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10242945 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083431528 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081548621 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099413475 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084442287 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082204623 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081878191 seconds)
  done (took 3.031173054 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109151129 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084516514 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104730069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089196119 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08721363 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104965677 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090232723 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084949786 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087796598 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.105038598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088350052 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086772275 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103038168 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088235577 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085422497 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106915796 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088828662 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085199883 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103928113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088360478 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087980026 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104056597 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088983624 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088030098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106354946 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088759973 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086268604 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101769262 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09014462 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087913252 seconds)
  done (took 3.655520111 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095526959 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082885566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086267112 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114089443 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084483456 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087369895 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101383381 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085235985 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088299999 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086209758 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107741496 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087428425 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08274527 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105828502 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088811714 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089625888 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095423812 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103065169 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085055667 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088313267 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108170946 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084619485 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086956101 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086535417 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.105197052 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084015526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086922372 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104140027 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.087878721 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086956883 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090243088 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109538063 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087479445 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096444983 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107343474 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088959635 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09253928 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083365569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.108276705 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084082877 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083889605 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104981221 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0857883 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093846065 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087959659 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.107129947 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084228396 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088856535 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104666203 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091701069 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083340911 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083807803 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.108706117 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089578511 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089926737 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.101801495 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088720604 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083029952 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08763182 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.105827425 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084212055 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08289798 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109728107 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088921656 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101926812 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111908802 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08601905 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088575551 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08700709 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.111061257 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090751458 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097509743 seconds)
  done (took 7.568883558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100423579 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094175953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084943791 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103464496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084498239 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085239709 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107215491 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086014555 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084841401 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108558911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085984256 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084661566 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084149287 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104709494 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084850834 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085388847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110313798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08492294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085166183 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103865923 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086358388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089095687 seconds)
  done (took 2.890897074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227509677 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091486136 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134757123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116960527 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103336552 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116383961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090140581 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089941666 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10846871 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09494031 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092761408 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108823858 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101702418 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092232127 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112333581 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093397826 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091294294 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112890732 seconds)
  done (took 2.840980755 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098640604 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.086403499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1270398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087549092 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086008924 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086385141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111934199 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107676384 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087545056 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.104746233 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094098047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086686778 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106635061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086765946 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087887755 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108650413 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087755652 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086783294 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113515836 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092334909 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091767366 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114379323 seconds)
  done (took 3.003429756 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101956881 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08618329 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12371918 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08965861 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085035471 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085337087 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110856378 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086350885 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091955632 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106311922 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08705532 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085385506 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120320693 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086593421 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091479066 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10585733 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088049452 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086402984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105490179 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086674925 seconds)
  done (took 2.773493245 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172532463 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122394781 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10573945 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113317576 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124922125 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106010544 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111855522 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124156864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10654638 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134363165 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106980269 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105743953 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132718086 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110146333 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103990819 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132504876 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11259915 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131970392 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106775075 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105349205 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136031526 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105391637 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131610633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107200911 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104965454 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124651231 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107342253 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109549195 seconds)
  done (took 4.164105359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087458472 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086074141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08516778 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104095397 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085242039 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083642833 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084300554 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103716276 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086578616 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083879354 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104506526 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087950187 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086977807 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084636155 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104748179 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086020018 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086084492 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083902285 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105128226 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084870973 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085344011 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103648659 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086272867 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084857877 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083906584 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105217824 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084198595 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08346733 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103637267 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085996678 seconds)
  done (took 3.581283619 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098093602 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093966312 seconds)
  done (took 1.062707692 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09481657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100822379 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085744631 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105324888 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091848696 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085874518 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113551384 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093017734 seconds)
  done (took 1.642352951 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143753981 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162506642 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092536884 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097667589 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163450312 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154534785 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133533896 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091089214 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106900874 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082115378 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.156780521 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082197191 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089786603 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084072688 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110136025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096074496 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086335645 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116615214 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093119902 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088481338 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111575988 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095757954 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09133644 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117593953 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08342168 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091350359 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112102611 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101787276 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085215783 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111560255 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088449795 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085623727 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109122112 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093291291 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087562286 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.164789293 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096904578 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106424644 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091306817 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092837487 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.139912514 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088266127 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091654237 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087640118 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113495693 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092215175 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091264771 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.107353321 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083161889 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084603587 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.10583946 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086161868 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085815164 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109697608 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091137322 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096064538 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108176781 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08722877 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085252584 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083956656 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108359234 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085817478 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09164341 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11045645 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092133599 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08983505 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108377492 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087092264 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087479527 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.1075219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089908809 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10481044 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110122072 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093403163 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091233792 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107238602 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087953823 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092685259 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106701032 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092288606 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091531719 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13535321 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092998612 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084487112 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102905062 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096352488 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089116026 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089997759 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101641488 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09906717 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089799608 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106950388 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083546644 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087751015 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104249951 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09266337 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083190806 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108939118 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087780104 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.092606991 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092563519 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107884956 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092131524 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09301524 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113142083 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089949212 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155136089 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089099981 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085411883 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.10725677 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09437355 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083755248 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089374086 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.106580613 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088189416 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084617326 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111648422 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091883419 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.089513831 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110871896 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093878093 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091248862 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108223182 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089351843 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08699852 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090821018 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116144901 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092432014 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.089869709 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.106872868 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087770248 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089050085 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111800677 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087762011 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093231588 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105331048 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.086915656 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.089411068 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093106817 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109927067 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086184862 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088551714 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11208931 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089779079 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090189287 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109897844 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085818816 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08170234 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110448703 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086340385 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086909764 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115440911 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08749174 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08970502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105799195 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098028445 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086783726 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.092774176 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111136962 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093851844 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092819459 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102035714 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088569231 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090358656 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11114182 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087940265 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087756217 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.105898705 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09790892 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084079091 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091103788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102626766 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087501862 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093518256 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108943047 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09274784 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08532633 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149244433 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102708423 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092905449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109651325 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093907145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09136429 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109219304 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094326205 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094622614 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093401629 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111216119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090639412 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093786552 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107885552 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091205417 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088643408 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11245101 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084044029 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089105331 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101462167 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094297044 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092636882 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092864861 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113542939 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090846597 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089437742 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116425447 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087038253 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091971919 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103338277 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093973282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097578773 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113692374 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0951312 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091863899 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106377479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.089364095 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096624958 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090236779 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112108471 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088774553 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082819264 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103545187 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094847697 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090659515 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104862574 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087946806 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092848171 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092407046 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109083051 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083446295 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091909475 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115558652 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087328501 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090313279 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107304368 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0902147 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097719422 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104304866 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088675005 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092819228 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.113233469 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088332462 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090378653 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.11135876 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098327587 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091406919 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091448208 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109422504 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097577374 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08967595 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.107153493 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088857427 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091367035 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102818191 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090902542 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091690732 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087970775 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107933179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096326207 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094649426 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.1152405 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091863834 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092776164 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115401781 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096336641 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089293853 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114645581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088015374 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084360334 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105694578 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085040607 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090122355 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086569623 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.113880531 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090354918 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089354874 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112431344 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092776436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088461514 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114269141 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102069904 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085176898 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.1042329 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090395341 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090365678 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107350936 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088741134 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088762427 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112780203 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09488215 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094190553 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106868013 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.090109215 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.095471091 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.095591412 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116088665 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095693889 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09455969 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106743028 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094970601 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089034929 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115167731 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086641877 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099835179 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10994062 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093116551 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08827789 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108242837 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088778269 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083863564 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087275077 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115783452 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090418894 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.092265814 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110884298 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090299511 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087672998 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106764018 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096751406 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088618178 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.115896477 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089815896 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084785224 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083691929 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115117944 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092213211 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094835499 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107904519 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094734999 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094893032 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.1122167 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091137565 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100035102 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097510115 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116696515 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097209256 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084309258 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1101654 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096905428 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087619043 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113035144 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091551405 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084928332 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115085514 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096756415 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093468204 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109968464 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086618024 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088530165 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.095417484 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114296138 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093326804 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.090992251 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113253238 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088049203 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092682232 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.113809953 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093578935 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095221086 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110070768 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.094700976 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088308945 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.094510187 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110390302 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086454755 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08440284 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108822581 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096933189 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085992033 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116197511 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096194018 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088410681 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089170932 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114809464 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087928043 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094227781 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115191164 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090586752 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098274528 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109967558 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091529578 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093593287 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.113842255 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087628787 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090268809 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089882213 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116863726 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091082706 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093783961 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112658797 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095645369 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091323703 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.115601859 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096479561 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095255235 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085049781 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118542148 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097188452 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091299728 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109673668 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091291628 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086460395 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111746683 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098331283 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088556077 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118643416 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096876924 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09018568 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109424011 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097389887 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090823146 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095606611 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110080778 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09369143 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085658988 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116478144 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091508657 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095746902 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109642112 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087951875 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094792223 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.114789356 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095614728 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094793708 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.115388772 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087500748 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085632467 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091695072 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110200243 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100156112 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094380319 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110772826 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091603031 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090437808 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.109779007 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097912944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08627712 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108077719 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09501176 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094439033 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089631164 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10919807 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094073596 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090684331 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114139193 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092203325 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0863464 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112747394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098397014 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090507621 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107476386 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090743703 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096954783 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110388996 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090893206 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08640828 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09761667 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115188854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097118662 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088071969 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114667263 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089816299 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090791607 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.1179956 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091806684 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093032054 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110747998 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096514742 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097683257 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105780299 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09085633 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100398389 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114935402 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097850093 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.091834881 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09063152 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118641167 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098130575 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09092505 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108239972 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088434334 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09048157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106626102 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093292135 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098087087 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110394777 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091634629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095002316 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09372009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112996664 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092790771 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086636822 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117900538 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090595298 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095915851 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106541764 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088202277 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.091658944 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095497733 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11276565 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093350418 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0909659 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.112511739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089288014 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090252377 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115489205 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096783975 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.0957292 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112076672 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092488734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093565495 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100098632 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113179539 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092404443 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101102887 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.118658613 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09386624 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092162315 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118178051 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098429425 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091840953 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.11769945 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09190917 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091641896 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117470037 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.09904963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102547771 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11168393 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087997805 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095511738 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089748514 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109677585 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097960018 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097018069 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.118911508 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095197851 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090077723 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120130285 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099125929 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092449775 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110826024 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092406787 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09552421 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110670957 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09690702 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089877702 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.097778653 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120041534 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0970189 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098825146 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108462676 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099988104 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095786979 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123051226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09203391 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087430416 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107458393 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094272715 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097937336 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098891809 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.115432192 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095663431 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094719928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113975035 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094289246 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090422985 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.118511513 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098023672 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091373765 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09373324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113544251 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09470594 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091748246 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118439233 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098972369 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093697047 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122210587 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098142617 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092095834 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110558231 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095019204 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.092540169 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113163631 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097379195 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090714439 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086990009 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117636808 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099351308 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092073869 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120317296 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100852332 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091331382 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115780326 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100786858 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094561898 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091821015 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115922111 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094899779 seconds)
  done (took 59.723132937 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144368183 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098553577 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113494098 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09297621 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110682001 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115211662 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092828159 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093553827 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11365148 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104844675 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091871558 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111757302 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108607147 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113040081 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132144077 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10290562 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112462195 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094621574 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092448532 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092939362 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130373333 seconds)
  done (took 3.190097453 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112311461 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106343224 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124596585 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108348146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099091129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126067385 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104426402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125050379 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107858766 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099335388 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12930648 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104411575 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.120320956 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101822056 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10083041 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123455557 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108151805 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098932721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126750596 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104541126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122008114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106390699 seconds)
  done (took 3.383639926 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103890879 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096815852 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097928523 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114271967 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097674977 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091577467 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120778351 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.094661014 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101723057 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093462024 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110892838 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093715122 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097439838 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114361082 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090309682 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092659259 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122630423 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098400688 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098325145 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.092576497 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128829132 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093016924 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.093079984 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111150902 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105725785 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.098054694 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.114210604 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097315716 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088791223 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118545356 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094974233 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093545688 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114971165 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090419167 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088971498 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095986186 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118736347 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093747901 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09293878 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.115371624 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.093713593 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0979029 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118598627 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095873774 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094505602 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093125519 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.119789951 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093990956 seconds)
  done (took 5.808844178 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126032035 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161213464 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097735999 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135066382 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131133088 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103643398 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096771777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135224276 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09595749 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117742232 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10999155 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106810659 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121361115 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101100757 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099643831 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121026613 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098879225 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095956234 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122814543 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097225156 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10083279 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121486416 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108036096 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127340583 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101833142 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096207128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116062078 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102706229 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106093308 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122838206 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102321657 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101896567 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.37116272 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100145185 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096434055 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120696387 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109524313 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097499845 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1215716 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095692787 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.097751547 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122768719 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099541958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12849924 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09976419 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.098563878 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117940623 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095711831 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10538565 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119389026 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105706245 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106855421 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11980353 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098173516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100893779 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128852935 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098324599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095267301 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.121867581 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107140138 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094425492 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122820498 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107994186 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097428615 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123743809 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107830335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119054454 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101567109 seconds)
  done (took 8.805276354 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13437374 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102195179 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130368457 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110955622 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101270497 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123403989 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102074896 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10094896 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124422935 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106160564 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121916073 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201952629 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11976967 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106574206 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101114874 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123828942 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102127041 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101134471 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124830689 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102135716 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101552181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132063596 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101602485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129219391 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114304112 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097657097 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122809793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102469777 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109194571 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122793904 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113534169 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120869224 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103733906 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110077949 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13497903 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102244975 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096028339 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124451268 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.102926353 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101793774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120949365 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110448656 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101655554 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.121660229 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10242435 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101729918 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132467419 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.113211072 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127663722 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109297971 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.101953384 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133605294 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103317593 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123857974 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112709977 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115780426 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132411268 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109994305 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122884771 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11202668 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10912391 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138760715 seconds)
  done (took 8.081908237 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096869843 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095697737 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093139425 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115751256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095666037 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09403931 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094712313 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117383562 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095523963 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094913338 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11660162 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094969031 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093697929 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094545517 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116427055 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094575996 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094166817 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092921532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118031452 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095420821 seconds)
  done (took 2.942935555 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107001292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113409914 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116652222 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103681609 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097639871 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122291214 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099539773 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097501724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095969165 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120763386 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105969997 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104619125 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119709696 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102278165 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126257854 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104635335 seconds)
  done (took 2.680555883 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116626799 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114288841 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.191079569 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100024636 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120532985 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10539669 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097210672 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097936707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120096952 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103650096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.100753163 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122910137 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099233016 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097117284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120059279 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101684295 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0950897 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121525374 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.098507272 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.166137566 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.124637629 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099064377 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09832057 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123979901 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099333417 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09962167 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127119852 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097128155 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098544943 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121101616 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099749562 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103654662 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.118992884 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102948479 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099899666 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118726865 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099783348 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098901699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100155457 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120291011 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101175486 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097781257 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120621021 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100506873 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094757496 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120554751 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096870841 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103904307 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.11910398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100841471 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099432813 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105354505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126694805 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106668707 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.105091158 seconds)
  done (took 6.986064361 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111114147 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100500295 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130281208 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098435488 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09887458 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097782449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121492632 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099954826 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097459595 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118401503 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100930635 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098675599 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119646985 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100530442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098376601 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098107273 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117449905 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.098467523 seconds)
  done (took 2.855769373 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104379125 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097773541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102216086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11970658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097779235 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097142702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117862302 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098450093 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097244929 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096572208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120734832 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098789206 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095881287 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120065576 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097503755 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096716816 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119567328 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099064979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09756081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096067254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120777024 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097652232 seconds)
  done (took 3.240963755 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111014119 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.18401248 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106961151 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193519971 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097207322 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095644695 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127952446 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097787295 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113205457 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117302754 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096515818 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094936719 seconds)
  done (took 2.38770653 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128335778 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136199918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120230952 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100712982 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106855139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124603633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10313131 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101121908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132980848 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112711574 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122773451 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112436331 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110419695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131133188 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107940151 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105648565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12380101 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102513738 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096502971 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140235774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10172899 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132429113 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102586776 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101862631 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123912384 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110248617 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13015308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115394154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101286498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134328337 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107660508 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101324526 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132914305 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113614835 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120315541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111902431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101856577 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140231971 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107902956 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131398149 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101398257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106516525 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132284644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109210574 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109469211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12500049 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108058806 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101814304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124965753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123926473 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129832855 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110922091 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12829159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113187078 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109487924 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146151425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113501888 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132644237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107931211 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135347723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112453858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107216028 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132956191 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114993825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128380163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112558083 seconds)
  done (took 8.677952587 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141181597 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099485131 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123807749 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11468458 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109964539 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125603697 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102195647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12398544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104401285 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098474008 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170838648 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102572498 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113112166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13274936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102593347 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123260423 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104984615 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110572221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1215698 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125871697 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102191116 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133593415 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111237565 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133040391 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11485796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127984628 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104418032 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102874048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123691474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103956192 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107328485 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125035031 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111359716 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098540689 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133255179 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103528367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102721038 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130161901 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10354864 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129117764 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112939366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117604668 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124677358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102574562 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135407285 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104322628 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103379175 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121150094 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104573567 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099169373 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134739845 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11596627 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112622567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134138446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103281959 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124317906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104842541 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103265032 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125318518 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109681747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110045434 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126184396 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12544043 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125022583 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103938746 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111284374 seconds)
  done (took 8.612093877 seconds)
done (took 164.442223921 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150406877 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191533474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145483124 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1797819 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092821888 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127421707 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148323668 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148170087 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090686649 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115955077 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093730672 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09664412 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181121086 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093667106 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09204494 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096386934 seconds)
  done (took 2.998882944 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191783472 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310009891 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108929028 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118473784 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101257705 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099300337 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11868192 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099732556 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097363124 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127056116 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10016767 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095153801 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125912512 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095825246 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09636708 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12140094 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105202026 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098784836 seconds)
  done (took 3.181591317 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117524691 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142492911 seconds)
  done (took 1.227363453 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129673763 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19720037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274960069 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17020604 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121800061 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13708866 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15121966 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132479886 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.180333114 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131659395 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112238264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097114729 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146470814 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104086808 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111301818 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1209679 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126323842 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109388448 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131861633 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100130674 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118909466 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.123657446 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102783721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.130187496 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170608163 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131671671 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102959502 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100283442 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121391465 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111568546 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102666913 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136084562 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112079127 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17375233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103367604 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171458227 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105648641 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119480115 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110169954 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097522299 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123480062 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102923809 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113199582 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120311137 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101687596 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105303455 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123576017 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.099896665 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103904392 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.131041718 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10632382 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12668755 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.146968501 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129660243 seconds)
  done (took 7.83468211 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.860791654 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141287661 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09896464 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.010502042 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150006571 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112643995 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.860203344 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144259938 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252097941 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874863028 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115429533 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110628822 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.25748588 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.229146216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.994461449 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346583431 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692044228 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135902584 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125961945 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164089973 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106545129 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147671282 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119258327 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.419333919 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099456771 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097438583 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128224846 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110931445 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178322614 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097809422 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12406211 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172714511 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266329624 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20960045 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119741638 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098363395 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09666565 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182341366 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269750571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217778494 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185619468 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095793161 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096891841 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128617868 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118260919 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093915592 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180388383 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188869011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187563102 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10207728 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131251314 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109689603 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104536499 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177515904 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095297777 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348991125 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331074374 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098160244 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104794209 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137494542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265659744 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096714583 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232149171 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148197759 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214638023 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097796364 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809695501 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183182575 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097974739 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127925842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106102977 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10297523 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128784974 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158069528 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394835861 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10876759 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125684753 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098124789 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242300651 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096994282 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11983351 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158428782 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122066205 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107080519 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132776275 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11158706 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186326014 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228612802 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133850103 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106310709 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126453832 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110637213 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098458369 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236821747 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227082848 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176784806 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235183535 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107197823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181826403 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182818933 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10572789 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187460173 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10478767 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137135155 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106944652 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222670804 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155916481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097725138 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12456726 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109269344 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135160761 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12464984 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106240298 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185209715 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466331421 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180652292 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096897698 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102660644 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10683945 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181666765 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126064831 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262173761 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109337575 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182090797 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106589272 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09504757 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129955681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180371781 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109144702 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106116531 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129849598 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10918838 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.252212203 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222081271 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110699769 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242266156 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191555693 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105211098 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18892755 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128102096 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165120912 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131855189 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106716865 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098570098 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797588032 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13499119 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105986937 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126322627 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182847876 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119642921 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101426522 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.097990874 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094673174 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802719028 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123527889 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097674833 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098420849 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128365859 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107045164 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104857426 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127546363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179180645 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244532082 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111494913 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128149698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100069376 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178597189 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101024259 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098099794 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120392339 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100827115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106631681 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124661728 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101185428 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190762012 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157848043 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251855456 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556884515 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099108827 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098314575 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237431284 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122765167 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299693482 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106001878 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231739681 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185909864 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117924573 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329296827 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163564044 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205989153 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100945143 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188294553 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094592507 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130417402 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177394647 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10038251 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104959305 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176655175 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112335176 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134854756 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.998822543 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098162556 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248805433 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096072138 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185728354 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099455449 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129473501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301158402 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097743394 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13994082 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178027811 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10381393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099174624 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.601884276 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099166322 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133277336 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107020085 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232323469 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185241735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127742619 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109874844 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112164795 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180903986 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234523653 seconds)
  done (took 45.111378684 seconds)
done (took 61.316260443 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297898599 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259620494 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.30775831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210076474 seconds)
  done (took 2.138924012 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.266749399 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162035014 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.234762479 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097257742 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246728162 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09688271 seconds)
  done (took 2.099816669 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.492110199 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.373106549 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307584219 seconds)
  done (took 2.170723694 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.255152401 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246949501 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354133693 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.413123357 seconds)
  done (took 2.384835281 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302874609 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129119311 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123790649 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.21117605 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259506305 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.233892896 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147246723 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195046107 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130361381 seconds)
  done (took 2.776542041 seconds)
done (took 12.561585546 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.394954884 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.235926825 seconds)
    (3/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.302462829 seconds)
    (4/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.36404603 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.205023755 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.226306458 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.198457908 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109736316 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.113612811 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.370068095 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.234941365 seconds)
    (12/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.307562512 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.217937981 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189368822 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.160246387 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.22372934 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108637485 seconds)
    (18/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.295276229 seconds)
    (19/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.261475896 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126186053 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124922061 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.196186066 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107206133 seconds)
    (24/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.248896142 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.130240566 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.247305925 seconds)
    (27/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.159801801 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.212266369 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.197061177 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083062402 seconds)
    (31/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105349619 seconds)
    (32/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.121623064 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124230949 seconds)
    (34/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.223492181 seconds)
    (35/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.129112558 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107130515 seconds)
    (37/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.097413687 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082649412 seconds)
    (39/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.218298046 seconds)
    (40/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191006405 seconds)
    (41/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.200685901 seconds)
    (42/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124608923 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083289246 seconds)
    (44/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.237710049 seconds)
    (45/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.174665021 seconds)
    (46/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.087255029 seconds)
    (47/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.220948903 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083527795 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.246052119 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149357375 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19027618 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.104733522 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.216373371 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101759644 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.186042382 seconds)
    (56/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.173546791 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082522245 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.157759196 seconds)
    (59/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.213410447 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.188216186 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.238443014 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101640744 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126846012 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208638827 seconds)
    (65/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092105892 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147455684 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213120828 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082874046 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129879656 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193413899 seconds)
    (71/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083369171 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.140268299 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106230464 seconds)
    (74/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.290985692 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103941403 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102651498 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.181778777 seconds)
    (78/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105513206 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119786145 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.10751671 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105089292 seconds)
    (82/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.158425175 seconds)
    (83/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1560973 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105366692 seconds)
    (85/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.144021754 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.192873369 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.141269055 seconds)
    (88/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083713046 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.158621564 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084204847 seconds)
    (91/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.146333534 seconds)
    (92/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.081369569 seconds)
    (93/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.218958122 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098645692 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.104398059 seconds)
    (96/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10849045 seconds)
    (97/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.10788197 seconds)
    (98/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.145873133 seconds)
    (99/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.174784307 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111465628 seconds)
    (101/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.189292517 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.126974701 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12369655 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21030733 seconds)
    (105/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131927093 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.191405656 seconds)
    (107/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.104789646 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.113554536 seconds)
    (109/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082795894 seconds)
    (110/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083783426 seconds)
    (111/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104828132 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.128662014 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102872072 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.189135868 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108826552 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102051136 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089341134 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.104862935 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139438074 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092861632 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08823653 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082728862 seconds)
    (123/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.107071428 seconds)
    (124/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084610059 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084140365 seconds)
    (126/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088751191 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097263738 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130175192 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.191789557 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108218687 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104311056 seconds)
    (132/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083875043 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083699157 seconds)
    (134/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124309359 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104811012 seconds)
    (136/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083834439 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.1046463 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.14844146 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122604451 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083840801 seconds)
    (141/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.170879953 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085827767 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103324314 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.106292155 seconds)
    (145/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10905888 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084334645 seconds)
    (147/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155019551 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126475981 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085447475 seconds)
    (150/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176680002 seconds)
    (151/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083488354 seconds)
    (152/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.112764605 seconds)
    (153/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113576532 seconds)
    (154/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083646304 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098358079 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.14150984 seconds)
    (157/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083919111 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083437179 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105790789 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109463541 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100453453 seconds)
    (162/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08399994 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084138166 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.10634353 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105070385 seconds)
    (166/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084434134 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.105598537 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.175838455 seconds)
    (169/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.090118471 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123637651 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.088144598 seconds)
    (172/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.112898949 seconds)
    (173/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085332697 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084461801 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098574047 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.129235219 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086083239 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084796348 seconds)
    (179/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083180037 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091909467 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.107345883 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106026555 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119660841 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082699127 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.108559258 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.083540873 seconds)
    (187/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.088984234 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098017138 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083513252 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124309005 seconds)
    (191/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083641027 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102297375 seconds)
  done (took 27.76890132 seconds)
done (took 28.776018773 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.215639757 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129909495 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10861935 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1076699 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206048905 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114469913 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142320545 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112020433 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113485304 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.130916369 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099688135 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117529963 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106893959 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203302537 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110895347 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126835197 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100516949 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114491899 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143672653 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.118946747 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.20588962 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102349954 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113342672 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125458905 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181182779 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126341141 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107728353 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107208971 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.138362118 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.10716342 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107600462 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099540881 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.145574645 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118414183 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099425464 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132334348 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100257696 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089927224 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130215464 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109505808 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115765779 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106422839 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135699411 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101681915 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106898274 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131974248 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100538255 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.110941289 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124200176 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108366636 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102070119 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144366335 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107628105 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097431765 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122600136 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101869573 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115237232 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099793496 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.14276796 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101011362 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100270553 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126463478 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110124113 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09946933 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.130820023 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102511659 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108425129 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.131758355 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107602765 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103012767 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099988619 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132218473 seconds)
done (took 9.745477886 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106362841 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146508161 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202802478 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214357317 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127616491 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11284488 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137543143 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121507326 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108904105 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146367473 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.134922171 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.153588715 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18396974 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.137697177 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114956616 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.109512547 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133930504 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109555831 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.210858358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124778656 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125996628 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.139560775 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126700092 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141932977 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105720179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125714001 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132086848 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111953278 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103050234 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146944907 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127227143 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103761945 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131998938 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122225941 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118838212 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.135943418 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116007911 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110127833 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.129372071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105993089 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112333384 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14453557 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105303099 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114888582 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.136812094 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119314008 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109712676 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.14094065 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10694864 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109758546 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130085296 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131662841 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113311227 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.143574083 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114286282 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11486206 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141377869 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117110983 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106760472 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141927512 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105379795 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103716654 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130862707 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125953145 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106439884 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.14168274 seconds)
  done (took 9.511347581 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125708813 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135983706 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140425828 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116302035 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108403419 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124135805 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099412708 seconds)
  done (took 1.901334413 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101164079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188906159 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211242225 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211376966 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.181712228 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.2199537 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146195925 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100574982 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131821915 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134861034 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189893893 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242993223 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.105499674 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140966089 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186698644 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125176644 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189794213 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126981137 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113196862 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213870543 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112933116 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127886783 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139462772 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099936234 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210592234 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10136888 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266870502 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116015359 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132106634 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115407918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11081526 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204881388 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208437113 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114617226 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105008872 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210920469 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205754082 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112063049 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.224273061 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104893836 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.209011641 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11365312 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115645396 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.137182115 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116992665 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.170857486 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145470373 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112672045 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.111625021 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.220197575 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109033363 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.213922225 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.107487346 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.13896514 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110742842 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112213523 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147919543 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112957747 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.224293108 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115331175 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.213381309 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209462671 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.187807154 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212118922 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122265401 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213444277 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206812965 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11335632 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108045301 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111828067 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213703993 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.109300066 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139302606 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.173353774 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143617955 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185443817 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.215254976 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108990901 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.140439654 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104083589 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.109077318 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.126934711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176331171 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137803136 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109944175 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117799332 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139850185 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112155273 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104943464 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149988778 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111929099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.111097518 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144146185 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.112179142 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140908639 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.192047298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.136124654 seconds)
  done (took 15.658438815 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10661292 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101768488 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105359622 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12853202 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102772069 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101842222 seconds)
  done (took 1.716968657 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141613789 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11370346 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147779452 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114862391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165552925 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218191851 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.227797976 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109198549 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156529554 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126280984 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.218141129 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200403365 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.225816488 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115818046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.226884154 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117555077 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.229264571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110366513 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150834597 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110949528 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115238229 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144164734 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112164931 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212875859 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.114817219 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143533759 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111385374 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126229807 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146402528 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111748288 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116994385 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141162867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109445783 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109857705 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229510145 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.1069174 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13719604 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125424459 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115778097 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143397624 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.202913297 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138443246 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123007212 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121967631 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137492054 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1082381 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121376047 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138852032 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.226029123 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124231755 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123883416 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141583131 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117398633 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122181365 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134984326 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111272704 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121885457 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.229464476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.116792945 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135920803 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114869348 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.114514767 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137635303 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122091219 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.113708247 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.150560074 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108399019 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11427758 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138071644 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115229846 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121393549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.141105262 seconds)
  done (took 11.271193129 seconds)
done (took 41.104907152 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.600349992 seconds)
  done (took 2.667175533 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.915134994 seconds)
  done (took 1.984746397 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.93471262 seconds)
  done (took 20.038046835 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.53531094 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.612594261 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.023744366 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152997612 seconds)
  done (took 3.39815058 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.03800626 seconds)
  done (took 2.128692947 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294909434 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264772217 seconds)
  done (took 1.639435731 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.751452464 seconds)
  done (took 1.842079111 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.541383495 seconds)
  done (took 2.619342946 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349142916 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174526555 seconds)
  done (took 1.618951678 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.631084929 seconds)
  done (took 1.727271277 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.210212769 seconds)
  done (took 21.307002351 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236375567 seconds)
  done (took 1.335673738 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.279895394 seconds)
  done (took 1.382029779 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.769044485 seconds)
  done (took 4.869602996 seconds)
done (took 69.633593288 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113152463 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115943538 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114148091 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13926408 seconds)
  done (took 1.57344596 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122547169 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116426604 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119459956 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144136789 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121997933 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114470882 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143404848 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118104477 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114970927 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145034771 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117129129 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115115655 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145321524 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115429934 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113415114 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144997134 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121390536 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116961363 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141994296 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118564344 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117063415 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117373642 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147083581 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118610541 seconds)
  done (took 4.113933499 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113547131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107190183 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107782792 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131719664 seconds)
  done (took 1.56606552 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126559286 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128031749 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154132558 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124767516 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127914531 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153801914 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11674713 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113214101 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140744534 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126342313 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131324484 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15496818 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128983421 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117826383 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154140813 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110759366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116688597 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155237777 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124261852 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125174193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143023525 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123467867 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121661249 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151308441 seconds)
  done (took 4.273456639 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189576875 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12347922 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.163559353 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15911479 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.16634633 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.111244636 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.134236302 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144800006 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.11860999 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.113684125 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.141249356 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159578951 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.143616148 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116503775 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113632153 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144050754 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125450884 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117228678 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.182206484 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.116641588 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.144381062 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.125452387 seconds)
  done (took 4.160074726 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118422229 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10576509 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101445921 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132962869 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.11799372 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107836765 seconds)
  done (took 1.794429186 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106225096 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100342182 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100247861 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126091991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106451919 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100187705 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098115592 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127416723 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100609446 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100250445 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126861631 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100394136 seconds)
  done (took 2.403118793 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.336896856 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10615685 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133064033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109077075 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112225004 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103257693 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144497173 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104746317 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267712096 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100722891 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142349729 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193982369 seconds)
  done (took 2.965098565 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203494891 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14141011 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295543317 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368287392 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162196028 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183770898 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269045953 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191715641 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203932576 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1330182 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24174553 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151337994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174080796 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171481502 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159431389 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160727549 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191837129 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186323047 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170684215 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193940604 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180300183 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186549607 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176456592 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171150278 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13130658 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183589176 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114856473 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125670989 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190905476 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158372206 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193279256 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168485727 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135939828 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216966799 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252661447 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167284992 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286090818 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15615155 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177808597 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.204934002 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253076076 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133227278 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210333829 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174384283 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125479968 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198455316 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150055727 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.195659074 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.125590695 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136824367 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202576681 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197193492 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1723311 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15847972 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309968491 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160652434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.134293947 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197239796 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206329764 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183826025 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188722133 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117920388 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206165068 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206081161 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174765761 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163772676 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159165694 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146341398 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163253552 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21663663 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200624645 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154782155 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.221601349 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124207125 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181333461 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165651138 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201304714 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169923869 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181622554 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113980784 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172512576 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130976166 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147539927 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200158559 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115748451 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222102481 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125899989 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342652667 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213600532 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150797134 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182902829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179852899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154751482 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165315455 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110414066 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140159434 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18501165 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151098205 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154338409 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15028519 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159552832 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123327852 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144285275 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.144724671 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151936543 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158903592 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160371306 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179516502 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124644042 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185778966 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143683792 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.172777025 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164411162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206118435 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125344653 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152749087 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185121345 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178669773 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126845502 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198308167 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178676144 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174710654 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131766886 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188449662 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182264768 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16478365 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180981482 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160081817 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130041561 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.173441569 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155831774 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182391206 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149752965 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148373486 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146119575 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219095454 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122614949 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130357218 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190685917 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125411793 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147930932 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132781038 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155891429 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136902972 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138231912 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157198343 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147512987 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180562643 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149534118 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179271076 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128324644 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201048525 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127064503 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182123666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140766555 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.138901729 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169975134 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207896241 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123230871 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223891167 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157625567 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216175269 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183005943 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125556955 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201943893 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122466658 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11359092 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185443302 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14881541 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185536088 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200763107 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211462022 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160206416 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171059636 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143034187 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189851382 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168969194 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175459051 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13739561 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180093061 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158669328 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.142026542 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119547349 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12021675 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160279583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125275431 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128618917 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198098992 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186862648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207618441 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153589015 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132595018 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205741826 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.119143891 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184614547 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157934225 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162211993 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.174342094 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202973582 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187077824 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136079293 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183438904 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115916299 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121287439 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155177727 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158267758 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156403838 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130402713 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134351784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205542771 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197244278 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142131992 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222636245 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190554903 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187948595 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143149114 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164037306 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193145901 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152889975 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17958972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158889183 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151894165 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203126354 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134238759 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211410065 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178636975 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159315735 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212377288 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150711523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153497931 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145911663 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182995294 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134148075 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185361284 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141773529 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122787953 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176408555 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13182654 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145391224 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178818918 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164879735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16416651 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182126916 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189539662 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121452589 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135548641 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183651334 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138541875 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111836969 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194337546 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206726393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140224391 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179033095 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170255979 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153222762 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315167802 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215226346 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170594571 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159836716 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134241097 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185168112 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155462405 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18745225 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200828596 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137265257 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171617312 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183489716 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137417827 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154235034 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142563481 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173285797 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.145512146 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153003887 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152980064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134929778 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207855907 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161688018 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155119689 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181834014 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144656834 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.138783925 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16377618 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188823964 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181873408 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196093148 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151517955 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187680076 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186789674 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145009335 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123826557 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124432745 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204644943 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123059009 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183879828 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202889635 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187719519 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186685692 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153780418 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161845724 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12113192 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180126817 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143981136 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217451521 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130891022 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161703854 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214612946 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134780947 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12593497 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184478594 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303770392 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140717395 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196389454 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120918068 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296743458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125550498 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125969746 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186085021 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166342279 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.155809199 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179226923 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184446615 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138956597 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18457002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132788835 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208077612 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188646814 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191895106 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197231151 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138488802 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184155057 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155104424 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2008545 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136926132 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.168276805 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15793003 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205922541 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176090748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15468961 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153832401 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181728699 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152062892 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194620596 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13123339 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215532242 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122203916 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187844759 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13241109 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117695924 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18246306 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.20136476 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126816088 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203322928 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153739309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157124996 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120993339 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138949277 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18008076 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132143839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.153009732 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177789611 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154032088 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158869261 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203279808 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124659352 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179745382 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142336645 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122563285 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164575545 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137280378 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153828939 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166750647 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179013879 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.154086593 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172300369 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186882638 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188623064 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151628476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165600679 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666718871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.120643519 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206309442 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14187067 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213865742 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143114765 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187949845 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152919967 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173698938 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158419374 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172099681 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234778412 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187570077 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177421305 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128763782 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135922414 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163673289 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127330028 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174647482 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155498772 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134174363 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158667281 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15139107 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166162703 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141164898 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160767949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178348149 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169888741 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179863754 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207633883 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131043858 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186960305 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165340253 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154753231 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157646102 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197051537 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134458496 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17236671 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.126331974 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158923608 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177961063 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.118438432 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182395751 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155920084 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183793863 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153541985 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15800884 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156843467 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163647411 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156318002 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119585141 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176166382 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153921608 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158395526 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.121024449 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180053757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154820978 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.178875343 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121573923 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167537473 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207777591 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.118264051 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126365959 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304782377 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184919839 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183380057 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174168884 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130416515 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165778946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150673529 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147551303 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185230997 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.122892977 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154952484 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.125968679 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195322902 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151739981 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180365102 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175433194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182821192 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189077072 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.158878429 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.289451319 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16138263 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154875446 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124002591 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15164715 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137137359 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127412542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165040339 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212927031 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176857473 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.179243087 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140743935 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156700907 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122256221 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124916646 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190674432 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14668407 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183001556 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138962656 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111149966 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168449749 seconds)
  done (took 82.182282577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165461172 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150862075 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166244509 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224531322 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194324444 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297825645 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233763592 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262039073 seconds)
  done (took 2.877222023 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118654887 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15688309 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139608704 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143791421 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117092802 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.44649073 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156171944 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117775283 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163978782 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157080532 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141450907 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624255081 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.111802893 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14291117 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128214055 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116039238 seconds)
  done (took 4.163192714 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.494147594 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.592602196 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.209605959 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28191925 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233982638 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179458361 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.80568231 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.695909688 seconds)
  done (took 13.68776667 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146507235 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134943215 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.319249187 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.264622746 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1488725 seconds)
  done (took 2.205123228 seconds)
done (took 129.056110328 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119297551 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.118161268 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117946763 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150742306 seconds)
  done (took 1.684075283 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184241564 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094871283 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09610613 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121260769 seconds)
  done (took 1.683701785 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.449334572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093999147 seconds)
  done (took 1.758922628 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144454252 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140350543 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161611206 seconds)
  done (took 1.650120918 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137908053 seconds)
  done (took 1.329372184 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129368818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118146019 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.239617875 seconds)
  done (took 1.682512579 seconds)
done (took 10.983305545 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118956834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.414069544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430377606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132929401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706461623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424524812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.027636684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172528972 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172693567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135050735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131203871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686557304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.079292873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.357788353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.038688554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.385059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693612459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108648797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143081068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110223096 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009166442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133786545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110371162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108816049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714225551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419935274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106115196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.39652235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107545066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110454834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42472422 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109493176 seconds)
  done (took 17.401829027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117094085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172158746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143586037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111170325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110536389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136891768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121452533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119984809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204877276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106663269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159507522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107789318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113553956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13619991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136305667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108125466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137235542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111715091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115454253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109301717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16140958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106288014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108268775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139151369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107748201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129476335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136734138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119982772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106844464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141253324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11233676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107480612 seconds)
  done (took 5.256292872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15728818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178281345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145342569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146843456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184134381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110489297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220537257 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14600119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201463524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109610634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130849819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134757993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14932157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108384372 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162606721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108870134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11074172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139263724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116340449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109032254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160380506 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108619753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108814491 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13875748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109152034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132582917 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137409794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121369248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106912825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141364666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11450665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108733789 seconds)
  done (took 5.561589222 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124193088 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124861921 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131570439 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162685379 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118744149 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121825676 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152340656 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119492938 seconds)
  done (took 2.257921759 seconds)
done (took 31.670553389 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131802021 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.125638739 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125218048 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15009389 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.193914468 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141377922 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124326799 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.111607287 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149084361 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128256654 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.1073259 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.111958064 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155445481 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116748159 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.224978005 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122073219 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.228626561 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.196401999 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.141883235 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.121697777 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.113427641 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230562417 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118358518 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.112407575 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.235266895 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111261511 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215535041 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.115345428 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.144065766 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111246072 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.223085865 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.117966352 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111214744 seconds)
  done (took 6.057100711 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.211688944 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.113582232 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146633715 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116630362 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.114323896 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146034394 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214221198 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145872077 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118146536 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117118402 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115906339 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226513182 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121115862 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139420696 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117640511 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114582715 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.243313624 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.116105005 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.1069817 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.124411969 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.111123746 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11670682 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256585269 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.109207775 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115822501 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147336205 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118321935 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.119794361 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.144036702 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117559137 seconds)
  done (took 5.437834605 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124615078 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130269589 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133898024 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214639334 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1447183 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160202799 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139487949 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131178646 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170187637 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111324792 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124633297 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177215076 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128784131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121016325 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144120023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130239215 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133989056 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140945123 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119190876 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127654609 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159438594 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129162784 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13766341 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147311062 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109060919 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118049742 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.14898107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127612375 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118153917 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123837492 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141830721 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114309761 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.110968112 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.175197798 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112132852 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123510601 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166524107 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122341634 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123798091 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.170873385 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114597991 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111972824 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.166575665 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166880017 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.110872248 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153331073 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121513594 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124183223 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.139035828 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129904483 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153446047 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.140761375 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131592758 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110924482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139052282 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119258187 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.109893867 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.142521236 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126966427 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113790619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.164126276 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119285397 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121171307 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111210835 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152719769 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109309208 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108653657 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144202303 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139146206 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117191964 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.17726667 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111141804 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122493895 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150861372 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122820209 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121530964 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.108739762 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151856089 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121324275 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116544677 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15227909 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113218707 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113508936 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.156455476 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13275725 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123756103 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.15183977 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124483111 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1136229 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.139908515 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129578531 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11074675 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.143831286 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126448826 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.110575694 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113135972 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154495401 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121872412 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108598495 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166529376 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115390083 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109540807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.166181042 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118037202 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117129237 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.149028247 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156327651 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.109658725 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151350407 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12607772 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11077302 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117778424 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14551182 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110384116 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129053519 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157104208 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119165744 seconds)
  done (took 16.742279076 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.327064264 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316485617 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180318585 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315048419 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155167393 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209304233 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310717454 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.311766079 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111123567 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179760598 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161882584 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.28082038 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141986379 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139872591 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314697756 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.366974455 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171927786 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148468538 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178510763 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124874817 seconds)
  done (took 5.673239415 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133061854 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14719452 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164490304 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14161364 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117433964 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155901425 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111180136 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.129931502 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150177505 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122784801 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11303679 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157590674 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121003083 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.124707996 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157732859 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151694394 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.11908286 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146036923 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136063891 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115300062 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135494785 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139324504 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119233644 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164245995 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128006187 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123447761 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140364754 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117591324 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.114847378 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.11625935 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146415566 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13042777 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.11718635 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.139610886 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124753777 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12787964 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.143781782 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114653696 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115381167 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11480904 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.157997753 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121880922 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119283348 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.131672283 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130319659 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115026885 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121185433 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155006881 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110334366 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126290386 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155867758 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123198743 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119323851 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.159754045 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.116491988 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128617323 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151241957 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124387577 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11661039 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.109218995 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.140388133 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115945841 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.115960268 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.152525621 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124855343 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13214685 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158292864 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112217663 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115477004 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14644198 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11669554 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126749269 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16390667 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.118322744 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.115491259 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153507839 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117726937 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0987391 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120842367 seconds)
  done (took 11.56784256 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141885505 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.117359373 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13060876 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177641496 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.121135399 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116470978 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.148170882 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132211478 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.121165819 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.157748438 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123587788 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125747027 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164979447 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121988504 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.116603965 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159709833 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12269173 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150099859 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161341783 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140981422 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121568804 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149229521 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124705986 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122854194 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172536232 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123653635 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138543358 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.1539617 seconds)
  done (took 5.097490145 seconds)
done (took 51.778145437 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.344405244 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.556635823 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.323534559 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.321279948 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.330047717 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.332540302 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.343834023 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.341110037 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.82282504 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.300613351 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.322621088 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.32143558 seconds)
done (took 29.88977846 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.318193467 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.84428604 seconds)
    (2/2) benchmarking "String"...
    done (took 1.619212054 seconds)
  done (took 4.68466896 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.317575422 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.3170845 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.541275416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.315704911 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.323958093 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.320572523 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.333773136 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.324423456 seconds)
  done (took 16.69753538 seconds)
done (took 27.237760554 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.377821834 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.497607887 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.56012919 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.330753793 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.32045309 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.341924591 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.318443708 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.342164688 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.322881827 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.319743684 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.735510067 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.580981698 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.323004173 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.68667437 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.321026656 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.320811742 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.33732927 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.551971983 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.31933043 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.355363914 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.302588775 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.316808956 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.332443117 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.327364943 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.324923266 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.324192637 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.354321225 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.323396343 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.503903751 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.357344417 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.356017628 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.323861492 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.363299793 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.321166686 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.325498799 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.331205718 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.518229353 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.325058899 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.303987493 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.327387565 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.503321192 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.334969728 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.322372981 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.326818617 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.321293922 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.366204162 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.302972459 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.432426798 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.347233618 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.329719729 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.405123154 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.70211822 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.326593602 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.335369065 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.321996886 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.53904144 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.337478069 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.375602508 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.348978856 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.334539038 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.321010594 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.320615944 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.389519085 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.320408064 seconds)
  done (took 151.416944372 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.319384481 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.324474693 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.324788761 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.38767427 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.324896159 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.324604677 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.320232615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.319103543 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.324790327 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.351431408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.326352953 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.323658356 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.325285777 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.29143089 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.325166378 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.341600433 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.325546153 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.321690582 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.341242208 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.319553556 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.347064569 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.32604718 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.325761859 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.326212394 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.36474082 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.387920374 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.344092416 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.348493926 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.329766076 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.320675963 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.364397559 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.326045192 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.936544526 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.188079701 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.327793107 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.34326992 seconds)
  done (took 84.693095308 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.319516061 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.320588416 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.321999902 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.351598507 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.319302972 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.891884458 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.897606248 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.050102348 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.951780414 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.638308702 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.584083027 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.323449155 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.413515762 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.331669394 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.319966052 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.335605568 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.347029135 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.319436317 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.31959692 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881919273 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.335577756 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.385251996 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.497587915 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.336830269 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35227457 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.715958416 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.319914609 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350826498 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.286709206 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.648582542 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.367109242 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.319682809 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.318003219 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.686958508 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.437162512 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.321958737 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350665991 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.319994395 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.598659082 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.319489815 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.319802861 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.322767906 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.989255284 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.323680652 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884257513 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.325507547 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252291554 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.319507342 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.320122014 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.319652861 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.406515095 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.953788303 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.324377409 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.32078578 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.3223813 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.320398842 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.320228681 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.352829329 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.435438491 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.418606087 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.321728396 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.323668838 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354199855 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.321726374 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.521048973 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.321083745 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.334236326 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.382297224 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.456024833 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.872305142 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.32054136 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417141328 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441254667 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.32169529 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.321111731 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.321064265 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.321092607 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.431643507 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.320146528 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.322665822 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.320885788 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.718083008 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.495018913 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.337404044 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.609375629 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.419891392 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.321543361 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.688557732 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.325355525 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.321686863 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03465953 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415666533 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.31998298 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.321635047 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.319688464 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.719601263 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871800928 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.531326308 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.326691015 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.614503519 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.321245766 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.728409476 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.855062883 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.970342558 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.320592089 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.433606781 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.492239383 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.337897929 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.319614079 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.580176791 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.327121407 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.380594202 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.321244806 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.720171813 seconds)
  done (took 378.177752923 seconds)
done (took 615.509310482 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.193494711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.137286012 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.30607512 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.153307124 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.133123503 seconds)
  done (took 12.145121986 seconds)
done (took 13.365552753 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.508632874 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512493973 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383966776 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510314557 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.35682462 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527402094 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.494950592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.347670617 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429277721 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.403305724 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435269615 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.374675571 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354227413 seconds)
  done (took 19.862088006 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.595125147 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.325778991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.388173112 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.571736608 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.363828202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.616013493 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.629354579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.327085369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470285051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337620142 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339035173 seconds)
  done (took 19.187628584 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598434565 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.328671684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383082029 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5934246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360657107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599144078 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.633671337 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.327846207 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.475207192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.34140833 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336604229 seconds)
  done (took 19.201352137 seconds)
done (took 59.473067834 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.402475184 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.683085107 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.355323043 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.346717901 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.336424461 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.338011957 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.347017539 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.33771153 seconds)
  done (took 12.369865074 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.333254617 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.334670792 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.332810812 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.332649124 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.335259515 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.334495258 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.335869449 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.334232941 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.332101271 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.331107288 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.335128715 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.335677145 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.333475149 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.334060904 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.335556716 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.335897831 seconds)
  done (took 22.572004616 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.336446169 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.333403752 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.333237737 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.333676718 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.334447461 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.333423843 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.334616165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.332152122 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.333379729 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.333899446 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.332789096 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.333139308 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.334586576 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.333337472 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.33506548 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.334437771 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.335182422 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.334095935 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.338932963 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.3361432 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.333821684 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.333075917 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.334089721 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.333485817 seconds)
  done (took 33.245237952 seconds)
done (took 69.408428208 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.337207346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.333619575 seconds)
  done (took 5.896513965 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.393704155 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.394583297 seconds)
  done (took 4.013117442 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.334146567 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.335657395 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.334132418 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.334873618 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.334037661 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.335206385 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.334664702 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.334753736 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.333687163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.334503698 seconds)
  done (took 14.570991951 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.332657978 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.334153268 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.334485621 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.336366393 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.334678702 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.335324555 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.335081208 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.333845413 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.334423923 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.335378556 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.338302966 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.335054671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.335650751 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.334478417 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.334701303 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.335749848 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.335114579 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.335171789 seconds)
  done (took 25.254194896 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.349320872 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.356727847 seconds)
  done (took 3.931938303 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.474178956 seconds)
    (2/7) benchmarking "second"...
    done (took 1.376843489 seconds)
    (3/7) benchmarking "month"...
    done (took 1.449725627 seconds)
    (4/7) benchmarking "year"...
    done (took 1.441134911 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.376666915 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.357293495 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.378656372 seconds)
  done (took 11.079295145 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.338283745 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.542995611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.67296599 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.879450042 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.336398903 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.336873789 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.10614619 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.338988431 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.340669687 seconds)
  done (took 15.119691584 seconds)
done (took 81.089769778 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.323309728 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.356226644 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.347138576 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.344031351 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.673811599 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.369330397 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.327122902 seconds)
done (took 16.965706462 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.308457585 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.315928484 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.30770766 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.334132694 seconds)
  done (took 10.490859669 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.324162968 seconds)
    (2/2) benchmarking "read"...
    done (took 1.611762183 seconds)
  done (took 5.158690698 seconds)
done (took 16.872525352 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33715099 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.336018992 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.334421866 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.336848609 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.334882715 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.334188823 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.333835968 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.335804401 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.336822045 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.336907832 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.335608583 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.336061721 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338259514 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334645398 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335036355 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335701051 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.335712167 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333993923 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.335305756 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33451164 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.337499587 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338898839 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.335661676 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.333887123 seconds)
  done (took 33.280151406 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.336467309 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.336840314 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.339049146 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.336386528 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.335045335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.334929884 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.336255482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.335958157 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.337044387 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.336168415 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335125722 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.334898383 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.337201906 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.334932782 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337664378 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.334889999 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.335914876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336038474 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337556607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.335188107 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.337254987 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336870856 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.336276791 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337125971 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.335902925 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337627672 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.337720404 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.337110405 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33807696 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.335656608 seconds)
  done (took 41.317761734 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.343652932 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.344353815 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.33965211 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.339968758 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.339364754 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.339673555 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.339851678 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.340249017 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.340669364 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.343028414 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.340987435 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.339693183 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.339865203 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.339907214 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.339930403 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.340331083 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.342631547 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.342248142 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.340374723 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.340169406 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.342410121 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.34264297 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.341172239 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.341897418 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.341264946 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.340977948 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.340399415 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.340738856 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.340812506 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.341549773 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.339591782 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.342568067 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.341106287 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.340406031 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.340363805 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.340442084 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.344619112 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.346833651 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.342702285 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.34154215 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.34052822 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.342096708 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.340486792 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.340430337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.341734336 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.342198467 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.34285491 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.341923835 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.341980647 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.340614059 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.340374557 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.341036096 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.3403156 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.342575652 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.345997995 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.341719238 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.341886294 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.34184039 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.342961187 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.341007357 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.342803907 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.341197529 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.342888188 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.342386043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.342751692 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.342670669 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.342115068 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.342153167 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.343050366 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.344419897 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.343148543 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.341435814 seconds)
  done (took 97.82472494 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.340878637 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.340414978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.339786954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.339485959 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340684179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340371495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.340167236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339999035 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338192999 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.340173149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342435243 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.340721431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338563891 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341607681 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341969777 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340093717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.342375783 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340532818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.342389789 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34310117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341293147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.340189565 seconds)
  done (took 30.724368993 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341433034 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.344975691 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.339501146 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.343090484 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.344239298 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.343785885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.341604694 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343026309 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340857703 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339662702 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341721492 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342664804 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34389059 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342354642 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340875275 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.343287803 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342636729 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.343448183 seconds)
  done (took 25.392306753 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.34107845 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.339548736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.343492694 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.342954979 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.340804637 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.343790216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341857063 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.34378919 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.343822369 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.342315355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.343320873 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345195382 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.342779758 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341831354 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344460035 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.342447734 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.342293956 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342827522 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34415633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343578266 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.34326401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342204674 seconds)
  done (took 30.77288208 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345138729 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.343891794 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.343380965 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.343842908 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342453097 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.343507123 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.345331373 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.341552763 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.345959837 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.34660087 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343521925 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.343179109 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.347282011 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.343636964 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.342852081 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343073275 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.346505249 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.343905108 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345524416 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.344589541 seconds)
  done (took 28.11631591 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.347570837 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34656312 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.346417617 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347785779 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347949895 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.347732512 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346242139 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.348853061 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34755126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.347774853 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347691194 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.347348074 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347814895 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.346707739 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.347800649 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347987015 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346708853 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346941321 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.347294343 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349651484 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.349171929 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348233636 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.348645446 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.348400892 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.348180717 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34958707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34846175 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348032341 seconds)
  done (took 38.972355013 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348445242 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346951925 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.346004593 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.346756256 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.346452183 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.347206386 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.345650553 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.346442878 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.347826055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.346486634 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.349156051 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.347931301 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.347942623 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.348223829 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.348119101 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.347956985 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348033999 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.348485947 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347802137 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345661803 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.348652811 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349006369 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.349432538 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.347244185 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346283113 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.349071488 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346706255 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34717884 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348428292 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348038224 seconds)
  done (took 41.6608358 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.369685491 seconds)
    (2/2) benchmarking "in"...
    done (took 1.368201063 seconds)
  done (took 3.973406259 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.348003696 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349318348 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.349620182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.348906842 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.350244318 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.350516129 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.349720702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350177153 seconds)
  done (took 12.031905647 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.344836176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.351042845 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.348238558 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.349321071 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.34931284 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.343805862 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353174627 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.354252683 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.345732883 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.346949173 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.349309933 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.348368194 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.34835627 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346409517 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.347019876 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349414042 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.353069916 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.35158619 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.351912934 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.351668872 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.352175806 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347857488 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350864137 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.351498652 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.347702633 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.35477271 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.354746269 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.355877275 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346372728 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.351348609 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.347856873 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.352598489 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.352759106 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.352791924 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.350482882 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.351646037 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354545802 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352533118 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.354715141 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355652826 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3521647 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.351151288 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.348105663 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.351446699 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.350784903 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.355409893 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.354428012 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.353199531 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.347345707 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.350259165 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.354139616 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.34683359 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.353081142 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350458701 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.351157206 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35791581 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.358850834 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.349311736 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.353423256 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.356033803 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.361568087 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.357908624 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352068831 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.357712174 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358212546 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.362702457 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35879019 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.35757391 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.353860436 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.354749624 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.357714622 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363258163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.360618079 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.356098889 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354427643 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.355407803 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.350493369 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356359443 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358447193 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.35808537 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.358161836 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354302775 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358810604 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363733728 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.350425905 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.356358818 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.356379093 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.35683895 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.351338667 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36092145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.360927504 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.355642718 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.34951384 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.351299133 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.352642726 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.357048068 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.350064191 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.352273525 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.355527438 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.354957981 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357112488 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354249522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.355019201 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359365843 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356701454 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.358763159 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.360425495 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352798352 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.358900704 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.359138936 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356160784 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.352966492 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.355344265 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.357670513 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353753958 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.358825871 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.358693166 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.353583406 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.359485211 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.357654 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361512306 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.368974372 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.360312395 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.359353029 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.355935317 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.364242124 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357755571 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.356054139 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.360587471 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.358209091 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.356474111 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.354524724 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.361249797 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.354753869 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36058717 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353479158 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.359450261 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.359062496 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.360321039 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.354444436 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.357623886 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.355397977 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.356300903 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.357449292 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.360858168 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.35739413 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.362110719 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.357869075 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.356787843 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.359079387 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.360256089 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36113141 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.35620476 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.361783279 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.355688503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360651866 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.355778513 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.36118009 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360761581 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.360252354 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.363605382 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.356023769 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356792303 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.363078493 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.359409592 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.355442857 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.361819595 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.360220524 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.360476709 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.355541525 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.361543504 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.354618917 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.35886024 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.365363337 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360106846 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.361148109 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.358355279 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362272284 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36240894 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361698606 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.358298579 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.361032264 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.363646703 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.363726058 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.364872831 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36253453 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.361294313 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.349954482 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.349662481 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.356748784 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.353268163 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.360328871 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.361385434 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360417695 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.351907191 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.35664129 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.350519567 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.356006013 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.351920254 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.356353296 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.354655539 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354505427 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348801391 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35700011 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.351230746 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.354626435 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.347515289 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.355441114 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.355983035 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.355134634 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355005078 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.350202019 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.352275338 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.353909683 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.356082414 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354430286 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.349778201 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.351874081 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.345823329 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.34903082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.352604187 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.353533062 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.3547145 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.354646659 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346766417 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348337314 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.346873886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.344512099 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.351342346 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.347089663 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.348621073 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349362848 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.347112752 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.344421795 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350822525 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.346730869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.343463697 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.347746924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.351147369 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.346058716 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.341844237 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.350495867 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.347602521 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.345692215 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.345436595 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342278641 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344099744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.343202485 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.344625227 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.337064524 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.343128423 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.33654449 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.34099256 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.33765429 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.335945328 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.335183327 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.336615194 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34172129 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.339827514 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.334816806 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.340622075 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.336171703 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.336347645 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331175299 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.340548217 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.334635815 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.333218508 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.333537093 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.331078352 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335036387 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.327222021 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.332402802 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.327872362 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338966875 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.341722005 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.334668918 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.328258091 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.330096076 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330681815 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.328468233 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.3243524 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.326664157 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.327213629 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.323308677 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.322033475 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.326899627 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.322586544 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.327493272 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324175058 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.324892913 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.327894391 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.322182068 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.316724561 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.323908597 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.322862885 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.322795589 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.317800491 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.323489558 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.320030907 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.318059265 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.316042669 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.314881418 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323841021 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320408725 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.31798457 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.319289748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.314944446 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.313005617 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.314978029 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.319972915 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.31469791 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.323319219 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.314368161 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.318638194 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.311769931 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319113018 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.319679766 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.314493099 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.319527583 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.314791288 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.311183311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.311901004 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.314824788 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317268248 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.318419337 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.309113163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.316822283 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313537175 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.316040599 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.313056303 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.312317481 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312354821 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.313135449 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316012196 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.313058591 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.309026738 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312388548 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.312170444 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.312399397 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.311447277 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.304386173 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309820355 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.311924811 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.307247861 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.306849387 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.303061012 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.31071589 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.310525305 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.309009218 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.309011099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.310328025 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.313623992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.307798995 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309233341 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.30921799 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.307242464 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.309986472 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310062201 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.313307135 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.302879726 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.307063171 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.306707521 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.302319586 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.30109019 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.302965718 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.308731215 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.303315624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.311262982 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.305920521 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.302146963 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.301306164 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.306958275 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.299713725 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30877794 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320513761 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.298632601 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304714702 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.302584161 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.298854103 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.305030799 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.303833854 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.297851062 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.300344983 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302363713 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307192903 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.296238902 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.303170738 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297258643 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302982351 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.302369667 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.302207733 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.301002478 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.3013542 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.296500029 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.301922465 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298380442 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.303961716 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.297647262 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295347304 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.295617704 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.303817166 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.303224058 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.295963904 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302393681 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.300180924 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.296087041 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.294322527 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.300787953 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294004801 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298498476 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.294125301 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297645051 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.296496662 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.295923717 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.293183836 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.297918377 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.292812453 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.293208269 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298134643 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.296745511 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297887221 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.29117071 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.297299899 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.291893245 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.290170492 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.296633179 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.291305791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297473934 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293792977 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.292656793 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289904068 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.294064412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.294541388 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295086484 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.288481164 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.290840528 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.299078665 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293748838 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295550101 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.294413197 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.297395823 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.289092688 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292484387 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.295585004 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.292091849 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.289916643 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.294984964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.291607521 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.290176295 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.291821362 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296016697 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.297296936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.291883926 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.288447561 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298477281 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294957633 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.296749895 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.291827026 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.292384306 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.292657047 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.294107352 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.295251768 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.28992569 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296381199 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293873493 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296885975 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292540036 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.291109468 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.291211158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298397327 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295951024 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.290940213 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.294984862 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.291007436 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298463545 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297159073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.294651429 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.290193376 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.289676032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.293437019 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.293077931 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.295201253 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292597107 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.291734575 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.2923706 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298341034 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295468486 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.294349705 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.29465146 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.290947687 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29673118 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.291399955 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294439416 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.292535274 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.290569817 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.299343312 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296278561 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29373568 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296804943 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.298322308 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.295068257 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.289374868 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.292313666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.294106272 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.298619701 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.298623838 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290420156 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.291357897 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.296235507 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.296328172 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.295745683 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.291591368 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305254241 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300493771 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289339998 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290824574 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293925625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.296056168 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.29387463 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.2965246 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.292083511 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292993924 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.300705628 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.295276107 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296179238 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294562243 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291968362 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.297934987 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293817391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293971567 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293521891 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296867435 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.296063011 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.293776834 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301898641 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297998016 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298452245 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312526884 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295346177 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.29309847 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.296471972 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291258304 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.297015557 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292379052 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.297575662 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.29741998 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.297189146 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.296750949 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.2906112 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295659262 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295518348 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.303269395 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.296265013 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290986944 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292916811 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.295604639 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.298289732 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.300855687 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.29700464 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.297609775 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.298830524 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292454316 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304711068 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304544544 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.299277963 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.298796578 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.29697297 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29526345 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296571899 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298949301 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301836215 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.29847563 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.299392266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.295914311 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301853023 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.298155425 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.29400391 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293363334 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292775652 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.297305046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304507131 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308766827 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.2990287 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.29537928 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299638679 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.298033024 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29381194 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298221245 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299385763 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292589046 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.294540912 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30204124 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.298889895 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29900391 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.294503541 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.303010594 seconds)
  done (took 791.2435669 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299611499 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297758658 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298783589 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296640147 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297559715 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297767473 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297041747 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299613194 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298335469 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298907941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29897785 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298399418 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298001238 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298655442 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298578183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299407817 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298982375 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298706211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.299461164 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297990657 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30052723 seconds)
  done (took 28.464091876 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.301279483 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.29979289 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300979073 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30188665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299103008 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.299768166 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.300285995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300322011 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300744105 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300200409 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.302358842 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301094566 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.300035966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.299243399 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300529087 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303004707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.301427585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301033588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.303210851 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300862658 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302052224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.301949724 seconds)
  done (took 29.816630159 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.303404349 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.300005574 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296082301 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.301628694 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.302167183 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.301460151 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.301939266 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.301888193 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.302214188 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.297158409 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.296126162 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.297441287 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302635514 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.306263046 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.299596253 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.304540483 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.303539401 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.304777986 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.305720188 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.301284578 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.304697197 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.305312396 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.302290381 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.29663091 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.303478618 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.302678822 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.298854312 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2990546 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.294602659 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302063002 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.299666996 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.294023335 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297583622 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.296422735 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.292996735 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301269355 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299468304 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.298530055 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.297174603 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.30218524 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.311288982 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298456322 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.300930871 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.299889965 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.297135487 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.294526619 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.302407587 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.296852238 seconds)
  done (took 63.618061968 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298853273 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.296683912 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29616426 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298119253 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298331612 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297891747 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297864733 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299104966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.296191274 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296659353 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.297380556 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.297459935 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296433878 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299023407 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.298443714 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297453102 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297214248 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299007025 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.297993334 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297529874 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.2964147 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.298507005 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.297891089 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299242832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2987554 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297634225 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298044016 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29984407 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.297992814 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297834742 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.301263063 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299955148 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.299527555 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.298924125 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298897789 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.29991452 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299822735 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297374929 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301614117 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.29930044 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.299677912 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300016369 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299399197 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.300097547 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300283621 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.298544969 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299753599 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298467775 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300448196 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300415019 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300653883 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299268483 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300317676 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300291235 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299675867 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.301197611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.299909032 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299438548 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300859922 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.300531561 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.300283184 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302027348 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.299629031 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.301514377 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300307372 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.301791261 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.30011706 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.30339899 seconds)
  done (took 89.535802535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302045441 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301810001 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301706375 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304124837 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302724396 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.302525023 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302552744 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303746703 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300974791 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302429836 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302177235 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301226012 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301967654 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301950359 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302877562 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302481885 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302939269 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302831939 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30219291 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303363097 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.302934575 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303525592 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303674561 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303416788 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302662042 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302722621 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30417781 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303798836 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30335195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303411786 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304151764 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30466972 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305726943 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303945708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304730203 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305595907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305244054 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305735976 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.305057318 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304678483 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.305334502 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305733304 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304975418 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.304591426 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305695336 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305265541 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304688125 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306280641 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30424383 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305049855 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.305325179 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307044575 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305286576 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304923003 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304695832 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304771329 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304555036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305348706 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305496659 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306419388 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305927159 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305838057 seconds)
  done (took 82.046240868 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306450256 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305753236 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305062529 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304608814 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304955672 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303489859 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304634084 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.305778448 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305981997 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306560371 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305879148 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304798455 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306109373 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307536004 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305483913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307378534 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305266614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305319381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306423254 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30545052 seconds)
  done (took 27.312698816 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305491495 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307158042 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305794534 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306064609 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307116197 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305243758 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306462482 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307488331 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305472815 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306588582 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306953014 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307713679 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306485783 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306336916 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306734956 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306738935 seconds)
  done (took 22.103866873 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.306564952 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.308258608 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307883976 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307725828 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307275564 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306950425 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307987955 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306725264 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306546154 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308999071 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308672445 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308922829 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.309068101 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307759473 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307257107 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308639445 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307680242 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.307071617 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.309072344 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308955959 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308011447 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307963439 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309374675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309601492 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.308076919 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309148127 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.30732981 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.30766692 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308390106 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.309736362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.308220946 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.308885707 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.308531281 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308640512 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309350087 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.308477677 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.310928404 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.310165278 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310805412 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.310778593 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.30932967 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.30756915 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.311042902 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.309957006 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309460192 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.310611599 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308666513 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.309325719 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.308870399 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309542545 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310855648 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.311958558 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.310181738 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310637195 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309751072 seconds)
  done (took 73.18787933 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311645421 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311484481 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310115408 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311481385 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312204499 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310332993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311139241 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311792437 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309717749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312731389 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310145425 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31379929 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311453367 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31170939 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310694866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312339327 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309923966 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310840376 seconds)
  done (took 24.807576338 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31139783 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310392813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312028016 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311014947 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311948892 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312622841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310787507 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313532558 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31361061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.312618136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312082503 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.313518441 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31383005 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314634903 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312161269 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312116456 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.31285771 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314292169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311938769 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312886841 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313473104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314743267 seconds)
  done (took 30.083953612 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.306947386 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.306617722 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.306750731 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.322712876 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.319532956 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.306048563 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.307132078 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.307168094 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.327430751 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.348058877 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.343067624 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.320309828 seconds)
  done (took 17.028535783 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314291771 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315330048 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313421294 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316213083 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31486863 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313269571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312994979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315231254 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314832705 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313548638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313837917 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314795055 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31577146 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314083967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315210476 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314282959 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313809113 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313831418 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314103638 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315876499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314156032 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315285026 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314920838 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314411342 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315102978 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315211191 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315547027 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314573921 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315550096 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316671532 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315982526 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315023837 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315877365 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315326335 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316943261 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317199559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315758834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317178529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316877007 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314588747 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31744769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317938674 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315746349 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315097332 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31737974 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315152702 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316404133 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3154707 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316371114 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31790193 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316280457 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315661239 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317982489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316936172 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316960467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318044534 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317087984 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316353103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318712078 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317105143 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318117783 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319510996 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317036646 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318819333 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319497295 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318302498 seconds)
  done (took 88.058534587 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316405763 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31752574 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321645866 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31931004 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316984142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318464339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319865546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317393374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316584367 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318258475 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31949649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318840912 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320527227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319101691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318084046 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317669101 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318160012 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319690097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317375971 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320928555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319673036 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317444404 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318370652 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318912056 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318013292 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320990017 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319485626 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320374206 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319432857 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319390657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317898609 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318975519 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319859947 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319041467 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320447944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318312958 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320804158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319431804 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319840871 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320536835 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320207778 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321470234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320061199 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320120708 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320540063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319522411 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3203065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320138419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31984582 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31962243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319548711 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32035862 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320343484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320870878 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320400974 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320359247 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322019365 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320927301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320734814 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320635361 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320533347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321564586 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323566251 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32248281 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321510878 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322755215 seconds)
  done (took 88.313848055 seconds)
done (took 1840.912607645 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.480318989 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.435401582 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315203077 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.331148653 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.31746602 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.312002023 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.326973144 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316010554 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315485291 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.315000792 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.315414939 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503771877 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.372990868 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316666719 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314650748 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.413283723 seconds)
  done (took 26.915948152 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.34343425 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.32461914 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.42911995 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319843306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343458261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.503067397 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376160299 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.321927685 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.481887318 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.339619627 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.31258415 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341610211 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319847434 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.312865264 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338374864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50247176 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.560971102 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.3133399 seconds)
  done (took 28.999407692 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.746170734 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.330240668 seconds)
  done (took 5.291876906 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340031602 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.320864164 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.32126282 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.320144329 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.312943976 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.313383319 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.320695957 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.318984045 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.326743512 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.440879771 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323219207 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.332087982 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321782832 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322626025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325430169 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.364714028 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.469343339 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.32666054 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324197947 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325628481 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320598949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.418487101 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362865128 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.329272181 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44191317 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.316816547 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.328462011 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.329400167 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464775925 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327544376 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322505746 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322866954 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.32468503 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.317786159 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.79306815 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.318971071 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330802337 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.347841509 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326275089 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464348775 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.325700169 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328228502 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.316110864 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.801036138 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442805488 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.441603006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.317603633 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.324794879 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.325117158 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.390802694 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.324861348 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.324426541 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.378728538 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.15579222 seconds)
  done (took 84.69636895 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319322118 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.318125686 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484247189 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.336061636 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318514709 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316902686 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320510875 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.59058372 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.370022152 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330701952 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.601016124 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.825088553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325316907 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.339336215 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.856403963 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.394050382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319728215 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.318691797 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319982384 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.321839061 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828306769 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319698698 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.319101437 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.362212348 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.3561039 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764621425 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319916223 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.319259268 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.323352397 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.318597441 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778646589 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.320935224 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.323177776 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.322149719 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.591065432 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.66757142 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643230743 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.326431975 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319340086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322113724 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.340822514 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760449985 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648312585 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320456583 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320113759 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766766882 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318827363 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.320081283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.321018143 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538936398 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.321946878 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.320216301 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.319515463 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.329387125 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.319408012 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.405590643 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.402943272 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799275545 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319719411 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321105191 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.338842391 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.320904534 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.326577083 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325455025 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322309614 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661510697 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.516679455 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321682721 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656039794 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.773385795 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321500175 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.849460967 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326715208 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.34144886 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.534143105 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332203715 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323604323 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793536771 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.347970752 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321769423 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641639865 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.322941107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.616250643 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33636735 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325194607 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849175688 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.329810962 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.368126059 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322846715 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32288688 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323094178 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326096971 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.595258671 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.376785545 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.32174724 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.322893175 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.346903772 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.337836764 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.326513555 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.329811213 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847541668 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.336346781 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322814217 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325597705 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32324738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.327881621 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.325190039 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.323555504 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563111825 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.323908403 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.341947932 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324810961 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324313385 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.333721128 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.377237051 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.325192183 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.621077806 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.330095094 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32560766 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331413346 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324668735 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359576078 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326968586 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328323735 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211502329 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.546205833 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.343320863 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.324558364 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.3248947 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328514158 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323981909 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327199445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.33693173 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.32824779 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054376477 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.36728071 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.334757507 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.325097533 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.331896858 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326229705 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328421767 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326883641 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620540828 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.595208846 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.502094403 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.327119046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.325527811 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.046312858 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.37245863 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474041151 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342434911 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325475454 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532036115 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.532154888 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.327126917 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.327646234 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.327642482 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559294003 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326446879 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644534778 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813773067 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.331116732 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334492578 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.053565432 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.036280176 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.328074337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.330418732 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615141451 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.341698497 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.327324979 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.326909013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.328357033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.327946536 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.3316884 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.32850865 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.330479418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.328517666 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.382239452 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500464298 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.34423399 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335463145 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771431535 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.379026984 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328701201 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334206181 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.331371928 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.329164434 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.402744867 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.332865601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.359543517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.328705145 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.333512414 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797781109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334606426 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.330285878 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480508563 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974519885 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.33418649 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.330041074 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32902976 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.880368627 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833710251 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.334459958 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626577802 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.340005784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369531161 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329602379 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339213 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836133117 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.336101352 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335890364 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932557038 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.334396341 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.739936349 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.331131059 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.332617585 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864792864 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.335109953 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.333283798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331569997 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331002169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.620422401 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.329469047 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.333564833 seconds)
  done (took 493.534666688 seconds)
done (took 640.651560348 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.330878777 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33001823 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.321614959 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335419594 seconds)
  done (took 10.548997101 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.350295729 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.337133252 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.34464899 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335151759 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.344234778 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336718169 seconds)
  done (took 9.2788569 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.328792861 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330710989 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.336408601 seconds)
  done (took 8.227238262 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.545836667 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.35242889 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.684016845 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337471011 seconds)
  done (took 9.151699089 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.345445524 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.345102094 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.34675072 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.345366718 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352891948 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.352665602 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.346791699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34640726 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.353662026 seconds)
  done (took 13.365331898 seconds)
done (took 51.801896109 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.183618404 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.431043755 seconds)
    (3/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.336433896 seconds)
    (4/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.478102091 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.398132967 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.333067432 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.425527157 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.364643731 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.34760479 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.559201388 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.317962034 seconds)
    (12/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.107117091 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.995132393 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.999308171 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.453400351 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.486266853 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.360738639 seconds)
    (18/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.086212405 seconds)
    (19/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.369097079 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.355530457 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.411290989 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.445409297 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.369945035 seconds)
    (24/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.226161068 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.4467896 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.317985739 seconds)
    (27/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.33422983 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.151871948 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.29171416 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.031619511 seconds)
    (31/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367154554 seconds)
    (32/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.318483877 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.419674703 seconds)
    (34/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.318090527 seconds)
    (35/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.505569966 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398363627 seconds)
    (37/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.31838221 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.31865338 seconds)
    (39/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.146717001 seconds)
    (40/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.324817401 seconds)
    (41/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.338100862 seconds)
    (42/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.406272202 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.18491443 seconds)
    (44/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.321618984 seconds)
    (45/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.410403439 seconds)
    (46/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.516925658 seconds)
    (47/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.338810896 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.480151936 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.321019956 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427320024 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.493173924 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.374544196 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.469625668 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.464052622 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.320968713 seconds)
    (56/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.422717762 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.10502282 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.559170992 seconds)
    (59/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.149784594 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.158775648 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.609190958 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.481453435 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.495830622 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.193391576 seconds)
    (65/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.326286587 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.427695704 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.321323342 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.195047077 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.360557007 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.059558505 seconds)
    (71/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.323002904 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.359999882 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.398256214 seconds)
    (74/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.376102862 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.405021226 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.443725704 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.48892204 seconds)
    (78/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.366722746 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.423520982 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321764264 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.377715529 seconds)
    (82/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.561731268 seconds)
    (83/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.473240141 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.44665868 seconds)
    (85/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.424610526 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.485907231 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.430438652 seconds)
    (88/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.323024309 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.49046607 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.328004209 seconds)
    (91/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.451096523 seconds)
    (92/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.431383742 seconds)
    (93/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.350172358 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457516704 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.373369929 seconds)
    (96/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.45186754 seconds)
    (97/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.400510007 seconds)
    (98/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.405114762 seconds)
    (99/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.46877252 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.476977708 seconds)
    (101/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.322485212 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.444561335 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.404912175 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.32284268 seconds)
    (105/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.386233505 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.523233055 seconds)
    (107/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.371168982 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.461685958 seconds)
    (109/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.374678073 seconds)
    (110/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.490158708 seconds)
    (111/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.376297393 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.55848837 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.468014584 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.443520921 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.325358426 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.351679278 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.728373484 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375329174 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.439209011 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.324112184 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.609683219 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.327288008 seconds)
    (123/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.413768398 seconds)
    (124/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.341805169 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.324482309 seconds)
    (126/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.596716974 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.431349894 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.462477125 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.408200178 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.347077279 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.450249569 seconds)
    (132/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.324238258 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.323950821 seconds)
    (134/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.40761229 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.501058722 seconds)
    (136/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.06031743 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.369600376 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.469434368 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.427649463 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.523855177 seconds)
    (141/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.432569949 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.065559375 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.569251327 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.398709038 seconds)
    (145/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.090375433 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.445323341 seconds)
    (147/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.595332088 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.50158941 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.354765194 seconds)
    (150/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.307311857 seconds)
    (151/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.45765572 seconds)
    (152/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.558716321 seconds)
    (153/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.411632535 seconds)
    (154/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.497197345 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.451906408 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.418644587 seconds)
    (157/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.161780802 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.569852558 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374831821 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.326632402 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.403613602 seconds)
    (162/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.490006647 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.327563818 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.335767416 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.450556421 seconds)
    (166/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.512658596 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.376682649 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.468451641 seconds)
    (169/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.567355358 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.450978091 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.471746862 seconds)
    (172/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.524159265 seconds)
    (173/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.332701897 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.16379408 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.529727213 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.389230328 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.525057093 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.332845257 seconds)
    (179/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.492409715 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.331394571 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.359884774 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.382486735 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.544184407 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.531189615 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.332890292 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.377484922 seconds)
    (187/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.561160201 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.45607688 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.235666658 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.458160213 seconds)
    (191/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.455317276 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.354873197 seconds)
  done (took 341.473167483 seconds)
done (took 342.705775088 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368073604 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.433357549 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.352092677 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351528505 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352629373 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.344354573 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.370437725 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.352216179 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362721999 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.363053971 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.345171968 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.36014507 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366429622 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360827972 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386120873 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353731501 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353527561 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36097593 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.365278629 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.3655118 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355117349 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353882853 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.372799554 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.353885547 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361874383 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361095063 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.359863511 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353101094 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.358506657 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.365547477 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.35677608 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.36174884 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.367764799 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.363060594 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356212186 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361096532 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354830852 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.436108558 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.370817224 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362467031 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.359768 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.367622267 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360330293 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360157443 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.363714242 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.374675747 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363542172 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.369161685 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.353499491 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.360079487 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37184566 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.364821245 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36042439 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.348173323 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359804723 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.375829727 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.36392592 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371646525 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360772794 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358067158 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.389429791 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371508736 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36429345 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363391327 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.360576929 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.368321167 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36219387 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369274493 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359910853 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358610932 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357483823 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.359986821 seconds)
done (took 107.453406408 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.48518672 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.355796239 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.498351939 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361211843 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.519606049 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.490944965 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.360346138 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.361340715 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360374141 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.204931929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.360780107 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.36041053 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.356632457 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.360907274 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.488516407 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.364633356 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360203539 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.092899182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364103189 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.502046281 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.354530718 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.360719448 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362853703 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.192246171 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.35693756 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.353072234 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.502120438 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363311997 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.085982612 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.351185294 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.356626307 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.086225422 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.503690646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.382423995 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.372766972 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.370829674 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.520804649 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.369441725 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.488995857 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.488875936 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.501180497 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402564105 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.352620156 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.357328501 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364988808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.365346542 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364186869 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.391192619 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.358318588 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.363121463 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.096107432 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.375021216 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.372443137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364814884 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.365692441 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.385102528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.364644229 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.367707623 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.50667594 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.367650394 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.490686753 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.194878132 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.20682507 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.365355978 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.356534271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.365926536 seconds)
  done (took 110.449067917 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42844343 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.434538098 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46982001 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365528211 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.411195144 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470934677 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.364497138 seconds)
  done (took 11.194932209 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.366767908 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36626238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409360717 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.408247583 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365700919 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.517987611 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364160826 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.372458038 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.363898065 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414259087 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367535399 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367645009 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.375153107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.358155695 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408297646 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.370945316 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476510268 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362756098 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367216216 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.514359826 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366979614 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37493053 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413620743 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.372399383 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368912246 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.367776497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.134323982 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366884439 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366946988 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.369165665 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36625671 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.414270906 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.369181398 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.361204691 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367060987 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478009686 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.367524071 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367055591 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.370505827 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.363829852 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370987017 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367567284 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.370515038 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.366122572 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.371372936 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.385755907 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.370725194 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368639375 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367667176 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.373086126 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413733037 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367922011 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366309912 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367482383 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.417505067 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377197069 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370209097 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368357896 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371797794 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36853337 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515360717 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410748461 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36999486 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411258004 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367634771 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368629943 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372860371 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370612978 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418255528 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368629311 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411879258 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.368653069 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.545225446 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.388440114 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370775233 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.367514536 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.36638381 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371075724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.360915123 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.371719184 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367885563 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.366075988 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.370058456 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368631017 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370213271 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527017772 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473493503 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.37116615 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.378582903 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.372513833 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369376007 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416635216 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370337987 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.368233794 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416590049 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48110379 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41916193 seconds)
  done (took 140.703354379 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.377641321 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.378912224 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.369298665 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391552562 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367554589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.365396998 seconds)
  done (took 9.50617035 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.368248506 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.372947822 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.371016279 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370829391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372022077 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.374572022 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378065039 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368394055 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37437062 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375319518 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372733486 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379800979 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.378158798 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372266356 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.375837794 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.375567568 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378980008 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372516866 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372444108 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371879325 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.364891384 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37355842 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373356516 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36860464 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375983038 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.375795254 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39234736 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.377123863 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.372609221 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.375600246 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375376295 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374709224 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.369358502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.37307816 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381913175 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.369359147 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374550858 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.38033779 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373027328 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.373526517 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381392228 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374569942 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.376535721 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.379886128 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369099749 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372614155 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.384335818 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393674183 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.376575256 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.38220296 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38151519 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.375270345 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374878644 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.380720906 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371004725 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372811405 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.385629647 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.379595878 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374395985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.371798553 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376253433 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375622999 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371760498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382590156 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375112623 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.382109656 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37157657 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378747641 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377093445 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375639877 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381334766 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374172604 seconds)
  done (took 101.311893521 seconds)
done (took 374.412526695 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.671696029 seconds)
  done (took 3.932618868 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.368643552 seconds)
  done (took 3.628601426 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.794601568 seconds)
  done (took 23.057549082 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.42173014 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.487849003 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.384894912 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.374421608 seconds)
  done (took 10.92766825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.67689145 seconds)
  done (took 3.936692516 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.375740585 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.374169174 seconds)
  done (took 6.010399674 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.572499231 seconds)
  done (took 3.83454722 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.559243928 seconds)
  done (took 3.820841364 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.390442357 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.382548794 seconds)
  done (took 6.041409464 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.34993616 seconds)
  done (took 3.611339887 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.442582244 seconds)
  done (took 20.70370148 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.378524877 seconds)
  done (took 3.642990194 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.414727343 seconds)
  done (took 3.676045551 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.941253167 seconds)
  done (took 6.204396897 seconds)
done (took 104.290735308 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.365074696 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.366844467 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.366471772 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.365960038 seconds)
  done (took 10.72523126 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.431727159 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.432919255 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.437660005 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.433461344 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432285872 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.432622038 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406580112 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408187863 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.433522785 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.433482736 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.438843777 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.433116456 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432026582 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.406254949 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.431478885 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.43954828 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43431113 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.439120426 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406978483 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.433023216 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.382068486 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.433742446 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.43268893 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.382687583 seconds)
  done (took 35.470470323 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890677693 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.443617381 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527717188 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.424643707 seconds)
  done (took 7.549776735 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.460452371 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.463027463 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480462646 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.519086276 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.551071064 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.481668157 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407054019 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405138092 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390332499 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.463159306 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514764677 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447906717 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.549978906 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.382086276 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.676532913 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.383750766 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.383563443 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.462245785 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.515612338 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.554956952 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384226367 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462227328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.467968243 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448613061 seconds)
  done (took 36.51917736 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.388703603 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.399837495 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.381659078 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396412715 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.38158473 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.382938961 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.384613936 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.38819687 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.380888525 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.381485702 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.382608768 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393628597 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381677883 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.381813121 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388115628 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.383583249 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.384301096 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.389007356 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.390825541 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.38463135 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.383435824 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.38914219 seconds)
  done (took 31.76390696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.371134524 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.370469258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.722057101 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.626869699 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.374135505 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.375631659 seconds)
  done (took 14.105516286 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.445386872 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.589122545 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377599539 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.727648619 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.811369058 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.378427522 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.377925657 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.622042522 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.922020255 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920807616 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434136158 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.448053915 seconds)
  done (took 20.320482786 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37199627 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.376268319 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.378762663 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.391735137 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432048297 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382706638 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385742077 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.372961806 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437811594 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437070017 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381650066 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433440835 seconds)
  done (took 22.050215322 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466615994 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38038811 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379572439 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458101924 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379063392 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22376482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399413714 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080926615 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.384461637 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654051904 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380322137 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473820353 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63420657 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390807581 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38612342 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.372096581 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612404333 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893096944 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385352854 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381087059 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418339997 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380143444 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386480206 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598653541 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270499398 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381133668 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642449009 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381847979 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671657981 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652585012 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654341722 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386989488 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656246492 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022069406 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483336863 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592916148 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392609883 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383445171 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.378328338 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.381835316 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388035121 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388825898 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649007761 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388985288 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382902114 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385312881 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093285958 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.388460703 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.380822296 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381692063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651524963 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486079778 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.387108479 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382296301 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422314206 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382480413 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.388173674 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507414088 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944530467 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382379949 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409563747 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.38912889 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394555392 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39536459 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049698834 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.388206526 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.387596983 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387481919 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383816345 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390492467 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409868802 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383966655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.404319474 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384676683 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186933424 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397430376 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390602863 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958269523 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396795036 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.389977526 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614094174 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383664158 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383626715 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.382196922 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386035547 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129113405 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395098045 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.361316443 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449451537 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08511697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594476088 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40970415 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413806695 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606946468 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.363024788 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385075715 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.400497291 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392266902 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406774626 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092415112 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38456721 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.390755101 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643008397 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.59581226 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389311043 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370098058 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888149146 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39137249 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.411290464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386073654 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605287036 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.035836871 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657341625 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393460248 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424845611 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387428165 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195763841 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395036025 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.396604874 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386442216 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66871804 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238167037 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39242693 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455364089 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395427935 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386889938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399505179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393182964 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387583504 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.600522965 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395306381 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661162976 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.396387791 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387957713 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.396172122 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395701597 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.395550334 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609583393 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390409544 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668206493 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38812683 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388180943 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389466375 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609794981 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.387784753 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.393275534 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648330867 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387289101 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424698239 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663196987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424650005 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496834936 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417854521 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.399876124 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64798778 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393684076 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.393537564 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400630529 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397595647 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392155553 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.395980087 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385897826 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036680182 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364420069 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392623365 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390067199 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.403554766 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458242759 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396151893 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601809392 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.403036825 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392805485 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395077086 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.400950576 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614114622 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659523406 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.396002357 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472177012 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.868279195 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034049346 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403453487 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.389732785 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.388893092 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.39055457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391307172 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390446503 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391012991 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604047509 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6681703 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398852221 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056274467 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391944494 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403068774 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403252528 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660571683 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406315257 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39288949 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396026976 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391715548 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405139095 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666170584 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5348572 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.40618648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390399409 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.907020274 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398113867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393161092 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392163663 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42334676 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401118748 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239560443 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653770233 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401265755 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661757629 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398196905 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.411918719 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.391190932 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392410167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406006163 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.416495486 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399395042 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.606857615 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411357235 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39990039 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950098979 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198112227 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981763695 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402943895 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.39634215 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398531481 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102465012 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39348373 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394014848 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631592004 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099142394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393098193 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872761074 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.392731343 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158481036 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664808231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632265888 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405840306 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.394801194 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673684889 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612074747 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426666851 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39886795 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400996319 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.372857125 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952036721 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403921265 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481300978 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104236297 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394349936 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402502067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.467226306 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395269321 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810517711 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401227001 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395766301 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405400162 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403966997 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243438248 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400976634 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396785041 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060555134 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402749528 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.882329522 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39590891 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608446508 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672379232 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.670762532 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.4009461 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.414667449 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649091573 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66642521 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402986909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403148254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990241588 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263656363 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401978115 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396779072 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204659466 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41280251 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700588445 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.402654599 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.401036365 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423848871 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398586098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397239565 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.396173148 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403530956 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37134181 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911217366 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.399686543 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401186936 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403744156 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403422943 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651679285 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.412652028 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046360402 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625382087 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404166555 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429676546 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.403304798 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398113873 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.385279985 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399373885 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399375244 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468410367 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619225691 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398957687 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.379491036 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440901306 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608550754 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399231424 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401282907 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63200914 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.40245098 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.401046148 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203722377 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430553975 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412077565 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408235272 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396245738 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440060458 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467366213 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612832876 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.676700417 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680648484 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798899937 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410120062 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407957181 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.415242115 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496261151 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399918635 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.406851805 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.174605113 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050117003 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205661514 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05375372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674948421 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406969161 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40890061 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402272079 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537717626 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401174849 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675727969 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401334949 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.420922117 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422881344 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402923884 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407191176 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617612211 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676124623 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401622907 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40149638 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408590996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.402394578 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676503966 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.617962773 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921904772 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986674345 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407307471 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411601108 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117371435 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677037167 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402728575 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403798305 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40369428 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.406522501 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403463917 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.409245884 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413398917 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544908347 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67480461 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055975288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67937838 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.445169564 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.920688579 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404257075 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661382045 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169560476 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617711619 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060427581 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.165929975 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66607328 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473927466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618603153 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.406947648 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541753213 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.413568908 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40468725 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404316341 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405369733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.403698237 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675830476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063936898 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669133956 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.409458069 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.413567302 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435597611 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.619821339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632864331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162382442 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629809414 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680171474 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416657305 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405954298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060170927 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679498624 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410820451 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.41045572 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634179707 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411437143 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431989523 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.922764218 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.40431512 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982267985 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.297849992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42686166 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413905495 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174436692 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059779057 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405096344 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927917615 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41165175 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407758586 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68689601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41270889 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413939687 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688955242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.410944801 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413698333 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628871502 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.062951599 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176202205 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.417315684 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407761696 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.430235782 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406370144 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425591326 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407157976 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413807427 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.826880339 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411416801 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411166426 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422734903 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.419033234 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42300744 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.411269163 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40831936 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.413820318 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.391900731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.385398782 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.443477357 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535125642 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96490875 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41589988 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.085239498 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.757986899 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66230262 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408847044 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.392899393 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414241376 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408825329 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408465583 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412080493 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417619768 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987056017 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.424594286 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.688513341 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419639616 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.619442168 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619393423 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419572869 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632193449 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427024176 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433843696 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.388566366 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409650649 seconds)
  done (took 992.129378136 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.405837392 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.421678974 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.406002755 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.43630489 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406856059 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.472170564 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.47576804 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.503817734 seconds)
  done (took 20.822804977 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.418318595 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.412396308 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.406317536 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.418493273 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.405763162 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.896815259 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.418423692 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.415269374 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.427965965 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.421516551 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.420901829 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.105659886 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.439649861 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.408416404 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.395417976 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.419906687 seconds)
  done (took 33.127063821 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.533354461 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.608861608 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.465025655 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.481488424 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.458359213 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.415851974 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.672107811 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.437326941 seconds)
  done (took 27.371051222 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418228797 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.418432167 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420353209 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419437368 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418941274 seconds)
  done (took 8.391867075 seconds)
done (took 1261.608789897 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.416017529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.416210966 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.416508094 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41732994 seconds)
  done (took 6.963056629 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.390558261 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.393913048 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.393936381 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407187247 seconds)
  done (took 9.881358343 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.125976714 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.036223025 seconds)
  done (took 5.458695301 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.904749417 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.910540729 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.906675178 seconds)
  done (took 7.01738569 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693388086 seconds)
  done (took 2.988382171 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.341467304 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.413840691 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.073957736 seconds)
  done (took 8.12691122 seconds)
done (took 41.733043208 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.406197103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.654643743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.563237861 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.406875874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.568739186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.563137459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.146290706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407068439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414451396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412840218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406320781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.568153852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.195748019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.65309707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.195861612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.652781326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.604197863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415713159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407844723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411106636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.149392233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418972457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.408929471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420260717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.568221602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.558797364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415528183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.653634902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418058365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42025876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.58135232 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.418863727 seconds)
  done (took 83.785423374 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420726279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418526007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419753884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409263826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.4268101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.436783494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.410759097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40990013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421835157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420396518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410333479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.426400987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.427527716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410009252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413271905 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409411301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.410071496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409179208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.427868677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414604342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411287753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411131478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410328448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410593206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.410747836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411061429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.430656386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419838296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410766486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41047018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.411891204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429165892 seconds)
  done (took 78.633614764 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416254542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411298022 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430965863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412720617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.40980914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.418111329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414138894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421927891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411863527 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416759438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.412199931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41230558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416455745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412472681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.412669739 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413816981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411053737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417964227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424773862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413107262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412893397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411647739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.428316959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42963025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.417140971 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430357846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415631579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417605594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412733598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422790968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418314969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414520951 seconds)
  done (took 78.645134559 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.652232504 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.427318888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430355131 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.421851834 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430239095 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.42793892 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.423425857 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.657626113 seconds)
  done (took 15.173992217 seconds)
done (took 257.534911132 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.41893233 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.930915272 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449718308 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.419072846 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.438451574 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.443416775 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.639169202 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.447105016 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.644209159 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.436315153 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.457040401 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.419256283 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.237755119 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573551554 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.291600325 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.395932264 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.318752925 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.42170097 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.999886721 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.702627147 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.44356029 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.415961029 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.295840611 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.324114353 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.405785137 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.503686146 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.518312954 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.646012437 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.579500117 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.501174514 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.943858027 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.432276501 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.425843459 seconds)
  done (took 65.825886807 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.421444752 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.426791072 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.429882005 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.431001517 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.427629162 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.43001811 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.422338594 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.431546424 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.430782516 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.430645202 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.431662328 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.42809117 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.429635997 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.426309245 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.427775532 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.410104746 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.422153315 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.427315561 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.420599129 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.411079366 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.426236737 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.430716279 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.43112399 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.428849811 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.431301293 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.432230105 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.429557422 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.432843815 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.426323175 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.428204766 seconds)
  done (took 44.119991886 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432439838 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.018346414 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.169096352 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435808706 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.423627502 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.42818267 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.71721535 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.437661855 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.427164817 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425615174 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.909114804 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43451064 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457762251 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16525735 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432922734 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.434109206 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433298391 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.424894842 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.018049304 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43912582 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.715002203 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.438508857 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.71798173 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.43628952 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.429260439 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425392082 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.429928677 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.280664979 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447908681 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.909217874 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.235538602 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.716766146 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.213547037 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.210834106 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.230152648 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.440645879 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434399693 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.915599846 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433884841 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42731605 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.715206424 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.433481763 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.166537542 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.105815555 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.448978719 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435002115 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.298442479 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.94254723 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.680232545 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437736688 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.197804264 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.435709491 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436820139 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427842633 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.674327736 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435464149 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427081314 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.286610891 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.455690612 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.717144795 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.442975091 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427863417 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.017425258 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.43402656 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.011154132 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435907061 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.43488074 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.428644276 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.170448737 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437757399 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.120207141 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.450172014 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436089811 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.914565314 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.018161891 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.354670316 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435601064 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.021259517 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.231164087 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.740211786 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436875362 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.274627478 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.741003341 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.434371991 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439282247 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440052671 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.436748087 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499730304 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.715665101 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.054473719 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115718824 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.311724253 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.743860042 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442940889 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.430281685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.291185589 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.459889522 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438288174 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.169928144 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130172047 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.453127409 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.435796476 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.110937557 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.454607174 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.72232336 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441626679 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.208603994 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43587254 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500883425 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.43916316 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437520552 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.434445017 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.720922686 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.440269706 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438984178 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.104622607 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.953123377 seconds)
  done (took 199.725457152 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.426438755 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.425823882 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.425910389 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.426887176 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.427777362 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.434091592 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.425070567 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.427187862 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.43147014 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.425981287 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.429334753 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.436303979 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.432120606 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.427115017 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.43825021 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.427211638 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.426840341 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.452581712 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.429103146 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.428543993 seconds)
  done (took 45.918143518 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44158381 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.99504571 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966829214 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.446719315 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.437870567 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.434601157 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488679275 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445254492 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.437851914 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.738945433 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.612923235 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.449145067 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.438538866 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.43900263 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.969227245 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.425873879 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74120537 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.011648344 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.449864944 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008424958 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.426588713 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.442354656 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432830775 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008593334 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756133737 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.728883635 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.497817939 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.009287372 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.445421284 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.438822864 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010063116 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449528717 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.434923399 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.001290242 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449297167 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.457192525 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.439512158 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.49416574 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.493733068 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.743881192 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.019646579 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.739328168 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459614298 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.604763842 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.443879786 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421674071 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017791767 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450356306 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422788039 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.441024531 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448248206 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.982635952 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.442634954 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.981852015 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.447078544 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.444238431 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014028408 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.98947885 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.980134549 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616585419 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.43997439 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.727142965 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.447751784 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.020568406 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450764503 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.445912994 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446769013 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.61341573 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.013828178 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.732357656 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.752318775 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.750675348 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450595481 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.501541468 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.443107114 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.74624007 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.506965231 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.835724437 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.75168622 seconds)
  done (took 130.302462279 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.701206331 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.550242756 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.812788073 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.03936667 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.956300608 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.58106185 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.554980796 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679358522 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.443302303 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532632351 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.099917631 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.541488354 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.167246914 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.52997294 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.54242653 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563978715 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.849860231 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.440536736 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.104877004 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.073760199 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.45000916 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.547620199 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.961269547 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.625024564 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.43905633 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.062464943 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.39755524 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.975329286 seconds)
  done (took 54.542685344 seconds)
done (took 541.737885959 seconds)
SAVING RESULT...
DONE!
