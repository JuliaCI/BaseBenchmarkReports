cset: moving following pidspec: 27537
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.321084367 seconds)
loading group "string"... done (took 0.54100057 seconds)
loading group "linalg"... done (took 6.875270246 seconds)
loading group "parallel"... done (took 0.150766618 seconds)
loading group "find"... done (took 1.09586983 seconds)
loading group "tuple"... done (took 1.656880718 seconds)
loading group "dates"... done (took 1.181025299 seconds)
loading group "micro"... done (took 0.210740969 seconds)
loading group "io"... done (took 0.97648652 seconds)
loading group "scalar"... done (took 35.974402136 seconds)
loading group "sparse"... done (took 11.384824827 seconds)
loading group "broadcast"... done (took 0.892796702 seconds)
loading group "union"... done (took 11.663977734 seconds)
loading group "simd"... done (took 4.26182113 seconds)
loading group "random"... done (took 8.710519017 seconds)
loading group "problem"... done (took 1.840778449 seconds)
loading group "array"... done (took 20.155972519 seconds)
loading group "misc"... done (took 1.615520572 seconds)
loading group "sort"... done (took 3.162979605 seconds)
loading group "collection"... done (took 16.578578466 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481021865 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121537424 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113136144 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11677065 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143961682 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.109773304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121335144 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082660125 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.775023856 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146857195 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116830553 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409730331 seconds)
done (took 5.009149745 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173631695 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08431159 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08066187 seconds)
  done (took 1.28823653 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064321153 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120559167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066241346 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066953114 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066082062 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064917026 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065205618 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065000235 seconds)
  done (took 1.634988091 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073421586 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068571191 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068045822 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067559149 seconds)
  done (took 1.399647388 seconds)
done (took 5.691802466 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747369171 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201542522 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181876625 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392714958 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127942018 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154841032 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652831244 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312428265 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185760956 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080749694 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10312628 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315656195 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106352294 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640233886 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074898456 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08992024 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13622216 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448145896 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066596548 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080882289 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088229896 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128353486 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087387455 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073508796 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141398221 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066886621 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134168239 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079328235 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065388159 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204853596 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171572061 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656949725 seconds)
  done (took 10.160616094 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096342646 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096720648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068493718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122488653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09532285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068792166 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070871909 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066350931 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085488705 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126363637 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087869728 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100375978 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064850179 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06773762 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083180767 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203173233 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078704436 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080204568 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069842866 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07399102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108225017 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07691833 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077332506 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077042287 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127202257 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179636218 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098890001 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098537695 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06691912 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079963289 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113907435 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126689137 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065100173 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065528241 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123001963 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093328051 seconds)
  done (took 4.539172277 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.941229267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139512307 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08923621 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131235747 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064010579 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105512392 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06420364 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079737438 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197385841 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.337200588 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.562704623 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10943724 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102583221 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066567122 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067362448 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066213303 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.32949341 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09767118 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105090095 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081188063 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069547563 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068486623 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34173014 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067126707 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06340546 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06727445 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057437273 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122897605 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067272371 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.907939157 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12324937 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065750697 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1068181 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09910278 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167117325 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088759987 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.270741057 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067521185 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064624187 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063426983 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149461569 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069404319 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065610474 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082538883 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102386608 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111585525 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064716874 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066270113 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159318202 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064061301 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063858031 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07921363 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.611402137 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153133595 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077691476 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065011475 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249729655 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084293291 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068723299 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064185744 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176905163 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134250921 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066932149 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06606835 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067315209 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068767017 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348128666 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065144342 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.706706015 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069314747 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076794314 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0686191 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068870988 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075244033 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071687421 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084065707 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065790244 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074401879 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065173578 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065284021 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063373041 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065614606 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083110836 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354503399 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066159146 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067445455 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06413125 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08525478 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096081301 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066531656 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064357744 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099536761 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067397356 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065313046 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104407861 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065827026 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08309009 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167978738 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113434741 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067579199 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098431873 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06454582 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095921249 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073704192 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098332707 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08028445 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067877569 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.391843144 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065594696 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064554211 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068042485 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065414371 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066772983 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065863884 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079031931 seconds)
  done (took 20.334869044 seconds)
done (took 37.097392188 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235195852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073742256 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074081292 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077276577 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074530027 seconds)
  done (took 1.744597523 seconds)
done (took 2.934492835 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121775027 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098252141 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063754 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09439938 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063779959 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098597818 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098127171 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080256817 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098035112 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063345421 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094983571 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06324608 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063196351 seconds)
  done (took 2.309008726 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083679765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082313843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068916151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081142525 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063315257 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080657276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080063261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087658148 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079607345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071499255 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062752647 seconds)
  done (took 2.022846912 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083364827 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08340727 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070061197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080081736 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06526754 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080144659 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07984007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083883117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079841763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072554023 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063590866 seconds)
  done (took 2.019854543 seconds)
done (took 7.526687773 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078059491 seconds)
  done (took 1.245356669 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583583299 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.137341336 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083252992 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111093937 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181932987 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1183506 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276280876 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086050526 seconds)
  done (took 8.936483454 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089388328 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082832357 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070636468 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068104899 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068841028 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071564533 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071074511 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071316189 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06893756 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068460738 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070307361 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070188786 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070671759 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067294474 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070576005 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067530397 seconds)
  done (took 2.395343978 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092861912 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092462294 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073688259 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073956903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071347369 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071004287 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073086572 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072387832 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070259379 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071827243 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074100184 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073033834 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071140611 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064382901 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073467961 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074773442 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06991989 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073442046 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074082381 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073689076 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073989727 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063628309 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07073176 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073316573 seconds)
  done (took 3.053274111 seconds)
done (took 16.807844609 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115391598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072681214 seconds)
  done (took 1.366473507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083400024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085342974 seconds)
  done (took 1.35344123 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08619023 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068045294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092507688 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078439741 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065596155 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065211486 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088464217 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065340362 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065367728 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06564608 seconds)
  done (took 1.927805384 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070132036 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080530384 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071495081 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08100295 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073470772 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063635614 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072356162 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067086649 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077685148 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062225764 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070717599 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081342671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070876819 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08336256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071590955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068012149 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070340277 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066630833 seconds)
  done (took 2.490699375 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067368813 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068117909 seconds)
  done (took 1.327181241 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069399746 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065255128 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066501574 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066941167 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063524909 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062115345 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063126836 seconds)
  done (took 1.643858177 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.37479554 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108660533 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293867443 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070117195 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081005212 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246918816 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064651339 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06930034 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069406054 seconds)
  done (took 2.608806384 seconds)
done (took 13.911727401 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079953817 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086917731 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094543862 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.356698105 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091194331 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065370702 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11308412 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191595315 seconds)
done (took 2.282563907 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212869695 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609929317 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384159405 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195397712 seconds)
  done (took 2.386662885 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332713953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0864593 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057835631 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066236095 seconds)
  done (took 1.750679048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067207943 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070167024 seconds)
  done (took 1.340581547 seconds)
done (took 6.89873641 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06741251 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081976639 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065183417 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06266142 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06488054 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062846613 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062734232 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065198324 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065574808 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06523509 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06751294 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065076395 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062739041 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062574475 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066414352 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065182941 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062742903 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062864504 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063160902 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063010589 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064893316 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064966957 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062610506 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062904781 seconds)
  done (took 2.798358464 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085321561 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068116287 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07299324 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07113482 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069220429 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070774961 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070307997 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065680171 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070516439 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067373479 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069379948 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069291301 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067242577 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06944476 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067439346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06927647 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070480707 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065951859 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067337206 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069011601 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070248531 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065582267 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068878182 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070075856 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068609489 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070388501 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067508503 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065173973 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070408863 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068537525 seconds)
  done (took 3.292607077 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071120084 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064478363 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063902801 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070256998 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063150563 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06399558 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062599674 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063313723 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063968596 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062729222 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064166401 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062679181 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062887761 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06378145 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063720793 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066483404 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07804923 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063236885 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063169535 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063136035 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066148071 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062654952 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063150445 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062974211 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062634737 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062387392 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06341302 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063126874 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063874913 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062944395 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065951776 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066087759 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062636649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069475739 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066669185 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062822524 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06699288 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062880939 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063878843 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062458204 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062170153 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062862703 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062668856 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069615752 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063116055 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064249968 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062813101 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063799804 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06328032 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065120928 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062169816 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062832718 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06520006 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063836463 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066495367 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062636315 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063953204 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062497475 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063556727 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.175179707 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062560936 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062465574 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065093112 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063146155 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076757504 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069341766 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062271518 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064096916 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063483597 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064811018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064741477 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07586952 seconds)
  done (took 5.982133044 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093012918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089269998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064810138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06452872 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061558522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063392301 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06701544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063569166 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064708774 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0695713 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063598533 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064475247 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064402625 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075819392 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063800048 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064719813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068966667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061568281 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06318283 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066527878 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063324321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066799038 seconds)
  done (took 2.712593463 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156962144 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070957206 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104639692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072471952 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067078135 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072421158 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069030063 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069406291 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069271046 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067435143 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068112187 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069221496 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066904672 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067179513 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067452638 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06711067 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068973809 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06741761 seconds)
  done (took 2.582786005 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079405215 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067952934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087640697 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065469758 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065335317 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067495511 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070062305 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073677223 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067478947 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065887028 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07339293 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067617889 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067852081 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065174508 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067589815 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065227837 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067759544 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065070691 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07337087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070237358 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069731848 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073324954 seconds)
  done (took 2.75472122 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08095469 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068250454 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082158522 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067931881 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061643085 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063692867 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069134466 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065337851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069419767 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067209436 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065159405 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063597559 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068887349 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065434755 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068860585 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06519784 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066917345 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065124179 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066979799 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061276125 seconds)
  done (took 2.576981972 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088590959 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06886999 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067530944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075432104 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067205435 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066896917 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074494734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066206289 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066742594 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086914668 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066460915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066507985 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07394751 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0718336 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066452512 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074624722 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074446541 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073811885 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066213032 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066536708 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087161295 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066596756 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074231476 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066709493 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066524449 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066619562 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066992949 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071304337 seconds)
  done (took 3.218119156 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0681131 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067631498 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065144695 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064014718 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063250954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062289362 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062399683 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062949427 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064924887 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063064776 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065075981 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065019726 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064970234 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065001873 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065145844 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065284217 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064986813 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062646511 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062548407 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06274778 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065219588 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065236411 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065151789 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062813387 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062467606 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065070755 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062540648 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062508226 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065020863 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062573309 seconds)
  done (took 3.150069024 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076403053 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07382211 seconds)
  done (took 1.377038704 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064045687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080004498 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063091306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069273315 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068601659 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065801518 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072587432 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06890184 seconds)
  done (took 1.774602825 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083144895 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07739407 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066985173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079026828 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076196217 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081276718 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130508838 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066316814 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07218164 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064137135 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078739306 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064895571 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071446457 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066201743 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070962983 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071703494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063407891 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071662826 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067618761 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06394267 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066724909 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073857556 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067562413 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061224942 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06645962 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086238851 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075986152 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064948228 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068200954 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072198242 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070691678 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059911676 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0649351 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066390004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063303285 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074769014 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080399886 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068308395 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07382543 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066546661 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076150102 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061244178 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069994754 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071851874 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075063037 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065860191 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066602543 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061211393 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063110568 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067341492 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060844728 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065318003 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060209345 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07454117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068676177 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075898802 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064581663 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067149412 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068246122 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068674979 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071629795 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067208205 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067911961 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065055019 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074745478 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069738497 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074261202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060639675 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059797869 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063225007 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074993487 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087512889 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071302336 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066603831 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066587491 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063218143 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068631894 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066638889 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071285492 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072134621 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065582914 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071374277 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072297938 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06570491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068137544 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073652331 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063844195 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068313658 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063680629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081210483 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064437611 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063646599 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062907623 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075408442 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068435221 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065147368 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063255641 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072157272 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05973214 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06548991 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0658359 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065395925 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0746328 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068409056 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069109487 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072815927 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071417646 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064645722 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067211495 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061191635 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064976759 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063697821 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071212354 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058878599 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067203234 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065259617 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065061758 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197315249 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064703359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066476492 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074203541 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07174166 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065044154 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063706211 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068531031 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066128737 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068918102 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074083597 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064628234 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06134559 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061438644 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069182689 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066160922 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070057276 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071422077 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068803634 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060862118 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064491631 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071533985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074955778 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066292117 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067260551 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072161245 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067591683 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065616727 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07250097 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068265978 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064915977 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072065002 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067190163 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061378752 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0694132 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068694813 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064818763 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069898317 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069815361 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068794709 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066502863 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06476664 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073654683 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067063856 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065485579 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066035558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064167032 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07556873 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068013682 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061391722 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063350341 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07568571 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063493025 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065607487 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065216602 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067280651 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066370641 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06466629 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065539691 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067901424 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077559558 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070209984 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066309145 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071499012 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0769171 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065805596 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067835479 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065429106 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066784574 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066180354 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074415695 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070743452 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069775728 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067626779 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062430574 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070602144 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072740555 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064495215 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063434064 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064524191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06943523 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070823827 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069948315 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066396221 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063561113 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066070271 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0689846 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068146939 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065825872 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065308232 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072368784 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063937811 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072670438 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066599392 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075344046 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068675228 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060703702 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068838719 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063775928 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07112661 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061356585 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063569662 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065015611 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06656129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064084754 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067408187 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059145173 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070888639 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071395417 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064657928 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063477471 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063967591 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070730121 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06603198 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067820267 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067841783 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070001696 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074123738 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063808184 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067397325 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074577017 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192089156 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060638084 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071959787 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064951193 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065167774 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065389895 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064059048 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069239232 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0751612 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072219573 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060795829 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068776352 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065020647 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064795222 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062043711 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071096144 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068700564 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06749501 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07300052 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067149737 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066376643 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069625745 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065665727 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066952198 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067830658 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068907902 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067288737 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068354384 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066038864 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069172998 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065110743 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065324489 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068032591 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06615169 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06661665 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0726955 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066234534 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066498599 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068134223 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067197605 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067157696 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066267473 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065482803 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069267168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066976875 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066491955 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068384045 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061466592 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073280252 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065821893 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073415957 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0669448 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062844876 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073350906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068725633 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071557267 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066962427 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067063707 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067063652 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0658919 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069269804 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071966676 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064400046 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075732348 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073687502 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066052287 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06841761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066573656 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068062096 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065086929 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067423276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06699357 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065711431 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066248177 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070463127 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067794436 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065531711 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066856004 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06649339 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065848209 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066540022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059974049 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064625401 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06486119 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065213141 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074770802 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06592761 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065233898 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064341936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066097044 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064735782 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06218208 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074001635 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074488736 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066273386 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072126618 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064651226 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066992466 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075640925 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059848948 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063726234 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063706442 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063729301 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072865442 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066274505 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074576558 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065122021 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064553588 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062179931 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066037172 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063850991 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059373116 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062416599 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067827294 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063395739 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063347607 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064423845 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066478828 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065305481 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07315899 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063610218 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065013403 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065060275 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061834893 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063357417 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.195400273 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06923663 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067644119 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064200504 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063478004 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0656711 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066539595 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06694547 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065618006 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068035998 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075531597 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065746668 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068512493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069842551 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061412835 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069619283 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066140323 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065926736 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06483952 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069934059 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069602418 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067363898 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074786719 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065793867 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067209385 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066530394 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064199491 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065751972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065995818 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066537339 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066153541 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066912891 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073722257 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06439515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069338339 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066095222 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066933967 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073011557 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066644843 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068384214 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0728609 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066881037 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067774394 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074307836 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070446913 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068917379 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067647068 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067547131 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071489495 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064945577 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072160697 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066545297 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066683384 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068539018 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065283963 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066384263 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065897674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065689055 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071270053 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067257347 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065229625 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065311186 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06403065 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067244393 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069383375 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073553984 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068900168 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069354602 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061245851 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063081653 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066923353 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063688447 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067453762 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067952802 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070970455 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067700754 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065710356 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064701871 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074389239 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070879078 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068979828 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063420848 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069094428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066500882 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067897549 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066090467 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066323198 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066786725 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069067264 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067209586 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0646582 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072072369 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068947664 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066659028 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066861648 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066581156 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065686879 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061127882 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066106619 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067563879 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070471486 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067423213 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065905527 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075817816 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063852995 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066398627 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068548417 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064680791 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069660572 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060898598 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066783228 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066351946 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065786842 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060080062 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06370172 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06218289 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066358929 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063734319 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059969508 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073858061 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07244603 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067109931 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06330845 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063496791 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.189270785 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061614231 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065463173 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067038867 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068345797 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076208161 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065387669 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06495971 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060766804 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066220339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06928731 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069552325 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064405372 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061459279 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065324494 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069154328 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072133218 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064886391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065894535 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069338704 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068130568 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064360045 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069880169 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062971601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069577839 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078528027 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06713891 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067094677 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072820575 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073884459 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066623576 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061440161 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067491274 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069431581 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06789709 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066527003 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067536238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08099528 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06888473 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065298441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064875845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068182852 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065678041 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074202592 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066679238 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067204564 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070264099 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067322822 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076090531 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069077021 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074279784 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068841113 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069401154 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065340386 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066082295 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063778157 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065137552 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068195708 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066975213 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071446781 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074507041 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06493091 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076268097 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074673943 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067636651 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062986533 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06529549 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065623866 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061488604 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06660916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064491159 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06372341 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063765449 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065138075 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066508565 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070893001 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066485768 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066817362 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065528848 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060490051 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067873806 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068048098 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066202085 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062545459 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065863702 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066052755 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069748471 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068824577 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063378852 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067164581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067540642 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066440545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060783901 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071449284 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064602689 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067851606 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064721374 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06587641 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066194305 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06912337 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070221877 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066951981 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067541934 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069126713 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067761273 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06296905 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063370569 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070110252 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063101435 seconds)
  done (took 42.107142328 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101692579 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062928518 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061087933 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061615233 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073489052 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062057364 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061076451 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062545903 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062530685 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064738705 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061618641 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061232781 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070153363 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076806468 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072826564 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06611724 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061469072 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062160454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061469121 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062102744 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070324839 seconds)
  done (took 2.721385625 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075139831 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070505945 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071900895 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075226553 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066403993 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070007922 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071659301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070095384 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075234272 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066184987 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075107696 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069571214 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06637419 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066134636 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06621797 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06986085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075229565 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066587165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069568255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071697899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070010321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071710875 seconds)
  done (took 2.847710743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068612849 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06465335 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067101806 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061139917 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065910113 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061106951 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068958615 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063152911 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076938041 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064242408 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06430408 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064338971 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066730148 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060412268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065439647 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063189541 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107258983 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068432159 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064980812 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065933343 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060880617 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066684785 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061141988 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06099649 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064330556 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068682609 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065648539 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063643099 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064941287 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064062074 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065374974 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062928541 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066625769 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065616393 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064090273 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064036891 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064926905 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065128454 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060841596 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063007158 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065498031 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060946386 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065485398 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066281959 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063383823 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062845565 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06626801 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065053829 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060246556 seconds)
  done (took 4.51242356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081537584 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108075322 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067352731 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08714201 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079311051 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074772383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06830598 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087850475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062940871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063518057 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080988125 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078958843 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065181589 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069635168 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068422505 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064611163 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066277297 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06418386 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068867385 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064347828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068856903 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071243483 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078886428 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077824521 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068649374 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063974987 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064320764 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069248202 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076813994 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069476053 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069168216 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070034105 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079168262 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066649388 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063963582 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067101988 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08035612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064878439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066940456 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062350162 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067025338 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06909383 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07086058 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080670864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065220364 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070065027 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064875556 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06217074 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077630873 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067434758 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072771395 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079120535 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069080862 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065443789 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069133018 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079375558 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065108274 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063527057 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068161241 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077128798 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063025728 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068590646 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078069534 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06657167 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071667511 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078340378 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069698921 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068189046 seconds)
  done (took 6.274814889 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077054143 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071809395 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080124482 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079783974 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071307608 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071923523 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071819904 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071455509 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07100791 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076183158 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071477096 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09174925 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066517671 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074074343 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071662486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071502724 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071391272 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071598428 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071482364 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071373075 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071536421 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078890006 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072192245 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079279519 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096838101 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067246027 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071127829 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071556939 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079617701 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071354748 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078650601 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071624925 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071482193 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0792564 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07843241 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071328588 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065183197 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071296203 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07126743 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071200998 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067045316 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079078049 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071176943 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066703286 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071346057 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071345939 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078941901 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078494206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074024095 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076668607 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071550144 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079662041 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071423143 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07142136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078953109 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103257473 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078910258 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079194198 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070932495 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07859323 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078923181 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084834278 seconds)
  done (took 5.967954264 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085842943 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074269877 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075041254 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061175279 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063593908 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069270145 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063350178 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063495449 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073379025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073594568 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076020659 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06910736 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071878481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076432678 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069532206 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071952866 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068631317 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068864219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073531726 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069251516 seconds)
  done (took 2.741801162 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076099248 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082386354 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066258654 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071576488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068345842 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070803285 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067266101 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068534439 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065988589 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068296797 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074987112 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075076803 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066450192 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071314588 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075047834 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070574367 seconds)
  done (took 2.451491542 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07625075 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073034039 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078907051 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065403203 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063202522 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061927856 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064978988 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060654137 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061883623 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076817338 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065305135 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067832584 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065024931 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06389928 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061980461 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068158678 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061902323 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063008074 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065043064 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076991558 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076005177 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063640115 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065571469 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064942388 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06508302 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069775803 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064503329 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062925202 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06229428 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065338479 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065698569 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06838316 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062716706 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062903748 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063278893 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062495796 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064637045 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065073491 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067694959 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06506127 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063314018 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064882838 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064985163 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065864114 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061490258 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065654155 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061598762 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066952143 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063037186 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06532391 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064874373 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067429106 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065623741 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07174914 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067869672 seconds)
  done (took 4.944357936 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08058957 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071407377 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061204453 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063753756 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068547833 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066836021 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068818127 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066557869 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067084994 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063358086 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067037505 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068382118 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066880897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068787358 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067628507 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068842719 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06108031 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066683731 seconds)
  done (took 2.54122168 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072691048 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067297426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072432711 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065421033 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065995024 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067059454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061563594 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063911294 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06378697 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065107056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064892597 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067379154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063738727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067178255 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065177898 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065265891 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067606979 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063862903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064948924 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061245907 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067249492 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063929254 seconds)
  done (took 2.767890378 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094198544 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081423552 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136681064 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077129277 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082298973 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07112001 seconds)
  done (took 1.864301145 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09236403 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079092682 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066205022 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087915793 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072427306 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066328904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066424334 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066936625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075587927 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075137575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066595272 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075537348 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075533484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074565221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072481052 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072266851 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066815594 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06680653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065842781 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083273012 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067442609 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075041089 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066949438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066750004 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0669766 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074529287 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075395293 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075147682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066774156 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075288818 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072416158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067575624 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075661615 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07533448 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068678652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075246737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066950708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083744963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072615878 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075171724 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068173703 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072926369 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07503669 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071488961 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075181462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067432228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071556551 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066799198 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066912684 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084921278 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072446771 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074250028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072597361 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075330316 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075249036 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085290646 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075669557 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074396745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0731187 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07798595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074591796 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072570608 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07474304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07520722 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072510735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074598551 seconds)
  done (took 6.15728776 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083627181 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087459169 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068218225 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076727864 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074752605 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067613314 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067219199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067312439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067232097 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066780566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106889983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067531933 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075085643 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075163415 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067380199 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066971209 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067430552 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074968641 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066551299 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08583381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067235102 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07478803 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074872165 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074825772 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075350207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07288344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067227713 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067220325 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066875271 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067172635 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071940957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06733382 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074946944 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066454847 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074912804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067394691 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067025683 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071838956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06714586 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072760547 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074961248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083241994 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0669569 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067123942 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075824657 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067506527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067258068 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066971612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067512383 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067427999 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075712627 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075443399 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075648077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07475464 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067294168 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067156187 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06708284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067196807 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067657836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072815199 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074502174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066858686 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085145649 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066990994 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067042448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074970748 seconds)
  done (took 6.084494884 seconds)
done (took 127.402173015 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187295378 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165583738 seconds)
  done (took 1.669689995 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071175227 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096890101 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076341805 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12799667 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065913898 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099827853 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098644367 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077431741 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065371482 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065799278 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065680525 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068320298 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131450055 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065840313 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065924837 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068291344 seconds)
  done (took 2.64080085 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099770535 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156809372 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09921946 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064592913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097031551 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07235258 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064462501 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07481957 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071066012 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065065714 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072323677 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070133843 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064862063 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069752833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070625241 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071969104 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064622892 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072191485 seconds)
  done (took 2.756503326 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103803085 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091469559 seconds)
  done (took 1.531874668 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159211729 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104423542 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143651819 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341897517 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.171763861 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228511522 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130136481 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126319124 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11695399 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12297622 seconds)
  done (took 2.97552902 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100422459 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150653394 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254496413 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114067397 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071936252 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094219087 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115561177 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.0773929 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080020924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079863104 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079593935 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075294854 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097665451 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072338774 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072536208 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075181287 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101036965 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071422192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073287731 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075729987 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098034744 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064558308 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07230136 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071502227 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076086278 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076294791 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064550371 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064560901 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075783304 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073663963 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075922123 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092680592 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07675867 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10569938 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0694193 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106721411 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076063541 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072955799 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073388596 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073049425 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077840038 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077919916 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071284645 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074899528 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064385478 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075187205 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064451848 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064587604 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077127039 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065956406 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076834038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076008262 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105659115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065915012 seconds)
  done (took 5.894021991 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104815281 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104376603 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071134818 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109966679 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098510654 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071342921 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100565196 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092382287 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101726976 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069078512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067679251 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069306941 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081580947 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082594642 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112063742 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103583164 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072948471 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070715025 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102594408 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101483623 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067580278 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093214321 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088323865 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100668873 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066792843 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069351523 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067418261 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069421339 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07618029 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077839609 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069456706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079732768 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084365014 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077925002 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066450052 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067311494 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067516424 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079518847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078895505 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078026035 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07692533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067590014 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067215031 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068650994 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069351923 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067544859 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078558715 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080199283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078276407 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068753758 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069623598 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067500756 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068537987 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079964373 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077083363 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080256173 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079291542 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067680396 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067643495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071630107 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08083294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078575704 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078569631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068537319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078357977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067659122 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079297722 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084042536 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067710685 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069545021 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067900591 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068709621 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068325314 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077151955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077422262 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069004077 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068843483 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067344779 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079417409 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078003295 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067421466 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075897336 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066878706 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068001976 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068772555 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069124827 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07743589 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079838702 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068812258 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067392156 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068257671 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067398363 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065917369 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075107175 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078278013 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076614382 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076539351 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067357082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076583438 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076578693 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068055605 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077070352 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066446448 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068063405 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.195237568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07887333 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077294937 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079989241 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068805763 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068278461 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078531 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081745387 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068276428 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07819524 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080449738 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079946133 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067491485 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081089792 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068286024 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07932637 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069672736 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080084031 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06867897 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080546654 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068655312 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067492183 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068703723 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080177863 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069910001 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068669141 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069459485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069456617 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07969609 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08240874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070166182 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080609068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078215901 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070195624 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078769305 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068320201 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078819602 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06910489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070251294 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067767115 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082518614 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068160762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067701393 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069385474 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080675122 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068283673 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079822502 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078232087 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06731701 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081758337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080739925 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077062322 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079059714 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07016588 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068405481 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067493383 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069452685 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078081493 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079249001 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069698652 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068575652 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077461677 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079308223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067284793 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078601089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077900689 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078143047 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067735624 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069013743 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079850476 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08050028 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07793561 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077467023 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078211771 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0680333 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076983995 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078178162 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067895129 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083974734 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067746917 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08255711 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078645982 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076801439 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078551088 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080026366 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079822882 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079825434 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082684407 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067506266 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067373599 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079178885 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067354717 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068518904 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07719129 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068731718 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06835754 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081300268 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06685757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076997459 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065892898 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076418598 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065017866 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068105358 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081121053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066225437 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067070665 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208844947 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069474541 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077823543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081469447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078459182 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067954538 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069616389 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079517837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07907408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06839287 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068441706 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07066881 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078118678 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077422153 seconds)
  done (took 18.483819713 seconds)
done (took 37.296409238 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210384001 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149192183 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.177613823 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116772011 seconds)
  done (took 2.090984164 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125524427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099748667 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094152794 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06468236 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100567412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06443702 seconds)
  done (took 1.924245242 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314391966 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211832418 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180968001 seconds)
  done (took 2.077474167 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199859435 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185102703 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39038059 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251193848 seconds)
  done (took 2.511026248 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144824969 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088919531 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066178439 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082210771 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132660229 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159247494 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100311317 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124448757 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077349472 seconds)
  done (took 2.405349797 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145629107 seconds)
done (took 12.525854098 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.145196345 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.24245719 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158467406 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07546525 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081969837 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215622591 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121542349 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072889389 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068764307 seconds)
    (10/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07264497 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081140025 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104550246 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089042352 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07674603 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099972766 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180726444 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068598549 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072801764 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.196088169 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07025736 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.212484729 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129822153 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.165334351 seconds)
    (24/309) benchmarking ("sort", Int8, false)...
    done (took 0.146950357 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088871006 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070507753 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203070578 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072058036 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193692578 seconds)
    (30/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.175909839 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.117253941 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071192609 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111941176 seconds)
    (34/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109665253 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07079017 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051705092 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070904305 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080216308 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076228054 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073464774 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11096712 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073691188 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.086573008 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092598169 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076526567 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.157928779 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104297873 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071440263 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071389899 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087851388 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06531252 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081009384 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071201044 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099245289 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.16075732 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141479795 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074748158 seconds)
    (58/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071208677 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064467838 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.166985028 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066065299 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156623736 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069793431 seconds)
    (64/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10768646 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071495857 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.193429361 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072124051 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098276 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087344948 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077133107 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091805015 seconds)
    (72/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108113915 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05088675 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073001607 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09434003 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.177110401 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.147334395 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190268648 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050312977 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.15453241 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113167599 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191660896 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074605683 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14970973 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.06449176 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.210175698 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.142801617 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091787842 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176355922 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079299862 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.14972261 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065962579 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06497363 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07397677 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051764604 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.186848592 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071224624 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172865669 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100010573 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088398365 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.150138882 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120377599 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095678184 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05102536 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185127821 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157622024 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17594225 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071742644 seconds)
    (109/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075713668 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.291462189 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149049202 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05095708 seconds)
    (113/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071960542 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088020489 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135687646 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.10677817 seconds)
    (117/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075268607 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051362474 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052244131 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.151791622 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.132481856 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073334246 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080953042 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071155784 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14754008 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116297877 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050966848 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064906926 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070021097 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148480704 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071480069 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10907214 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097436115 seconds)
    (134/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051957099 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059783696 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145069593 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052706553 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064414203 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.191844664 seconds)
    (140/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105367592 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071289979 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063159108 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077858524 seconds)
    (144/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059847276 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06401299 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.089981598 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071176712 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088032334 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052192 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073611489 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.135259097 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.183087689 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072790258 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060855717 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064763411 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087683308 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050537542 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050967391 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138477238 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051143811 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064377137 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067300209 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08643807 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06707497 seconds)
    (165/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070364275 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063854092 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072993429 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069362001 seconds)
    (169/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071272755 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062692764 seconds)
    (171/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08818367 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085936251 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088064544 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074719527 seconds)
    (175/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051769617 seconds)
    (176/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087146684 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066760066 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065547011 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071148621 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147534895 seconds)
    (181/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078138025 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126593194 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07220456 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051368286 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064656798 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060133716 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051042384 seconds)
    (188/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062871562 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064296197 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051967298 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064138444 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051846201 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070831989 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163421113 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063263299 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.224999944 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070459384 seconds)
    (198/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05268844 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074930883 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151710304 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091414376 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052067224 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08860576 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065326182 seconds)
    (205/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052406466 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086057583 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089886704 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065551385 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166239706 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072302283 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073653746 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090036997 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066993613 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051695676 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05299696 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078104948 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086605045 seconds)
    (218/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067942843 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070346481 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066701892 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050900048 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050727447 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065560994 seconds)
    (224/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10298442 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134948406 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063386292 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051822281 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116678838 seconds)
    (229/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069036018 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065889122 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066729522 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066625089 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052887546 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093984053 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.130158668 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052018266 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135411383 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051125949 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073430056 seconds)
    (240/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060372311 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 0.126210726 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065712951 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066954286 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066955969 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07766988 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054139782 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136621686 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080233319 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071099141 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050998034 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17122651 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172858396 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096420777 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064059496 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050767418 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086951369 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052245891 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064804318 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.15636851 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088482768 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052724417 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06417292 seconds)
    (263/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064347065 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070775252 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050535628 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050301009 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091293082 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072408731 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051563676 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062157266 seconds)
    (271/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070422702 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087702959 seconds)
    (273/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051767138 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170688138 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071447608 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064631865 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050836133 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074408818 seconds)
    (279/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182359599 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066225205 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050927119 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072256671 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051086621 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066203983 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072295749 seconds)
    (286/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066572611 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063251896 seconds)
    (288/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050752988 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063490434 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071524573 seconds)
    (291/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051515925 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162100705 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050677477 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05114019 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069588983 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05100859 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050629185 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05149866 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06441951 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05057621 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064745705 seconds)
    (302/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059994184 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072210191 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069486669 seconds)
    (305/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065489675 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053024174 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088787092 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051792001 seconds)
    (309/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061077684 seconds)
  done (took 30.118692534 seconds)
done (took 31.505959888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086927176 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091987111 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074605988 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092402329 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080351373 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076055709 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071946892 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077675275 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078980571 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080992562 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077764232 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054544854 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073664081 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073908115 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07416827 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090968285 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077379308 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072274292 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072452892 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064548766 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072628641 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065705932 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067187031 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054247577 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077555893 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071420214 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071909362 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073490449 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06559463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065709267 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068828786 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073390561 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06533666 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077688509 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071820055 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072848839 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074177884 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076631546 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06756502 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065767462 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073572862 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065622186 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072666019 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073138492 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071574409 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07106689 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07287941 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077683352 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091134247 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06774691 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074308408 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075496185 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076013821 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072206465 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069156404 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072313733 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070298863 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090784867 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073158443 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068180657 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073724875 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074028873 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070711852 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072675074 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072753867 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074566147 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074773333 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070759261 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074165592 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070784526 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065260551 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072386489 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068441481 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06529293 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075061177 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076165173 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064166647 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071098271 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072129552 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070673243 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064286036 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06713047 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066901417 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071186798 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067152241 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054316075 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068825341 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070936972 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06406857 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072480396 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070960096 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072092077 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066663994 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074869947 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064632718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069885397 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065047889 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065076849 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066454038 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069011974 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064952699 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067131531 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074102026 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066337112 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070963725 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078195525 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065079913 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07116942 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064155683 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064448792 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078332862 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073830037 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064806441 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066992221 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06394474 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071387132 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063910035 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064801271 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064994102 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064714974 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070142003 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0640731 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065692336 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070600228 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075848403 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06329253 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067355307 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065854407 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063229821 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068948526 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063571694 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06365957 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.198824116 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062583297 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06843014 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066068468 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072694102 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067703383 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073119537 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066816685 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073744794 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070361191 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071641951 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070551744 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064819002 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058555183 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067937601 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067731812 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067627768 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066196291 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066707717 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064909525 seconds)
done (took 12.367327054 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06879021 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142511734 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099144645 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094742299 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085338022 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066038301 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075875923 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10130648 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067671279 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102400152 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087539772 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085345969 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11188959 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064475355 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065241804 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069513095 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066734554 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081205048 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101040389 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085848048 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115310671 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065257113 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093844358 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089710618 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087101381 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091934321 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066774358 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06951436 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069347407 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099965886 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086178281 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069731131 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066648454 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100133774 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09204693 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08301725 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06632527 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082217926 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066247344 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065878873 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067040232 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097533406 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079832001 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080083478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069733786 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069299531 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066807291 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08312856 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088473566 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078218839 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086417338 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102339164 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068156863 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065650169 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063898588 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084624197 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065167946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068559792 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065471403 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067780386 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065942182 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068815375 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080287015 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082069613 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069219881 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07971045 seconds)
  done (took 6.756075874 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085521798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.0897371 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08270825 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083088764 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065200607 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066185896 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066129693 seconds)
  done (took 2.017181932 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069039468 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087922693 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088156371 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088981663 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084191616 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086678993 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075565782 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0662318 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079980965 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067710393 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086976515 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101928509 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066883191 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072584434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090158902 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066364575 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090097122 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066852187 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069449854 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089650576 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06806403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081432618 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069307113 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066645154 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080129431 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06664207 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112747945 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070421444 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068418799 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069453783 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0645002 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106604757 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079833694 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075191373 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066286634 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080006539 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080080732 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064105491 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082014642 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070845622 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079470322 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065981941 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066706405 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064030032 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070176934 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07597247 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066456219 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066122831 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068197924 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085790989 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065981776 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079413175 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06934625 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068267558 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067128489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069362434 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075317981 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067159297 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085082764 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067000034 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082226996 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081473424 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079564156 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081828796 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068962518 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079581716 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079537348 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0689098 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067653829 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069652852 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081871438 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064732715 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067300433 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076326091 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067612674 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088479935 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088330951 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066960495 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074617165 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066153396 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065969991 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066068878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088129471 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0681687 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065931469 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070055566 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068694807 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063916952 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065090323 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06912705 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06391017 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067408084 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068576814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068722592 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068324673 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081870643 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067904708 seconds)
  done (took 8.688277516 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071973479 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07003601 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068579631 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066695488 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067690907 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067247825 seconds)
  done (took 1.912945726 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096874801 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068919826 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08066626 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072165863 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103485259 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086026659 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086783477 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078445529 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083138474 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078874641 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0863076 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088103844 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092273928 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072329445 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085973312 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071804344 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086340911 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075386861 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077626787 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072614853 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085829924 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072178639 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072857446 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081116963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075121398 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071479791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066727127 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078504806 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077716283 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078215855 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072272168 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075070412 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070140725 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077929925 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08661457 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070214047 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071606369 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076891664 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071962876 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075266599 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087262138 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072608015 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073844279 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076721156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077529057 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.0698601 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076550636 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075685579 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085455432 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076710256 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076606661 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071055206 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074904233 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076507728 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069909043 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07729487 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076056682 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085951128 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071889418 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070114366 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068973353 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074638026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076661706 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074578212 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078173806 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076499599 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069912344 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071789713 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072283355 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071052615 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076120333 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0678599 seconds)
  done (took 7.029942521 seconds)
done (took 27.869731882 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547238296 seconds)
  done (took 2.012616244 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603059207 seconds)
  done (took 2.092927032 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.496862923 seconds)
  done (took 7.986584681 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399691247 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488337555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.682498812 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129050539 seconds)
  done (took 3.229305506 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.677231086 seconds)
  done (took 2.174050001 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212463977 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.192969484 seconds)
  done (took 1.913584188 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376016138 seconds)
  done (took 1.861560555 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106768799 seconds)
  done (took 2.594193568 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264421094 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161769346 seconds)
  done (took 1.916775473 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458563155 seconds)
  done (took 1.94910141 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.826768158 seconds)
  done (took 6.319092383 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214326465 seconds)
  done (took 1.749814597 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241835086 seconds)
  done (took 1.732306747 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699086816 seconds)
  done (took 3.191246979 seconds)
done (took 42.21839769 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082541708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081586547 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080647355 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077985195 seconds)
  done (took 1.799697407 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078478464 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072134125 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07693043 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072531204 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076341085 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072131531 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074169238 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07661014 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071826383 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072417332 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072073723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072323254 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074972565 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074123654 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071021448 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074493619 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075576722 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071935151 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075157025 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072076828 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071034281 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074765201 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074429521 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071520849 seconds)
  done (took 3.262799791 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080464321 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07239714 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.0745999 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072579503 seconds)
  done (took 1.800513669 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08007352 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092239117 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088781182 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076794128 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091779574 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085978818 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068760828 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069161006 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073139134 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076951687 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067994201 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095517888 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087791044 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076574098 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078818044 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065965457 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068441692 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086665179 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077293432 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077251145 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06936048 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076787572 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067670206 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0877508 seconds)
  done (took 3.382392083 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080561929 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103296962 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077901301 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087535441 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090616246 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065194013 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074229016 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088942646 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123114413 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065032658 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069737258 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06521463 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072201686 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064851061 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076001864 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10436632 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108239901 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068254206 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095410567 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.0653592 seconds)
  done (took 3.151236059 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075145574 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069438105 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066444674 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068434844 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076918968 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072922187 seconds)
  done (took 1.937398363 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069694925 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067485548 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067070763 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067349399 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072014518 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066879252 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065215325 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067117373 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067313419 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066684558 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066510956 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065458014 seconds)
  done (took 2.311260976 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.197307104 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068036241 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069297464 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065982343 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07012207 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066039082 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07937195 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067738568 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090244517 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066172156 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066171445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067942957 seconds)
  done (took 2.479625296 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208810395 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075687939 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235133624 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136536481 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112165926 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114909712 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103376532 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112979424 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142539422 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101246791 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167119531 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164851187 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106565395 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136366496 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089003381 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096900045 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155275115 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161242588 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102777974 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164797191 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143201715 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12432946 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146465103 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100856121 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105550284 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12164381 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071150991 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080288294 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169982093 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130806186 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145997591 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110714284 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09339704 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175626273 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170575874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14119726 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134020498 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083689676 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10181491 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13200041 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19883756 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087709457 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160701735 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244750253 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081186807 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132175281 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120280757 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119305632 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1074294 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090676072 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146676752 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183409776 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138263175 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086632647 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112071639 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115400649 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116398707 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103362857 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18133695 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162324024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133761518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071343961 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099005024 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154163182 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130806987 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109747286 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126793586 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093378627 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133893954 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154892895 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118673937 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143376845 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128170146 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088258146 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119297548 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139245784 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128253227 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16938824 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12462072 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07286818 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125096551 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103500279 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081340323 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140450002 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074941716 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173679976 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09788309 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105349225 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112246299 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108501344 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108610076 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159692375 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141973752 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242247869 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066226062 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104279929 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119981491 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148188239 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08829363 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10820858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117050452 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077814365 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14076163 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074995054 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123760069 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074969088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125285318 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133672417 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076527384 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121482567 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101593137 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100401973 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133326849 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160890774 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089119672 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082244739 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166789611 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123044585 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104387988 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143415069 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156052874 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098540856 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103686049 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149016526 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17909232 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089567967 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16231444 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107169092 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083988061 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086746879 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123764435 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11211942 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12184202 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082143592 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118341432 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168151368 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0752297 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09492946 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13274815 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078400806 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080275897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102764299 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099607324 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094660459 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099568035 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103426074 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135989056 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122050848 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103992653 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267494932 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09924719 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171183116 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089696563 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10082485 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104076483 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070071552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137119647 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157012637 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079755159 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164526436 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123052562 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105636758 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11959344 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083261728 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140092544 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079412487 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069976216 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144247072 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109950689 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11068674 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151766581 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104457976 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127359464 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120338951 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136207434 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132572029 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129280519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105679319 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088332688 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111897265 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126521394 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07321223 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091052183 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079714603 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103582233 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09533366 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083224192 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141777694 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124276194 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100000606 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111121369 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096226565 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146735269 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076402552 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128875077 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118583834 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09348643 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150749397 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150895289 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130682425 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098803351 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143289405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069970213 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073284754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08833183 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264671161 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084268159 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083675972 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117574753 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147926616 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129357281 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137973685 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112258529 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121378136 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15446865 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069154626 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115738823 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149171593 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121533792 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104636628 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090748856 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098633652 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141633935 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108495579 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181882886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112683201 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126585009 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152529957 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100005022 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079825734 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102755935 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135625888 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104302813 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143848925 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099337643 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088191698 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109744433 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073998251 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099996769 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127151808 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119596555 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134669934 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114494941 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132717465 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07729454 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116806749 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119996399 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122782873 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063499676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118720354 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160140449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092892149 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117643322 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152264069 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078694695 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123281381 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319818439 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145559613 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08529149 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111540678 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119905227 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127493135 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119388163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140183021 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108587927 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135110048 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108793682 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085557611 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087524195 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097409071 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105155832 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094501235 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108311646 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114708316 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094748301 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131736319 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103352574 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109030006 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117910394 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097187705 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089908351 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097275579 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17395753 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118831623 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170942173 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099383732 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1446805 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164111901 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074620174 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078624989 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077851617 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139699199 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083950484 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130490621 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097592556 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105550277 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123883669 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141949365 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095099002 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068516921 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108220477 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134301399 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112424496 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098403454 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103893084 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161199107 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099573773 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078823788 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112477231 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103751045 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102000292 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169370347 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060513429 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240504072 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077354657 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081425412 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129296759 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153774647 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081075682 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103151627 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119278096 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110280317 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127513541 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101975529 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099583198 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115082524 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15048563 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129658463 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090394206 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11257726 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128403208 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15656016 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105620639 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095914499 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171399407 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152388457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159975475 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08840539 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114587774 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114636921 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107785646 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141321135 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083276353 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163532231 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08203978 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135491269 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104175179 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09021541 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13007502 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098296289 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105778036 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14784442 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117459772 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082844364 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07796805 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118085027 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119863191 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105776391 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07498678 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137481559 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072474452 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130678731 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167274466 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080328956 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103475363 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094839304 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223728004 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109781877 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104135587 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089715078 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098742661 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173302853 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088427155 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149991119 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141845745 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113502231 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136589973 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099845907 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635952306 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078086452 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151469799 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116699559 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17353038 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097995476 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117038554 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109778614 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124597614 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144179581 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105631521 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175672684 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132249219 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116220481 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079667756 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102393329 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103195267 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08892904 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105062275 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113246032 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116031532 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093403063 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116052347 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123220959 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082051931 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094855814 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155628788 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117007093 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144051729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140069631 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084583774 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11779298 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137331305 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07927116 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120774187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150763765 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105093499 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097047221 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079505407 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244080778 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172060642 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074369362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164322657 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11952002 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110673479 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11391167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114432731 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131550333 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108683047 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12209685 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094135715 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110105756 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112619611 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082366256 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077801221 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105463103 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112917931 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097722421 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098674157 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099221251 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151257554 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071538539 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095434842 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103663067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146017069 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17539768 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087411712 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082509436 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118868395 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112695458 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113276299 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120846833 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079444244 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082150314 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081756222 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076786263 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107936707 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112547596 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104365652 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111310786 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163446942 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082857161 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222210625 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095080563 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104684795 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069390726 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07851763 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095738885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097214403 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108024621 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100146412 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168434002 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093178012 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088827218 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091263633 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072645879 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081858495 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126344423 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254910324 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120400762 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098302501 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062494031 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111193952 seconds)
  done (took 58.773030283 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110350693 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082910095 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096032811 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149601401 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122394047 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212071315 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157643085 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19963451 seconds)
  done (took 2.745402676 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069946628 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095461843 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098891368 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083054152 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066583312 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06907387 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225202765 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08077694 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066422448 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088561164 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079557328 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069255115 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417355875 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065988947 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067936849 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062619871 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067401534 seconds)
  done (took 3.379470518 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370507853 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601769754 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372920893 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075231684 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.431206445 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090818556 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.041685763 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12925986 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073014315 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538140288 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701442732 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125681168 seconds)
  done (took 18.167830997 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07738726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069151969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083840384 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083086694 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072292396 seconds)
  done (took 1.996755231 seconds)
done (took 106.736229094 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082263821 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.376737597 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053642982 seconds)
  done (took 2.07104764 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084188695 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085077073 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085088678 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082313307 seconds)
  done (took 1.955917194 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076877555 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076500556 seconds)
  done (took 1.765738447 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225543371 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157907485 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086158123 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084394925 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078087345 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079503882 seconds)
  done (took 1.86114363 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075715893 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075286763 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072535588 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07585454 seconds)
  done (took 1.913765346 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078235043 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052170952 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055274199 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056183517 seconds)
  done (took 1.858251795 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088281058 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078928661 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078319218 seconds)
  done (took 1.862744853 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104170261 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085209767 seconds)
  done (took 1.805343041 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084328265 seconds)
  done (took 1.700861092 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10179961 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113648565 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130352909 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10966383 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1382706 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108577544 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085372704 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086517354 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076563934 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087373967 seconds)
  done (took 2.655512197 seconds)
done (took 21.612967156 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080698443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361030019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360338106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088946811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.688452372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356037077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982688664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091792827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112954215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067242471 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084095724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67041047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972430998 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323350548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959229801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324527471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648361135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068132711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067609169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067947808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965983094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067230054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067439591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068139186 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649227951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370369083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067722552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324752881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06749532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069344257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354307962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068083163 seconds)
  done (took 16.120131627 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07375659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117559581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07393313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083466612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070272542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069530502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071345502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068698988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119137418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067976057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084626418 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067753793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071511044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068610524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086965155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068541888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068480343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068428053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067834487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068482029 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086275727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067653021 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06822468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068780017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068237641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079799965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068547332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068336105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068439046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069766536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071307132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069040546 seconds)
  done (took 4.019914062 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11770853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1261812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074185196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103294782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112367803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070108962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142918114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092275144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127419397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067667119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084486451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067946361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100812578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068580744 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087576309 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068715215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069383242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069021287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068400605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068737981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08695389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067935535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068506263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069111643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068525985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081300631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068798986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068881245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068706929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070284314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071361399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069017593 seconds)
  done (took 4.279810982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075007838 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074952179 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082400128 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084221512 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069632678 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072214761 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072659193 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070341842 seconds)
  done (took 2.235454528 seconds)
done (took 28.279385631 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081378402 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06847008 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072502173 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081419038 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073393144 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078254033 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067376655 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074465722 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072046376 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.0729486 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074637134 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067270759 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070761682 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067502021 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073693415 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067638087 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079392988 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071990883 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079164025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079378261 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07002442 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073157111 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073817248 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078672311 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078821499 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078882998 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077448636 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073258891 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068897605 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070448114 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076290718 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083553249 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068804345 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079057444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067792715 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06741746 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071026744 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067662503 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078849797 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0765594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069110706 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075721534 seconds)
  done (took 4.707474456 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090282235 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0907781 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084271337 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061059994 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066760558 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064532301 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08833793 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059586382 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060014437 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087553094 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056265781 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059057051 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062328441 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053952504 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059047677 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056597666 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061446945 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055672894 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059074306 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059562568 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087826027 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053847503 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077562454 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062440849 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058846753 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061490688 seconds)
  done (took 3.377742754 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075857761 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083900315 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08778173 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12557231 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102907321 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076933947 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079486856 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092429506 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085047117 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06660791 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070626173 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093154821 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087236381 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0733871 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067359081 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083587256 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081584365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068769316 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073035987 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092167742 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084923581 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084129346 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091706209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080278332 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067165001 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069207456 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070951949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080737865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071739423 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076253996 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0710155 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070626093 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069180574 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089888349 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071107611 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068855588 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090249319 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07674598 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077765247 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067689138 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07072617 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068364407 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090776714 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126814066 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066586946 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074167037 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074993769 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077020704 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067602422 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085870778 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078440626 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067203069 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070361773 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066569996 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067408905 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080492154 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069093642 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069567945 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076353238 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070449985 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089394607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071466405 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082403085 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067209911 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074909613 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066853429 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068045849 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066373689 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092311488 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069040648 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107894402 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068371108 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068433346 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076129432 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074966455 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073334575 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067509652 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082239171 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077602501 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071065155 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076226109 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070445302 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070428601 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087919376 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069866732 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069091041 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068396444 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073315537 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069760168 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06854858 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080625454 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067537329 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070128697 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083793767 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06694675 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068728045 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073265777 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072201764 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06716705 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078225879 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072399795 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06804456 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076531734 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067940412 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070295923 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078953266 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073557317 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066424673 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072111672 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073383312 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06777905 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068309525 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069896375 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068790257 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075698796 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073487436 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071648063 seconds)
  done (took 10.545417269 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161397014 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154341071 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070164886 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145836964 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0762008 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079340094 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149408011 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094359075 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067896447 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068812238 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069103832 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109807569 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106013046 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115505211 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078506836 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067911883 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083617043 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113548309 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148742934 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142814085 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083863984 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077128154 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069875187 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069166889 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070766758 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078186165 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085012566 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076446949 seconds)
  done (took 4.385027345 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084340612 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09685615 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07490379 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088906127 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090671252 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068114705 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070453142 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069320884 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080216287 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07859289 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068371017 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073295908 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074239003 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071097712 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068872199 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07466059 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075182374 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069180763 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07091649 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072779703 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077560222 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091424019 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071373171 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067125865 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073076223 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067417168 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064374793 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084394061 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068091152 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09146364 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066048729 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075325543 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08131818 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068760001 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06789653 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06729307 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067511963 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067394828 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069230027 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066235899 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066183372 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057469343 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066816656 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079261652 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073489506 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056512741 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072570778 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072548072 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072641658 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065511638 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070355306 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070439226 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070765421 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074311826 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072664158 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072798571 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06857594 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073620447 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075225501 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067146853 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064559302 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066045523 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071869876 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065732911 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075524157 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072168954 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066168545 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066966519 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069095243 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073508121 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06715522 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070211892 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065058269 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069216597 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071929826 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069174211 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067934981 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065784695 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066871507 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067715556 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055446932 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067586752 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053312592 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07034324 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065670154 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066426338 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067004806 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071792598 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079695519 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068631239 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073102312 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068626829 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066282455 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070280775 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059918036 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070382888 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082261374 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082472362 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067197483 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06513525 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081646414 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071850625 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066424503 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056201615 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074352079 seconds)
  done (took 9.125980107 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092915934 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069925069 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082924674 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090927219 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085399105 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075539984 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076457205 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069442602 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081889963 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073454798 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076235216 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068461922 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077139479 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076649154 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069965009 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077029772 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071929465 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.0827095 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082153913 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068317307 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075996496 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079796648 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089330161 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079963981 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078302451 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079807181 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089051294 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072140656 seconds)
  done (took 3.872916961 seconds)
done (took 37.642129289 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.707510839 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.880113653 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.705226938 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.076595205 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.794355047 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.002520288 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.82392953 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.695527267 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.920465943 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.740351169 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.935000442 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.74620942 seconds)
done (took 64.668509032 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.778099566 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.84302618 seconds)
    (2/2) benchmarking "String"...
    done (took 1.969885834 seconds)
  done (took 5.451940661 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.081437444 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.28211157 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.931501456 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.700178403 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.704141328 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.929990666 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.514797027 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.234609353 seconds)
  done (took 29.937127429 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.789482604 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.930443246 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.366551647 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.397801729 seconds)
  done (took 15.169376337 seconds)
done (took 62.145754557 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.707342496 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.718390576 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.701772059 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.682234417 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.757554439 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.702685431 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.264333837 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.76311176 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.697983245 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.687634026 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.699890491 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.137512867 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.708452999 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.193981252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.699878031 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.708248689 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.715917717 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.203764536 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.856939999 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.711668578 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.711202887 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.740801724 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.700589514 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.706750116 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.726627472 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.699312195 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.140177016 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.712617502 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.318747147 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.706994728 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.72892882 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.288724775 seconds)
  done (took 202.137414724 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.70107385 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.78638514 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.832547683 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.745088136 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.274796077 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.879272659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.820389048 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.472102209 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.700044218 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.719257319 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.792341176 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.702238034 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.840621242 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.736342231 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.731655527 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.708242129 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.960716377 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.86126938 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.734218431 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.877843928 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.728454908 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.620866909 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.596477101 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.780200883 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.726952258 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.712275653 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.714386392 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.890073704 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.897958528 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.882892462 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.707850223 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.715737327 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.922522395 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.574786294 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.723099853 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.713478424 seconds)
  done (took 167.424850661 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.082526947 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.704145504 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.704650664 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.703437666 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.717293554 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.701433637 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826013872 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827285932 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.173777826 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.9454849 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.754642181 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.558882805 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.702158211 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772867543 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.716587364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.705218753 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.721711096 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.730509906 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.704561355 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.704463471 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.82761864 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.716612571 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.912988393 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712781175 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.705326133 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711791565 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.07251586 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.703204025 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711505898 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.968822096 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.702936861 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.707496255 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.705990436 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.618230445 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.099278994 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79750618 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.706686064 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711712947 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.704692067 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.706106722 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.926706108 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.703989016 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.706604498 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.709059207 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895028451 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.702083312 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.830939096 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.703847375 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.228601838 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.702862632 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.707020735 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708921822 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.437155855 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.423097621 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.709176684 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.707197716 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.708982272 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.706350401 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705372915 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.711476034 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.472146437 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.777299264 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.708880947 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.711521393 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709844664 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.710214425 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.749112359 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70702251 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.073612602 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.765938099 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.817787744 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827668478 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.708326804 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777173187 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799172045 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.705934983 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.706087561 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.706694627 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.709686858 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.789028196 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.703968559 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.707173563 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.842778887 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.71357163 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.709069493 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757836879 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.780481035 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.705547869 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620051777 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.708205156 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.70770626 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.056408616 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774377904 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.705134809 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.707405557 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.710089136 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.843421641 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828113741 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.513132164 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.707371476 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.32947178 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.711961926 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.855557334 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.705723823 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.909198527 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.711572218 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789662013 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712858513 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.712205529 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.707660808 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742087285 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.712488431 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.773544066 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.707614989 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.083108624 seconds)
  done (took 395.071402812 seconds)
done (took 768.409896545 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.409972402 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.364768628 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.476645813 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.384642542 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.357617842 seconds)
  done (took 13.640142239 seconds)
done (took 15.287460004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.799214421 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.798497489 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.73392022 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.796908421 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.727988821 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.800306108 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.777992581 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.734487149 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.768391238 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.735949351 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.767915406 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733179819 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.724823427 seconds)
  done (took 24.545408725 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.948955135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.948784411 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.778805381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.965406948 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.756922767 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.944352586 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.871457834 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.864234705 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.862523095 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.727014673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72600483 seconds)
  done (took 22.04271808 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.954763397 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.952455479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789630752 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.951058962 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762627427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.944615922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.873352698 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.862487038 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.865704864 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.725909354 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727364941 seconds)
  done (took 22.061073104 seconds)
done (took 70.298023784 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.719320641 seconds)
  done (took 3.367560212 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.743456663 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.880485426 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.720773801 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.723496955 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.719778188 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.718694136 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.722488159 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.72249687 seconds)
  done (took 15.601668117 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.719908624 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.721065763 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.719205554 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.719232365 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.719271035 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.719106034 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.721286544 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.723981793 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.7183465 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.718646392 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.722974189 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.723075857 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.722762904 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.720392827 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.725621549 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.721323677 seconds)
  done (took 29.186606185 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.722740844 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.719907128 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.720300604 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.722514348 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.719408362 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.721908276 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.721232089 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.720076226 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.722227248 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.720078511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.72067959 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.719470995 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.720487046 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.718549735 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.721929946 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.72034513 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.721855408 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.720054357 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.723666947 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.719813972 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.717572592 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.718871724 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.722172353 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.721959761 seconds)
  done (took 42.952039282 seconds)
done (took 92.756229969 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.593482924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.121782831 seconds)
  done (took 8.363731304 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.728396388 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.723714134 seconds)
  done (took 5.139727549 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.723085722 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.723527092 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.723731017 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.722961834 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.722714488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.726355314 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.723747387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.725059531 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.72310158 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.727092137 seconds)
  done (took 18.892750194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.72461363 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.725201109 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.721471243 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.7231856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.723885803 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.720990815 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.721362124 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.723436932 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.724485727 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.7204131 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.724666469 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.72303611 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.724931737 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.724004063 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.724105303 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.720888108 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.723515293 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.723045213 seconds)
  done (took 32.668678171 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.725060897 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.725172433 seconds)
  done (took 5.103488552 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.723506013 seconds)
    (2/7) benchmarking "second"...
    done (took 1.724516336 seconds)
    (3/7) benchmarking "month"...
    done (took 1.722827773 seconds)
    (4/7) benchmarking "year"...
    done (took 1.720712186 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.721506883 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.721530303 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.723816556 seconds)
  done (took 13.710700388 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.724862268 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.889879224 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.952681951 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.387118349 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.724786672 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.729784119 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.675656018 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.731219317 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.730488565 seconds)
  done (took 19.198773052 seconds)
done (took 104.73052342 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.520488426 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.715198373 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.081449859 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.831979394 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.730437677 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.058525204 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.72057693 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.941823718 seconds)
done (took 42.253156986 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.79150658 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.302846114 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.342467549 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.346055333 seconds)
  done (took 12.643545784 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.706871673 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.236004749 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.749341037 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.315330662 seconds)
  done (took 19.684153381 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.086830048 seconds)
    (2/2) benchmarking "read"...
    done (took 2.07233534 seconds)
  done (took 5.819853101 seconds)
done (took 46.596347774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.726294506 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.72644972 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.726811434 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.725966962 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.728182048 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.724166399 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.72470345 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.727148865 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.727723606 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.728402248 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.727187991 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72535216 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722595421 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723745661 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.728639708 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728566182 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.72706817 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726706189 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.727760793 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726487553 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.730957135 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72838689 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.724108485 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.72629234 seconds)
  done (took 43.093233045 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.728067218 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.725277937 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.72885698 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.727655151 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.725937431 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.727723536 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.728417732 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.726543015 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.728823679 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.729098395 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.727032166 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.728519208 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.728982172 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.728911129 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730054123 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.728648149 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.727552213 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726828523 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72906349 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.726531407 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.728255103 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726407953 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.727598197 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729469292 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.726625737 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726211706 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.728414271 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.728115217 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728660692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.725237493 seconds)
  done (took 53.489410888 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.735769695 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.740962732 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.730765913 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.72824269 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.729642405 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.729645921 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.72901168 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.729483492 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.732939591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.73088632 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.732807802 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.729579925 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.729001344 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.732223863 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.72827596 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.729894092 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.730942977 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.731409762 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.729234929 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.730495158 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.728957899 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.731807045 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.733916266 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.733790754 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.735183235 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.732037878 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.734785265 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.733731282 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.732821736 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.729593871 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.730235588 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.729786763 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.727402314 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.72930037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.733279296 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.731788766 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.737007769 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.741283682 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.731907366 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.73196877 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.732802953 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.731693282 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.732237537 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.731269419 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.730592886 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.731892901 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.732149268 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.732699304 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.730497528 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.73239652 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.730314979 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.729503603 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.733572214 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.733039861 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.73256392 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.731023837 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.732222259 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.733129143 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.734320821 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.734070692 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.734794613 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.733035367 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.732717672 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.734093773 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.734892001 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.735643119 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.734401626 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.733415421 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.732877542 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.734562795 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.733192556 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.735050528 seconds)
  done (took 126.381683646 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.733171983 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730320064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.732387462 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734543827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731030142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.73736183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731794084 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733192086 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730093339 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.73356349 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733858506 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.732777731 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729886089 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.734665708 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735172309 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733499603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.738299094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733789671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.735224129 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.735786918 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735368011 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.732719425 seconds)
  done (took 39.799811635 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734912389 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.735238553 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.730573391 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.735331049 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.731972762 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.733620361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.734649149 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735390887 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736262896 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733601109 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732053284 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736313984 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.731566191 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732646537 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734113915 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.735590033 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735637307 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.733893284 seconds)
  done (took 32.878228405 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.735606045 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.73508144 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.736364708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734588068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.734192034 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.734676429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731196481 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.735813944 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.738847546 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.733811447 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.737184479 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736165524 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.737031231 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733985796 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738900339 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.734736465 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.737335681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734130835 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73798577 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733039767 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.736715887 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738479673 seconds)
  done (took 39.848031388 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737757312 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736515884 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.734912366 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.734284847 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.734062442 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.737924509 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.73671217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.735401064 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.740106387 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.739423104 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736458001 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.738566145 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.736594042 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.736174794 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.737631711 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735302956 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737719898 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.736161933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739105614 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.734032702 seconds)
  done (took 36.401048989 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73672223 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73836345 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.737506999 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738913164 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73999667 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.736830295 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73859794 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.739290934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.736934475 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.738643757 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740095111 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73920011 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.737816507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739836704 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738672885 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.737560794 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739732305 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.737952329 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.738991684 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740372079 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.738620126 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.739639906 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740838484 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.738990109 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.73966355 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.737220436 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740295438 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.741431922 seconds)
  done (took 50.356841361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738704783 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739140064 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.735367639 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.734717466 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.736105209 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.737165884 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.737174359 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.73742001 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739046333 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736119464 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.737352187 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.738296833 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.740721413 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.7394707 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.739819766 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.739544109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738655873 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.737198583 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739205027 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738968411 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.740003059 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740545414 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.742782797 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737283543 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737192084 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.739450077 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739151353 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738580061 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741566214 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738929582 seconds)
  done (took 53.822675177 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.758576257 seconds)
    (2/2) benchmarking "in"...
    done (took 1.759785687 seconds)
  done (took 5.187229182 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.738169439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739551082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.74181648 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.737343573 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737644627 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.741784969 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740701812 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737425321 seconds)
  done (took 15.582748004 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.742171064 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.739936737 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.740677668 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.740394164 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.745055993 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.740985531 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744953896 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.742663686 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.742336551 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.741593237 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.750108849 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.751757564 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.742284032 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.739780719 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.741036271 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741519352 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.739344278 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74089076 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.740376697 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.742795283 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744493154 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742278202 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745164511 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.737574573 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.744289902 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.753897475 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.743668805 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.743011906 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741482569 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.744132008 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.742982207 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.740803027 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.744760694 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.745084119 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.740631407 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.743276366 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750387831 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741570013 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.746810436 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742684587 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743412182 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.73899971 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.742346273 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.742338565 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742861583 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.742118282 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.743240946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.740254735 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.742877973 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.745840344 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.75049816 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741642987 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.742090177 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748649092 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.744052863 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.747906442 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.746579421 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.746506753 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.754242263 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.754749685 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.755654804 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.751375517 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744222849 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.7419158 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755104923 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.774363868 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747989701 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.741651131 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74186648 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.745458801 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.749804297 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757134164 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.754376426 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.744138374 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745137445 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.744691105 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744395013 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743933375 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752179559 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.74600051 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.743004723 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746457503 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755421229 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769296916 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.746096366 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.745136052 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.747294006 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.744440483 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.746891982 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758454471 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.744045755 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.746427748 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.743127899 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.746903522 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.746255241 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.74530134 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.745103588 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.743688043 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.741481252 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.747978293 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751646767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749794596 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.759289031 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745810761 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748394703 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.753962735 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.746171706 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747171238 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.752347772 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.744937486 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7490926 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.746561012 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.753292246 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.743692176 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.749206553 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.758366201 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.746286458 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.749632184 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.747447189 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.74639193 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757470445 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.776246954 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.747375687 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.749136743 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.751457686 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.762359767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751379963 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.748910465 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.746638213 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.746008067 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.744664998 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.751066041 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.747902728 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749237047 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748826616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749428774 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74443478 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.745780255 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.748299095 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.751010761 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.748478732 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.746531111 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.750598336 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.750176668 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.748018856 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.751329131 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.752588782 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.746135787 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.751003765 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.751367255 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.749396597 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750915773 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.751137228 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.751579862 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.751960165 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747839346 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749527001 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.750607642 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752451267 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.75208722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749630214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.749747859 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754490961 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.750203379 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.750725979 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.749122743 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.745310844 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.748803373 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.749846342 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.74845759 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.749972623 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.747913644 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.752246141 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.760543825 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.749728305 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.7502519 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.753248836 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750682679 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.748230303 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749978812 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.752958356 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.758167118 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.750419715 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.752967528 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.749181962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749626294 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.750080415 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.749003847 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.748611277 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749749035 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.752891437 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.765001037 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762159632 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758444356 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.752573502 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.755085112 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.749613911 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.755463097 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.754458364 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.75103666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.748317351 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747366429 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749726415 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751383635 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.749486044 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.749696555 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.750977106 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.751046858 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.750220849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.752034871 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750855826 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.751513952 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752230363 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.748727176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752152382 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753388963 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.750481908 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.749425321 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.751497757 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.753299666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.754424752 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.751509567 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.759952554 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.749707021 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751835826 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752300239 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.752904238 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.751524748 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.754561425 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753294359 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.75259628 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759763445 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.750223658 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.752393879 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757057031 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.749469928 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.751362942 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.756289608 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.75298111 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.750580266 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.754415055 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.763916522 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.754313803 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.754845028 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.754343583 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753172373 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754482207 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.758189826 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.751632488 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.752519077 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.753065356 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.754216809 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.751170857 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.754253985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.754426688 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.754707652 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754786346 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754231754 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.751801548 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.755725482 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.75706591 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.754539385 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.757703056 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757081797 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.765589788 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.758833721 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.754899219 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.754535777 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.756701072 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.760020776 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.754055673 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.75583201 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.754115161 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767644114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.764927077 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757556551 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.754513469 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.756807194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757631619 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.755541264 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.758380382 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754759013 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755022777 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.754481946 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.754473092 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.752386474 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753731973 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.755687608 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756730613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.756057979 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.760435144 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.754467467 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.753980516 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.755857572 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.755501005 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.755836239 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.75287952 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.7551525 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.757846629 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.75735016 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.755299497 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.756445333 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763378833 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752498798 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.756741164 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.755882338 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.753344513 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.753149328 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.754849048 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.753979776 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.762795115 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.769042038 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.759182126 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.767673661 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.75822504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767485123 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.757825992 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.760638411 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.765404396 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.753597994 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.755782789 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.759415853 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.754886395 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765381668 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.7577727 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.756718884 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.762197053 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758784823 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.757709141 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.757465909 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.758731789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.757798277 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.756672246 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765853941 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.756496259 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.761564005 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758947631 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.755720446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.759182182 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.757153381 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.756179078 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762103671 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.759663685 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.759531169 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.758811612 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.760398548 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.759627606 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.759651276 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.758901524 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.75704678 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.758539497 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768125537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.759695717 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.765109784 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.7606705 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.765419956 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.758649629 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766787317 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.758562449 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.758847925 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.758734004 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.759683481 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.757442166 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.758170501 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.760237404 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.759045898 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.760591753 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.763813721 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.757747213 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.76200325 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.760803508 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.760362716 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.760698901 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768649538 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78940903 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.762333808 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765464832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.758056493 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.763264669 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.766329107 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.758166877 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.761102884 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.763883759 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773370875 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770813757 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.760975622 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.76222977 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761365727 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761179977 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.760949412 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.759770355 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.761816237 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.761344445 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.762098826 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.761099113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.766513504 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.761476346 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.760971284 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762552221 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.761902206 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.771894194 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.762228375 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.760941804 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762415027 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.762025133 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.760281459 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.763094937 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.76029634 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762825576 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763233192 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.765481311 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.770091897 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.771200869 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.7643816 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.76321017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.762887216 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.762059338 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.762590181 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.766197649 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.761909616 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764135315 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.763599829 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.762107288 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.764946439 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.760960168 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.762617001 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.76314407 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761546258 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764991603 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.771363889 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763328643 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.759544787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.764411416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.76447966 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.761800386 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.761966311 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.770738843 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76523662 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.776272712 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.772239959 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.766987224 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.765089767 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768275175 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.774173559 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.762277309 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.761738534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.765629185 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.76447148 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.764666506 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.769385798 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763069639 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.769643349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.761490341 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.762489237 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772269541 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.763261725 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.764664996 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.766290748 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.767552024 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.765432551 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.763866868 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.765469296 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.762303764 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768412352 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.763706459 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766173382 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763750986 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.76027816 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.765470735 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769881372 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.764968597 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.763834276 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.761863296 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.762997965 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766695247 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767283528 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.763130798 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.761705462 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.764525277 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.767955508 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.77484116 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.760945463 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766803939 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.765856893 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.765486689 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767740009 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765236245 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.764097664 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.76180418 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.764054668 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764516059 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.764323616 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.766618617 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.767048838 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.766248859 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.769920655 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767654528 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76923528 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.779825947 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.775026521 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.764625262 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.766218285 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.768635933 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.770488328 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766237792 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.769663419 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.766909267 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.767252679 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.767780053 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.767961073 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.767389562 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.771270083 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783647193 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.76579691 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767267124 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.768556693 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76859918 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.767246972 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.764021215 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.767729442 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.768731811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.769870901 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.778370487 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.769079784 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.773939474 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765818002 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.769146389 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.773669166 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.771567852 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.777338523 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.769160731 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768091734 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.766988253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.773034217 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.786582569 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767627885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775551275 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801720251 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.763224512 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.767310811 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.769011753 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768194091 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.769666667 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.76978431 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.770851117 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.768091962 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770184057 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.771781371 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.769756223 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776346669 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.76927488 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.767933918 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.769434858 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.769089833 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.770247387 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.763953147 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.770937564 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.771358208 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.770389779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.769750359 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.770974893 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.770837187 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781500912 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.781017522 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.770375396 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.771705767 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.768319886 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.772853825 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.771681014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78125617 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.779153844 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.769268748 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.769947799 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.770688918 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771944008 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.766059835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.770478144 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.76896013 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769585105 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.767320204 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.782715825 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778389907 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.775325739 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.770558527 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772019773 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.771135239 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77089576 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77249636 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771119352 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.771495184 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.772003333 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779346042 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.772907698 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.770948663 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.774970536 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.784910541 seconds)
  done (took 1049.444002424 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772923095 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769911754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769379964 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768831457 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770372696 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768893061 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767221425 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.769400089 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.767669353 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.769526085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.770506836 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76878377 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.770693577 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769318272 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769689055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768106152 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768735883 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768386737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770653982 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769413644 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768997082 seconds)
  done (took 38.858301174 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.772019241 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.772267594 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770944455 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774096954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771624523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.772020573 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.771309995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773687969 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772700833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771101041 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.772757795 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773235175 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.770038122 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.771104455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76878158 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773932727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.773262833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770019617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.772653252 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.769596964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77440703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.772592946 seconds)
  done (took 40.683930176 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.773834297 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.774280799 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.77266043 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.772043866 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.774688822 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.772516361 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.773975093 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.773399963 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.774899639 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.776260942 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.771390412 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.774839519 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.782709877 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.783802816 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.776009072 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.77530065 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.919609118 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.775593632 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.775458206 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.774929483 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.770935147 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.778590466 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.770123609 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.773309325 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.774805234 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.773840849 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.773778257 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.776528035 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.77711535 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.776643369 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.780632895 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.77513777 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776059068 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.776313946 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.772969964 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.773751911 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.78018452 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.776289427 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.774003437 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.779337611 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.784743922 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.800875624 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.776073592 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.781176598 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.775849742 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.777470113 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.778252356 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.786943168 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.774384452 seconds)
  done (took 88.897899317 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.775909171 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.775623297 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.772615247 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.775639582 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.777937603 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.776824874 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.77586816 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.775345706 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.773607858 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.773271707 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.77614113 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.77298848 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.774095933 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.774251782 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.775969986 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.773912496 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.772185391 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771665388 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.773158358 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771324183 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.772164272 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.777090144 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.775463778 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.771944865 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777416378 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771799163 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773792238 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.779585053 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.771424551 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.775555973 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.776440012 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777551483 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.778349573 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.774745978 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.777284331 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.779067023 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.777363725 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.776771944 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.777364243 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.77602669 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.777181346 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776688056 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.778919893 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.778910711 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.775070767 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.777400041 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.773489045 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.775645576 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.777917221 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.7774177 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.77924097 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.777636982 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.778080683 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.775290198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.775857474 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.779258808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.776435659 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.775299588 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.778730506 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.775214756 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.773425901 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.776568256 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.776234112 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.778504625 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.777950432 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.775353743 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.775531669 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.777953433 seconds)
  done (took 122.461778465 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.779082016 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.780171043 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778866757 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779140942 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780414556 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.779083456 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780544912 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.778218149 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778500549 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77915928 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780343854 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.777937866 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.777539242 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.779930474 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.779477094 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.777658704 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.777763234 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778020171 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779339406 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778722741 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.778042472 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778943525 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.779290104 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.778566909 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.778926757 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.778602262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778607043 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.779228255 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781135058 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.779853176 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780444189 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.779845851 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.780793597 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.778379691 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.781445985 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.779397525 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.781179144 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777650239 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.78123151 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778717552 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.781112295 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780933407 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781423543 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.779918422 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780453327 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.780340374 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781632596 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.780695271 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.781166172 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781015145 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.780835917 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780502931 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781422352 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782816011 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.781225571 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.782892679 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780058475 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782473873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782354565 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.782008846 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781245642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.780596992 seconds)
  done (took 112.062583555 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780934874 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.779863678 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.777056687 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.780082989 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78174861 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780191594 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782964758 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.780295985 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.782563221 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.782976203 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783027671 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777604329 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778116063 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782947532 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782259727 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780582607 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7780119 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780983228 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783372347 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780213755 seconds)
  done (took 37.324838162 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.780022011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782963809 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.780444568 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.779843042 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.782117764 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.781201208 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.782717395 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784529603 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780662104 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783788489 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.782821095 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783945528 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77998568 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779498324 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.783417935 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.779589914 seconds)
  done (took 30.215337441 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.782144406 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.782282513 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.783083826 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.784200937 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.784495445 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.780794265 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.785153492 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.779449661 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.779796419 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.784282762 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.783387799 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.784729971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.782327167 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.783783073 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.780335046 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.782911632 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.781564846 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.779350322 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.784193035 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.781875158 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.781023181 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.783020419 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.783998934 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.784380567 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.783614102 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.781682137 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.78295044 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.782832015 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.78204852 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.782444163 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.782828234 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.781607827 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.780742337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.782576731 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.783588806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.782054297 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.783912232 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.782823283 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.785083824 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.785332002 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.785579167 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.785004114 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.782629157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.784762384 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.78298221 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.784484221 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.782297195 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.781846755 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.781767658 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.782500681 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.782578675 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.783947303 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.784583959 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.78534098 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.784467575 seconds)
  done (took 99.774741184 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785911441 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785184429 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.782279808 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.785223325 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.787292431 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.781866208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784876123 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.78292194 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783733642 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.78404954 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784114523 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.784671407 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782014731 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786969803 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784391438 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78533298 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.78427639 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.785147798 seconds)
  done (took 33.834116364 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.783234248 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.784405686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.788487628 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.784883688 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.783375043 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.785754665 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783215472 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.787074917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786820503 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.78383138 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783647384 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.785051099 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786506252 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.786709249 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784918998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784889613 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.788312508 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787178201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.785080406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784634241 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786463498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78778342 seconds)
  done (took 40.996387772 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.787103854 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.786177478 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.804323592 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.808755444 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.807939819 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.826532703 seconds)
  done (took 12.536891891 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788207602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78835965 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784968632 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791617933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788633591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78641241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786423068 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787028841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788659699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788825858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786791394 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788687205 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787355285 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784371221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788062192 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788447981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78688591 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786446588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79044997 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78877585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786471459 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788387109 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785080481 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78660991 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785079092 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783484248 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787848698 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788796217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786929297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790936831 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789911122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785949402 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790195228 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786571053 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791981628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789291316 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786406649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788867058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789987169 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788669265 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.789220285 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789656991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791289071 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788708966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792294021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787701772 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787826906 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787900012 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788798722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790295413 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788113813 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788578663 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787731428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78959371 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796643251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790578795 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789601468 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78675698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789057935 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789958374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788653574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79241263 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790057252 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787287864 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789807135 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792066488 seconds)
  done (took 119.759048784 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788805199 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788560795 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78778466 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790846945 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78719409 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787009941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7882647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786486024 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788672754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789324409 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790946814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78869101 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789446998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787382505 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787264285 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787348308 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787550613 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787111547 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789067084 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790247478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78916267 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786649868 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787868455 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789432897 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786859258 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791441858 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791712548 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788659977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787128413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788152075 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78768414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789030453 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787471876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787569904 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788521757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788625975 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790054089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790000525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787496224 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792034069 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787308686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790372806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793575518 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786859225 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786064315 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78555697 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787294616 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786478886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786895939 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785665646 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786565529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788407801 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786090072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785054126 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788885543 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783442505 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783043932 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783168253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784465099 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788728264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782398056 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784754167 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787131842 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782907357 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784793981 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787439835 seconds)
  done (took 119.707614846 seconds)
done (took 2445.052707006 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.844822942 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.851495249 seconds)
  done (took 15.407056684 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.944735854 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.902014319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.781831909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.782320211 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.777690921 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.791387231 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.787139791 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.778626439 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.783504881 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.784015107 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.781498372 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.967466209 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.788973582 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.780028438 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.783945672 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.874889389 seconds)
  done (took 50.806658025 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.785216666 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.785006774 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.797632292 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.787706421 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.786034918 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.798059422 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.818641174 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.789721463 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.818013393 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.797965038 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.854502354 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.797322381 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.785663745 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.832857517 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.796544213 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.801084866 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.87124949 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.861228349 seconds)
  done (took 34.276930479 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.863741717 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.78387972 seconds)
  done (took 10.370707622 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.814327558 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.790273434 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.777520213 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.802264937 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.786618684 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.807292007 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.785702955 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.785325216 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.811899321 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.806218999 seconds)
  done (took 69.683811327 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.7903567 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.78751886 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.785282 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.784019923 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.777573247 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.779991842 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.784551956 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.779071763 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.472311789 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.816136744 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.788674843 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.786884635 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.780142395 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.785016062 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.78039343 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.805652915 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.894343159 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.779285008 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.780908521 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.787979354 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.78110844 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.843506479 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.79456961 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.782090414 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.812127569 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.476527609 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.787841811 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.788481131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.907870616 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.779235433 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.780221334 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.780675768 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.785676781 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.162022592 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.116165694 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.777509425 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.785880962 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.788988323 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.778541115 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.888695632 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.779271665 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.785471146 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.772098689 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.103952847 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.882791837 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.822755542 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.139890311 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.782586329 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.780575497 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.811036876 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.782397507 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.781391288 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.79512174 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.290873103 seconds)
  done (took 127.952756199 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.775783622 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.081571236 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.930341802 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.778226058 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049183366 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980137277 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717493731 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825041551 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.776257224 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976203221 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99943827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.884058907 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.775156603 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.774635058 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.768107614 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.770085386 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.935505948 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.838842437 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.774553408 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.770879601 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801516322 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981045476 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.900522428 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.770734121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.801456789 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992593246 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.899952001 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.888994769 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.299797893 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.777179771 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84455462 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.780068891 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.775983173 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.773624817 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.933443512 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.87163622 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870095473 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.773444064 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774347714 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.773885158 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.439968473 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971694981 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.872604778 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.916448874 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02214708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979121328 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.420059198 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.771505146 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.409935454 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.937534028 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.98707004 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981229295 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.89610242 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.771996773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.014039051 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773494987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772977701 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012864511 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998821305 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.879023572 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772146319 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.773255014 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768878831 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015437571 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.770434578 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.867373291 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770538134 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.767708987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875821149 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878542821 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.998007328 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98150572 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.800442775 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.103415257 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.250646608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985103538 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.838875163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0049224 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.770062766 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.766751039 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856961465 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.520020136 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.968139462 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.014982982 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.989062122 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800726267 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.369878914 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.768645905 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965792793 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.954431909 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.961209646 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.009286174 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.919847579 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.085984867 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.767191672 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.765651567 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.987122528 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.90237625 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.767778956 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.125790946 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001956425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.317677933 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.79916292 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.065644789 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901265944 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.08536261 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.394623927 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.766746765 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.937756702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.805853338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.768402327 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.768168693 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.956075624 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.572957332 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764837044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.330853872 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.831280586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.766589834 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968145922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.764093988 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972831921 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.76450949 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005365362 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.003597219 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798443888 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.936224895 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.004260999 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.556777117 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017402601 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007819364 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.882443789 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.984201749 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.263392989 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.762724209 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041393658 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.762352533 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.767504777 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.932267766 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.764687074 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941534435 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.763393019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.992068727 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789850817 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924938406 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769203569 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998907881 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.798347998 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.819593897 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.762375957 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.889262466 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.769446908 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.648261905 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.924234838 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768352425 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.761256576 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.202027141 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.766418035 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911208639 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.998383519 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786765729 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833974564 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.288593408 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.765414723 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854821179 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.791293104 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.517149435 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.768032842 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.984914572 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.712844324 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.196182128 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.765179305 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.013660567 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.947564165 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.767481166 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.765061307 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.507769197 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.461610828 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.766713326 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.92517347 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.984168615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.407664068 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970262916 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771802925 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.892973505 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.767312664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.84467121 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.111083434 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.766290365 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.767100531 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.768186076 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.76822626 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.763023692 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975457106 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.798738496 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.286271935 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.902661537 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984651593 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.075855008 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989274047 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.813827786 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.771421803 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010542566 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.769669538 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.831740543 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.774077474 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.791533412 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002408274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.773067571 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.999320129 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023024717 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.726460278 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816437781 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.767329912 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.766565912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.766984884 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.920747769 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861049045 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.772367562 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.767222701 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.878657538 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.892728898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958820137 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.358937324 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.829545172 seconds)
  done (took 876.931872029 seconds)
done (took 1187.141729366 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.767425562 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.769960936 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.753148887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.769467474 seconds)
  done (took 28.764324186 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.768201028 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.765727311 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.770155018 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.767086268 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.768364946 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.770405379 seconds)
  done (took 12.30790132 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.844007488 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.764074389 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.764951303 seconds)
  done (took 21.068876951 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.83803925 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.174932489 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.880064817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.206503834 seconds)
  done (took 9.797622724 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.772599193 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.77231345 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.77096068 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.770872261 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.7731888 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.771654008 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.769984908 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.771530044 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.774263151 seconds)
  done (took 17.647620604 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.197328947 seconds)
done (took 95.48478757 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 5.677416378 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.283850409 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.87035035 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.873782436 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.133633553 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.755895174 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.261368992 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.799423586 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.836901594 seconds)
    (10/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.85514586 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.911265235 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.157434991 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.065094855 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.815731592 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.10874599 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.714613446 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.838388588 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.799962395 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.259438747 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.895561116 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.94357348 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882032733 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.343432787 seconds)
    (24/309) benchmarking ("sort", Int8, false)...
    done (took 4.746265269 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.160371663 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.963321121 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.254181499 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.808917073 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.936302632 seconds)
    (30/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.982318242 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.90919203 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.106670222 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.587433623 seconds)
    (34/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.921814769 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.185149218 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.241109033 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.88591696 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.880220946 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.903437461 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.184159245 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.949248894 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.986827538 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.917537678 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.773871969 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.94227483 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.091816527 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.790604466 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.855769697 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.884567691 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.071617784 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.616046782 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.691807324 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.063211856 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.84898642 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.75971515 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.940641782 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.78517863 seconds)
    (58/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.79020236 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.048599382 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.880660855 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.840346337 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.051306117 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.869176648 seconds)
    (64/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.92240598 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.216404848 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.074498031 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.784898007 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.905087984 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.80946718 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.88962355 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.778154672 seconds)
    (72/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.585626238 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.073883621 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.90861717 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.836151609 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.137250253 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.844941686 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.011250092 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.25299257 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.319522014 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.876628928 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.119321994 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.777343249 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.845081934 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.487084321 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.884257894 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.142143105 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.452695407 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.954481149 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.456626661 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.086796956 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.149559918 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.103636066 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.804058899 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.069583666 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.07467736 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.81216062 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.082462881 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.118942196 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.747668068 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.768635611 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.316518807 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.889135222 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.094399122 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.385100618 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.956812091 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.782222569 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.992471735 seconds)
    (109/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.778920253 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.064237249 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.089321551 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.976714297 seconds)
    (113/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.864662295 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.743473063 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.78438699 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.857419516 seconds)
    (117/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.88659213 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.01584511 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.156804396 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.44579374 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.221595272 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.805047859 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.343595224 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.049036342 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.97395482 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.7861392 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.872958221 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.071148439 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.001290493 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.887626943 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.041394455 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.989166328 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.128288082 seconds)
    (134/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.367506514 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.949370739 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.785695249 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.640851957 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.173349067 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.639536667 seconds)
    (140/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.064443658 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.891207678 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.879476935 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.904464739 seconds)
    (144/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.295714565 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999732293 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.842763192 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.807639896 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.045638114 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.764242374 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.469990657 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.784092666 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.76259052 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.832835384 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.07133009 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.779538807 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.855567739 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.040491427 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.860876446 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.803256926 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.763600661 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.089103849 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.846836608 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.711661216 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.417941705 seconds)
    (165/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.995681568 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.032599956 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.99315381 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.798775261 seconds)
    (169/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.806794638 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.763431158 seconds)
    (171/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.842236296 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.763186705 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.837662078 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.807676888 seconds)
    (175/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.130469417 seconds)
    (176/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.867294252 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.92877083 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.77865276 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.883021179 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.982997029 seconds)
    (181/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.296497606 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.886936759 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.821887558 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.914288914 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.121302106 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310638071 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.914424918 seconds)
    (188/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.910413237 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.182022763 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.768998571 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.080058389 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.994528612 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.810263555 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.867639014 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.846987982 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.808654667 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286993708 seconds)
    (198/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.93176122 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.782865617 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.051468006 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.435136945 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.172709375 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.71080757 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.116900282 seconds)
    (205/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.268729333 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.692995785 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.592200446 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.031315635 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.785105658 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.993074453 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.576744941 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.470731403 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.793113276 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.379146344 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.769297354 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.662183292 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.812512486 seconds)
    (218/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.847857345 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.80718636 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.890501306 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.863018134 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.41549361 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.030457369 seconds)
    (224/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.770944374 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.25705659 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.826537509 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.381930412 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.76974516 seconds)
    (229/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.953252566 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.869066095 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.785047996 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.85851979 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.356507149 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.849263641 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.711113674 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.793827485 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.786834984 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.8804417 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.339041341 seconds)
    (240/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.067598603 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 5.550927428 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.788139714 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.773574491 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.984896564 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.470232219 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.774506224 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.992920881 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.708501789 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.817207789 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.957043227 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.788262979 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.78489687 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.914945218 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.885133237 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.938515457 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.060206536 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.292712454 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.180447157 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.393326475 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.430046884 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.781327903 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.580764029 seconds)
    (263/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.934667903 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.821534499 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.073576827 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.084294771 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.8310571 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.186635208 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.20066902 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.014016713 seconds)
    (271/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.977052381 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.9652448 seconds)
    (273/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172152405 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.790001801 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.815772602 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.390086813 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.155425901 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.886254321 seconds)
    (279/309) benchmarking ("sort", BigInt, false)...
    done (took 6.788803632 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.877559907 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.08861303 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.807479834 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.675714017 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.932655231 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.897142565 seconds)
    (286/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.869059179 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.870482342 seconds)
    (288/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.887329192 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.941347989 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.526794439 seconds)
    (291/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.94080852 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.790470726 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.97923652 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.96515823 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.834438844 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.888264042 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.684159483 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.766560448 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.452745525 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.149030318 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.79009537 seconds)
    (302/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.996934395 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.82436528 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.813434681 seconds)
    (305/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.790318083 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.857981608 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.675108957 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.402249589 seconds)
    (309/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.080259384 seconds)
  done (took 989.650130856 seconds)
done (took 991.636473266 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.8209794 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818135207 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.797509899 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.819648892 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.911036269 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.831907202 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.808530072 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.802216348 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.844450492 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.848749506 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.796897014 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.831319773 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.802674385 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.799766409 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.797830768 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.814619458 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.114255787 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.82892005 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.815017794 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.80899328 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.815851713 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.799460823 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.849987981 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.834105991 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.801807662 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.802522363 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.804730144 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.818336234 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.91471854 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.803881343 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.802782373 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.810275993 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.110993822 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.821469171 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.7969211 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.81939542 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.809610064 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.809735341 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.805755905 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.834472864 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.247656118 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.805771631 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.802172091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.799568859 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.799430159 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.805677553 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.799960421 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.805434909 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.814619469 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.815021445 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.249840929 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.820752606 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.804700252 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.803742708 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.813532768 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.802520756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.803047095 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.817555915 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.822427645 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.818586977 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.098075285 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.832961316 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.803042482 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.817070027 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.809506007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.282548918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.801544841 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.806839113 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.249735399 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.811181702 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.281484613 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.814689967 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.80479835 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.816861385 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.835888527 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.112228597 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.822189805 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.800797318 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.809692018 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.804006407 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.814299614 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.815178089 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.810526753 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.804699662 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.818455752 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.837725078 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.811169789 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.806310063 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.813971899 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.825329472 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.811275741 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.81411367 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.807456155 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.799024087 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.813130597 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.806486506 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.808388669 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.808833297 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.807812867 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.813050654 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.246779205 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824909927 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.801182526 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.801511756 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.804218026 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.819139791 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.24427957 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.809220074 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.826672058 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.849335682 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.807072811 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.099529676 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.833308517 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820927214 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.814552537 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.807021374 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.798604674 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.101873299 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.272559765 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.824764518 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.805258912 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.802010812 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821766949 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.810356625 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.800733009 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.11603431 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.827450961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818096146 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.92722659 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.815607099 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.837876661 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.806532768 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.808350927 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.836684066 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821117837 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.839713092 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.811018484 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.823489286 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.82234312 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.805773795 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.818908665 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.81556738 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.805502135 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.812373305 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.799071791 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.838670782 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.819118274 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819715512 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.827974136 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.927724593 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.803115665 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.102514655 seconds)
done (took 283.779641004 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.876138105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.797762116 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.906879742 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.806365339 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.889530221 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893295417 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.80662271 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.801572896 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.802204809 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.18330175 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.803770343 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.81512547 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.797485674 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.802554609 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.888285156 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.807519352 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.803790845 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.146292588 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.807021168 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.880899323 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.806708547 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.804966293 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.810292171 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.191101991 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.807640444 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.806915366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.880809262 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.809122375 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.155687131 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.804357588 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.805505813 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.1539014 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.898547304 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.829463416 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.816776927 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.815354045 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.892141732 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.813159912 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.887427615 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.888654648 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.909145756 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.848750387 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.802723409 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.798982726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.811848122 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.81048602 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.805940956 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.835316176 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.806316053 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.806104198 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.151254121 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.818257004 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.805544371 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.804906153 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.806657462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.838565982 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.808406038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.811462353 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.899955115 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.809833643 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.869779512 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.192869764 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190032636 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.808645374 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.800298099 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.809774841 seconds)
  done (took 180.189608597 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.879483177 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.887373846 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.880653042 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.816991914 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.857244825 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.878553468 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.807994547 seconds)
  done (took 14.747162905 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.813374561 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.810125338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859311665 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.859069242 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.812100051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.959015427 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811306895 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.821806915 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.80839277 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.861583581 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.810302546 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.811042784 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.818733495 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.808811987 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.856464151 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.820731649 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.922014367 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.81035795 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.809330987 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.960212737 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.808927816 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.815787429 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.865205016 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.818660731 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.807349715 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.815032876 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.400933767 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.810611386 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.805773011 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.810623989 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.805456634 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.853144001 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.809555063 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.807443261 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.807905124 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925794827 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.809920126 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.80793692 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.812368437 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.804738468 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.811829694 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.81056177 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.812375504 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.808745079 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.811137823 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.835071177 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.8108638 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.811452749 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.811051167 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808758753 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.862517129 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.811921261 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.807269915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.808845964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.866926954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.817606159 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.811914406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.80999115 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.813296557 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.808482602 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.961287653 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.856827214 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.810278054 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.857905161 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811875591 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.812217728 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.812229607 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.8112561 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906593361 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.812316937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.859746995 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.807841083 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.972017974 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.832971469 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815311464 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.814332137 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.814051268 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814339274 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.802369412 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.816855906 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.808901411 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.811780067 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.818470096 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820837878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8100315 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.922742278 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920504428 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.810969381 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.824498708 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.819228972 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.810172647 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.865233058 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.812996013 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.810918602 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868382419 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.929703657 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.868064866 seconds)
  done (took 200.069923988 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.819573474 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.820596162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.81114175 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.829254159 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.813843346 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.812902385 seconds)
  done (took 12.644457012 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.814265313 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.81517882 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.813686669 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.813249905 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.813610243 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.812115319 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.814712105 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.815417663 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.818688398 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.812456795 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.813780813 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.811356462 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.811095871 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.812797435 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.814703211 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.8135123 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.247805695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.810130199 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.814617307 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814780158 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.955255367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.813375205 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812422661 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.813819724 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.815367861 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.813672287 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.821379013 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.813978798 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.811388716 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.82056769 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.815947905 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.812348704 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.813429726 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.818957664 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.81914766 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.814760319 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819125886 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.819124228 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.809911286 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.812825924 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.813835196 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.815106947 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.815394598 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.814770132 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.81621313 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.819876859 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.817011816 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.822084928 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.816810589 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.815551466 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.814286743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.813264089 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.813200645 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.813543665 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.817110991 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820795193 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.81956692 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.814674473 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.814045507 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.817047149 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.816674389 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.813640706 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.81568612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.818975339 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.822276974 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.815020272 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.81505696 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.821172599 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816337787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.815905769 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.813865504 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.812955508 seconds)
  done (took 134.017470461 seconds)
done (took 543.413781726 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.082013377 seconds)
  done (took 8.820970432 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.818627686 seconds)
  done (took 8.655087627 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.31759269 seconds)
  done (took 10.056498624 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.813010884 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.830166328 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.81476199 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.811693745 seconds)
  done (took 29.019989591 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.878609703 seconds)
  done (took 8.624195315 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.82195008 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.808653744 seconds)
  done (took 15.405195811 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.961642898 seconds)
  done (took 8.703112276 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.915185334 seconds)
  done (took 8.664027352 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.823461793 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.807483371 seconds)
  done (took 15.384428549 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.79421429 seconds)
  done (took 8.535242609 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.478598387 seconds)
  done (took 11.227049177 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.824078411 seconds)
  done (took 8.577525748 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.829374274 seconds)
  done (took 8.573357462 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.869606101 seconds)
  done (took 9.612444061 seconds)
done (took 161.598896863 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.81500734 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.807793016 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.809104294 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.805657734 seconds)
  done (took 28.978973394 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.851807536 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.849936292 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.853362432 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.862005904 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.853991076 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.851852744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.844337623 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.844794365 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.861940579 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.853016841 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.852841933 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.853930006 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.851429219 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.843760814 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.852905724 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.854554624 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.864800041 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.853178778 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.843701703 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.855212251 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.818356799 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.863728902 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.855318773 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.819208692 seconds)
  done (took 46.150879443 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.014729107 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.889252766 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.972684849 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.873660039 seconds)
  done (took 9.491077994 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.877293376 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.87642407 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.886003598 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.922978006 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.949339432 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.884360698 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.85136334 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.843058009 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.828357093 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.875721269 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.9490146 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.892060957 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.959177238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.819496574 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.999217967 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.818654048 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.818351535 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.872613204 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.922477602 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.937031593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.820058006 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.87206871 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.874121147 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.888869969 seconds)
  done (took 46.986127708 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.817314611 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.826780005 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.823656095 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.819155045 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.818563635 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.818120302 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.824232512 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.819812812 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.840745244 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.820763718 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.817138947 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.819215801 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.819439957 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.820537223 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.81971572 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.832229076 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.834156737 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.818730181 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.822816518 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.826004617 seconds)
  done (took 38.204163921 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.812015364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.665177244 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.165491386 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.067978817 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.811719339 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.808858671 seconds)
  done (took 31.078551694 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.832577956 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.82470351 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.81824378 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.876297532 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.956141394 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.821708535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.81997065 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.82918218 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863454469 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.880294492 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.834546674 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.847538472 seconds)
  done (took 23.951955247 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.814684514 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.814730168 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.812395904 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.830116359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.831465911 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.824010747 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.826560256 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.81361936 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.831783279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.83638055 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.826472747 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.830874906 seconds)
  done (took 43.641898197 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909617823 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.860795911 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.836320537 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494179436 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198540781 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02662144 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34721458 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153983109 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.818856513 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091032849 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796868878 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918789283 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073801816 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323275082 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845411395 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.266649353 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106228875 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02782596 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841524098 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466693191 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876694731 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.006914053 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.527701909 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.86922477 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029585677 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.947075367 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.080030622 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.816955132 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947701033 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850965592 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827355038 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.816376608 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091308742 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186797035 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91924265 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82880581 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.435132054 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.529186851 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.805607244 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.532042998 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.49201023 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932042824 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828910481 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819263966 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754784748 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977178591 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199750272 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.823873685 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.530781844 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.819281738 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829438759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906933903 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.82185704 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.635582654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736597202 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.819505094 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.818182289 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825084348 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393242714 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910197882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024937495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.789115625 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.911737341 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474826247 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202237712 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.965069098 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.823340972 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823307963 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753766972 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.553340314 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8709516 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170626727 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.83810113 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470650561 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120808484 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.817743407 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.760063851 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088858786 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365923604 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.788632179 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047597536 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820496485 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756378445 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.853178776 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757163097 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090534882 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854475769 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.566094057 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856522565 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156303671 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.830788301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841294801 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845891369 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043837331 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.705396619 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82164305 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.562448749 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961508087 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839779686 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155777736 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756190795 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.822489024 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078178018 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.033988766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.894703493 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.304528915 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974005879 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398465635 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.874182937 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978554444 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870926979 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.087550446 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877636243 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90532677 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870802242 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822050843 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121920776 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417075074 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.957614718 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.799700286 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947767638 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.131668679 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844816808 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889315643 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831698175 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.822636759 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.570145866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371806211 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.824017744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.822071185 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901304386 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867990145 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.824392949 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772639006 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.447585248 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.789563526 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.833555873 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050188907 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.391033829 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134781496 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756943952 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153956133 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915849757 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.045239067 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.458852487 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.88703772 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085047427 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.898559676 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.938405501 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871476272 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844127924 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923105609 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84672801 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.991746565 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115171881 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.827783065 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.828660664 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.57386048 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.852223264 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827416192 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.828364262 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581413406 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094757588 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.84624632 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.828236513 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.715797469 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.839312414 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891254124 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831314019 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.834950883 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368687493 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.54820118 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.833298363 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.415265013 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049171689 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836544638 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.487617084 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932087809 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.90882816 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09842339 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883421727 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.762969781 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.537117999 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.520102747 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825859876 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764132277 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.827179737 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837704014 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837810295 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.024287195 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098444445 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865527783 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.482998294 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.863327009 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837747415 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.830306726 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8283087 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.339972093 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91985471 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.029081565 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871993132 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97170242 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.840385644 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761893418 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830876638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830821306 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.828323358 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.829567579 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861767254 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.486663584 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207581748 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085153587 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.436501811 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842897714 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.507371874 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.881591089 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.891617067 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.582744042 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.999932829 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.861110887 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854584346 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.838958108 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.568771405 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518873752 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398867647 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143339852 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134085125 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257063988 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.042481867 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.856809889 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167429661 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763824378 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393685171 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888054564 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172422915 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775421841 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912064567 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.464560362 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158810849 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840243208 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05845862 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206569581 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.49512468 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967596607 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043407024 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865491581 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.995210079 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790057463 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.111831443 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974350241 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.466295389 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022805531 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16433612 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.475843465 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.944950515 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.827562499 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505347869 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913384478 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.54252758 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00457543 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.038716763 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.714707746 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295996087 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838006817 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05859688 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181050729 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002310724 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.952729291 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76943966 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.844884084 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.842694575 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.833032036 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.833023553 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.695051885 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.088444904 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843277856 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768859667 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.956323249 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116408226 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.734397013 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.839046836 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833479142 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136306983 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.387987703 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991962477 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.944214772 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.348701627 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84371455 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767145848 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767384248 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.525956832 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838158447 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.811286303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043589663 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.930971843 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750221916 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927299622 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91101738 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091788129 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.847569069 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103047616 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108883152 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.529892799 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8582962 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.935993974 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.43553273 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.93052055 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832812518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070610351 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.588799507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060121056 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.875136199 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.780098437 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.834399843 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049272474 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.834615557 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.662157585 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05305284 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.554030001 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.847458382 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154596188 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904348335 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.660130463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.871165815 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.924601671 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844297097 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915983005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84580668 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.84704298 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.849407454 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882088278 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.666198718 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949284884 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.848330022 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926503423 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928867151 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.359656613 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.840875783 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113572766 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187548142 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156237479 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895955341 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.835444284 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844773947 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771466954 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981827358 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.063034478 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107951749 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96554684 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.946584396 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860784093 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.448450896 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046025462 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079524797 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11447214 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.732779265 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362458356 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.878707819 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.838761334 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847865167 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.050036471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047056283 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143592605 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978065891 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.92809558 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20432084 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110705352 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.83883577 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837371256 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432764685 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.848003042 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.515853377 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.875638695 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.665182024 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102820828 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848796886 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215810704 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855519976 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.993045161 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.356664743 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.503651829 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123593969 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.821745273 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889173419 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110064848 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223164219 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149870034 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905227874 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849900771 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.94815425 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986312178 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.715208564 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840541375 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838682179 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888906739 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.549785682 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.849917834 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121356189 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14777401 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.834952095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.724640297 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864716686 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.850441963 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061831875 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10049064 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091236549 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849840299 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.847240901 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.659646051 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110738906 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895005212 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774575242 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.842410773 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937046548 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084839133 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862224607 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.292593163 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.550868477 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116341002 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.838620831 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863613551 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.015594176 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196063664 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156175083 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.377249188 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045083722 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430218864 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436925457 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138950374 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.845891557 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.021162162 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144245225 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.846539614 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.938049233 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878720656 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.112114717 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149195111 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.851720402 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512209302 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.806954534 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.186277166 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399154105 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781757736 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850293398 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.902005719 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839609716 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975656037 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85228682 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.734107221 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015231399 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.603787871 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.124651574 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.84354388 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.827112043 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.493512996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.130482946 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874732115 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986843444 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841909121 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.548668593 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.209123574 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098615072 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.941453393 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.846912123 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.848175594 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845520537 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832611873 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.043388353 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.037149294 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115097541 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.961468608 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.877851391 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848410553 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.059579404 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056179432 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.682911007 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970618715 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941586518 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886754142 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.748239099 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.346309322 seconds)
  done (took 1652.597942047 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859640439 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.934565181 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.856724266 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.963980173 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899343275 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.909224045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.958640615 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890745484 seconds)
  done (took 57.049162487 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.844051841 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.040993431 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.850557169 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.844077946 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.850599036 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.844480958 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.011460418 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.852498033 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.851588969 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.854560091 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.846655501 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.840681967 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.156489631 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.861795055 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.842723009 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.832434657 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.849333735 seconds)
  done (took 73.866734492 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.84341551 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.942966875 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.876920488 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.858255731 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.84641023 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.84934809 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.736989917 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.872053124 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.843964144 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.074947257 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.484974597 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.85301535 seconds)
  done (took 89.861167536 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.854305839 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.851813173 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.852153772 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.85139558 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.852933166 seconds)
  done (took 11.043168814 seconds)
done (took 2154.665998548 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.090407725 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063061189 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070647563 seconds)
  done (took 5.911542899 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.997967635 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.043268185 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.162700143 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.169952073 seconds)
  done (took 10.15587504 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.137313676 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.217919367 seconds)
  done (took 6.131989587 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.237713933 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.848457026 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.225441227 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.848810882 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.847593194 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.849546802 seconds)
  done (took 22.327074873 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.852109425 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.855048931 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.853132605 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.855674637 seconds)
  done (took 9.191634272 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.833510967 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.536367899 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.835501945 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.850732657 seconds)
  done (took 20.83005917 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.603100323 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.613104821 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.596410225 seconds)
  done (took 9.589986509 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.292043937 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.738335102 seconds)
  done (took 8.810710767 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.110969552 seconds)
  done (took 3.89008567 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.984994911 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.160089476 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.362281769 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.362450547 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.451414145 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.577413283 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.164408557 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.093099658 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.246976174 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.287541723 seconds)
  done (took 24.471432203 seconds)
done (took 136.490524534 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.238077892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.846699413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.057159331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.194653528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.250133427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.057852963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.069962647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.17968982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.704195329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.693137199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.189530952 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.251406195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.015646246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.089326841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.018354966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.096907988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.074139854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.26323147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.884019137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.093857755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.067235802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.834032381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.031239357 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.846848812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.07834764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.011447554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.410744581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.09246085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.039379962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.419812236 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.01099699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.243533905 seconds)
  done (took 171.130562672 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.620509302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847253058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.847707208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.849005181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.160848945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.84660982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.848972466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.850593635 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.288390995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.281884007 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.856244874 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.190534173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860283568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847486688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.852877966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857009786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.409084002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.729101156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.86770635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.867461848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.869911421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.111569003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.867831723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.146722232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.4137591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.865855888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.847768432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.869256371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.852134366 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.862580355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.861806318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.851735014 seconds)
  done (took 207.983854745 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.8523378 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.851029084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.848595512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.850471225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.866713674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.858581169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.851893694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.851042826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.629871394 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.638460871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.857631431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.863532332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.861063419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.845742875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862178608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.850096744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.854784099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.855770539 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.855349856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.857203694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.860890765 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.574692701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.859988636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.580961342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.857031514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.856200961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.850901408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.860125632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85642152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.858181037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.858838509 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.853931309 seconds)
  done (took 220.190165526 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057966702 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.863652152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.861997417 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.815746971 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.858661826 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.861671512 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.854074467 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.051777492 seconds)
  done (took 19.019863991 seconds)
done (took 620.115216857 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.287113702 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.125846595 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.032754808 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.885139303 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.143670157 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.913759367 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.881470294 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.944249948 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.607245968 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.944118682 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.541251412 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.891818615 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.627245006 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.898403942 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.010402384 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.933288777 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.423184774 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.511292073 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.053488869 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.933439557 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.048801879 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.843719873 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.949399336 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.634625841 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.635771407 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880681662 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.089165452 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.422731479 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.889259628 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.051167048 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.615005345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.292599667 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.889204394 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.877837797 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.932196419 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.915979173 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.263080522 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.885687148 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.004964344 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.657594093 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.941905072 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.486130609 seconds)
  done (took 102.580420954 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.850191216 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.849803614 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.851102657 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.852015607 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.852596575 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.851785763 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.849373472 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.851398 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.849427333 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.846330942 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.851603674 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.852173381 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.85036681 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.851457872 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.849642098 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.850269264 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.852256893 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.853764094 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.851861277 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.850687299 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.851987588 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.851657589 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.868060682 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.851102807 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.849188185 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.851287529 seconds)
  done (took 49.936022704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.863875894 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.005950589 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.084848394 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.878174152 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.865233723 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.865642111 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.882171627 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.868983582 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.867621615 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.86848296 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.961237412 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.866886785 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.882419341 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.083930064 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.874610684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.864649399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.865257902 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.863770798 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.013377141 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87385764 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.883557443 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.867880498 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.881776067 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.874044547 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.862765947 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.864008893 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.866242259 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.334512473 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.868721464 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.956450453 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.906353703 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.879768929 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.30882272 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.10031749 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.912890542 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.868914193 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.865796701 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962632692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.864812215 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.864660724 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.879584018 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.864447336 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.085006118 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.359276392 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.874352625 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.866131547 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.344095875 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.965205269 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.901199099 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.872377988 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.086430088 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.874823666 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.86961668 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.865916526 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.901242975 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.875656919 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.865240571 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.229669051 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.872814795 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.882858949 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.866294865 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.864926764 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.01932438 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.868396976 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.014876729 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.867984895 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.872172617 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.865601768 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.085990324 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.876860117 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.370702739 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.879660191 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.870418058 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.968128188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.018590372 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.370676649 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.87971991 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028078078 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.324913293 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.88871515 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.875385514 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.333617137 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.895742185 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.873081477 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.871859595 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.875879041 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.871843886 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.912991458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.884688791 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.313962342 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.370307163 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.243927445 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.894268525 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.886831331 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.874903266 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.231565768 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.877867557 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.872843607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.085484871 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.38144126 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.878828022 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.874675626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.352014453 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.882559761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.89054973 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.877744656 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.097706671 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.882096156 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.917657679 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.872894583 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.880063808 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.874427846 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.88811926 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.877408797 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.874001256 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.350256129 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.979513563 seconds)
  done (took 231.60261186 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.871944418 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.86248209 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.868020492 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.867046666 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.864655211 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.871552758 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.867743298 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.866092602 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.870978704 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.866326219 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.867951794 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.864593061 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.866482388 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.876472055 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.898301188 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.874434213 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.521254488 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.867348638 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.867311424 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.866222764 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.51372037 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.871856781 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.868990491 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.867886089 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.869661865 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.869658519 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.875501922 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.886984898 seconds)
  done (took 167.472103436 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.878193687 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.985428911 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.88622965 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.902465015 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.879105232 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.873499104 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.895499554 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.883926732 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.873856491 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.871866944 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.872872341 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.93004631 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.879393163 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.973872882 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.898515847 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.898789717 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.973134885 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.879574117 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.870547174 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.873323072 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.901940111 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.863134026 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.930943354 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.996507896 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.888293467 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.990028189 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.874204373 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.878050779 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.873513345 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.987908654 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.884190094 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.931598513 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.899549121 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.891253488 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.9908468 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.98560031 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.980703914 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.901028674 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.877277922 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.877259821 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.876986945 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.862979331 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.989751689 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.887585155 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.875853629 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.9796685 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.888734413 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.879894559 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.885206402 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.876869069 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.886349259 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.889101731 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.935243712 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.999065292 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.906835139 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.901338624 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.897850483 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.162850437 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.887487689 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.979312663 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.86695026 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.997695042 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.893616516 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.863946427 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.876056731 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.880523891 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.901245714 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.901875852 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.977635874 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.878006998 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.975805113 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.906196944 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.881365982 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.875593303 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.878948902 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.989408987 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.988518979 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.905146027 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.905512595 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.901182814 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.868090977 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.875274032 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.861438427 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.890235429 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.878009886 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.992107754 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.984868472 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.881750408 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.877648879 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.880178551 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.88055893 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.900136114 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.994948291 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.906334184 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.973295167 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.937601342 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.941743867 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.88725562 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.888770952 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.875390971 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.938450382 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.887638683 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.887457792 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.205183859 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.943217723 seconds)
  done (took 202.916230847 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.339573162 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.923979635 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.926702139 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.160872275 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.298404637 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.752521159 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.915960415 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.924038372 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.946598494 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.077476197 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.976286537 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.937042416 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.910620132 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.894269761 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.923889887 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.941868507 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.925387991 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.220680879 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.046303976 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.015521919 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.902768597 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.187826679 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.238717314 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.298680691 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.955361199 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.253551126 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.612772357 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.159359386 seconds)
  done (took 61.47377084 seconds)
done (took 817.762471413 seconds)
SAVING RESULT...
DONE!
