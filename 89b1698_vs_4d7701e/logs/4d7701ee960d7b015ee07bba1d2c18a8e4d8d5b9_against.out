cset: moving following pidspec: 16431
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328460314 seconds)
loading group "string"... done (took 0.5433233 seconds)
loading group "linalg"... done (took 6.894703468 seconds)
loading group "parallel"... done (took 0.152249494 seconds)
loading group "find"... done (took 1.095747707 seconds)
loading group "tuple"... done (took 1.664667306 seconds)
loading group "dates"... done (took 1.183368632 seconds)
loading group "micro"... done (took 0.211166345 seconds)
loading group "io"... done (took 0.982035078 seconds)
loading group "scalar"... done (took 36.183839107 seconds)
loading group "sparse"... done (took 11.510199309 seconds)
loading group "broadcast"... done (took 0.903368052 seconds)
loading group "union"... done (took 11.779407367 seconds)
loading group "simd"... done (took 4.288026453 seconds)
loading group "random"... done (took 8.767249565 seconds)
loading group "problem"... done (took 1.850386347 seconds)
loading group "array"... done (took 20.279058179 seconds)
loading group "misc"... done (took 1.623382948 seconds)
loading group "sort"... done (took 3.197921593 seconds)
loading group "collection"... done (took 16.709931913 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483272452 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123073828 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113620121 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11752341 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144598411 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.108928584 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122150866 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083389964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.765866749 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147865866 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117010591 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412624559 seconds)
done (took 5.051147229 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170931155 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082664957 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080271079 seconds)
  done (took 1.310728927 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064707619 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120285088 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066258936 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065944373 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066231196 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065657614 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065841439 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065190118 seconds)
  done (took 1.663781665 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072690235 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06806901 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068262828 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067550253 seconds)
  done (took 1.425183689 seconds)
done (took 5.793887741 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749314964 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200820643 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181562494 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394578201 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128767587 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156408452 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641904542 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.30509311 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183011492 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081073276 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104030632 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315542507 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10673751 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6438224 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075558707 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090501768 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137647058 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430840119 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066970479 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081901327 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088590048 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128079928 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088814279 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07400441 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143932993 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067380945 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135435893 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079710948 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065996958 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206689748 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172202618 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657415253 seconds)
  done (took 10.169102526 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095403005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096946258 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068415701 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122523753 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095617434 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068903788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070476279 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066949838 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085878035 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126909207 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088227031 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100605892 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065504709 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068246971 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083682167 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203966859 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08115379 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08060371 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070310855 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074917104 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107491308 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07756422 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077543115 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076761881 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127854284 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179450339 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098845 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097894414 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06724369 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079808099 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114176353 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124798747 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064807291 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065684912 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123030861 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093938863 seconds)
  done (took 4.57634796 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.949197051 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139137526 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090476961 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131829522 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06408312 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106306805 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065170477 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080100517 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198506153 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.335469666 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108547082 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.563527409 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064815138 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109454509 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103253561 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066993073 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068126184 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06613497 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318619544 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09419023 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103276698 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080162177 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068687044 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067715153 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.352311746 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066694011 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062766998 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067033537 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057554863 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121857873 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066923623 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.91490688 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124780562 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066209276 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100110304 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160653624 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087133277 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27141094 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067938588 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06325365 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150248791 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069960965 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06577353 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083109996 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103054049 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111989767 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065418136 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067104584 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159577732 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064821708 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078178347 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.618580723 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153861887 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078524565 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065246407 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249090965 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085063156 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068491259 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063757797 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177319401 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136019116 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067590341 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066199091 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067360637 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069034375 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369734763 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065573945 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.729493651 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069463242 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075480286 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068479611 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068749238 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063354953 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074849502 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071909086 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084476089 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065704142 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074739652 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064998481 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065248071 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066716151 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083507425 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35566878 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066288614 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06808552 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064412461 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08594869 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095923747 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066223558 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0648199 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099570297 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067617476 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065533047 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104393705 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066126995 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083418286 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067900578 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.215091064 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066527443 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091896391 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065125961 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09599624 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069226861 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102643495 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079828817 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067252289 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.394571776 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063823174 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064887939 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065253217 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067278502 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064847647 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06760147 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065895772 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079346174 seconds)
  done (took 20.419089792 seconds)
done (took 37.261186365 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.230977859 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074836845 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074464354 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077646469 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074533816 seconds)
  done (took 1.76448882 seconds)
done (took 2.977884761 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119593658 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0983678 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063757279 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094479059 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063859474 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09894588 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098390497 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080357445 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098439937 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063571412 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095320319 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063406029 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064615836 seconds)
  done (took 2.333001384 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081716122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082800806 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069404525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081643654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062785377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081573401 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079886723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087463755 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080340672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071769401 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06302244 seconds)
  done (took 2.047263776 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081252333 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082971097 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069416017 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081230907 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065421129 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080401354 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080046643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08466457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080306536 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072846139 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063170001 seconds)
  done (took 2.047227337 seconds)
done (took 7.626807395 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076599042 seconds)
  done (took 1.273497097 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585958778 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.079734158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081049375 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110877427 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182139613 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118288328 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274423742 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086117618 seconds)
  done (took 8.898444514 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087237925 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081446986 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071275087 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068300024 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07020035 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071902924 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068686158 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067836156 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071521747 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068142637 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07075376 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070860694 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070822818 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068402908 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069014955 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068722245 seconds)
  done (took 2.410020762 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091513188 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089906115 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073068418 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074291397 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071559848 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071722059 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074125973 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072792726 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070026927 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07159374 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07416706 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073032961 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070883783 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064254707 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073639766 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075308216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070635746 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073763943 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074654368 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074164861 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073563303 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063717369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070610434 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07347141 seconds)
  done (took 3.06743363 seconds)
done (took 16.855288148 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11316487 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070756547 seconds)
  done (took 1.384779144 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081469411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082294052 seconds)
  done (took 1.376907011 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083718334 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065208758 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092265124 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078392007 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065953618 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065372658 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088629103 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065479345 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065201048 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065847977 seconds)
  done (took 1.949877169 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067797113 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07848432 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07021815 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080661674 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073761909 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063764737 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07229611 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067587884 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077559161 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062543755 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07079286 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081887701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07068118 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083305651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071906093 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068621974 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070262511 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066839021 seconds)
  done (took 2.515645485 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065478632 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066559824 seconds)
  done (took 1.350501847 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06680253 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063672073 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067341261 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066322757 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063443751 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061952589 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063372896 seconds)
  done (took 1.668662253 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.3722803 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109286084 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295391613 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070095549 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080873733 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246455475 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064783563 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069536398 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069594338 seconds)
  done (took 2.635720001 seconds)
done (took 14.097330757 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078594717 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085096931 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09418075 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.357997451 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090756934 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065716268 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113258524 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190754117 seconds)
done (took 2.305195405 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208369438 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.605134859 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384326097 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195297224 seconds)
  done (took 2.407601629 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32481867 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085836546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058295929 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066323327 seconds)
  done (took 1.766338012 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065305843 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067971437 seconds)
  done (took 1.35857174 seconds)
done (took 6.968698581 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065908027 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081867272 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06560029 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063073267 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06563614 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063028262 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063054353 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06501173 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064963494 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0655319 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067696459 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065439049 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065355851 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063227929 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062745678 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06317859 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065637974 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062654134 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062710865 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065061749 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062990615 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065105612 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062951641 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062908198 seconds)
  done (took 2.820736846 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082633808 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0658181 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070777578 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070531936 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069245208 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0703824 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070756036 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065775997 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070385687 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067658444 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068905865 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069482103 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067398656 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069205084 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067478023 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069250281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070705351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066090208 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067282314 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069556951 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070611141 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065818351 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069493833 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070353882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068801387 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070559691 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067622568 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065680522 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070277225 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069050174 seconds)
  done (took 3.312355468 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069195323 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063213379 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063764957 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070313363 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063153551 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064214324 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062542489 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063288687 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063900355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06318239 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064212729 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062875121 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062927625 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063830771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063748096 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066886087 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078011905 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063467812 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06308656 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063978803 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06627205 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062864839 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062931947 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062843784 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063110639 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062496279 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063350108 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063080305 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063508507 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062994901 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066200463 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066423691 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062624093 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069747436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06639651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062580071 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066954066 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062532141 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063567907 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062715267 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062728046 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062844894 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063002544 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069941353 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063378805 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064372304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063064943 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064100798 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.0632963 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065751075 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062899007 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062699735 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064544341 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063968245 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066678672 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062103182 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063430596 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062504249 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064049347 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.1746315 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062437655 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062846157 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065639585 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063457212 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077102649 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070017611 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06280443 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064482389 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063965696 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065870532 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064558193 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075823054 seconds)
  done (took 6.008822657 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090443839 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087519293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065351574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065109569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061342297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063668039 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066826369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063958291 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065194617 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069013995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063735599 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064673328 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064715652 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076353149 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063911898 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065196255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069373122 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06144913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063969526 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066875736 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0639538 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066822256 seconds)
  done (took 2.740298354 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154913814 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070234808 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105054547 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072941696 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067052981 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072402394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069554566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06926855 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069529633 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067804478 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067477197 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069334288 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067216614 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067746614 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067563124 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067438117 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069695625 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067666816 seconds)
  done (took 2.604976375 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076982102 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066035525 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085004464 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065852965 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065461618 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067647644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070468236 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073775154 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06749781 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065364785 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073447466 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067858578 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068328723 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065519069 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067561822 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065596338 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067571386 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065356614 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073958288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069925462 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070057164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073628639 seconds)
  done (took 2.776721669 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080449243 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067273693 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082263298 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068771372 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061518963 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064088829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069692963 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065523954 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069841592 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06754064 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065700191 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063700615 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068781754 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065483985 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068794752 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065735426 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067384047 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065185664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067044429 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061159876 seconds)
  done (took 2.602838026 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086225403 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067599401 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067701585 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075837477 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066918236 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06668418 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074946894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066847249 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066453008 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086413225 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066508903 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066542452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075110066 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071431808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066456752 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074315316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074134637 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073885036 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06680581 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066511899 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087140729 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066896899 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074397677 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066634473 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066714316 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066828061 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06647053 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071622617 seconds)
  done (took 3.23989717 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066885623 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065825336 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063335624 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062750551 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063590752 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062606264 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062796094 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063005587 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065406468 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063101195 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065507387 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065365545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065239358 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06501319 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065273584 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065110802 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065216428 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063024763 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062964397 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063095217 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065409967 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065018993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06543149 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06284711 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063059317 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065195953 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062971337 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062844806 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065161412 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062661059 seconds)
  done (took 3.176488281 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074903305 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072804519 seconds)
  done (took 1.397622643 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062397634 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079595439 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062898836 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069642296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069223228 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065746292 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072904151 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069470399 seconds)
  done (took 1.796189479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080730184 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076417653 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067534756 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080574049 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075726647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082110993 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131089092 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066312001 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072378644 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063699164 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078786978 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064981369 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071374053 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065897251 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071483601 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071685623 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063250336 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071570464 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067705961 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064952535 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066771649 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074574446 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067954096 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061084566 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066534551 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086795852 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076462828 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065238997 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068532751 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072478282 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070569225 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059530603 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065201735 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066226069 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063805486 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075423113 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080387605 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068367802 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074145685 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066591957 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076470112 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060753952 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070147036 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071546889 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075100908 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06564437 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066387401 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06050863 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063330062 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067456842 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061051777 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065590541 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060395311 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074888173 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069040015 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075761429 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064138052 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067013761 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068224449 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069063106 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072026317 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067227746 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067698013 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065202103 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074831488 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069852926 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073803492 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060941779 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059819315 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063538668 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075086365 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087955882 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071611179 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066119312 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066889421 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063596609 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068660892 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066839225 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071512364 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072043681 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06585159 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071146985 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072910632 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066256874 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067875377 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073784068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064123844 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068332833 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064558002 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081477218 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064507031 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063741131 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063284545 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075346179 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068720469 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065170053 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063561053 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072247218 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059863509 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065285362 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065728763 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065099679 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074178743 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068552554 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068951219 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073165753 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071411786 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064519943 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066934814 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061084239 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065279201 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063370343 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071048104 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058881321 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06658865 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065175625 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064940556 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200137543 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065134016 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066705903 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073804009 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072144164 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065772113 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063431451 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068488856 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066414117 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069263954 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074456645 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064948959 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061239972 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062133207 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069525325 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066684857 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069958753 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071307272 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069586762 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060647505 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064037402 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071798437 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075308223 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066839706 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066966781 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072044749 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067080162 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065016887 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072600472 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068673404 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065846613 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071549143 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067348881 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061441495 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070064624 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068348728 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064956215 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069393432 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068717147 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068434929 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066573288 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064325301 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073393095 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06766634 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065460785 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065962395 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06547202 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076384359 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067412283 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06164028 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062553536 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07569526 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064326928 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06583538 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065323103 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067504887 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067821512 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063820951 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06520823 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067728536 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077262498 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070227043 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066817329 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071389211 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076825574 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066068742 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06878786 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065340904 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066724686 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066544696 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074697145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070655307 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070050397 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068465741 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062537983 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070740832 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072354816 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064766229 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063617489 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064742166 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069521141 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07057347 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069564977 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066313033 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063645376 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066077214 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068390936 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067957108 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065063301 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064794798 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072190372 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064295884 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072612345 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066351475 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075436118 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068547291 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061012577 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068880182 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06362357 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071528929 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060697249 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063713871 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064808617 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06629512 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064819725 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067510581 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059072846 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071002919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071386352 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064534974 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063543587 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064081035 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070570305 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065711184 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06782684 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067861609 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070232581 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074464057 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063604634 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067825102 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074655922 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.194181469 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061428883 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071462236 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065302339 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065287716 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064790449 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064142021 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069358871 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075040978 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07280185 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060355696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068727853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064799087 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065636135 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061687161 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071473775 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068457843 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067554257 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073172328 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067966073 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067009823 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069854289 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065949536 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066349358 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067184859 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069574401 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066657839 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068110527 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066309983 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069485434 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065767968 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064009753 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068063457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065939379 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067025568 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07158175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066023035 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06663796 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068658849 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067371284 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067063859 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066270796 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06535405 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069471284 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066782485 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066360671 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068029592 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06186025 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073158287 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066331051 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073535536 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066618558 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063138669 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07360131 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069381683 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072515738 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066860693 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066827155 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067182719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065575664 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068852066 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073446659 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064002471 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077096737 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073468655 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066032722 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068851609 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066163304 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067743904 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064650635 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067020983 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066740168 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066180476 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065104646 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070474947 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06796331 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065655196 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067110894 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066192275 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065785999 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066403576 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060216102 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064753999 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064971703 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065276983 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074957856 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066116641 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065260402 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064460082 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066580743 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064333695 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062547867 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073416109 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074577912 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066032217 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072357926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065399285 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06723831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075869684 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060034349 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064060927 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064055945 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06396928 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072548806 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065893189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074473261 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065411714 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06438253 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062511012 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065574706 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063804933 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059505505 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062428074 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067713813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063568663 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063541314 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064541677 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066570694 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06492979 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073606048 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063488901 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065197587 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064693401 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061556709 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.196349562 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066056786 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069345714 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067036643 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064393771 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063760073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06600993 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067172455 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067156791 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065729902 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067826871 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075537968 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065932528 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069296453 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069827167 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061203197 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069461656 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066778463 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066285073 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065657722 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070554214 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069837556 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06741643 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075013573 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065087701 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067188835 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066934605 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06497935 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065997684 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06545863 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066753297 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065741998 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067854799 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073912193 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063984442 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069381641 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066621156 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066908375 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072840823 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067629322 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069069556 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072836602 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067120694 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06797047 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074285068 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07046345 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06965168 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067510661 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06772596 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071648178 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065655986 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072843497 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066391306 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067088107 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067977442 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063811336 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065246952 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065263582 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06565676 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072050003 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067808367 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065043933 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065088398 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063324424 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066827518 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069561135 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07423172 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068499549 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069298718 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060999853 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063502847 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067473357 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063941477 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067506095 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068087211 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07171867 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067934889 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066150816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064803317 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074469622 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071543436 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069169978 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064014714 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068957416 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066180835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067676088 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06670008 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065992866 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066773829 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069069512 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067340676 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06505275 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072597587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069204559 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066526391 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067062247 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066666583 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066459476 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061500375 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066244091 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06756663 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070836787 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068145148 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066156016 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075955554 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063945152 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066090788 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068999774 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064807495 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069934313 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060840577 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066713844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066065683 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066246791 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060263732 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063720127 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062510955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066664209 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063608318 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060045368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074175456 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072742386 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067020665 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063398137 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062892688 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.192806944 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06147841 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06585682 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067155318 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068391322 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076810181 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064754052 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065695705 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060974374 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066590299 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068695043 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068969172 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064130224 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061954629 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065471342 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069332946 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071725359 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064968305 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066768279 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069071071 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068500708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064763193 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069788569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063519049 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070688457 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078539417 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066936852 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066590232 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073295786 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073791219 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067166917 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061922033 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067058019 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070295005 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066967898 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067879801 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067059232 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081274748 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069791918 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065357906 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065394519 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069051295 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065912345 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074498132 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067566548 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066862808 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070972329 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068654546 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07496181 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068635627 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073170615 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068708916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069054843 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06482868 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066501814 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063889347 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065830976 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067621641 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067190582 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071831018 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074798755 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064887066 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076535905 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074800399 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067715585 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06308047 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06531143 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065316001 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061621189 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066475022 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064860659 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064293271 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063860233 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064944597 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066878396 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071419137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066769093 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066627868 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065956108 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059957136 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067983093 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067738499 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066471955 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062575614 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065621901 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066402013 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069552779 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068932556 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063443588 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067363102 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067501742 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066764359 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061182259 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071729015 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064707402 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067735008 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065249432 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065985216 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066915313 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068793708 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070446134 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066580716 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067857485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069215067 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067647979 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063004273 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063350034 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070431008 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063250392 seconds)
  done (took 42.193602144 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098891145 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062207302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061226146 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061406709 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072953585 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062303472 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061094355 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062531233 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062724366 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065114563 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061491992 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06155899 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070254441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077439945 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073299442 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066139041 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061668494 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062489401 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061458239 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062359795 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070046703 seconds)
  done (took 2.746767581 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073008591 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069715806 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072619522 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074594106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066373131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069789335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072142421 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069970417 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075138798 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066915079 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075194325 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07085211 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066604675 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066487303 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066214853 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070060134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075640677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066942332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069931061 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071992624 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069816658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071812263 seconds)
  done (took 2.876413316 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066188304 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065058151 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067070547 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060974896 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066110783 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061030565 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068636504 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063292453 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077840846 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064565244 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064407786 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064358052 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067284884 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060517546 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06503985 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063084984 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10746423 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068308468 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064851125 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06598324 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060762257 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066835418 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060745595 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061121722 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064349609 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068741422 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065771184 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063518281 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065260405 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064448626 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064979775 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063966419 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066373597 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065614147 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06457738 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064429449 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065212127 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065014358 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060924932 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06320218 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06586869 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061160859 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065248923 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066502709 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063196647 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062993581 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0663678 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064786177 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06021426 seconds)
  done (took 4.542378897 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07817317 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107767135 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067361739 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087360969 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079349709 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.0749451 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068480906 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088030944 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062857825 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063576974 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080738755 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078733067 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065365367 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069634664 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071846981 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065616966 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065979099 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064147758 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068604274 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064432553 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069052627 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071439791 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078970678 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0776319 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068811899 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063907315 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064396405 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069165923 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077540802 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06925405 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069382954 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070360916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079349892 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070203449 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064263596 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066875069 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080339622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064841109 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067131234 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062736939 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067189363 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069334087 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070903726 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080506447 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064899253 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069777351 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064604689 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062201187 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077415172 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067106506 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0721428 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078553174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068490949 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064809519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069071308 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079450602 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064906932 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063336652 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067641273 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076813262 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062349014 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068741252 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078046228 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066299258 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071566266 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078894689 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06965756 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068487423 seconds)
  done (took 6.304229869 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075146564 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071677248 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079738534 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079414155 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071256265 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071572631 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071164924 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071493538 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071063259 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076058596 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071262689 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092032968 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066737897 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073871812 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071559086 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071337097 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071612369 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07162802 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07156771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071399521 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071633099 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078998885 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071634372 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079027561 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09694262 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067366286 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07128964 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071457008 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079100666 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071552977 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079020447 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071446857 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071887985 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079220045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078329934 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071351256 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064499875 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07111508 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071507576 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071258368 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066904308 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079069564 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071207833 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066837832 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071338891 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071077841 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079147725 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078780595 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07413031 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076207542 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071995518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079724046 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071430803 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071753456 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079394451 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103909755 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079293077 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07960236 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071537746 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079000967 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079088898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085120099 seconds)
  done (took 5.996427064 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082974438 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074024579 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075468222 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061005893 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06364197 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069322506 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063854682 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063795207 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073753887 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073940958 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076653101 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06886878 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071966905 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076128681 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069772714 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072595707 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069499745 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069603011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073868905 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0690219 seconds)
  done (took 2.76988673 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074294348 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082351812 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066519773 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072113175 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068566166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071055959 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068033815 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068385146 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066460863 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068424537 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075685501 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07529495 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066207235 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07088864 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075031913 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070832616 seconds)
  done (took 2.482271267 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074168607 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071099198 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079262847 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066076398 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063548635 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061976511 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065386578 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060976375 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061753144 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077174602 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06504675 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068031979 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065213148 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06372742 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062536437 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068043333 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062038885 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062841106 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065403838 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077569868 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075903424 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063912446 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065955586 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065225568 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065190921 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070453466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06488351 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063450754 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062678086 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065592224 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065855842 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068719955 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062737934 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06328762 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064441597 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062776487 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064943886 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066067646 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068035406 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065342619 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063449235 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065174185 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065766595 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066307828 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06175161 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066102229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061463794 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067411679 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063674193 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065743532 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065319892 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067959701 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066173754 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071797174 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068111269 seconds)
  done (took 4.986474487 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078376151 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068981928 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062334809 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06389243 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068535391 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.0671629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069012986 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067326854 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067397169 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063800749 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067567439 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068261331 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067258017 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069022483 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067250289 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068956542 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061821672 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067479794 seconds)
  done (took 2.568415161 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071099487 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065139048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073145309 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066016129 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06572516 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068178234 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061895535 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064231471 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064748289 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065422142 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065411306 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067671716 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064111534 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068003948 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065686581 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065725864 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067724025 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064156529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065591007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062013307 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068146876 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064091207 seconds)
  done (took 2.802115577 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092012493 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081007967 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137090125 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079373353 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082815538 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07168677 seconds)
  done (took 1.893507766 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090638151 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078092608 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066436064 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087949074 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072781108 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066993743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067602947 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067716275 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075555321 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075793562 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067488812 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075673865 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075767748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075075097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07294952 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072617202 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067396608 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066923503 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065916496 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083540676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067115297 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075398753 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067291753 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067108919 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067338539 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075386015 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07558558 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075271465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066909657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075243959 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072683623 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067062625 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075353321 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075884545 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068674981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07536699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066741702 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083204012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072137801 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074487474 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068454694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072387024 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075053819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071282957 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074938491 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067010056 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071364123 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067330928 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066909026 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08487191 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072309664 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074134026 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072705779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075200549 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075081063 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08506877 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075642809 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074632278 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07268835 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078302468 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074699678 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072751547 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074463313 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075637821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072849575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074739752 seconds)
  done (took 6.190118176 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08224876 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085389466 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067315287 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07629448 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074813886 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067231864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067810954 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067325927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067187158 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066950815 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1069627 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067913458 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075535956 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075336656 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067247392 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067658226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067225338 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074941979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06727603 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085402287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067123194 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074617978 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074960044 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074740757 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075588387 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072599814 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06709156 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067343877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067063444 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067073706 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071928665 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067347159 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075220641 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066715527 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075023108 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067212067 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066931756 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071788448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067114928 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072845992 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07486047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083188097 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067000695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066820005 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07574075 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067099029 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067124039 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066897357 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067142112 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067310993 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075471935 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075669815 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07552299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074930178 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067594009 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067293524 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06736169 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067141026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067451577 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07253519 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075110662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067156339 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085343542 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066977326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067164205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074644955 seconds)
  done (took 6.106980901 seconds)
done (took 128.160086783 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18418432 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165020795 seconds)
  done (took 1.695803762 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068861722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097445527 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077326197 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128280305 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066151376 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100636837 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099233044 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07770703 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066351191 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066035006 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066256868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068460371 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132148192 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066353383 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066200951 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06858235 seconds)
  done (took 2.676307191 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096499625 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156377041 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098686899 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065004356 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09685885 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072880194 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064874078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074653833 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070924082 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064964396 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072829437 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070390998 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065311656 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070589561 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070718721 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072345074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065235817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072805405 seconds)
  done (took 2.784538659 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100923946 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091321323 seconds)
  done (took 1.55675885 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156381788 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104999849 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143371193 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343318312 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166227877 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.234217293 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126429112 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127097593 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116541283 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123526078 seconds)
  done (took 3.002332605 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097971687 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152548768 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253978842 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115417406 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072642118 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094901253 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116099789 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077603798 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080140579 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080064526 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079904248 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075741704 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098288233 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073178775 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072793123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07543399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101576478 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072229856 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073241672 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076399737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098391136 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064951982 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073080387 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071936518 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07716147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077105222 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064824202 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06475497 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075969439 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073469867 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076241836 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092933916 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076820436 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106330003 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069592794 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107412659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075457084 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073240018 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073827812 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073422595 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077843274 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077869878 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071650017 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075542 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064705126 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075557634 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065116898 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064906869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077228688 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065940381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077433327 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076079571 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106077305 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066234391 seconds)
  done (took 5.938061442 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100708969 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103664906 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071265079 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110043732 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099241927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071927058 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100489394 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093335827 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102617588 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069284961 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067667593 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069533414 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082238712 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082299774 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112625714 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103796937 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073650381 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070708527 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103320306 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102040347 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068226162 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094005959 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088944101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100867601 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066723797 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069907116 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067467261 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069714073 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07630061 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078006719 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069067785 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080002242 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084517465 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077602114 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066850821 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067376439 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068083247 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079584156 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079166965 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078132325 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077186815 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067316162 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067449235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069163132 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069744137 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067345385 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078374156 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080247143 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078665698 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069355913 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069791009 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067887989 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06907301 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079969198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07750505 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080179659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079387747 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067589094 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06801861 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071903317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080214273 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078654117 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079077519 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069214444 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078934606 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067893486 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080053083 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083454359 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067849865 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069296432 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06799766 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068771278 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069124265 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077196642 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078007695 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068866418 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068813547 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067654693 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079451517 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077844033 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067788513 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076286867 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066738171 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067815992 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069200512 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069191513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077396273 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079903043 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069499267 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067791889 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068944918 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068277083 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066407512 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075868243 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079040534 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077272134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076947678 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067922971 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077271096 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077253792 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068515078 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07756293 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066638368 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068014184 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197990463 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079746617 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079027375 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080806856 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070841214 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068906531 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079958675 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081953044 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069299303 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079125496 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080273005 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080514757 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068416052 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081677636 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068944557 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079923124 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069851372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079797963 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068108996 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080778142 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068491666 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068120418 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068424944 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079586574 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070695742 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068943639 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069593562 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070608398 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080472422 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082586533 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070146871 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081836946 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078688954 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071008072 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078817784 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069030519 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07878335 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0697621 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07138907 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067366708 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082034881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068874065 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068079652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069616425 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080717842 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068071697 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080782654 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07840613 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069026334 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081654313 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081385657 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077813635 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08075432 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07107569 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068459943 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06826794 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069072465 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077697572 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079995711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070484812 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068437369 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078923096 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079483064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066952289 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078920528 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078065719 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078137328 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068139851 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069087194 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07986851 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08061952 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078015175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077565448 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078485501 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067871289 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077007373 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077758895 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067715608 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083379542 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067530974 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082263836 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078770482 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076327566 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078341735 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080223976 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080433205 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079970157 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082717429 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068110482 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06769037 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079306235 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067846552 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068433929 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077243438 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068767944 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068542386 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081127945 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067364553 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077709792 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066789433 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07694516 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065677959 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068399525 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081696659 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06687637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068032142 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212178537 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069768708 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078314908 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081782166 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079023772 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068317399 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070595776 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0804212 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080051735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068764247 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069815345 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070966586 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078998889 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077992286 seconds)
  done (took 18.586209967 seconds)
done (took 37.610894604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208722808 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150012114 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17855251 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117969475 seconds)
  done (took 2.118761764 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120967804 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100524908 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094925956 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064668099 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101411132 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065037331 seconds)
  done (took 1.949894211 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311453218 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212979548 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181559626 seconds)
  done (took 2.105971186 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197843061 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186842719 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392110427 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252176837 seconds)
  done (took 2.536312483 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143122205 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089385768 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.0664594 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082275678 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133795212 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160491409 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101160905 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125386843 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077403263 seconds)
  done (took 2.431598362 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146260325 seconds)
done (took 12.687810331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.167726473 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.098330404 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122498238 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.206498444 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081188111 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088604864 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106391529 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11687413 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07686573 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075516742 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.205270189 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073182569 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078747456 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073657535 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073093016 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069100782 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07458286 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073441297 seconds)
    (19/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.177323804 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100115895 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174013727 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.202623395 seconds)
    (23/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.151028276 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067369195 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071207326 seconds)
    (26/309) benchmarking ("sort", Int8, false)...
    done (took 0.139366204 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189448894 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157586845 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075210534 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07219068 seconds)
    (31/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072895389 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104509078 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.147742038 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167157213 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070898059 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200035245 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074639798 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088375922 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108534284 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074679976 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.17852911 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.176781191 seconds)
    (43/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.148313037 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075789744 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215847905 seconds)
    (46/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071121233 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070914374 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088228307 seconds)
    (49/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181229713 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088607337 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159070583 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159817756 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072226085 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050768006 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084764269 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.0898525 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088911725 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075035795 seconds)
    (59/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068996995 seconds)
    (60/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.16390718 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089002653 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066508637 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.147126356 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064771425 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064315865 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.15683635 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.0913425 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184938345 seconds)
    (69/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071318405 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.201361247 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064935811 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086838165 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091509673 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050356414 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051557366 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073419818 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074641077 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097735137 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052688594 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066122289 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.160348177 seconds)
    (82/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068715408 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097063208 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148570356 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217057422 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067191251 seconds)
    (87/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09899393 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.067228372 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091300916 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086694713 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.15111646 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144539727 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110594501 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072152793 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077410486 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176023043 seconds)
    (97/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061956962 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072716836 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14673882 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 0.127688795 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133423281 seconds)
    (102/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072942026 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077102276 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067892174 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.175470945 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158143366 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065952769 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072408292 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065380273 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075134483 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105286696 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065199539 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051308656 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.394723517 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135223021 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157948259 seconds)
    (117/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073024673 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051520907 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065304093 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088838546 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051868783 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158850387 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158775836 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06812974 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089373465 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070761055 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156669029 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.133673839 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072896061 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087224151 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074767555 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07109037 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070618192 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064820474 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071397628 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.165015029 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069933044 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066488265 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.181786413 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071417337 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087967511 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148737347 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102736479 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071832829 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064029763 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050470317 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105921263 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.162831772 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065770154 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064667039 seconds)
    (151/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109008005 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072127439 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07527832 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107920785 seconds)
    (155/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051185807 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051801783 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05042984 seconds)
    (158/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10587188 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071814577 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063506806 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091339234 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072544861 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069641058 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163300389 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.10650908 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051904679 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095883293 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051976712 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108997248 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079221989 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.07865009 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051940055 seconds)
    (173/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071376098 seconds)
    (174/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072837838 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.115116663 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051008103 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064035406 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071523663 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.146860772 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13274827 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064007263 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051038257 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051052919 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051615783 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051615112 seconds)
    (186/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050721505 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067376115 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050327264 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064824676 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087451364 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064316815 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065221888 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050254159 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087733205 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059789731 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.228622641 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052366892 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074617377 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096203356 seconds)
    (200/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05234817 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073847073 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051338501 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064317827 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064998282 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106710336 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067210678 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064132803 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091051533 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052623084 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073819501 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068813021 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053153075 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137749824 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183936669 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10590933 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065413442 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05155617 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06403556 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.0518338 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18445652 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107682365 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051847755 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06543203 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185083759 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145847089 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073616714 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073015628 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173697166 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066363457 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051730752 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051661491 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14894852 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052477325 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075489611 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051137112 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065530002 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053834346 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071049166 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052490548 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070916999 seconds)
    (241/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051557656 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08927997 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053164716 seconds)
    (244/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082451283 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063669609 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051016245 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050996908 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131771356 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068163037 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065868399 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071108592 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087830929 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051363879 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050642694 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090754146 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066828694 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051146987 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116488792 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125041571 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065390507 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066946502 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088545754 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165186204 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051785119 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08679479 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064135806 seconds)
    (267/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059950251 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077684829 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066250598 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070923673 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072272016 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105733559 seconds)
    (273/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064887058 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051084423 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077699214 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066680128 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068933953 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053612286 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064780372 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05069585 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099311107 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.135411501 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110188604 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064470032 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065603399 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051819443 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072169792 seconds)
    (288/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07120079 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085669029 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063283597 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072106166 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063702949 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061635555 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071777029 seconds)
    (295/309) benchmarking ("sort", Float64, false)...
    done (took 0.123959337 seconds)
    (296/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06639545 seconds)
    (297/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079022477 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075334789 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051111287 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069887224 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051171212 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077081795 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071074051 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051056007 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07096984 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05065877 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051800581 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069442791 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065856033 seconds)
  done (took 30.228428141 seconds)
done (took 31.640688633 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084367685 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09225141 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074481895 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093021917 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08118508 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076696064 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072313935 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078137248 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079537802 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081510861 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078309239 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054833443 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073897677 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073870062 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074016648 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090766408 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077750715 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072846077 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07264071 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065475414 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07288318 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065809498 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066833227 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054403856 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077586956 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071276901 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072168419 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073555843 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065422062 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065806294 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069050171 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073014581 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065385416 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078200619 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07222098 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072996118 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074492894 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076245514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067279751 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065708759 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073990468 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06586546 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072594409 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072974638 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07164593 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070906184 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072802885 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077539426 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090847636 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067785235 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074675126 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075706801 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076059911 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072756423 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06949055 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072787321 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07045907 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090915127 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073297542 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067705951 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073668721 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073845497 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070945221 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073043512 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072959836 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075691166 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075072815 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070624508 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074362454 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070919596 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065507068 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072489921 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069373674 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065605522 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075171768 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076188832 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064120066 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070846866 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07215736 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070591982 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064381693 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067144974 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066847642 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071083761 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067335872 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054219437 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068886515 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071062431 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06453455 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072626044 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071201482 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071613997 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066696747 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074637694 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064575839 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069820494 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065339892 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065338186 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066720249 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068969385 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064700924 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067076871 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074180959 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066697112 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070984552 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078314949 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064835795 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071304359 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064144977 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064312898 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079401051 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07391006 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06490433 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067020192 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063973213 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072024885 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064254521 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064612742 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064445679 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064679181 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070040307 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063900146 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065574506 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07025555 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075676475 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063652158 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067175135 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065951265 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064017719 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068813545 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063820542 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063469532 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201420359 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061869328 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068360088 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065940646 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073084008 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067632657 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074065993 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067883469 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073814577 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070545814 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07229444 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071106148 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064417595 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058384016 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068697706 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067610632 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068272464 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065879862 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067233467 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065630891 seconds)
done (took 12.412577238 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066614552 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142407242 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099322637 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095372821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085710074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066196087 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075927683 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101722661 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067938149 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102720947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087597248 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084522604 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112319426 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064546421 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065820782 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069879889 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067482196 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081504346 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100689792 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08676167 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116105017 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065641852 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094402435 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090381279 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086816321 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091879759 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066911789 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069581753 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069365306 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100039119 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086920723 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070258382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066711309 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10032717 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092449504 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083185932 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066436011 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082568176 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066494963 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065762562 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067630731 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098235092 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079432172 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080033678 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070229226 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069017026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067298524 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083032778 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08830919 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078524326 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086153413 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102374828 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068530938 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065332551 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06459693 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084928408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06517394 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068744919 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066055476 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068050887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065708001 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069046256 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080752221 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081543242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069392566 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080107105 seconds)
  done (took 6.796782574 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083697909 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090278024 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083010249 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082764732 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065697915 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066914371 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066357024 seconds)
  done (took 2.043433433 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066991797 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087384877 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088774195 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089321777 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084925771 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087498323 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075463919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066383844 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080651296 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067387166 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087816024 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102244344 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066921458 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072959274 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090653721 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066552375 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089638744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066532696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069325857 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089920749 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068436399 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082136439 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070109011 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067003292 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080192267 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066804964 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113012006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070682114 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067814161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068934825 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064628098 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106796222 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07997329 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075103659 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066428939 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080488397 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080329986 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064564542 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082726917 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071148833 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080061443 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066501311 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067323402 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064176501 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07106516 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076587438 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067214954 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066881059 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068786358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086005949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066965605 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079870634 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069905785 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069211144 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068316482 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070211691 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075910594 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066951128 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085087175 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067393679 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082291856 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082070201 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079895774 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08218922 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068178747 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079324967 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079587041 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068319983 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067938284 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069487369 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08181218 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064406621 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067189821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076771572 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067624437 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088745007 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088382999 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067300081 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075134089 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066574582 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06646452 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066255574 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088768991 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068947136 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066188889 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071212879 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069117116 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064131168 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064871561 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069129508 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063894479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067436874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068609022 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068904359 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068306993 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082519948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068038741 seconds)
  done (took 8.740249639 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068648734 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068065338 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06910911 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067660466 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067252194 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067216639 seconds)
  done (took 1.936337345 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093527498 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068997352 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079939446 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071892503 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105038593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086821209 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087241483 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07885188 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083680138 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078856573 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086566218 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088322796 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092734412 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072778225 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086120283 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071728594 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087000572 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07552729 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078341681 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072689683 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086590865 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072882824 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072967262 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081049237 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075218458 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071934647 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067115046 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078635045 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078464892 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078286681 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072237088 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075660197 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07062726 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077924197 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086942888 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070501077 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071650259 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077010709 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072122939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075130165 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087478471 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07283749 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074471399 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077137902 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078282601 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070339679 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076734366 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0756776 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086150766 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076630141 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076659657 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071036991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074908621 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076973382 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070204194 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078095167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077001505 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086316231 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072173712 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070744837 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068971664 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074968269 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077333485 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075019045 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078239861 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07657229 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069994888 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071849933 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072342821 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0717383 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076937019 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068282674 seconds)
  done (took 7.078859217 seconds)
done (took 28.088150489 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545723766 seconds)
  done (took 2.041795787 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601542987 seconds)
  done (took 2.119728192 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.506981022 seconds)
  done (took 8.024734328 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395555792 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.492441256 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.686556278 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130526112 seconds)
  done (took 3.260999712 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.685257845 seconds)
  done (took 2.213949325 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206248794 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195901622 seconds)
  done (took 1.944276383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375195867 seconds)
  done (took 1.891915618 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.097494879 seconds)
  done (took 2.61572132 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260845526 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162731291 seconds)
  done (took 1.950537902 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457679411 seconds)
  done (took 1.980804273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.804845043 seconds)
  done (took 6.329461586 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203624237 seconds)
  done (took 1.772375995 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237331884 seconds)
  done (took 1.763167188 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.731710693 seconds)
  done (took 3.257227219 seconds)
done (took 42.691892381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078524048 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080370652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079781982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077127476 seconds)
  done (took 1.831735851 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076116226 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072060292 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075442882 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071831827 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076045451 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072619833 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073292618 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075913811 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071638113 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071944867 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071433125 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072243027 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074456005 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073567162 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070742713 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074147383 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075054242 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072242115 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074712255 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072238127 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070327844 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073719881 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074750509 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071092828 seconds)
  done (took 3.287973637 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076323795 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07228331 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07399511 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071398913 seconds)
  done (took 1.830848891 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077391573 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091265202 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088219258 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076879897 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091411786 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085239673 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068238862 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068551585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072233121 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076305959 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067392388 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095143998 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087114477 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075894179 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078505405 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065624336 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067980491 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086088266 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076299732 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076770304 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069200395 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076384375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067099352 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086901836 seconds)
  done (took 3.404630704 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07758608 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10215033 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076556611 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087888779 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089175594 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06482344 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073443693 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088668252 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122172053 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064593117 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069109637 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064787343 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07215468 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06467552 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075671108 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103659817 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107127232 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067934336 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094869878 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06474857 seconds)
  done (took 3.173143944 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072214548 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068671655 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065256181 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068304944 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07698908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072477466 seconds)
  done (took 1.966399927 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067303011 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066495583 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066289424 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06610945 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.0703014 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066586471 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06548307 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066683249 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066704592 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066100312 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065688938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065104386 seconds)
  done (took 2.33696768 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194149581 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068010353 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067731635 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065485321 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070321508 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065841504 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079243167 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067255417 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08944651 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065320228 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066007716 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067663658 seconds)
  done (took 2.507254295 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204145196 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075162464 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234471551 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136010783 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111370185 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114091441 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102889125 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112533704 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142436288 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10066123 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166395074 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163619248 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106028391 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135809784 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088150526 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096408866 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154491832 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160742041 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102592057 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163832351 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142487042 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123133756 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145322736 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100072595 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10494517 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121093908 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070423629 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079256758 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169020807 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12995728 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144910937 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109680665 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092731928 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174721293 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170101445 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140528191 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132163497 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0827664 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100880259 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130748016 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19497734 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086735454 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160244291 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24496637 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080755692 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132982516 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119211301 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11936701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106574052 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089729213 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145797792 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182144357 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138529162 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08685582 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111062452 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114412944 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115073689 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103261389 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181437773 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159331497 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132003654 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070593085 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098238468 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153687475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130858748 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108001575 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125224885 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092548305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131868396 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152979218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118320894 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142736573 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12834096 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087594756 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117732349 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138411743 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12726083 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16836867 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123328256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071641001 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123880624 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102631016 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080395039 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139826172 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074398957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17222458 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096806371 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104499414 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111379745 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106991829 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106710379 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159511573 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141156741 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242657139 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065211436 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10330647 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120375997 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146604988 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086266596 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108030439 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11517473 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077566517 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138790862 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07490363 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122442688 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074361916 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124596277 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131532646 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075374132 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120833961 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100402351 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100358862 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133186509 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15819116 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088406315 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08196043 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16524866 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120974543 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103016139 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142920533 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154727412 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098141133 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101784914 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148438077 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178478056 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087933037 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160975617 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106310144 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082693113 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086543734 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122977431 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111092285 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120820179 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08116328 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117457368 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166901959 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07421717 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094071371 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132047497 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077380495 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079767876 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101518232 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098762796 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093402627 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098860395 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102724256 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13513575 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121086887 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102803045 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26849997 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098020806 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169118223 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088140752 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098842872 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10217003 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068628156 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136465639 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156652807 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079192709 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164295163 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122813315 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104416357 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119249376 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08236465 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139267661 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077730744 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069602507 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143426082 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109705619 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109284853 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15015641 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102666522 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125925825 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118764967 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13453114 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130670859 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128404487 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104620089 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087636799 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110632273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125034562 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072067585 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090682333 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079025578 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102680088 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094513072 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08220497 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1414748 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123585106 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098978948 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11022339 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096345719 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145611803 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075651857 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128231023 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117877467 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092847671 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149971756 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150143453 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129297523 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097149683 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14235909 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069069471 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072813998 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087279727 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266239218 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083219133 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084356121 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118659162 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146003109 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127957111 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137690071 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111006769 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121251675 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153781229 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06855316 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115012038 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147475258 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120007591 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103927025 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089651791 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098293897 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141958801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107936966 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181749385 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112657154 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125111948 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152236869 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098113194 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079158407 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102395259 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13437434 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10456448 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143653202 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098594657 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087435586 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108589675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073958016 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098856739 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126058869 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118864329 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133998797 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113971093 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131950901 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076234421 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116423395 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119310454 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121586536 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063046645 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117921891 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159257386 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092356585 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117059711 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150511991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078031266 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122420392 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318854132 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145051885 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083982045 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109077703 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117894373 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126508345 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119667629 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139708241 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10829332 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133240585 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107798418 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.0843088 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087208955 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097690976 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104472752 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093418203 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107827571 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11513319 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094302746 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131376769 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102440914 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108502988 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118053771 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096187532 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089142922 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095383108 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172961115 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118746348 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171119847 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097312937 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144212559 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16256358 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073856711 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077750004 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077169226 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138054828 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083661394 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129628332 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09712222 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1053531 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12289655 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140581781 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094078029 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068176673 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107621695 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133415387 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111131785 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097492731 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103091849 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160152522 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098981734 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078895894 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111741919 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103486741 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101094112 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16803909 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060002073 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240555823 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075438717 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080641738 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128087513 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152796506 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080879755 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101785954 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118432306 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109710133 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126710123 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101556642 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098777714 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114176309 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149767188 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128618179 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089082027 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11180989 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127936541 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155881567 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1048883 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094658367 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170822259 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149680311 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158798238 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088443988 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113769517 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112844513 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108553071 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141558679 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082352428 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162268658 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082419727 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135024979 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103369052 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089390522 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1288842 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097720008 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104264368 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146917554 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116452306 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081775069 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076888016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116794054 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118953037 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104801541 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074454222 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136669518 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071962499 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130000414 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16537346 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079773154 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102566354 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2392232 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079420887 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107924747 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103275425 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089107856 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098200164 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172345169 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087784257 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149694886 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141333318 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112623608 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136665893 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09950946 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634813926 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077845272 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150142013 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116473308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172746416 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096950379 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116865669 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10832063 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123986569 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143170254 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104252543 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175184656 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131771419 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115389923 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078805002 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101565857 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102011162 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088227516 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104501911 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112605994 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115102138 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092864227 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114664736 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12244788 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081241862 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094620295 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154712959 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116032583 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143098815 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139224478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084347693 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117238332 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137102765 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078592803 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120490964 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149535358 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104278594 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096371573 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079239726 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245006205 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170596433 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072761651 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161600137 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119001404 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107863633 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113018826 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112945936 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130600973 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108713244 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120915912 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093479041 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110104628 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112765066 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081348233 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076212622 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103707193 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112461743 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09682962 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098330898 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097089527 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150180018 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07091578 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095417443 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102717477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144547612 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174128715 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086976385 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08218358 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118170213 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112528512 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112292338 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119808976 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078840515 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082092035 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081152249 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076415986 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107256198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111386097 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103395827 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1100433 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163310726 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082010968 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220779491 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094194205 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103536187 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068755976 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078159636 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094532375 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096412926 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107554377 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099457585 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16723185 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092896015 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088156501 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090590952 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071696131 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081085916 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125488609 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255666644 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118150576 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096662033 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061756782 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109238942 seconds)
  done (took 58.393599472 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107726495 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081331621 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095796801 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148648789 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121501032 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211520579 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156234761 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19909073 seconds)
  done (took 2.768733092 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067880554 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093386061 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099085381 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081868919 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066049774 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067594351 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223901918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079217643 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06556444 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087556758 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078058618 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068064644 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414996233 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065454415 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066614721 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061179813 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067153698 seconds)
  done (took 3.39429633 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363222567 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599847227 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371629516 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072670915 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.422137203 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090884697 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.039768572 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129142215 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072242305 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535836506 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705248342 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12300335 seconds)
  done (took 18.176045329 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075448561 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069450641 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083322741 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083964228 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072037363 seconds)
  done (took 2.097215899 seconds)
done (took 106.731490907 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079610914 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377656079 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053905717 seconds)
  done (took 2.107162115 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082410166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085355395 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084694012 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083407774 seconds)
  done (took 1.990346291 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075343823 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076375428 seconds)
  done (took 1.798815122 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224170892 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158672102 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086830908 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082175039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079059179 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078974429 seconds)
  done (took 1.895375806 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072219159 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075419059 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072845676 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076606848 seconds)
  done (took 1.947185934 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076547002 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052808817 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055079371 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055865416 seconds)
  done (took 1.89198872 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086450221 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079023855 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077758563 seconds)
  done (took 1.895733668 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101475261 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085415024 seconds)
  done (took 1.839478293 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082112926 seconds)
  done (took 1.734834659 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099406584 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113728704 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130319284 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110188871 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138876787 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108953267 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08565841 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086620427 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076961872 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087476849 seconds)
  done (took 2.690439228 seconds)
done (took 21.987100491 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079221019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367251245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360658213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089776314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.680227129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357018051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021830131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092223016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113204403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067482282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08405915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.662968774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969415378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325398135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963348059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32422109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650430235 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068217209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067628215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068127226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.008937098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067327374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067727445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068163548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649527099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371327613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06814963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324598918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067849625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069422971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355918444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068317023 seconds)
  done (took 16.238820106 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071396717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118199896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073657177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08398284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070867042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069868783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071545694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069244834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119365656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067760274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084905784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067556814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07216338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068407447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087048012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068413037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068575661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068859541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068213398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068669007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086361091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067876094 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068736659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068781075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068366331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08026161 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068762747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06845308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068673506 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070416933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07153044 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069003378 seconds)
  done (took 4.060529014 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115062836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124746394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074833357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102944419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112722817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070496393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143299994 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092665775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127239886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06807181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084581994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068332168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101091737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06868267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087669742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068611165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069521275 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068873455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068678235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068558572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087104228 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068400678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068672225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069020536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068972441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081713079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069008103 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068986473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068881132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070887365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071743402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069350242 seconds)
  done (took 4.316241406 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07278139 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075657879 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082744577 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084323118 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069460966 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071926108 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073253144 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06999035 seconds)
  done (took 2.268068216 seconds)
done (took 28.541156207 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079091908 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069620664 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072762184 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081553479 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073601534 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078698452 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067504816 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074346863 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072080839 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073312802 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074823839 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06744852 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071231685 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067253441 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074026664 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067751846 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080144263 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071649892 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079003359 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07961738 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070017114 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073305814 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074834152 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079103995 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079221536 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07923801 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077752886 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072821879 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069383599 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070472077 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076694201 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083509493 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068402272 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079483546 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067835778 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067900901 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071392489 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067789128 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079176147 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077250245 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069914841 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076252604 seconds)
  done (took 4.753660695 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087170072 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090961177 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084474936 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061786373 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066373252 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064685955 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088102449 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059528889 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059424757 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087610795 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056015681 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059746276 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06251711 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054382235 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059383461 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057006561 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061448852 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056035167 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059598731 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05946965 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088178252 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054307784 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076992912 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062471715 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059017446 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061823509 seconds)
  done (took 3.413699719 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075404153 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084354438 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088331323 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126449325 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103656773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076539035 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079757173 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092737018 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085330463 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066876134 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070939451 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093489845 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088122601 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073347304 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067395831 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084043437 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081835647 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068736663 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073231792 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091771949 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085157339 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084695208 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092338203 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080562806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066808076 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069813044 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071067144 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081380887 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072242097 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076336583 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071434274 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070949345 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069107384 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07893738 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071686138 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069037556 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090611525 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076762735 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07814962 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068309859 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070858515 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068458275 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091638555 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126691378 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067096297 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074139319 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074998459 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076567845 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067836907 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086171057 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078758992 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067701171 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070882307 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067166007 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067672274 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080629607 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069741087 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070061023 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076684698 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071041355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090136762 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071776986 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083335174 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067585719 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075289757 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067195517 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068650358 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066807307 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093099922 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069516466 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108470362 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068845734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068530317 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07662165 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075336025 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073607915 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067937712 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08282867 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077922137 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071265705 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075953161 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071220429 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070583815 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.0883911 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070037556 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069214017 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068676626 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073756957 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070197032 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069041626 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080655243 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067867241 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070373692 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084171877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067195221 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06887856 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073925427 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072427201 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06698218 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078464638 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072414534 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068170206 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076733947 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067575498 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070239241 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079500259 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073799947 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066576214 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072180958 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073806485 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067879442 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068732686 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069952095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069000945 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075873122 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073558487 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071638819 seconds)
  done (took 10.600622935 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16105617 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153687723 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071179437 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145907772 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076689222 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079999489 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147571596 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094645977 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068038948 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068762595 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069336269 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112344441 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10603769 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115753643 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079054198 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067776167 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083882508 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11446518 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149773394 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143226947 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083872291 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077025543 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07058865 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069124652 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070620354 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078764782 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086195842 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07664461 seconds)
  done (took 4.428484458 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081538172 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097244162 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074633525 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090037514 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092287521 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068005934 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070565141 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069650984 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080333268 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079090859 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067630378 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07316513 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074451399 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071171951 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069129062 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074565773 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074895134 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06926461 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071008584 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072912961 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077528441 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091657615 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072192583 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067240139 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073604674 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067521692 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064857115 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085186032 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068154281 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091454229 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065863676 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075884169 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081486606 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068731203 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067615619 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067478235 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067556181 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067833521 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069289454 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066367737 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066329493 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057550875 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066848468 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079810119 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073988552 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056828549 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072817079 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073261284 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072532695 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065496819 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071032358 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070383913 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071177215 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074539257 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072850437 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072888918 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06880012 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.0737969 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075664429 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067398228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064647678 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066226401 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071972532 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065842854 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075388169 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072126601 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066138589 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067139717 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069140283 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073594045 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067370754 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070648875 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06531824 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069351722 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072041602 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069337511 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068586047 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066090256 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067122608 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067987543 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055516055 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067371148 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053487177 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070165605 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065824337 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0660391 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067477891 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072235299 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079292569 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069073483 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073288402 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068391309 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066810114 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070397047 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060251391 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070060938 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082534893 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082704903 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06769698 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065702776 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08151179 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072114769 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066558783 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056104742 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074686267 seconds)
  done (took 9.184943699 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089300244 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070500366 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083537538 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091890989 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086751665 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075240884 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076955018 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069406738 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082781152 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073694342 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077022178 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068738337 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077606305 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077277488 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070241156 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077106627 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072216256 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083128997 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08265412 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06838544 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075954359 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079961255 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089338266 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080423868 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078620213 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080122935 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089262715 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072289304 seconds)
  done (took 3.913981927 seconds)
done (took 37.954775739 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.746230268 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.926317999 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.747093689 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.097194964 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.828027255 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.926132733 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.812751237 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.741236265 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.887590548 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.78034616 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.010409725 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.762203523 seconds)
done (took 64.956330824 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.806153637 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.880851959 seconds)
    (2/2) benchmarking "String"...
    done (took 2.011562486 seconds)
  done (took 5.577439621 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.089288928 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.342704159 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.976191033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.741292389 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.748674785 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.976901843 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.550091636 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.279169468 seconds)
  done (took 30.30129034 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.854182549 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972952652 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.424595462 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.459252082 seconds)
  done (took 15.443258162 seconds)
done (took 62.99212656 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.736729024 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.754286063 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.746756286 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.727896163 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.802254659 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.763528991 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.024973633 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.971161115 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.742396632 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.735417291 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.745978005 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.1758995 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.744904383 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.092898059 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.74456205 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.742922205 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.764985798 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.217214097 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.901886338 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.753851241 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.763444152 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.749462752 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.750004191 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.865198982 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.798751913 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.742157801 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179870367 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.758006846 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.358488436 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.748102009 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773768045 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.216060003 seconds)
  done (took 204.280718345 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.744069452 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.933678842 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.983556948 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.762755922 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.401606916 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.924769923 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.837123268 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.424984704 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.745265686 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.770480224 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.871296228 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744632764 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.87959271 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.680251289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.772720251 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.743096678 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.983775906 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.88365944 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.776138726 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.909882126 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.769817204 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.703101226 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.670128607 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.854701012 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.771969456 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.7443639 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.75403497 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.772138318 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.938281187 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.961158886 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.749692262 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.786500332 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952350728 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.616371497 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.755180768 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.765374362 seconds)
  done (took 169.026148586 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.125377357 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.745665415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.745107988 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745062411 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.750213912 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.744864241 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865864753 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871123803 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.197606345 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.795505119 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.747575124 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795867459 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.745488883 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576691085 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.745550287 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812843133 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.758979529 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.745223564 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.761669096 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.773255104 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745933899 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.747646292 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869835412 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.758337068 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.067367087 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753966653 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.7463409 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752069812 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.115005099 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74603834 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752264179 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.99117169 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.747584031 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746855688 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642017715 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.633398547 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.830238721 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748237693 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752334728 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.748062996 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.967656921 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748558015 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.748484572 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.749673738 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924015105 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.746761493 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.871544455 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747408224 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.245975058 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.748142055 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.747203997 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.496449285 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.43599797 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.750732278 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.747868775 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.749359673 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.748105998 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747840264 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.753504617 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.419197713 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.963762511 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.750622529 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.750453482 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761095956 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.74818735 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.882803482 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748251578 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.873669557 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.807576372 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.858170659 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.88282927 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.749240319 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.748619764 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816394874 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84391032 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.749610575 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.748168066 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748421784 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.749363306 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.830268728 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.749791323 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.896570455 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757070439 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.750702562 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.801215551 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.818777423 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.749418661 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65181148 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.751936814 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.749344084 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06581637 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.816521335 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.749469469 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.749067127 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748633894 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.878255293 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.873727544 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536498618 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.752626947 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.498680817 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.751418957 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.890201785 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751875932 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.953827582 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.751882162 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832617582 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755093166 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.751043793 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.751762666 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.749994706 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.781389905 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.750541382 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.809244728 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.750631371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.120615615 seconds)
  done (took 399.125992537 seconds)
done (took 776.304737911 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.4203616 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.38488612 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.495353086 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.408748475 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.378871244 seconds)
  done (took 13.781481489 seconds)
done (took 15.47837321 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841086912 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.843205882 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.775429327 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.839157433 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771827993 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.840469724 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822486177 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.777797323 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.808823819 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.776549818 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.809295891 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.777792482 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764919368 seconds)
  done (took 25.143198757 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.992262242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982318167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823771773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.984261891 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798985226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.981903829 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914464139 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903403778 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.903074175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767989412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.766361933 seconds)
  done (took 22.514953102 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984299154 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.989154894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830779566 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.995422745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.803470792 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.984134277 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931266843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903557973 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907596806 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767974611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765616241 seconds)
  done (took 22.558547983 seconds)
done (took 71.914204162 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.760544248 seconds)
  done (took 3.456410254 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.784107369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.922399412 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767251688 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.765032742 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.761204967 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.763343482 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.765882784 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.76178558 seconds)
  done (took 15.987107496 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.758281537 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.760693206 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.761181517 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.757434444 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.760793885 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.761940214 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.758838998 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.759697498 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.76117872 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.758908494 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.761147486 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.760992751 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.761783297 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.759487179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.758798565 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.759129878 seconds)
  done (took 29.857433413 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.760556327 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.758300298 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.759816172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.760827618 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.758737956 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.759757151 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.75985911 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.759516606 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.758245103 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.759246793 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.760515493 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.759243243 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.760783664 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.759609726 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.76061647 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.760959122 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.759460598 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.759732221 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.764728829 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.760226616 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.759774101 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.760086176 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.760850502 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.761587692 seconds)
  done (took 43.942667312 seconds)
done (took 94.942915095 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.646363076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.150266117 seconds)
  done (took 8.494684917 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.764402091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.763232611 seconds)
  done (took 5.263342405 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.763218943 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.762668564 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.76437687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.763351624 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.762372011 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.763641286 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.763624668 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.763037402 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.763835845 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.763393007 seconds)
  done (took 19.331629378 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.763435001 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.762857217 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.760715336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.763568174 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.764110406 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.761146256 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.764375085 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.763342303 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.764156154 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.761393997 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.764430665 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.762633282 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.764006353 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.762022251 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.765583715 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.762280827 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.762379632 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.762748678 seconds)
  done (took 33.434630269 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.764344216 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.764902363 seconds)
  done (took 5.230705578 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.761452995 seconds)
    (2/7) benchmarking "second"...
    done (took 1.763166716 seconds)
    (3/7) benchmarking "month"...
    done (took 1.762466517 seconds)
    (4/7) benchmarking "year"...
    done (took 1.762763049 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.762443602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.761448257 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.762515969 seconds)
  done (took 14.03839014 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.76555969 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.944392132 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.012482631 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.419794077 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.766304246 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.768430729 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.694534899 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.769542222 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.769485757 seconds)
  done (took 19.611245226 seconds)
done (took 107.105837623 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.575051069 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.760006606 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.117044386 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.80749469 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.813018457 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.100379483 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.794144003 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.99077902 seconds)
done (took 42.662195797 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.829638963 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.295032521 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.329888129 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.158477634 seconds)
  done (took 12.48494552 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.753398765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.28050512 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799613109 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.358438773 seconds)
  done (took 19.915816445 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.129233392 seconds)
    (2/2) benchmarking "read"...
    done (took 2.116646345 seconds)
  done (took 5.952540724 seconds)
done (took 46.888961847 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767056571 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.763198007 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765530447 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.763780304 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.765863441 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.765011928 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.764598622 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.766299155 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.767300843 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.766870439 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.767715267 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.767087815 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767142549 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.765285579 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764229119 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764699409 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768529841 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.7649448 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765372997 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.76595855 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764987512 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767656072 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.765821483 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.765382961 seconds)
  done (took 44.083246698 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.76780558 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.764928158 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.767297376 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.767548122 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.765472545 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.769167409 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.768330495 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.766457146 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.76875866 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.76842316 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765589107 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.765239837 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.768904451 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.766476527 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770088652 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.766329254 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.769589148 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767136368 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770408823 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.766204098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.770040702 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767040517 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.766397828 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769997449 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.76696759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769096256 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.769700312 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.766446888 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769456846 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.766899581 seconds)
  done (took 54.737089002 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.776014068 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.777056736 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.77019641 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.769311294 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.768847247 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.768947388 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.770078991 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.769233617 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.770148711 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.770097367 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.769347912 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.769954876 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.770124056 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.770360571 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.770647238 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.770924297 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.770952667 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.771995792 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.769853983 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.77095587 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.770866083 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.770395325 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.769523431 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.771791394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.771112652 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.770433194 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.770433864 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770809872 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.771178711 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.770071208 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.770662286 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.77056485 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.770830678 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.772100688 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.771941675 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.771390562 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.776065675 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.779596788 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.771436109 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.772432794 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.772005995 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.772180816 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.77217762 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.771473479 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.771819056 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.773180246 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.771625154 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.77166343 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.771055893 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.771309153 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.771553364 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.771717423 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.772562854 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.772519952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.772016146 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.772439397 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.772669942 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.772083525 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.771826212 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.773094158 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.773409406 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.772709563 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.773068986 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.772738161 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.773526033 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.772695303 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.772885016 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.772245454 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.772670236 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.773298548 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.773927639 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773889283 seconds)
  done (took 129.274706225 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.773816942 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.771388477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.770219317 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.770536449 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771048442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.772444057 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.772215424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774049152 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770387723 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774074904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773510822 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771904179 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771827457 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773963809 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773273921 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.770366575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.773509463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772332644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.774427967 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774925984 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774524283 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770987534 seconds)
  done (took 40.704603442 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776319923 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774589398 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.772002164 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.774748746 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771710444 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775148639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.775528812 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77547748 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776741808 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772338972 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772954865 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776167728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773414404 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772540576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772820944 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772320532 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77610663 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773362386 seconds)
  done (took 33.644599862 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.772130272 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.772768258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.774493466 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.772093289 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.774208369 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775920636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773559821 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.775735268 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.775522419 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.77446456 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.775499847 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776140616 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.775350552 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773865225 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775747026 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774502882 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.776853716 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77314368 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77653343 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773617864 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774933913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775874287 seconds)
  done (took 40.753630899 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777993534 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.776683394 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.774939766 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.776305526 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.774173156 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.776235639 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.77668848 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.774596309 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.776899203 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.778319087 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775118361 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.776278243 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.773536893 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.775229956 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.776847889 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776369178 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777856896 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776763866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779604008 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.774254492 seconds)
  done (took 37.236642234 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777169134 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77910184 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778801501 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778323056 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778175359 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.779254349 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778934082 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778369129 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777025783 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.77785531 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780661065 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.777017462 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777710745 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.779369551 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777681614 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778738127 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779739199 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778290442 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779903983 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779319473 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.779449448 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778659727 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779500798 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.778642422 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779017966 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77928952 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777926539 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780121792 seconds)
  done (took 51.519459274 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779142544 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.779145161 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.776217997 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.77607777 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.778311627 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.776548718 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.776706783 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.77680647 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779502458 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777896183 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.779140911 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.780014463 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779103872 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.780122042 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778967688 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.779184041 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77992532 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.778367204 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777755766 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776808441 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.779963409 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781689646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.780560794 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777013638 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777426639 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.779875648 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77835667 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.778324876 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779725216 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777944234 seconds)
  done (took 55.07156924 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.798704021 seconds)
    (2/2) benchmarking "in"...
    done (took 1.799602847 seconds)
  done (took 5.313355451 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.778783283 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782305483 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781528714 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.779363029 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.779600089 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.780773271 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780463535 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779273596 seconds)
  done (took 15.957954358 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.781845978 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.782122581 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.781526913 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.781736381 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.781597834 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.781429073 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788598125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.781661554 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.782858157 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.782606143 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.789726898 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.790957847 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.783566667 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.781462007 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.782046983 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783547806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.781411826 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.782805413 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.782077407 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.781794274 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782370578 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784240586 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783609966 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.779706923 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.783980778 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.793025527 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.786272651 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.782011216 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783300851 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.786339989 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.781662682 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.779710326 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.784243815 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.782979678 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.784599655 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.782917526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791570404 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78360896 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.788582536 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783854316 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784315346 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.780428718 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.784598914 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.785394148 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784502379 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.784201451 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.783350996 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.782040926 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.784445537 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.787817068 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.789889124 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784654729 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.780507642 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787021476 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.785356656 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789041645 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.785130701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.78781674 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.793516175 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.794713909 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.798140425 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.791302848 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786755129 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.784333082 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794474301 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.808446678 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789928572 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.782128345 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.781635249 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.784919472 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.791170546 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798675252 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.793834227 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.786084122 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785368021 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.784321213 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785892125 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784889754 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791912634 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.78780005 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.78590134 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785229308 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795837033 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809621538 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.78587923 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.78669214 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.785556231 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.786327252 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.787256827 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795531765 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.786329069 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.785503688 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.785575871 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.786684216 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.787180282 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.78701263 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.7859804 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786812076 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.782767498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.787360723 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786297131 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791146186 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.79502826 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785973225 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787482875 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.791891465 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.785595913 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786654705 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.791830174 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.786371026 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786624413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.787767899 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.79383534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.784960778 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789996772 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.795890993 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.787619206 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.788089784 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.787804995 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.787535681 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797355368 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.814283513 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.787998339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.788243027 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.793098212 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.800413936 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787426601 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.790355796 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.788129632 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.786461301 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.785560207 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.788574011 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.788342733 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.789130276 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.788552192 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790055332 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.785717644 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.787702099 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.788221049 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.788834232 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.793008407 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.790542828 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.79226651 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.787485441 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783550991 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.785149098 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.79170887 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784751931 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.786034355 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.785507459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.78264331 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78615752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.785685206 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.78550063 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.786026275 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78604912 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.785561929 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.78689553 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785719279 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.785973927 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785672766 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.786222419 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790534674 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.786148111 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.788617848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.785492705 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.783431797 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.785450052 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.78778816 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.785608908 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.786635589 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.783986868 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.789999171 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.794939174 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786855185 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.786455382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.788750373 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787306263 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786185421 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787124374 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.790085567 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.79505781 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.786752974 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.792738699 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.785459163 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787044657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.787051339 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786901238 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.787123407 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786803266 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.789788309 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.794249433 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799272471 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796661854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.789150289 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.791868607 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788528629 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.791553922 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.791442634 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.787938577 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.788834069 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.788002085 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787815515 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788052633 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788073782 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.789005516 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.787663275 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.789071308 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.789958312 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.788729827 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788096913 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789165477 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788923988 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.785145979 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789368468 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787567291 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.787724138 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.785260304 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.789253633 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.788152015 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788542336 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.788870421 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.794806267 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.785051571 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790598861 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789092369 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.787339265 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.788445461 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.788769917 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791200067 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.790326354 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796817911 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.79312247 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.790007095 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794698092 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790130577 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.788463216 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.791478092 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.789445092 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.78520322 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.791861374 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.798753829 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.790483815 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.789377154 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.789637483 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789159306 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790932132 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.795828739 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.787273361 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.79032504 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.790086363 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.79228916 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.789175228 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.791554591 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790362446 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.792038662 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792263006 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791730098 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.791606195 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790205044 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.790315373 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.791222745 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.790932084 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795988082 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.799329128 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.796630816 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.792641675 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.793046149 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.793268639 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.795762954 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.792538593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.791127567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.790656044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804576086 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.801997775 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798128209 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.793112497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.790702896 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796934998 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.792830472 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.796395153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792851887 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792670355 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.792067995 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.790635903 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.790942069 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793746778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.793519511 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794741652 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.79482582 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.797410512 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.794829722 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.793142491 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.794560133 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.793781994 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.794744739 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.794450929 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.795680404 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.794764058 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79464354 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.792478565 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793060308 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80050506 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792785013 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.793565225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.792315617 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.794551804 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.792817574 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.795325811 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.792719126 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.797327219 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.801747297 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.797120064 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804878154 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795614523 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803132061 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.794210595 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.798284396 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.802635837 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.793600326 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793604987 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.794497759 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.794290034 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802139041 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.795313005 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.795311305 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.798356908 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795108697 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.794756804 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.795430145 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.795266216 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794123863 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.795079449 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802373851 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.796164543 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.799118724 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798072709 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.791763486 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.795414986 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.794999592 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.793055695 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798845218 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.795408397 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.795449732 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.79526476 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.795248452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.794476969 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.796084507 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.796248337 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793311291 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.795644102 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801530748 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.797679886 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799988526 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.796078368 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803545638 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796390802 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801855695 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.797436626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796457217 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.795683635 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79510674 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.797801149 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.796884485 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.796901752 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.796384464 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.797367081 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.800622805 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.797092909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.79997153 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.796877292 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.79695971 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.797207814 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806679016 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822370213 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.798737852 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800731381 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.794517122 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.79926514 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.801860753 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.797824007 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795780177 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.799767835 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809610314 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806088422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.798068128 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.797686488 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79860755 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798625335 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.797181582 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.797785342 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.797838033 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.798458277 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.799367403 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.797686239 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802106129 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.798750832 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797925584 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798666226 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.800658158 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.808174728 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.797936937 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.800585556 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798187595 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.798927898 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.80078716 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798640685 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.798668366 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800427326 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797507179 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.800771831 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806384055 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.807056799 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.802259349 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.798976372 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.798931847 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.798979589 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.798853671 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800397833 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.800505375 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800167417 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.800324045 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.799488333 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.799694414 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.799303986 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.799845401 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.800544418 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800164056 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803839339 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.807537673 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802111453 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.797916723 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.800921598 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799689129 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.799816142 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.802454137 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.808663665 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804757072 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.811320878 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.810198166 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.806611528 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.801995704 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803710666 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.809531035 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.800391713 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.802013784 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.800138208 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.8031052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.800858135 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.804634406 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800980735 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.806281492 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.802442563 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.800753202 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809105479 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802346118 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.802815887 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.803660339 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804786279 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.80147411 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.797732241 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.801507889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.802408775 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807375792 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.803103172 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801480796 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803322904 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800361074 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.80421355 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806221044 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801690222 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.803135573 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.798587071 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802327004 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801369824 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802033715 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.800438107 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.801513987 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.801918803 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.806339594 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809880657 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.799129789 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805394787 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.803388622 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.802597949 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803773602 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803929894 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.800141789 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.800762181 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.803552336 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804477537 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.803511399 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.805411166 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803708308 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.804553102 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.805093467 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803111899 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806232443 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.814106098 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811854517 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.800135375 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.804057266 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.805351862 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.80589137 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.80444884 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.804034235 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804230874 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.805643915 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.80322812 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804727224 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.805357871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.808214111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820068731 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.804554583 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804503551 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.805383579 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807767753 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.804777273 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801621676 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.805211718 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806395614 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.808916102 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.812273348 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.804890336 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810641899 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804661054 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.80692523 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.808398318 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.809257608 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.813827885 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.808209972 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804477049 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.804906227 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.809844159 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.82168609 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805978063 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815237847 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836075997 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.806410106 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.806081136 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.806610545 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805063918 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.806380514 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.80921095 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.807387431 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.806887267 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805680702 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.808048834 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.807558115 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812483741 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.808063329 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.805996529 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.807385136 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807614123 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.808447619 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.804676325 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.806407702 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.807082229 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.806839896 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.806590872 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.806244048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.806775078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819842505 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.816241924 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.807539111 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806784522 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.803695809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.810081333 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.811196712 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81869128 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.815886699 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.806792342 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.806926961 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.808369022 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807692939 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.803971403 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.808244213 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.807127414 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808532947 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.804880745 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.821834377 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816751527 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.812597929 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.808430174 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807179807 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.808394568 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809287532 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807499246 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808813973 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.810394895 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.810068031 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811636927 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.808505675 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807885302 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.812113034 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.816762997 seconds)
  done (took 1072.070470672 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805689196 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80557093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805678583 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.806505668 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806132154 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807618054 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80677052 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806854949 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807220715 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806978088 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807075323 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807224326 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808454004 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808034055 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807364159 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807537763 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806915558 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807458439 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807516974 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806770569 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8079367 seconds)
  done (took 39.69171064 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809711158 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.807393917 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807604559 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809611182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807444867 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.809479487 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.808001433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810997056 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.80973144 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808110783 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.811313209 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810365122 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.807408692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.808145001 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807263983 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809665358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810626538 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808148581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.810412268 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809886846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811148445 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.80878238 seconds)
  done (took 41.546155561 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.812741233 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.811721404 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810236932 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.809424505 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.812190199 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.808700714 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.812136101 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.811278122 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.81231 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811716967 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.811476109 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813395751 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.820168566 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.816873969 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.813921456 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.813325582 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.956985511 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.812059328 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.811815903 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.811864798 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.809844452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.817900037 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.809912949 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.810794887 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.811258748 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.812454699 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.812829288 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.811633403 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.812436958 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.814419051 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.817048006 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.811495676 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.814093071 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.815116058 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.812957929 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.814101477 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.819678314 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.816008544 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.813444468 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.815826929 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.82690994 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.838692836 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.816016803 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.820629536 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.813383041 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.813491442 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.817330923 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.821297001 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.810664301 seconds)
  done (took 90.792439496 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.813888761 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.814413145 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.811046118 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815749392 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.81592539 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813720895 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.813993127 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.813818252 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810570849 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811276276 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.815715336 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.811836064 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811725114 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.815993805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.815182466 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811427453 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.811841727 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812063641 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.812689257 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812607426 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.813277245 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.815437665 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.815387682 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.813074554 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813534213 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.813297756 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.812659766 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.815277244 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.812195379 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.812828466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815365455 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815286453 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.814821838 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.813303294 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813300743 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.815594871 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.816859646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.813210336 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815463191 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.812842882 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816376731 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.815736108 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.815885738 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.816555424 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813107554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.813036631 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814237721 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.813775086 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.813502184 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.816654073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815957257 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.813755019 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81671502 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.814527217 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81589116 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.816077024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.813400744 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.813657733 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.81520778 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.815291888 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.815238515 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817402429 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.815683607 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.816830282 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.816104017 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.815598056 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.816903992 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.818130363 seconds)
  done (took 125.130603308 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818368794 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.817537361 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818186195 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818310713 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817330915 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.817094081 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818639936 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.818904155 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.818147852 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818372181 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818657452 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818914196 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.818681093 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819580309 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818415882 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818710548 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818797271 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818647305 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818739652 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818372326 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.818064888 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818959149 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818450986 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.818697251 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819071611 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.818991778 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819063589 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.82018574 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819510952 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819323186 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82103174 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.818915436 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819639944 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.820163468 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.821182386 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.819649408 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820391625 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819435515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.819673796 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.818812133 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82018537 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820344888 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820586331 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819538088 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819597256 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818659787 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819762946 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.82122584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819510423 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819733962 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820148476 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819958216 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81985309 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82019059 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.820306653 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.819707265 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820032739 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.821485331 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821108406 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821458347 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821259852 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.822271757 seconds)
  done (took 114.55903882 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820531108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.820804715 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.81830637 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.818013112 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821003385 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.817632139 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820259752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.820506594 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821062706 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.82124399 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821545851 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818869485 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818597698 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820331726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818303122 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817739518 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819122038 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818106423 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821471534 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.819109928 seconds)
  done (took 38.14789221 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.818207111 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.821478164 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.819179558 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82000909 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.821245939 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.819194134 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.822182311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82090385 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819508185 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822030814 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822302951 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822965506 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819735795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819379063 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822908071 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819743752 seconds)
  done (took 30.887059154 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.818643998 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.821868409 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.82226726 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.821938495 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.819902872 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.819914069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.822847945 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.819367413 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820045892 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.823558276 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.822871468 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.8242318 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.824380817 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.824445545 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.820064302 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.823987645 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.821927838 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.820851534 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.823296681 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.824638415 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.821044976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.821451054 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823816815 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.82470317 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.821287347 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.822513714 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.822082751 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.822391953 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.820781712 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824174242 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.821142194 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.821997049 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.820745501 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.82226271 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.824448218 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.821538019 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825200541 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.825165041 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.825613603 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.824454197 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.824166986 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.821283857 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.824739758 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.824430033 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822740681 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.824832849 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.822280704 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.822751372 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.823091248 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.822604679 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.826513012 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.825640697 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.825682866 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825924273 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.82476988 seconds)
  done (took 102.018146031 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825042683 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.826092105 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.822629718 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.82505078 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825926726 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.823676293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.825861143 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.822676174 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824051481 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.826313738 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82498382 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.825684522 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823152347 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.824911119 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825736997 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82697395 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.822752299 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.826306088 seconds)
  done (took 34.607039976 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.824137555 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.824405389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.826073227 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.824264113 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.824004753 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.827577931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824876494 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.827408358 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827207093 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.825065409 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823597715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.826880338 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826466094 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.827897647 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824777198 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824500551 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.828765919 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827338376 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.826049737 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824875748 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828332873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826807202 seconds)
  done (took 41.933446801 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.827676383 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.827883141 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.844464815 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.848734647 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.849662347 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.86150258 seconds)
  done (took 12.822466396 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8262816 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8278843 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825069327 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829541077 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828821496 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825883913 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825354603 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826479613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828045667 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826829715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825391374 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828316774 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828420659 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826370713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829639603 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830569436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827227507 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826263132 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828431305 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829970168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827923853 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830713848 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826451657 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827054307 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827526731 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827189836 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830686661 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828078475 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827018934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830041275 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830725338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827456258 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830744375 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827866363 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829925761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831050104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828109289 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830160087 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830307597 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828080978 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829424487 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830122888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830784476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828307766 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830973754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828345737 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828108091 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828274237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828849276 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831661524 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83052947 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828599998 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831102946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830501297 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830478458 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83186186 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828835915 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829204745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830219721 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83064769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829171343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831770209 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828981701 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828541831 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831832153 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829874782 seconds)
  done (took 122.469931128 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829241149 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828834415 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829546087 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831261874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829688826 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83026238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830105944 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829888845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82979884 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829115693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832759794 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830458909 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830325077 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830786725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829542596 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830908281 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829541969 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83061398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82926167 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832985359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830654081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830380016 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830924371 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830121526 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830645018 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833413319 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830630689 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829825471 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830373361 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83075531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829343557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83061522 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830849705 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830114243 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830663659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83115256 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830576246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831223649 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830938105 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833159295 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830565629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834474489 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831810419 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83010444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831998484 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831701577 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831071079 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832344182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831339033 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83064746 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831334269 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831474549 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832142328 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83112572 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830878628 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832040571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831389536 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831215226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832291009 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834194052 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832277696 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832091817 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835718711 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832821562 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832235971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832601653 seconds)
  done (took 122.621267411 seconds)
done (took 2499.300545725 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.920737155 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.855100744 seconds)
  done (took 15.545609538 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.997155358 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.950260422 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.832640342 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.833900622 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.834279188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.836910624 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.854398533 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.833760452 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.833780989 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.83420902 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.833427724 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.021660133 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.830329947 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.834402748 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.833648342 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.927267081 seconds)
  done (took 51.704487939 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.836619017 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.839059583 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.850470149 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840004347 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.838077434 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849140438 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.870865101 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.841936497 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.871889224 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.852153058 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.907636546 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.849584996 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.837985732 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.886847015 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.851749669 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.853449029 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.928884458 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.91668219 seconds)
  done (took 35.293937103 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.919858211 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.849456432 seconds)
  done (took 10.547248401 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.845950545 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.835903757 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.834109348 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.861366998 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.840049303 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.843463344 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.869700607 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.856486855 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.854690461 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.887468799 seconds)
  done (took 70.318898502 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.84347517 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.840255986 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.839153075 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.838014293 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.830989558 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.83620833 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.838901234 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.836156181 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.535502764 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.87501399 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.846274365 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844964325 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.838324629 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.84198224 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.836688653 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.861325452 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.950906661 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.837649935 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.836074474 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.844119679 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839969523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.904973655 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.852518653 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.840635565 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.869097154 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.537083165 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.848107875 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.844433317 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.96672204 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.837250763 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.838688594 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.840877514 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.843195683 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.216140685 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.120056299 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.83963721 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.848615788 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.847583363 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.83705093 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.953365539 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.841315182 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.845340288 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.834783959 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.103056144 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.942984769 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884406167 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.206754087 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.844706489 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.841943334 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.870775953 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.844479023 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842275517 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.85426596 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350450977 seconds)
  done (took 131.061385795 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.835924365 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.141137573 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.989855327 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837045372 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109919542 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044085568 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.824027808 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886753213 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.83779084 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.041644091 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06127915 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94799177 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.837867171 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.833666769 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838280962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.834624456 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99838611 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907138139 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.839140042 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.8342935 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86517496 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04686125 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.968318786 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838897624 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.859062518 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.048880597 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.960563819 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.947459293 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.545810854 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.83607829 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903730198 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839116255 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.836439493 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83610208 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99555609 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937407045 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929311702 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.840103087 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835801936 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835595646 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.513649163 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03528489 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939321732 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.981987938 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087167894 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044940285 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.574999608 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.837014452 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.482762005 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001962323 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052019757 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048023272 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.964546428 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841198015 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.083923862 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836736656 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837170942 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076432288 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066104813 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94603179 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841306307 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.837077901 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836450559 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081533888 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841018137 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938334764 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842559454 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8380059 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94018682 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950308254 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.070205958 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061395896 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.874677559 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.164017821 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.359007533 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055536119 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.910028016 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076729639 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842734954 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838527992 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927130922 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.597859581 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042068025 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.08817908 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.061681686 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876098568 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.44040066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.838295708 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.035986553 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027325084 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.034867438 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081741961 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.996889683 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.369525516 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.838427394 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.839161194 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.100236906 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978558862 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.842882544 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198146383 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075116391 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.403799591 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.870694329 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138057479 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976563277 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.189366447 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.467834337 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840728089 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008320316 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.881254211 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.842598136 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839996522 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.0334014 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.647990168 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840455534 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.370880554 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.905293364 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.8440117 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045651836 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84456195 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051518986 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845020206 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078408211 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.425147144 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877321016 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.016377471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.084351346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.659064356 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093287521 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088808145 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963062021 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.066224691 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.382909847 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841061752 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118270499 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845353092 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.841341882 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009397369 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842692347 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991494925 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.845110197 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071863969 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869802874 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000184692 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844643081 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.077703783 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.880773197 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896273771 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845057677 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969675252 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844689062 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.734025711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.999873274 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848347078 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84695482 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.296360644 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.846382623 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993621823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.075170027 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86913837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914177762 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.371072556 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843946588 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933744444 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872229382 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.581499716 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.843473157 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.062436062 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.841339994 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.288172889 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.843038931 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.08555149 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.029355032 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845441721 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846188337 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.586249705 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.571255158 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844482472 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.00491487 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.055255023 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.516311386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050111195 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850192645 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974511084 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.849091739 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.184340473 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.191878015 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843843791 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.844896392 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.844028977 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845385024 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.846663242 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057901723 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.877563105 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.361418809 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.982740396 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063815757 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.154591851 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.065582592 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893326187 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.849359518 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.096666561 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.84791777 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.912619094 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.849581478 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869903851 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079816787 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850370131 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078221769 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102050832 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.806192218 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898246001 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.849575074 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847264542 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.845756694 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00252272 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94360724 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.849769171 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.84735649 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959935746 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977944191 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.042363246 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.461354423 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.911996846 seconds)
  done (took 894.826835776 seconds)
done (took 1211.070977013 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.846463253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850114274 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.836045526 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.850787259 seconds)
  done (took 29.170446053 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.86014567 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.856200761 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.858297277 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.856510025 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.858119229 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.856172163 seconds)
  done (took 12.936258524 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.063035164 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851928518 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.852602067 seconds)
  done (took 21.557342931 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.924476636 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.272696058 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.969173663 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.309596964 seconds)
  done (took 10.267471127 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.858780067 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858493472 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.859601198 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.859783665 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861831392 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.862281839 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.859184582 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.860185137 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.862260622 seconds)
  done (took 18.532554958 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.235480789 seconds)
done (took 98.490232143 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.857016125 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.853770048 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.310331636 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.132864583 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.015266044 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.86662189 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.869116163 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.852404261 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.632371728 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.861325929 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.357178751 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.886589486 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.976979381 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.192447321 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.880421483 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.915512267 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.852408277 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.513330034 seconds)
    (19/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.078393283 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.181931212 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.855895479 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.158633095 seconds)
    (23/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.995194146 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.921687067 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198687896 seconds)
    (26/309) benchmarking ("sort", Int8, false)...
    done (took 4.821179181 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.246186787 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.951002408 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.936616933 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.882929347 seconds)
    (31/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.935058119 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.853264329 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.003976992 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.859122094 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.959871559 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.153552703 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.885916655 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.141576395 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.144477765 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.063562854 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.353978096 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042884049 seconds)
    (43/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.156700019 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965651685 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.83888744 seconds)
    (46/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.888986434 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.259374986 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.817693115 seconds)
    (49/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.159292038 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.155402939 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.033505197 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.109982434 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.966951831 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.025365787 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.119386721 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.237235651 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.125426093 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.157951653 seconds)
    (59/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.446041511 seconds)
    (60/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.104554943 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.294926094 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.916909293 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.840786946 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.584116873 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.104073367 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.368037453 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.663516469 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.847372614 seconds)
    (69/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.003298595 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.841221375 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.344048653 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.931809271 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.507225109 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.16399541 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.229108958 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.967676782 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880993015 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.929794252 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.840810581 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.083480061 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.01644705 seconds)
    (82/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.007650593 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.542321484 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.961651166 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.147786136 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.94405409 seconds)
    (87/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.987287054 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.559993294 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.665856638 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.777772879 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.851289143 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.969357922 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.933504798 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.207053739 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.948760501 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.859220891 seconds)
    (97/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.061796078 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.882878847 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.883140376 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 5.615565563 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.862329062 seconds)
    (102/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.877198398 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.772440286 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.77265077 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.345950938 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.063661084 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.149186016 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.077471419 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.157486261 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.849980213 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.128887984 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.20949895 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.968567171 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.863255495 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.863072471 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.458871265 seconds)
    (117/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.886435282 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.161030324 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.245937299 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.121723464 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.846912361 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.411765374 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.490225321 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.8440396 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.428008495 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.089360418 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.05562759 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.303024956 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.88440242 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.750161491 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.954302708 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.140738647 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077067526 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.250787352 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.143059625 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.763498863 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.961616488 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.971070439 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.292785969 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.069677062 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.943915139 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085402039 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.914287241 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.89220649 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.266856051 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.237723325 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.372659808 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.518706251 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.959028006 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.087317581 seconds)
    (151/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.148542755 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.889132782 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.860305656 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.214451631 seconds)
    (155/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.00915467 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.304077227 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.977320596 seconds)
    (158/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.060307275 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.455297762 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.088133326 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.506051251 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.89755892 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.886115462 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.860511758 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.942773239 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.366114305 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.933202389 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.346827992 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.12354193 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.442887326 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.813875413 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.23234565 seconds)
    (173/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.948501101 seconds)
    (174/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.946196459 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884482473 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.005829793 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.107054032 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.892768761 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.175359704 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.863980737 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123042422 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011767884 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.997042784 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.848840607 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.128933421 seconds)
    (186/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.761087068 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881424187 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.932926369 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.865066914 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.937811736 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.159614957 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.864263763 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.040148413 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.794971145 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.042619551 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.894577134 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.014946868 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.074862333 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.818765643 seconds)
    (200/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.349928188 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.911495532 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.041014033 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.987517778 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.132395204 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.578474251 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.101751672 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.801114456 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.523056127 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.845649312 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.5899056 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.037581387 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.846368211 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.367005221 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.213165591 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.847258914 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.125144029 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.063644934 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.916910349 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.462644649 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 6.859706524 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.378544736 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.996251963 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.531035623 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.472206645 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.933482342 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.622689974 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.07663199 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.85927197 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.873172683 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.940047957 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.886132906 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.058024286 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.849098552 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.580420854 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.233174803 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.004171914 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.8800354 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.884006159 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.460713775 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.045655004 seconds)
    (241/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.196623419 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.553281156 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.074983615 seconds)
    (244/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.684504342 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.907160977 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.956351863 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.238120479 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.841957438 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.925762271 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.997207224 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.8866245 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.852555767 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.108076255 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064021422 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.925382518 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.961456162 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.239627935 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.854121425 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.957542545 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.868206734 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.118147977 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.014991002 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.861268325 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204665961 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.903968268 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.948052896 seconds)
    (267/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.065731541 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.374253186 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.858512981 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.324909132 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.232927958 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.835820504 seconds)
    (273/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.889800992 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.207979617 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.36758222 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.913148479 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.935209792 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.867669792 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.553507075 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.21319372 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.028327595 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851886535 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.950971853 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.181733554 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.85233596 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.550938857 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.958342251 seconds)
    (288/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.873969025 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.815784445 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.947345412 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.857011674 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.987283793 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.157158339 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.589242188 seconds)
    (295/309) benchmarking ("sort", Float64, false)...
    done (took 5.634687567 seconds)
    (296/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.935293347 seconds)
    (297/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.697485291 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.945324638 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.926948405 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.893990343 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.013164654 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.550809988 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.886688703 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.294400483 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.987740726 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.15390769 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.89375567 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.97242274 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.94770552 seconds)
  done (took 1016.513172913 seconds)
done (took 1018.373354328 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.878393242 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872943138 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.857036355 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.879072696 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.969641684 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.891217167 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.867306141 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.859373623 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.904954889 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.90577175 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.855547537 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.888663509 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.860391958 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.856861837 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.855911266 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871267074 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.169971141 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.888570996 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.874911869 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.865895808 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.873603397 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.85514003 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.905904617 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.890561553 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.860361067 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.859002279 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.860039757 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.876622115 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.969614613 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.859745332 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.859319244 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.867869923 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.167889695 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.885271786 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.849992093 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.87678034 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.867853765 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.866236783 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.860053501 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.888955922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.314631154 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.865474662 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.858307527 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.856980957 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.858884884 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.861418983 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.858495322 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.8626334 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869949088 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870859388 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.306963897 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.878857919 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.859626832 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.856910108 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.867993582 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.856951715 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.859469429 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872802352 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.876569761 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872050089 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.157691323 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.889756064 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.857877862 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.873056976 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.865091827 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.346919702 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.859441058 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.860385899 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.311362748 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.869003901 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.345496502 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.871770423 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.857603577 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.870115155 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.887849136 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.167323365 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.879854373 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.854733929 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.863980736 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.855909738 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.869734134 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869599661 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.861930075 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.85728656 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869297316 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.890836999 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.866846301 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.856883002 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.86614205 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.87560195 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.86262069 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.868723048 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.859201852 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.85061764 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.866268725 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.859634397 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.861059758 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.859181532 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.861279776 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.86749576 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.308970878 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882332079 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.852838484 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.852719851 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.856372638 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.87073273 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.310881761 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.864490547 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877637314 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.90338883 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.8573741 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.155873382 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.889659037 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873361664 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.865209997 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.858673124 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.851493406 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.157155716 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.333145274 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.878785436 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.861199404 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.854807225 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873964542 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.85893389 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.852709247 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.168473197 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.887071989 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872130803 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.978495006 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.867676456 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.890231826 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.855612068 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.86083989 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.88941322 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873332621 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.889696997 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.86062686 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873842688 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.875614904 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.854809612 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.868358944 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.867805171 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.860253018 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.8655053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.851962176 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.892987149 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871131757 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871240279 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.880620219 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.978718652 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.854841153 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.157026556 seconds)
done (took 292.222136295 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.928611858 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.856549787 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.956972773 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.855046006 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.939628559 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.941920884 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.852688074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.85354052 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.852421412 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.234199777 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.854011524 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.853255841 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.848377341 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.852880457 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.938476192 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.856753216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.854152176 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.197987359 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.857280412 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.927034009 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.847886847 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.854066665 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.855485667 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.242243669 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.857013532 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.855587695 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.928684853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.856491106 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.206103996 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.851367652 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.852065646 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205138331 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.952314837 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.877435687 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.865768396 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.864258348 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.940857973 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.861833013 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.938340071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.940294604 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.958398507 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.896792964 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.855905684 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.853408297 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.861775797 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.859371371 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.854443598 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.885837794 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.856767969 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.855519288 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.199188122 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.867209373 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.867742174 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.855206619 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.854747386 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.878380087 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.854635984 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.859305414 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.948267974 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.860322436 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.919164966 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.243207912 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.28483647 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.858725335 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.853494415 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.857953971 seconds)
  done (took 183.55516726 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.924487926 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.932162689 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925121754 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.863807673 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.908869829 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.93039298 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.862406022 seconds)
  done (took 15.136777617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.865751415 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.859103973 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.908823186 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909708848 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.859158096 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.011156499 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861246854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.871086815 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.858339589 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.911345325 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.860372727 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861474863 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.865926076 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.860325022 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.907487548 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.87038614 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.973928199 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.8603431 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.859550283 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.010730228 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856953513 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.86644828 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.914707851 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.871079915 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.861561058 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.865550011 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.452810915 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.859833971 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.857568428 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.85982592 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856691021 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.902957385 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.860479424 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.858436124 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.858748547 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.976482307 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.860310024 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.85855174 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.859753094 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.858559266 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.860517774 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.860637846 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.861171072 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.858109565 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.860776245 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.884311282 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.861008279 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.860895979 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.861011575 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.861214906 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.911526887 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.861727534 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.858515516 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.858237769 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.917647946 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.868597647 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.861993749 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.858235271 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.861629485 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.859294728 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.012550019 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909314591 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.861062473 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909638142 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861358859 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.861618417 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.861923066 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.861250843 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.955446126 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.862430306 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.910467519 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.859495378 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.021120543 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.886519589 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.862431189 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.864676204 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.864510205 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.862710059 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.862880371 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.869646801 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.860671397 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.861941088 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.868739203 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860077185 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.859966478 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.975754451 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.971225359 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.860145495 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.875325611 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.869901804 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.860618764 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.917266062 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.863908364 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.861663452 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.917701803 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.97981377 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.920568547 seconds)
  done (took 205.010664681 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.868792396 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.872081347 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.865155946 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.878237382 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.863294544 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.862625663 seconds)
  done (took 13.004638416 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.866002729 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.863580557 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.86324798 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.86343185 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.863880461 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.86481314 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.865342644 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863997413 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.866868028 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.86474716 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.864877092 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.863748822 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.864768301 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.863384286 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.864073028 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.285023727 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.865296074 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860292596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863454242 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863641472 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.007647155 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.862790027 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863770589 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.864139013 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.868317957 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.863937008 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872160476 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.864080512 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.864445965 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.872587037 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.866841391 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.86521604 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.865157216 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.869806789 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.868150067 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.866101909 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867170947 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.865542052 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862488732 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.865352097 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.86533915 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865396077 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.865711836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.866906518 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.866853977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.869515012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.869580121 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.872737361 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.866880166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.867510053 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.866622898 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.865589981 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.864672514 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.865256161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.866324669 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871552366 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.869981326 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.867146702 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.864283539 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.867149257 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.866500395 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.866121794 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.866781738 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.868441813 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.872028623 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.866557353 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.86630323 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.869004435 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867297132 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.866139701 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.868045446 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.863694173 seconds)
  done (took 137.71934655 seconds)
done (took 556.23675209 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.187243033 seconds)
  done (took 8.984742908 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.946497714 seconds)
  done (took 8.850108983 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.443405712 seconds)
  done (took 10.240911811 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.875484401 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.879287285 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.868888636 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.866443973 seconds)
  done (took 29.298573541 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.918712585 seconds)
  done (took 8.716696752 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.87119538 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.858566124 seconds)
  done (took 15.561175585 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.92586897 seconds)
  done (took 8.724621427 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.975542043 seconds)
  done (took 8.781153902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.882142962 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.874427042 seconds)
  done (took 15.568912123 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.846854375 seconds)
  done (took 8.645139998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.514571888 seconds)
  done (took 11.319964064 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.876503275 seconds)
  done (took 8.689565524 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.948075307 seconds)
  done (took 8.747501154 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.988866809 seconds)
  done (took 9.787750392 seconds)
done (took 163.717109511 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.863977273 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.863168658 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.861831516 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.859755551 seconds)
  done (took 29.247963118 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.901619485 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.90083802 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.902751417 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.911747139 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.903972243 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.90123755 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.893049105 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.893182346 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.912913595 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.904231166 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.902772361 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.904266995 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.901810794 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893777852 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.902864392 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.903199904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.912602659 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.903168351 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.895091893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.905624178 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.869300203 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.913476146 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.905686204 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.870636054 seconds)
  done (took 47.409486559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.065882898 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.94072964 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.021804438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.920970996 seconds)
  done (took 9.749761023 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.920592364 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.921813912 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.936335563 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.972226639 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.99833205 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.931234247 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.895976838 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.892719981 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.876550824 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.92226172 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.997992038 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.937993635 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.007453851 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.870329855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.053207622 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.868944066 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.869307375 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.921461701 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.973005802 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.986437361 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.870387781 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.921349612 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.924942156 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.939034235 seconds)
  done (took 48.210883129 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.869167864 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.877768238 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.875798332 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.869464291 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.869520026 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.8712009 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.876194147 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.870940892 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.890767503 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.871046323 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.868782604 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.869508009 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.869264056 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.870632223 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.869640744 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.882158387 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.88400255 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.871447323 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.873657481 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.876148763 seconds)
  done (took 39.279348406 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.863202014 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.795458577 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.215756683 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.120639004 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.86349218 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.865522464 seconds)
  done (took 32.527319714 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.884027831 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.875794362 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.869917897 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.927775847 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.010872121 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.87935034 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.87054935 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.881692395 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917981545 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.937278356 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.894773746 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.8993188 seconds)
  done (took 24.65196223 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.865918279 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.867743949 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.868606993 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.884265458 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.882183162 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.878846407 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.878267424 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.865811001 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.885228091 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.890219879 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.880945318 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.885097443 seconds)
  done (took 44.340282939 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958876048 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.912797398 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.903838368 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550030563 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.248782989 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078011308 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381972803 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207097219 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.871969552 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141607813 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.879199163 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971800243 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124371365 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434670416 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902652823 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.32183567 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156055021 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080482821 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89510675 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515769367 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926936892 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.116018095 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.608921139 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919065027 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081621912 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.002221367 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.129835408 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870003719 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001866547 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90063783 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880520282 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869688909 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143669424 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23955563 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972050893 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880869668 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.485083651 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.585012396 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.856800139 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.655299643 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.521538821 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.981577158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880670579 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870285559 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804439262 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07553485 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254645192 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.875971165 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.581645102 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870324985 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88099691 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958719147 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.874298477 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.690359605 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789014102 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.874754969 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.869435196 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876841077 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443183055 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939283686 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117244139 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.849201479 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.961618941 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617541907 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25306956 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.013261034 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.87497943 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876099622 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806712978 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.593429064 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921633892 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201271064 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.892003209 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522166435 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172445574 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.95495084 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812132342 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145940852 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471395249 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.848038646 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102414061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872274666 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808896309 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.916461527 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807029925 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132998886 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909334922 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.624425477 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912191236 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20794167 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884289363 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890813634 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897121142 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096558337 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.756167161 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872727337 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.636740918 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015468598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895391595 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213945332 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808857079 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.878428718 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128911658 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.085091872 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.004204141 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367492267 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020675547 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.50738071 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.929383683 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.083664345 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926285951 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.140807362 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925682956 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946661278 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922068316 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873424547 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174175628 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.53886967 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.013546087 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.900578425 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999866458 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.190752374 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900546514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940304925 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883303075 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874908487 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618528614 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421795911 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.875262292 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.877260307 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011608525 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924782377 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.875161369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820147961 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.502850583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896522653 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.889252876 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098730751 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516412203 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1905948 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811186361 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211376739 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968250434 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.099144458 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.519286029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.938611973 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135871804 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009423714 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.036702022 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925527079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89447621 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97495429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899241932 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.087841505 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170861128 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.881259672 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.880381015 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615541239 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908080864 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87786611 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.881648473 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626993149 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147098028 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895045092 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.883180747 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.767382103 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.889878941 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942450741 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883030779 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886990718 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.418064542 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59143363 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.884023038 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.464595921 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102260642 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887299892 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.583679636 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988126489 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.960168173 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150345016 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931588976 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.813223616 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.58861378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.569984879 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87888835 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814162879 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878501144 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888274808 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889125888 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.075229117 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152533531 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91764751 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.520359388 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914190059 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890166918 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.882199537 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878495909 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.392469676 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957373714 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.13479174 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934008736 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028765632 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.895224992 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815621279 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882754459 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884554442 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879059666 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.879438335 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912686447 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.530122031 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264683206 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142041614 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.492174442 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894172647 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.603313642 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.931301828 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.936930657 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.536140915 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242342864 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.924060879 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906933386 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.89161927 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.601980529 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.569853824 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45180736 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18853276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178112388 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311645644 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.141242388 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910661097 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221888778 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8160432 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438102317 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938927541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224324879 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825963911 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965294393 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.516342118 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211041956 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896304764 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108896022 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26093822 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.580992092 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014774685 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093560365 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917429525 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.102758608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846592888 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.168707535 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023444037 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.50710451 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071002852 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217983191 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.530919536 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9944131 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.881843295 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.564181504 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970058269 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.600937031 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.053976167 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.134157868 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.821574547 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340745687 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892251472 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10969031 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236977052 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.108636915 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.007440023 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820633045 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.89411897 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.893945959 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.885680783 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.884473819 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.763169454 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.137202535 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895213925 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818485522 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.056236917 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179790116 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.791253405 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.889580119 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884103362 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182326961 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.484771639 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051696729 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.035134176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.412611852 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891301527 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.819101376 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820555255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.578821827 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890354204 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86054614 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091354767 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.983587542 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797978508 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.020784977 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135537466 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142163886 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.899161711 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152277815 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154275826 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583983003 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911743367 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.985447893 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538270479 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.980970663 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88583742 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121646305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63668011 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111468782 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.93729445 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.834270996 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.885419435 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10029466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.886954348 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.786018709 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104579065 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.608926474 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.894691538 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205596262 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954506523 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.779516641 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91757341 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.977798323 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897642486 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965383974 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896578962 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.898628314 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897030155 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933492804 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788066759 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.998464317 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.902477303 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977470579 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.967698896 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410243135 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.893627439 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162025043 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234392807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206767732 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939929311 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887771592 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89801889 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821572966 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036643807 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.113057709 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161305727 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016487228 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.003682622 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912252965 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545929867 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136332236 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133108156 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165544042 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.787290298 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472316144 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943616887 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.887914411 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899755863 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.100096499 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099433518 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185967708 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032532421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.03537793 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26130525 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168751866 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.888529953 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889110961 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481959847 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.988097886 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.573334872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.929135184 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.786616947 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151543159 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900582145 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274697272 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.90986444 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.04595937 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.405909104 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538067112 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174085973 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.875998703 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.941530375 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159899913 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269989232 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197466839 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958235656 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901517684 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.006489852 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037289657 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.767217996 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890489062 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890727098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94019645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.601068102 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901608987 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167903893 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195408003 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.889162794 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.779020922 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91605841 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.902694683 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115853121 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159787793 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142605031 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901753064 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897283964 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.711097868 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163214031 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943429154 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826437072 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.895594064 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988704237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136789783 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912911504 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.344631925 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.603025025 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167954133 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.891411477 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914024029 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107745566 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256988339 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207451674 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426203998 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100999407 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.484433515 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552305518 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196203802 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.897630914 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.111994405 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198756435 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.897365791 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.028287149 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934600473 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.158936268 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199708886 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.905196874 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.638120534 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.858793631 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236921768 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454760658 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832143491 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903005757 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.954680005 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893770344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.024481167 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905440353 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.796929518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112341832 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.655993633 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166373171 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.900107514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.8850375 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.610303966 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.23603867 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929879784 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038224378 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897806918 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.596404181 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.25586195 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150593943 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.041234028 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.904874135 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.89897398 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894737209 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88163467 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.09517574 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.091197309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16787549 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.060089323 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.935482862 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897890866 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.111276641 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106771544 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.780949445 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02031439 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033139568 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940758128 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.800112216 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397564828 seconds)
  done (took 1680.879333639 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903007419 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.93139195 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.985069983 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.969838471 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.909217647 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.006614326 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.969378201 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943272553 seconds)
  done (took 57.450738607 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.895769441 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.098714063 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.904481142 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.896206944 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.905412798 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.904496183 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.06257885 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.91060141 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.904387961 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.905304061 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.896279687 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.89629881 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.209050196 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.920821708 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.90032723 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.882431089 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.904626755 seconds)
  done (took 74.842838111 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.896413907 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.001754617 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.921689969 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.909209838 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.874216963 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.91649911 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.765312028 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.939998999 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.896552728 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.12889142 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.532794641 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.914270006 seconds)
  done (took 90.534091228 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.908413341 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.903966323 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.90384391 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.904861423 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.904529696 seconds)
  done (took 11.363605863 seconds)
done (took 2192.314119601 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.153937533 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.110658642 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.126973191 seconds)
  done (took 6.073344912 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.047255809 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.092631534 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.212938548 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.218592827 seconds)
  done (took 10.409059818 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.178698068 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.293915302 seconds)
  done (took 6.307032427 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.287736549 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.906378181 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.278896905 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.897212137 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.897804453 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.89912991 seconds)
  done (took 22.532758366 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.901257999 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.905038431 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.902888138 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.904337687 seconds)
  done (took 9.447128942 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.882961614 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.597030762 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.884318664 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.898067306 seconds)
  done (took 21.097307898 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.650812437 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.661016386 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.644680911 seconds)
  done (took 9.79198989 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.350731381 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.784589951 seconds)
  done (took 8.971278454 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.159703381 seconds)
  done (took 3.995838609 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.032782097 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.208031338 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.415874218 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.411273369 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.502535682 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.63491672 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.220758175 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.152430945 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.301562277 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.333599988 seconds)
  done (took 25.049885867 seconds)
done (took 139.141526737 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.286734155 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.90644122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.106782995 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.242752434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.291258412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.105734212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.321102625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.224632914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.75389072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.746481035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.239998933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.285394336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.053631949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.905183586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.052266512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.906169422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.122326742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.303390636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.9740564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.138558343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.318116337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.879209462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.08499179 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.894006552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.1263902 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.056534406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.459232604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906634985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.125479034 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.472938034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.060876641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.289129757 seconds)
  done (took 169.477787748 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.669984852 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.901082527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901327068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.902316897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.219436445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.899989278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.901012596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.900634199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.320294719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.309571724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.90156671 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.19880568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.899367196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.902489265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903766212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.901956305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.450049258 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.724114131 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905613614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.913036522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.917040056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.145579863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.919327116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.193095966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.471127905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.917491289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.902482552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.920249467 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.905551456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.897535796 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.912901356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.902231547 seconds)
  done (took 209.469981112 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.902310981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.90132617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.903796269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.900767229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.903893751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.904784683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.90413032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.9028792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.670675924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.671218545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.908412579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.905736835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912100677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.903332859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.911432114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.902386174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.906133955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.909167425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.907042808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.909766424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912438128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.636887588 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.915046212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.630741926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.909565832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.907874649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.902638804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.91239833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.906471307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.907014527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.909255915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.905864937 seconds)
  done (took 221.84985786 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.118354545 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.91074193 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.908756919 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.864403836 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.914692348 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.912973148 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.903871302 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.101212321 seconds)
  done (took 19.486514551 seconds)
done (took 622.135132982 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.359016456 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.189330526 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.082639742 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.930500616 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.187926159 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.965446433 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.933012544 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.998324152 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.677887456 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.00078413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576863357 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.950304232 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.665731589 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.951075016 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.056035474 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.988327176 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.511804819 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.611857487 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.117378592 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.988501 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.102933078 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.909858439 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.005006459 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.689197088 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.684930514 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.95087083 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.117414432 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.518750579 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.942319362 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.098023138 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.650115725 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.32172296 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.942651838 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.929500147 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.980873872 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.964693938 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.285750382 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.939884895 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.056948681 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.709436769 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.987230522 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.547790887 seconds)
  done (took 104.918672043 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.902906976 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.899003044 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897754632 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.902161421 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.901763597 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.899228586 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.901772993 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.900818689 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.900799039 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.90097265 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.899181985 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.904117356 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.901091788 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.901889947 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.898597666 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.901471682 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.901007842 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.902899306 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.900127037 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.897907135 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.901542315 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.899628312 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.915448291 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.898848533 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.903028978 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.900077789 seconds)
  done (took 51.28840519 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.915246567 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.056968396 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.137576997 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.933646224 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.915292895 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.916862963 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.930206896 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.917002069 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.917225202 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.916222153 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.010259638 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.92063563 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93136507 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.134990913 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.929212072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.915647957 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914103523 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.914971845 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.063270822 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928886308 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.934770247 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.920868153 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.933546119 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.92860987 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.914846769 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914632736 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.918256661 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.389245193 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.920729967 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.009186424 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.958444166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.937026216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.356441797 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.146419712 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.964869155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.925448352 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.915702641 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.013826394 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.920629991 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.916763989 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.934898353 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.920210095 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.138085823 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.419585522 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.927108441 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.917118724 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.402060747 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.022174745 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.957847664 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924529061 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140481884 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.932596719 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.914556885 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.919041716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.953150179 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.927928199 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.917346692 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.278792215 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.920229756 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.934035212 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.922051493 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.919619367 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070268654 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.924919863 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.057296468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.926547281 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.92433693 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.918827444 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.141137001 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92720306 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.424961081 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.930254173 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.916775671 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.012573018 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.060471187 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.422357213 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.929064625 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073047539 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.369745103 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.941587742 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.923251422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.38232785 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.939595537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.921537116 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.918802584 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.92007578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.918583826 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.963466661 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.934404152 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.360193638 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.425996135 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.292110601 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.935758313 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.935912189 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916880815 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.277476328 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.927087575 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.917610635 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.132861264 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.435595583 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.925839344 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.919813273 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.406484223 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.927045201 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.933469048 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.922366649 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.144780277 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927935323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.961529528 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.919973743 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.920520507 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.92259573 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.940188252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.925896467 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.916793015 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.396651118 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.028074979 seconds)
  done (took 237.543667733 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.90744457 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.910181572 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.913959901 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.910440801 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.907105476 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.916085997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.910433186 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.914229765 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.920342326 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.916488767 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.915248179 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.914933886 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.910557891 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.916160743 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.944367437 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.919465542 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.523169952 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.915815687 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.913880096 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.921619216 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.558954955 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.917987186 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.91260773 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.92677402 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.911650887 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.915133526 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.916500318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.953448972 seconds)
  done (took 168.784291079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.919690465 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.037385716 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.93197669 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.948822501 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.926114038 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.916811961 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.945386429 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.93410357 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.924584469 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.915433726 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.921245296 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.979924955 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.927484552 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.017413462 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.950108937 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.947625866 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.026634937 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.929121572 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.917323987 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.916379086 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.946298711 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.912597585 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.982344444 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.044534044 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.934118744 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.039580915 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.921456789 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.921646769 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.922752941 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.037969428 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.935405958 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.982642584 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.949155718 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.939015511 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039347767 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.035328855 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.021456326 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.953664499 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.926057472 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.921655935 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.918577072 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.911204482 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.039832051 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.939778455 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.92436626 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.030535822 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935898822 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.922341555 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.93216164 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.920720781 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.930935252 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.932216857 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.983783446 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.051411517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.949563396 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.947819695 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.943314704 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.221977962 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.929179605 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.020171243 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.914310671 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036506167 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.942700298 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.913342514 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.91649742 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.928400113 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.950186104 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.951126118 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.023813163 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.930242096 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.023237914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.958851075 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.924879834 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.922399765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.921890366 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039688168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.039616259 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.959719793 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956517423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.950452344 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.91811536 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.919564945 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.905546038 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.935338866 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.927186968 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.040272917 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.042202357 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.930808344 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.924342803 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.919832234 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.926209023 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.947992476 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.04182404 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.954973938 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.01576217 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.985347301 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.994157363 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.939508575 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.931492527 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.922477107 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.981823814 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.935189995 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.92845053 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.274348048 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.990241056 seconds)
  done (took 207.974605582 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.384813666 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.977563176 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.978698964 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.184247293 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.337769069 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.792784087 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.967805832 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.969562702 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.994275051 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.128890915 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.025809673 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.978121429 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.956809402 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.936062005 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.975744138 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.988386918 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.977065371 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.248880496 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.088335753 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.105597413 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.950275695 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.256821718 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.295879187 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.352105734 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.999142203 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.299152011 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.653342163 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.200929117 seconds)
  done (took 62.869372147 seconds)
done (took 835.223489942 seconds)
SAVING RESULT...
DONE!
