cset: moving following pidspec: 27902
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.516704498 seconds)
loading group "string"... done (took 0.49895339 seconds)
loading group "linalg"... done (took 9.225379203 seconds)
loading group "parallel"... done (took 0.165515292 seconds)
loading group "find"... done (took 3.114021521 seconds)
loading group "tuple"... done (took 1.996882995 seconds)
loading group "dates"... done (took 1.37189621 seconds)
loading group "micro"... done (took 0.186810628 seconds)
loading group "io"... done (took 0.499377208 seconds)
loading group "scalar"... done (took 55.773824808 seconds)
loading group "sparse"... done (took 13.717469834 seconds)
loading group "broadcast"... done (took 1.744687898 seconds)
loading group "union"... done (took 10.26259935 seconds)
loading group "simd"... done (took 3.534108897 seconds)
loading group "random"... done (took 13.232246092 seconds)
loading group "problem"... done (took 2.166970779 seconds)
loading group "array"... done (took 23.670369215 seconds)
loading group "misc"... done (took 1.129416283 seconds)
loading group "sort"... done (took 3.712190281 seconds)
loading group "collection"... done (took 21.487640137 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.670082727 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.202121192 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.196530377 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.218141777 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.251981758 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162294406 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153201753 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.145873977 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.664681356 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20156513 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133734676 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425441442 seconds)
done (took 6.155583264 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257377787 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.058854481 seconds)
    (2/2) benchmarking "String"...
    done (took 0.151287764 seconds)
  done (took 0.88700678 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090487648 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154463828 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105276491 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.090964955 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090806722 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.105569228 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090246725 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.104860414 seconds)
  done (took 1.420021776 seconds)
done (took 3.334591261 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.556830542 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881821287 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.506646269 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.175387206 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305969951 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.301400822 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.262712628 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.214796605 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088371062 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.083266773 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.166221864 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.423884466 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.387427313 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.946832732 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.066413504 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.091685332 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.146965339 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.781253429 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076424501 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.10857471 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523524069 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.20737363 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112974836 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10457018 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183393171 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129330059 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.136801889 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098375283 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671005112 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131674943 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209634033 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.081158419 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.135208697 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.158764022 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214222299 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10734167 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677100518 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.195835209 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095381964 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09723368 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686094681 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114551738 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.196765197 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102145603 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.065662662 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.160485532 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098344855 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.090685529 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091018792 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082849616 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160699307 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45867785 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102664396 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.185479821 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090539219 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697892414 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095026694 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.268464814 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122810567 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091090044 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088259758 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088429286 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153416201 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094014887 seconds)
  done (took 19.944353702 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.166206303 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.183813841 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076246009 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158106277 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121834755 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09445937 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085990463 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075970518 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127277366 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176378763 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138747861 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.173165683 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092116103 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08753062 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.165243774 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231228703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123748251 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102057463 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087059215 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108280015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123778758 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094533554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108169321 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092772704 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169467495 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201125659 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105172746 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119718287 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086396976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095475402 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139566251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144273945 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088690627 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086094317 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170829272 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119308167 seconds)
  done (took 5.222458826 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.227285231 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104603634 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24103373 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.192976945 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131822267 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.19630686 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169450471 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.290281814 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.224864537 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176281831 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123423823 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093031716 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076790399 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076538947 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091700285 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.793339636 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167107553 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160237318 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158758229 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111683703 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07812838 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380520181 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095481595 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083701783 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091296727 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079277578 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.217038821 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092228811 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.477139693 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081242601 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112564874 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111364808 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204342712 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.121411187 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116829555 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136072956 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092105643 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101181556 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210223778 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098935809 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075028471 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093060389 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11367305 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12702962 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089827778 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.119239815 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.129508709 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08472342 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10793583 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.034831115 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083887452 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.189840658 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.173754979 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083763951 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279087973 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106587782 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115574642 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.088879699 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.782193882 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118252328 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093469955 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076784398 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093045991 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093503893 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448971474 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103083791 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.24644164 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079635254 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154961748 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093856433 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11424314 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.179884809 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082437793 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081837543 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123585584 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085355596 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076683793 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.101360361 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077651554 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086131995 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.126778925 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082312575 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092972821 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142936039 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.092517989 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120611889 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106230148 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101124381 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083466208 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123880152 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079216448 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086297261 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.192635768 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112677543 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110447319 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109461854 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125625969 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100036716 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081783893 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.251225627 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.111340778 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118716255 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096700108 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12214476 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094382954 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0769348 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098341511 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078188993 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097339793 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157934527 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084295594 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077303796 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102174364 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089672256 seconds)
  done (took 26.821017785 seconds)
done (took 52.665001919 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.395558335 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07828671 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078265863 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.098807497 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078365457 seconds)
  done (took 1.483192901 seconds)
done (took 2.212343711 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29029869 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192493983 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084402884 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182577791 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08408093 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.188745962 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158748699 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115854093 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200232619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082171059 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182696607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082167964 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08329975 seconds)
  done (took 2.681822347 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100123213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104196078 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100024878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117805719 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083073362 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100020445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116433731 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106024533 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098150325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110924363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083528712 seconds)
  done (took 1.853404276 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096779364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101883322 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089558743 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11393251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083918089 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095771245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114060292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104152162 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096199531 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109203463 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084755654 seconds)
  done (took 1.824241029 seconds)
done (took 7.08915 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.174173699 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.273724623 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.184745652 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.235899256 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331384254 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.264152067 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.613077295 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.197987258 seconds)
  done (took 15.134712023 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.189150568 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108254054 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09295644 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0889482 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107056007 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089039853 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093294973 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087876881 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112951128 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092541482 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087999173 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.107948662 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092651251 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091754369 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104244175 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090255327 seconds)
  done (took 2.436032904 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1314197 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11269381 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113510437 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095759411 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092290514 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.113426038 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098633646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.094143469 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.110494144 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092121916 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098675266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111115156 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094831954 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090405719 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112512146 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.114245669 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09183994 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112988148 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113769105 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096198269 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.113455141 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093745469 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094790023 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.113118854 seconds)
  done (took 3.323528614 seconds)
done (took 21.629427977 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136644029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100452041 seconds)
  done (took 0.976948546 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.157793826 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.175257979 seconds)
  done (took 1.079438716 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107978718 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08732494 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134296171 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100051933 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088453309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105179383 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113158721 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0887782 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.105856669 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089782525 seconds)
  done (took 1.772601594 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092095006 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091680919 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118912462 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.162000242 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113683858 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090973454 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092253567 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.108422359 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09451755 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088451631 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.110065398 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.105453996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093466219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123486387 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092026251 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092610511 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113445161 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.091327815 seconds)
  done (took 2.626475523 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088751615 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089214125 seconds)
  done (took 0.931029902 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091147532 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087287685 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089242577 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106489485 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087725318 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087962663 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104003767 seconds)
  done (took 1.405943659 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.509918754 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.232250455 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.367208298 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070219688 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118304828 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295645791 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.121076277 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070532489 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089260263 seconds)
  done (took 2.66083873 seconds)
done (took 12.197579894 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089282594 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.186133342 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606458959 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.127806535 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088374544 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.142780348 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.298069408 seconds)
done (took 2.296235606 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343765894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157983269 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082748564 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089147614 seconds)
  done (took 1.423032114 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079610301 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0961866 seconds)
  done (took 0.935535031 seconds)
done (took 3.119224392 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087375747 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087037172 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086528038 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103592583 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.108691669 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.086588242 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.106898783 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087540869 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085499194 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085962878 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.105800175 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.086807206 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086049768 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.10460455 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08699255 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086827302 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085928781 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.10319496 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.204443879 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085849951 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102889045 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086527701 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086530034 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085579265 seconds)
  done (took 3.11444085 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107845314 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088241975 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107495999 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091719561 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090411673 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107732645 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091557909 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088404965 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090061553 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.106242791 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090643736 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090139332 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105402413 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090927506 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087970578 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108150742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091052813 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088251418 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105658269 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091197664 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090168319 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106120676 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09281375 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09033 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108165204 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090967606 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087976752 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105483302 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091779129 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090618532 seconds)
  done (took 3.635237717 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094200959 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08421106 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087648251 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112851182 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084312158 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087607058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10120097 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088955919 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087506388 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086460445 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107095072 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087449318 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087165136 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104891476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089312233 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089115085 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09393725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.105032594 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087021564 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088439342 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107720401 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088647607 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088253625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087177291 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104374215 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084353502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087453426 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10469637 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088474868 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086738665 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089866099 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106917405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088240799 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096780035 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106261287 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087432883 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092850276 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101347564 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088866451 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084262317 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083801271 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104407979 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087540188 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092952395 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104595646 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088524893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086960845 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08827695 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104988595 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.089979147 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084424517 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.103991713 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090363082 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08974559 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089074444 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.101562628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088048532 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084544729 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105511843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087986131 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084935187 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083956542 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108974337 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088242566 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101328283 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111851749 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087666973 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088339574 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.104941323 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093379104 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090519869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11396538 seconds)
  done (took 7.504610404 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.109908876 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095192477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106094318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08942287 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088055213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088747184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110216114 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088092625 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089222039 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111260619 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088130003 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088578295 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106790775 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090156319 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087726136 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088234297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110640139 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087969173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087630376 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106556609 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088465664 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092726014 seconds)
  done (took 2.864253362 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213227584 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112008307 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135565385 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11859336 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105407391 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117639458 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092994951 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093386532 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109760693 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09779951 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096791277 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109623864 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105348675 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09584017 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114239185 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098695185 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091185825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115509009 seconds)
  done (took 2.791963987 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101173309 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090465193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.149131666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090088362 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090143983 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.108554794 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095792929 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107826166 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107370734 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090621378 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096188093 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108153919 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.090959535 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089447664 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089807639 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107728953 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090102447 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090571947 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113565655 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09601641 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094006727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113658085 seconds)
  done (took 2.981001504 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102409304 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089320642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124169746 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092752314 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088695601 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088589167 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112004825 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090605547 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09535565 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108260973 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089690983 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088869113 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121867343 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089698479 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095359933 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107181723 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090499212 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090161487 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106407973 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08983844 seconds)
  done (took 2.734685787 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186734 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12293534 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10622208 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112761738 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123591169 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105089235 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130101862 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106577876 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104700845 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132657666 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106209585 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105182689 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130505649 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110957841 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121979388 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11342424 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111772553 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132347714 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105904811 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105003553 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13433136 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107023071 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130002333 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10589256 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105387604 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123005066 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105224924 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109284945 seconds)
  done (took 4.072526447 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089535887 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088931487 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087460341 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106466611 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089230065 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087753049 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088240422 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106873061 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088575596 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088006408 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105867936 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088735368 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088165775 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087672578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10629096 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088962618 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088700245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105660977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088514245 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088385547 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08821709 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106956198 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08897977 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089148563 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088801436 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107981802 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088992098 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088452087 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106168676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089239289 seconds)
  done (took 3.580930287 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100528508 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098231169 seconds)
  done (took 0.979402302 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096704115 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10278966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088109721 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107661248 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095539758 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088902982 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11425811 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095498319 seconds)
  done (took 1.571257457 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.159966199 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.183163685 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093414171 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118273538 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162612193 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.173052634 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126596836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.112519589 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089152957 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081803173 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.175163566 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080753231 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107207604 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086850758 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08880548 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114274686 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09056799 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.098151631 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.115070525 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0926636 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094236201 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11116275 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093125747 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099895269 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102968881 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093850163 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091902628 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.118238061 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087406039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091032184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087256572 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109325637 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.093588713 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0944967 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.108039673 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163907759 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115366664 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086659685 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090691629 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114025297 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12323076 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090053965 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109604503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08954416 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093240475 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.112330308 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096185396 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.090448176 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100406955 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08597316 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091251646 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084777342 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.108239885 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090660687 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089587991 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11389464 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.091885891 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086302094 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104702815 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086435976 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088143465 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103489663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092731588 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092071394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108584112 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090909506 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088989291 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.108778201 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093591545 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.091007054 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.088575959 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1233556 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090644741 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094373438 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113694004 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.091104115 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086853664 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113333435 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089039831 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089833341 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.112249642 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11847974 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090557667 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104058271 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086245248 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09635153 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.109755789 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093617578 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082663253 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115565122 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092939108 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.090444884 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08266945 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.1062659 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086106089 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092326435 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101977937 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090676007 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088910571 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.111802122 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09648887 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08815102 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108742951 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095788513 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094836805 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106744913 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15257972 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086545243 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106562236 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092878562 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094524183 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105292456 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089675605 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089398425 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105469812 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087381665 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.094614689 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108665581 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093189709 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.093928267 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090947784 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110192491 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.092355501 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089169171 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105561845 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094045703 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099179315 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11157923 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093626372 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.090732192 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.109489869 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091258741 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094403326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086747744 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115985843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087619194 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089565735 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.110638926 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095436958 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089932936 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104789604 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089143107 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090415563 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.108169413 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.093749898 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090558414 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104908298 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08366111 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090126143 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104275814 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092222776 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098271507 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086119207 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.111851002 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08662556 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097501288 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106160723 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09547334 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09233806 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.114384784 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095987006 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08228882 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105998745 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093230371 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091629895 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086210271 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111668708 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090715425 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096589102 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103864526 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094272559 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08357745 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105235814 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.095770536 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.091346192 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092765258 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106782171 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128155065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119854518 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096296372 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089112884 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089801573 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113784796 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089620676 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093621119 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115509955 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.095764218 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087537422 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107957206 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098165463 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086547852 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112210587 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089601917 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091796508 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082656639 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112008806 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084074612 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095142496 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11215996 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09538531 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095335049 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111907619 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089743264 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099040381 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106431357 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095940469 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083310811 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095576638 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.120923743 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097229654 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09533429 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111651569 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088578075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091988114 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117886324 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09341092 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090889059 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110757894 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08545225 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084117852 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095100142 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.113563012 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086726026 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09090328 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111540036 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093479478 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088071673 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103501448 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096207245 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093419832 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105973125 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094170596 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087291346 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108102924 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098300801 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083525649 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106446826 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09339485 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094715189 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091034568 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110140022 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.093319075 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096692695 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.112860141 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093253095 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087578165 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117220894 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090052793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090053033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086428309 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.114720331 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085284969 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093139333 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110786209 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088281326 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086638283 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113412576 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097044082 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095451833 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10877515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096392342 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096915383 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.116061916 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090329266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09577119 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086239845 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105204612 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088011463 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083751018 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.112258055 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087388967 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096573624 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108556066 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090458484 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094852961 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112264587 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089544923 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097515498 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120732003 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095528829 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084050203 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108074509 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091135149 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088143308 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087235346 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.111962788 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092578233 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096048736 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113572163 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088398278 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091017709 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.117138169 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088700218 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097188504 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115997736 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097984268 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087640893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.095536623 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107790498 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094490918 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085351432 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111493605 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090624544 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09016614 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108267784 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090254905 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087330549 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10428679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088339535 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.09720291 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109066381 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096631118 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09040935 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107761475 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090174705 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0969258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096776447 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109809465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097220888 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091747913 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105449062 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085976211 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09589309 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11090013 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098092446 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087261325 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094399528 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117262257 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094771961 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091273459 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119051962 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09936635 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096687211 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11599137 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085571439 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089015304 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114577245 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09253399 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093999615 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.112857844 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086514477 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092562309 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09620132 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112514526 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089664128 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084538261 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.112154439 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097838749 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094392271 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.113911526 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094034834 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092193988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087027988 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115464473 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096515809 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091155877 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11897298 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091675834 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0949837 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108135345 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097856328 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.092307673 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104998581 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086149971 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088896258 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096830383 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.106310163 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095897008 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095332373 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10800733 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09015652 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.095680385 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108228863 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095402192 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095939628 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108276514 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101441794 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092440501 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089429839 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.116310782 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.096323159 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084665654 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111016171 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090830871 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097780297 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109828107 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097549002 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09072469 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117336352 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094634679 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.096189376 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.095964348 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117965172 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086281685 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098136376 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114632931 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094886336 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088394757 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109777052 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087720883 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090705236 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.116867813 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090110456 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098996489 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09742915 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109879904 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089210673 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096876379 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110874757 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098782783 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087402998 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113210359 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086239899 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093887504 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.11015413 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.098578097 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087513008 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08526009 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117431097 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096248152 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095656178 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114062917 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.098227896 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086045703 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106203213 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094955434 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088879905 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121195171 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094843637 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090142417 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109313518 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094456617 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093059304 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097176501 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106917133 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088568044 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092092269 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112627983 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090863101 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086641106 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11567283 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091514276 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092255481 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110159357 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087169762 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091126487 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097719516 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11073417 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08812782 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088495551 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119838568 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091454953 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08793816 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107317338 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09805094 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093888196 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119621503 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089830407 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091419994 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108956909 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095641783 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.09983429 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08846253 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112625148 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090211052 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096222113 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117084211 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085960061 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088452733 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12178385 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098101841 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092793633 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.114845263 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091260727 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098291067 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118480138 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09512348 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085871737 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086122769 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111328875 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086536386 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095055326 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11690193 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091002023 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089007692 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117395359 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097293507 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.094513149 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093722353 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107750572 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098753735 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088921894 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114820859 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086447419 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085554587 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.115164414 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097686617 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090628678 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112476548 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094896666 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094560602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086834291 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110343815 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095107714 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095476021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118944501 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09204882 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090626205 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.11496827 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102616984 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093607481 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111088124 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099917975 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097738833 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112411565 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09495923 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095836629 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097698726 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.1159489 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09866962 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090572756 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112445135 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099345011 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098993141 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12238603 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091369286 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086524502 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.119080647 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090551707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086642962 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115393735 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100054072 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.098168684 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092836304 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111535504 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100782224 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097628956 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113493102 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090137415 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090346611 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118109465 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090076756 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096163845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110553168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099344198 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.098516754 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118255326 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101173888 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086768435 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096797956 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116170199 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100644914 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093601718 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108593958 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087350449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095606862 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119163775 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099355448 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.095734859 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097347024 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117427042 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093161923 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092392783 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110668245 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.099650966 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.097075313 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.113526533 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09516088 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09192338 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113249857 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096040677 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.097811031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099148413 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114288578 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101938059 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099381658 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11150159 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089505037 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092987891 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.116142028 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093788189 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098273347 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110093815 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088368634 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098491017 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099388027 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114200368 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100097935 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099875361 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113135828 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095924821 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100445668 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119284743 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095823259 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093513646 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116615759 seconds)
  done (took 60.099997113 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141756504 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102226051 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116757144 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096314314 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111665221 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118396767 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095486978 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097884199 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117944877 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105129057 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096544398 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115839297 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110100715 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115112985 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133081488 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104892892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116445999 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097785583 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096419415 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097412916 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130170249 seconds)
  done (took 3.145539831 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111525344 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108838495 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127678227 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108070435 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102432084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127633875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105264445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126840145 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108968672 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103672483 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129625157 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10602377 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103745581 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.125393454 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103612871 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124233294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108864455 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101855656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12683672 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10584756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102869819 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.127360507 seconds)
  done (took 3.32572526 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.125716995 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098671728 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093773719 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117779142 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099031591 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09576418 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118481702 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096721278 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103787777 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090920315 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107873997 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090944668 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094269481 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115887833 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090955453 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095826 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124846002 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100407972 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100431251 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096076072 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108416941 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095933628 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097488643 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107051551 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102722852 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100564423 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09632067 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.120500035 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087787335 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098524355 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116077597 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090517699 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08715539 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08704713 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107704974 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098705382 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099421474 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117294295 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.096855192 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086982307 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096794502 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121901821 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087250833 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097076111 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118161384 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091262239 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.098445247 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095899101 seconds)
  done (took 5.70024234 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124185172 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.153605353 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101249184 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123968868 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132896155 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105216823 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099214588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147916943 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096978575 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.098566881 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.134518714 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109897396 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123324028 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102872488 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101252241 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122199941 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101279581 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098737171 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12418569 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099726488 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10302716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122374465 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108096697 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1072433 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124008703 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098652967 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098807229 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.124248816 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107264617 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.124668294 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103489746 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103082428 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130150744 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100001751 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09864666 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121772347 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110342939 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.100147491 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121585804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09954151 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.33509284 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122881039 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101334421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10968064 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122257222 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102440919 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09911426 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.118143146 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109175828 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.100334723 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126119783 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109203146 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100909408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.121967444 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101851368 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129486049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101384504 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098159813 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.100349569 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127862371 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097162535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100296749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130141556 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.099848963 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12493799 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109001256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.100454953 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122165184 seconds)
  done (took 8.774493219 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129555421 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102440327 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131804982 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109660267 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101800102 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123999391 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102536122 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101946022 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12534186 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107869112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122421979 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.214807092 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122834543 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106719169 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102191255 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126567412 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103355795 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101622446 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126648349 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102841836 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10252307 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131721344 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102222648 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130653586 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114245005 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100031629 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124422931 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102688408 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108834823 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123764687 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113615393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124163848 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10297981 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110198231 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136002308 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103448278 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098093568 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124539655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103498831 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102513388 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121157599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112277125 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123799085 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101327427 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103061317 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103206208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133040769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11376044 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12928073 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108061025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10336494 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131039812 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103984006 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124408934 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111708261 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115663311 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132635667 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110372589 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1240245 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111265306 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109946458 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138586238 seconds)
  done (took 8.036684857 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097016771 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097015271 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096969151 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117956879 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097747037 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097775875 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096671702 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118158204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09806985 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097026716 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117022262 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09792145 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098158537 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096504937 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11808263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097244334 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096865836 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116089458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097987576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096444591 seconds)
  done (took 2.893983742 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106637834 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113261934 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119958455 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105784459 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099228173 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125899737 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099484447 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0988662 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099005635 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122111115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106588928 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105987452 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120258366 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104240777 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127544326 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104937771 seconds)
  done (took 2.611502166 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116362085 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11400408 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.202501221 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101049791 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121652285 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106663884 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099109622 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123468701 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099239124 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103994225 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.1025303 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123689681 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100144281 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100232816 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122894269 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102146717 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098530794 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123938785 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099849857 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207891791 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102803344 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100846973 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122230963 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103054151 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100398783 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126829014 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106083723 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099435993 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.121745584 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.100717883 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101468393 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.105258352 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120298684 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103939906 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100275356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122475964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100371492 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099977687 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124225156 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10008715 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10148367 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.121517924 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.100301626 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102046648 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098269695 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.121238165 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098365283 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104341677 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.12241205 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101229998 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098987103 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.125397607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104280562 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106960737 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127559248 seconds)
  done (took 7.020789304 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111232021 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100777326 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131784622 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09904596 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100828276 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100440607 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123593885 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10203096 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101213054 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119650021 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101731143 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101414976 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122447269 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101852477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10141688 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100330071 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119498856 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101749197 seconds)
  done (took 2.796339365 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105002559 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100428562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103479424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123604864 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099448884 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099604659 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120659397 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099757654 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098578342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099494695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121276693 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099986189 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099087193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122008083 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100363455 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099571072 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120904121 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099217404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100597367 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098507481 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121745551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098769558 seconds)
  done (took 3.191625058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111370705 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.205765143 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106264413 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.214083134 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096459698 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095517895 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12917853 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09763366 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.134710773 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097838349 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09512449 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.116913257 seconds)
  done (took 2.360710979 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126750832 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135998958 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122684658 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101174961 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108428731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126747507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104130312 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103987594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135655903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114657965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12583439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112308064 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112255856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133710614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108641033 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129331567 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10499744 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105675818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100858845 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14073851 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104431158 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133411583 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105190745 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104492237 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126338979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11235258 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132643603 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115067943 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104065735 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13486953 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108714539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103855836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132838587 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114944436 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123195405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112752179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10463671 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140052683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108849211 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132540638 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101862636 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108965259 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133893991 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110325761 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111496253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12801371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109784684 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104604965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12745463 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123732225 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132533866 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112181292 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108267024 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133797447 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112079307 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146492748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114944333 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133705622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109269229 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114872489 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133902973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109497941 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134674002 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1153585 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108653279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133129612 seconds)
  done (took 8.68471506 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13808435 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10110055 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127308544 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115997339 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11224834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127329447 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105186469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127066679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107303739 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101632982 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168223656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105278788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11195198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13397764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105930287 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12737389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106116841 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112365923 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124452479 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125548109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105428342 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134185443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112376023 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135588362 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115619867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108514129 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127834469 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104953635 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12636698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106483393 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110258967 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126480387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113487672 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101463211 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134945916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105379893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104844605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131567922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10520049 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109843017 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134919265 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118320337 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128564135 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105361313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115235572 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127962213 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105953701 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102141686 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128688727 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10281453 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136911399 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115856115 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115870519 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135601824 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108265413 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126071822 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105957624 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105134071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127130064 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110290369 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112980424 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128076425 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124738696 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105589278 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127815965 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112385696 seconds)
  done (took 8.644815181 seconds)
done (took 163.876533408 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.16750212 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.20598829 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.188792026 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.154303563 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091574069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.150392575 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.124929294 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.190433082 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092483472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091500564 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091218542 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.116878827 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.159687691 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.091753776 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.114511921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094358344 seconds)
  done (took 2.988945542 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190937013 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.337859128 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107006194 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11796693 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098230675 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096667198 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118154106 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09783739 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096739835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125695319 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097139077 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092950674 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124518105 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094044081 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096522435 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118431861 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103645605 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096677576 seconds)
  done (took 3.085728837 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114731511 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140065417 seconds)
  done (took 1.1310875 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126074276 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212183928 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290019593 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167508327 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11664006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135861891 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145382878 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131039029 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185557906 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131632559 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108993431 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09452905 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144157417 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102222212 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112186149 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117611962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124855772 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132548197 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11114375 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097690569 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141893917 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10177238 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101450694 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134692929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.175761076 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130623036 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101373339 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099382478 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12036133 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112024839 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102696886 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135047246 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108611731 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17423634 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10037288 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171037902 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102641723 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119634784 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110844796 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096696411 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121912808 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100556892 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109043761 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117769882 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.099859309 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102917525 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123391385 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.099641108 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103723964 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125547291 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104962313 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125365786 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147352143 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125254115 seconds)
  done (took 7.710066354 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.893035909 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144750261 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096319358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.043643189 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140545082 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109736864 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.886350864 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144563557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246340123 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.911426817 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112567883 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103343313 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258849897 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254380983 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.262130018 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355617166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.752468712 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109194475 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128385888 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162242068 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101950389 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135940702 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112666316 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453195268 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098078545 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09688706 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123972112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105360964 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174029718 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098335622 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100538875 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191752139 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28854878 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207990273 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097573951 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118612104 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09747099 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181981451 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268117351 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216070425 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163323131 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116879463 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096536315 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10149635 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132469818 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094329181 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177342307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187097894 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166237816 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123538932 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10632172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10427885 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123383906 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175097602 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096107687 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351979044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354887388 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119093848 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102905007 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108227803 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260535827 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121136469 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234108109 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118143426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210148264 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12021257 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80339813 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160253672 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118651069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101610141 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101723722 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124977245 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10019936 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178828102 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405462726 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125863033 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102203636 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097105666 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226376975 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121145786 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098279512 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176375509 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098746866 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102951723 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126865523 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104173043 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.184549036 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.244369974 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125378056 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102416339 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123594606 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107752024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098513899 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22713466 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226827445 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174722162 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.224272106 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1021124 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178894207 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182739079 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102156789 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185943193 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102464426 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108178342 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123124856 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224222953 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153323095 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100740827 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101861047 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123917506 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136771521 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100823653 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125672031 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163217759 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.490006342 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18406121 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094858894 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125646362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103525071 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176586651 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103920849 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258529634 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12655247 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16149727 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124535698 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096811641 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102367776 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177277733 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104323125 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125984188 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1010415 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126847472 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255482562 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216508175 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128292552 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244028683 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169661471 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125684376 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166803724 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125042033 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18358024 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107381275 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101365034 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119917109 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794360325 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109582538 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102499356 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124372025 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179861429 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119111329 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101125531 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.097680685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095837512 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784257015 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12377276 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096246229 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100208441 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124201793 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103198159 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103619581 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124458479 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178036676 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242240972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106205019 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101515612 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120878366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174968568 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099769267 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098173654 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09818407 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.120466357 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104689203 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102574373 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123690916 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161815376 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17487756 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226421742 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.561813605 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120828429 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098366133 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237891126 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119682564 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324986455 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103919656 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231197701 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178955462 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095441379 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376002901 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.1584005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205299222 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101652689 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189796449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09592956 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124663294 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154411448 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12021795 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105065818 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174566533 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107177081 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105185139 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280455739 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098674171 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244527955 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096034797 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185021253 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100030493 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104076216 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344993241 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098337622 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10869038 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175686807 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101685504 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.121450473 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.966588978 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099117188 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105704693 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124905797 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23300207 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.177394374 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104464439 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104548684 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128470575 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154723331 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.222571832 seconds)
  done (took 45.787636885 seconds)
done (took 61.576032264 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.250666183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165938241 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.364945803 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14807867 seconds)
  done (took 1.893997105 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259249466 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165138643 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.243033451 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096336368 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250216876 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095414504 seconds)
  done (took 2.010133806 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.173040253 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164910255 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143533101 seconds)
  done (took 1.384876295 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204357386 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202371356 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.339846628 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.228055912 seconds)
  done (took 1.95964963 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.272837091 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113426536 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121941905 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.22640028 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.24344148 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202240221 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.120297737 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170642631 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126589991 seconds)
  done (took 2.542978753 seconds)
done (took 10.689380798 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.28066154 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.443788355 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133160874 seconds)
    (4/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.327991261 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.216273596 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.272849433 seconds)
    (7/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.290330303 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.243662777 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114225616 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.208216552 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107719392 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.386566348 seconds)
    (13/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.326976035 seconds)
    (14/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.226138483 seconds)
    (15/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.340728636 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.19684679 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.234030932 seconds)
    (18/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155124381 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107151664 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.298841109 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.197878443 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187985607 seconds)
    (23/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105288733 seconds)
    (24/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.171997568 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.190024957 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.26434421 seconds)
    (27/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143338957 seconds)
    (28/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.140007366 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149517055 seconds)
    (30/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10287864 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125459979 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.295223382 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106996996 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.140414452 seconds)
    (35/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.323729912 seconds)
    (36/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107766006 seconds)
    (37/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076613819 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077959308 seconds)
    (39/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.078575459 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.153929859 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083421961 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.17598978 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.192586887 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083148653 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108166593 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.140471728 seconds)
    (47/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.098057718 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10028567 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.184179185 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.118034085 seconds)
    (51/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.132847352 seconds)
    (52/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.104291435 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126384359 seconds)
    (54/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.137507346 seconds)
    (55/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.20085529 seconds)
    (56/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.100420626 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112211351 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08385972 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138756035 seconds)
    (60/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.149501569 seconds)
    (61/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.135828459 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.356979617 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.198744838 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.241814169 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212375488 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.254904779 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083406307 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10428656 seconds)
    (69/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107629436 seconds)
    (70/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.213512423 seconds)
    (71/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107821979 seconds)
    (72/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076716467 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.145809694 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101379613 seconds)
    (75/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107663887 seconds)
    (76/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119943562 seconds)
    (77/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084245713 seconds)
    (78/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175358648 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.13191858 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.108434234 seconds)
    (81/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10983541 seconds)
    (82/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113663256 seconds)
    (83/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.101970559 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120982853 seconds)
    (85/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078966889 seconds)
    (86/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079732138 seconds)
    (87/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.154950398 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104645226 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123198719 seconds)
    (90/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077649891 seconds)
    (91/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.106449702 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077087419 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101760726 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.082806922 seconds)
    (95/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.183663171 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.130561629 seconds)
    (97/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.109188181 seconds)
    (98/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100283383 seconds)
    (99/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.14231454 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110656735 seconds)
    (101/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.141481851 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.104476368 seconds)
    (103/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083659234 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098377911 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108095725 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154094418 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100608006 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082310738 seconds)
    (109/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.149996206 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106053904 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124589768 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215770885 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104942328 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106547124 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10298687 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080561892 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10474809 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077310912 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097177358 seconds)
    (120/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.102584721 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101598303 seconds)
    (122/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.076700278 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083944857 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13650721 seconds)
    (125/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078340523 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108917793 seconds)
    (127/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080219058 seconds)
    (128/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102743592 seconds)
    (129/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.142956333 seconds)
    (130/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101107665 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106719377 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124676439 seconds)
    (133/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080332537 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09823745 seconds)
    (135/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168140039 seconds)
    (136/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080633944 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107148116 seconds)
    (138/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077023906 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.141683768 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100984518 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119921346 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.143901931 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084395054 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101415517 seconds)
    (145/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.127512739 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.10753897 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079868349 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100054914 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108461648 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.107563867 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080554428 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100172576 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106949464 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.108554127 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08498436 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101002998 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121528659 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.14557563 seconds)
    (159/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078216595 seconds)
    (160/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.129007452 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.103879848 seconds)
    (162/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078054933 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098601836 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083300535 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127439696 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10211305 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106914733 seconds)
    (168/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079648429 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123568443 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121515979 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100523522 seconds)
    (172/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077337144 seconds)
    (173/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.106463576 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100238151 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100724167 seconds)
    (176/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076850142 seconds)
    (177/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107310606 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098835065 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08034824 seconds)
    (180/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.082746625 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.131157752 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084824024 seconds)
    (183/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078368342 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098187518 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.142477262 seconds)
    (186/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077452357 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080219739 seconds)
    (188/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077665683 seconds)
    (189/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077575612 seconds)
    (190/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.101908668 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085138523 seconds)
    (192/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078343794 seconds)
  done (took 26.553610231 seconds)
done (took 27.463920216 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216976539 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1274778 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107378763 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107535826 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.222345852 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115198965 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149516702 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.109816872 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118092935 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133218117 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.098648147 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120459906 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.132982364 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202661829 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136857782 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.101553062 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099356774 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.143797477 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123943096 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124467606 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.22396805 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101048013 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.143386039 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100870921 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226142857 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101093737 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.106925449 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.134009826 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121751877 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108913247 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.133484308 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100634739 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.123964172 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.147454835 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099882288 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108736241 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098709251 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107503644 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109901287 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110008609 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145228239 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111305553 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.108784641 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.124122176 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110351629 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.108270968 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099061123 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136694187 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.098318044 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108957107 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125652794 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124995438 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107527541 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.121749631 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.099514324 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.100546524 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.142879831 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100338534 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122957714 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122755913 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102003978 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099629515 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110084471 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124350429 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109534289 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100084322 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133517889 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111832457 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108564284 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12420991 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100513197 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108988574 seconds)
done (took 9.797783625 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104199516 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143017412 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.223466587 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.226437633 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127386918 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142105395 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.113891108 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122555749 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139361487 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.118505371 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136130184 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.154887891 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.23007294 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11694589 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115318095 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.136458985 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112319866 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108502357 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.227678153 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12316259 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147518742 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.116230364 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124297912 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141567362 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105141051 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.159071733 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110803374 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111090385 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.124861434 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114186577 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.123782281 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126425204 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107092743 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121474318 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.142976255 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114610287 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115388247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.134772895 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105476677 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.103750576 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132548925 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.119336753 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103509719 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.139373068 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112673353 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117938295 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133570631 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116921555 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10522618 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.132603858 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10629955 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1265083 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.13932496 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121201634 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115581182 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.138832634 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.117562379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115866506 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130241131 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116968747 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.103557304 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125794917 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106973846 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.123354984 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.130964437 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118063526 seconds)
  done (took 9.461993505 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123530139 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.132082901 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138591312 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115243071 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10827376 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122808886 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09886853 seconds)
  done (took 1.793198043 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100169058 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.234235293 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208209922 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.234833517 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.233054742 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.244645069 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122751089 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.098921779 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.160657877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.109729642 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.237437111 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263556413 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110336934 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.114090336 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.238037896 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125813147 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212598219 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127448456 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114961381 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.237647302 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117755115 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129171478 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139182002 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101264164 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.230849208 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101534176 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.282257446 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142915864 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11065481 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11440641 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114179439 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202633469 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.232335218 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.113585498 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133845142 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.2094369 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.233045003 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113991359 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.246546051 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1299926 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206962025 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.140322809 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116707203 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114738007 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141050452 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197446916 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145863728 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115706405 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114029345 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.241096432 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110325427 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.234743176 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137862644 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115503802 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110720497 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140181356 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122945102 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115995043 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.241721314 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116914551 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.236200017 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.235948212 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.236099192 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210203109 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151494147 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.235131097 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.197792924 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139374175 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110999729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.1158794 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.238337973 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113755486 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.138842727 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201027699 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144822178 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.239343586 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213525798 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13862889 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113932161 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104038941 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138604098 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101992975 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.229989031 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115549249 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112633592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144912856 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114065226 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114886551 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131953558 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124043159 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114006942 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137543091 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121167418 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114142266 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141704125 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.242415962 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112314516 seconds)
  done (took 16.495051831 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103362953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102346101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10532189 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127078941 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10304529 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101783568 seconds)
  done (took 1.619203339 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.138258761 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115644183 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148721663 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116759317 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161331503 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.239896958 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.249309006 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109071707 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160563193 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126363662 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.245932843 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.245572169 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.217612794 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145149196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.247316412 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118004476 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.251205457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113943035 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.122966397 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139147945 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115041136 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.117811563 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139139121 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.233072725 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117265486 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118223295 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134919776 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125622675 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123361435 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.135569601 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119953569 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11585121 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.132358385 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109761869 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.249163087 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107464615 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110948985 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145428002 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118569699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.115034287 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.248109499 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13892905 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122202492 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117606312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.135900228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108172349 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11766361 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134561037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222706061 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.144448 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118183681 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11564298 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.14291723 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118107624 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.106694901 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136951763 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.117722548 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.249560703 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118431819 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134215815 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117057419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116107739 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136667823 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122012864 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116968296 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144303191 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10825995 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116175953 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137670786 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116962165 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117480331 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.140721172 seconds)
  done (took 11.412174098 seconds)
done (took 41.72921526 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.499948574 seconds)
  done (took 2.473816054 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.068091332 seconds)
  done (took 2.042975557 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.370667012 seconds)
  done (took 18.376559656 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.424187223 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.45708526 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.133830231 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146145718 seconds)
  done (took 3.138379505 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.832343292 seconds)
  done (took 1.831702883 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.335180659 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.250280669 seconds)
  done (took 1.568430204 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.697158112 seconds)
  done (took 1.692571801 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.689015407 seconds)
  done (took 2.670111111 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283757042 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241879452 seconds)
  done (took 1.517023672 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.644653795 seconds)
  done (took 1.634865111 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.253910249 seconds)
  done (took 19.250231675 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259224181 seconds)
  done (took 1.258911233 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290333861 seconds)
  done (took 1.289594805 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.466832642 seconds)
  done (took 4.466908223 seconds)
done (took 64.192923756 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.135617536 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119488618 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118068493 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141115746 seconds)
  done (took 1.503792352 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122791148 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115812487 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.11894767 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.140406378 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121842557 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115494694 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.139957336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117894626 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114047246 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143173743 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116676354 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114483066 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.142858818 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115348309 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113410883 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143040919 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121394571 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117069168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.140492401 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118374899 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116405597 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141185421 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119504041 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117934177 seconds)
  done (took 3.990426059 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112249704 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106749084 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10774813 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130325677 seconds)
  done (took 1.462193581 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.123668273 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126898049 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149721328 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122533085 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126701343 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150627835 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114925926 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111946491 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.139052943 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123925402 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129303129 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152442072 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127819199 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116536454 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151327113 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110470604 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117186654 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.150162927 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12284078 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122986992 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142139772 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1216741 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118748643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.148743387 seconds)
  done (took 4.123687846 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189256177 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126871463 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171915033 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160046396 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.173763784 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113809529 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141806755 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14598195 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122338675 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116087972 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143625631 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159398107 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145893843 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118793747 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115746625 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14530651 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12781283 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120384891 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187243156 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120046518 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146257745 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127881828 seconds)
  done (took 4.12457491 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118864576 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106560221 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104308625 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12889068 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117852811 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10772337 seconds)
  done (took 1.693954277 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106538841 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101019639 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100691214 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125541022 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105087496 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.1009362 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099284748 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.126866969 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10168361 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101264312 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.124857142 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101606224 seconds)
  done (took 2.305296301 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201854018 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142924435 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248969984 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389357693 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183653559 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15583074 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.304222129 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185081083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173793665 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160529918 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205438586 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160269475 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150192386 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208050128 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136221153 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.181340047 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161892949 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230662594 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165804151 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209186344 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178976547 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194390996 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185180999 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171626084 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137078525 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18309536 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118303612 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125306306 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188983054 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160269929 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196900502 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17250453 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138477778 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213905107 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254193665 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173106842 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265564192 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155140343 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169465874 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210415787 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252375455 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138158542 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213621327 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172674185 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1264525 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204783591 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150585109 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205820182 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132135197 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139632312 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207173066 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202983052 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165621463 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160356822 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316874004 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131891236 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16283161 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174011651 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210469222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194972851 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20164117 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118407167 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196395945 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211020138 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235532853 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14057791 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187855913 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122514837 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189064144 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199840754 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205882208 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183200971 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.231842525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128665331 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192047576 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16511772 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176707563 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200942894 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193137767 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116625922 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173289095 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130383063 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122274815 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.211566814 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117906142 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236820927 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127073347 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.205181464 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20024166 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152914421 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182628858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157149532 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183809142 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144759985 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099134197 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169901484 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156618297 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181735689 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124379018 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177576828 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13662578 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121312602 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175351794 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119323791 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19195147 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13110487 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185566442 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165223609 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155059525 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175713732 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170698614 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156592518 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191795552 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213376665 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127255662 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12728128 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239799063 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192419923 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132742834 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194561735 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189896418 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173661208 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131547855 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188794514 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187690252 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166239901 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218462567 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135697901 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131073399 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163642026 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165932184 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182618708 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.181302539 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12515712 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158855871 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211924968 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.149579071 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137270191 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202728243 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129838756 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120053492 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159826864 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132851611 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138289018 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170818265 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134510624 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176883311 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16202727 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18786079 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153960849 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157636256 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193486251 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128702717 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163881596 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172355535 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115318018 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197615709 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189701405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152957053 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176165818 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18441567 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20287034 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167165371 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152504339 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178068733 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15175371 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118176973 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156173415 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193527137 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185962901 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18166906 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202226528 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186765325 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158323426 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173559011 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163195277 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.205491833 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179464257 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139537124 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1949061 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165338376 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115718368 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146956518 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123782303 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158540727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128022882 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132624406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202832386 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186804261 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171734179 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187615118 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133711487 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212395558 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120610035 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184746483 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168993175 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163785067 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181571431 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211101769 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200517799 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136917921 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185575872 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118390564 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121887346 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156973365 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155932491 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160886946 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132294701 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16284944 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18576178 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195770731 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143438381 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212949733 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187980983 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193417194 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144516825 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.15664979 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192157446 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162662635 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.207206524 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131204066 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.180769985 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186436818 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164552525 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186595528 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191120868 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172427987 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216864486 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.187870005 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127148555 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169320904 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156909346 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133515277 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185466931 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140586845 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154876477 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147030546 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161843186 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136547186 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211223709 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138678085 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201194306 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151910497 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194737179 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120691819 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164892096 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168211132 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169869042 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10248362 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1917085 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187410621 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172219421 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15014838 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196722716 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126293568 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337478869 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208327873 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172255789 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160085175 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135014534 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195178024 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156146121 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18640746 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179208121 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165110123 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201435803 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19301046 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137217479 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155761849 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143235431 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176804787 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135695634 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.174730173 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157506552 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.167050865 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18252219 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162195825 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165769403 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200482689 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.140149152 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174063728 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134499417 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246774997 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191479522 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168698516 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.187161906 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159905926 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206325289 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120154549 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121866035 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157038501 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179857013 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154987991 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172803737 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189257066 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204643968 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195607011 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157345869 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135275799 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151570955 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161077316 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171432873 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206355889 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131385981 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132929665 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211354124 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.123468022 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155740506 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154968783 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310585699 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142838118 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194602315 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.103881511 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305962644 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125338422 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155282742 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157102245 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192943731 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.12979162 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17986064 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193084724 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135553062 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185176315 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130199021 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201081485 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203800393 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162232984 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19915655 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140078907 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184641408 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183577046 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169985163 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168729023 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14389413 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154906556 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215948961 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198957563 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127911967 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189932775 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164683167 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193631408 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169956777 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16307216 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17828726 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152185524 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161565214 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160251635 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120915347 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154675845 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189391451 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152708513 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171186199 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19488017 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127172808 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122856796 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170942684 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160117328 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16526551 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125474926 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208432659 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124689252 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205756269 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231791775 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126019898 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188834648 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142588342 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125585675 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161982134 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139390499 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125747647 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.196000381 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176524847 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.152899852 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17110561 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18872141 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185958434 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153252672 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164922837 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.259860229 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122932343 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212782473 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144926959 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219753563 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172016216 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170577473 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192165011 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146264834 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188355505 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144023604 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.244203249 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161629525 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.191033935 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127634269 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16603535 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135528557 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128873822 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176756623 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162867727 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166274306 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131933334 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.189923707 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140870203 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.16994939 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138337346 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222396746 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147186086 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211976564 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179924086 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162861033 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168642312 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199345096 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124669364 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188972399 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194364252 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141518269 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146911603 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.159324141 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132737077 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238400445 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121116386 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185498905 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168979786 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192548278 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166558569 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159855765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17207844 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165353939 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1710002 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151410297 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147533492 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192094085 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130458381 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122125521 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194499711 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1821685 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.160961205 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136855129 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.198654016 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189303578 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.147343367 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130016252 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304883827 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156069276 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216480674 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132031119 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161920452 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141677787 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181000787 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161866533 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195751566 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126441677 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124684383 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.168726138 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15459341 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16384082 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165571747 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205319608 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155359515 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209383674 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.129200898 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279331774 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137878136 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195518943 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114213883 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124766214 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165167077 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131254642 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165549631 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175653996 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236982837 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187009162 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143733816 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158729973 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124506662 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127208349 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186960152 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148010023 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192028884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143999131 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.100985897 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166219311 seconds)
  done (took 82.961803238 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158768085 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149224746 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163470613 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219022471 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191042279 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287598902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226051466 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241226491 seconds)
  done (took 2.725538419 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116512375 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156238137 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139278809 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140789997 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107255804 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.472312233 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155344886 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117959034 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.156310792 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148211571 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132994592 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.560582876 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112810771 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.140989907 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.11762168 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131904476 seconds)
  done (took 3.988595012 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.150206203 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539036296 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.843520796 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.294898869 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.259585083 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202607626 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.733987272 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.197207988 seconds)
  done (took 12.309801744 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.169111694 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.163567453 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.438086945 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.302603811 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.178387717 seconds)
  done (took 2.348486824 seconds)
done (took 124.531660744 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121136661 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120698415 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119849375 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150221452 seconds)
  done (took 1.597327205 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.187773817 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089619142 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091219885 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117048048 seconds)
  done (took 1.581170062 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.451090496 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089691579 seconds)
  done (took 1.665117347 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.343423089 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136851576 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.137933928 seconds)
  done (took 1.730010457 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.133188436 seconds)
  done (took 1.236689465 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122745608 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112763173 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.266840375 seconds)
  done (took 1.603503012 seconds)
done (took 10.518531488 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116855394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.928078127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430435454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130384299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707771043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.4235866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.432821932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170264162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169540034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106194224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158031838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687059258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.445540445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873533074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.407103621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903198562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692496637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109225357 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141148298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110631539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.414202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132573298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109993773 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109763152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.686157155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.444648484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107403202 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.908399675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107910716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111467204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.395214604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136674651 seconds)
  done (took 20.899276883 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110565233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164381129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144049412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110000715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110704542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136725505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120547856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118671744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198696499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107523392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15657302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108416264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112910088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107115624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160579229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108095479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110825386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138239948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115544584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109432806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15736841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107138941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10891693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137799703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108094023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128563354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136227137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119330897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107563222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13985471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112586351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108529194 seconds)
  done (took 5.125006206 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155755598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172928739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14490042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145391476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18361847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110938337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193605869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174999766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200040878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109530875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129317248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135582888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148828231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108570282 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161058091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108806052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111907773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136791984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117173478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110492914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156953437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108358348 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109894307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137434553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109448389 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130256069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135139489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120512968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109913261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139550373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114536797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108487944 seconds)
  done (took 5.448881203 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.122944003 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.122336365 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131198048 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160527872 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117677582 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120809886 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15160669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118023779 seconds)
  done (took 2.155837706 seconds)
done (took 34.731624938 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133254883 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12534054 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128274506 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151373097 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.213005436 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146089591 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124952319 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114413107 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151686184 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129498327 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107267692 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.147614646 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128541059 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118373488 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.247424385 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12317803 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.250654194 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.247475209 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.116062899 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122178337 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.145988646 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.220845714 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.151118344 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116982765 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.244891724 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111898767 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.240242646 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119632285 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.118316028 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.107174527 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.248001713 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.119835101 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.147840666 seconds)
  done (took 6.215944079 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.22872154 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.148481713 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.118068352 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116842869 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118171461 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146413904 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.233673409 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147475092 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116828092 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115566459 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.145440471 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217908498 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.152823345 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11388968 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.118053713 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107657383 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.266516025 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11841964 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.140524959 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092270003 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112177527 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116063574 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.276833519 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112042839 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.147815982 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.116106833 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118148857 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.151236798 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.119386612 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117527038 seconds)
  done (took 5.467974736 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.121823476 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130096046 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134332546 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.211099247 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145579304 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158025143 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135421257 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.128700013 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168137148 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111571881 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125814237 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175207508 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126892338 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121361728 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.138754823 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128011459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.125791033 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139706673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120133239 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1280107 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160523534 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128459138 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132462215 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147093258 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110480704 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119193344 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.118994758 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.150612533 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11920398 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125398089 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.140320309 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114996436 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112699328 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.173397318 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111622302 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123466461 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.161864105 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123306858 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123190691 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172766579 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114802694 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111557485 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.166135387 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16541196 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113320364 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152997519 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123576674 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124629332 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.138844761 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129537111 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152313997 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.140410835 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131539328 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109252533 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138682435 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120026445 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.1106089 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.113849948 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.15328206 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113236214 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.131476237 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.147888144 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122299264 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112196327 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152073237 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110950242 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110032209 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143764521 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138612802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118554165 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.177847761 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111790187 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121974637 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.122762602 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.15155503 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123198696 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.10979365 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15204678 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122482559 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115919259 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152949009 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114879319 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11309489 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155177909 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132588963 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125178002 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152438138 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124562354 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11395128 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.140359884 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129548317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112599208 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.115285384 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.152562133 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112337119 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114276436 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.153082653 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122153891 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109247942 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165204321 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115339538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112252097 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.164557556 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115664975 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116107563 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.119511142 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181157079 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11068783 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121880202 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.153334958 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111187722 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117949219 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143209481 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112108004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.126981127 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.154497927 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119241775 seconds)
  done (took 16.599734434 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.342455467 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.331425681 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.179682679 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412256243 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125419361 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.262798523 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.330775553 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.337544072 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112066627 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.144147808 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.204188937 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.299070595 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.111391579 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.170493326 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.338183594 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.386421642 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17202532 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.14984494 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17657163 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125943389 seconds)
  done (took 5.852024033 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132176548 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145061955 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162971022 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138259191 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121822087 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157189352 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113282449 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13471216 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152255465 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121095374 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114005677 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155573996 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125868809 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129066906 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.153746089 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143774134 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117871993 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.144964402 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133647577 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115804203 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.127653316 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.136641923 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119795765 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162192547 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130227223 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121788153 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.138253444 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.116915403 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118189008 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.119635944 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.144553681 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128902731 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.118039936 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.130690149 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123205578 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126683926 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146071965 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115072332 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116845785 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.113904015 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.154859764 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124111888 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119659468 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126096785 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131388011 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109179286 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124278934 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.153216262 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103626576 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130484256 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153202571 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125639042 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119123665 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131193271 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.147065635 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127500601 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.121041418 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.153673533 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115762341 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.109788396 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.13865171 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116452335 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120478855 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153568679 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124205757 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13067798 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.156567791 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112600855 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11574632 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.142769037 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115756279 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124895908 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160360233 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122051874 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118284144 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121912266 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.148961679 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093695586 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120296149 seconds)
  done (took 11.441361096 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136149958 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122060263 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129287787 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175312284 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12555577 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116826349 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151027421 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131314551 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124670496 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160807869 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129249951 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124057955 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162374371 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122012128 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121251734 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156277964 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126055921 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148202291 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158078675 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138462619 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126012452 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.146570663 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125165761 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123122634 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16846886 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12341119 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137904475 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.154276846 seconds)
  done (took 5.020044855 seconds)
done (took 51.708055929 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.286424867 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.474766906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.241125484 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.240850523 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.260002636 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.259448774 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.240475877 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.243936019 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.649082507 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.216264788 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.242901365 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.252488806 seconds)
done (took 28.752324342 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.310345427 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.380195206 seconds)
    (2/2) benchmarking "String"...
    done (took 1.548740313 seconds)
  done (took 4.064216667 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.23049933 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.230411787 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.475424426 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.231494793 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.23161129 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.231183417 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.231214408 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.236792787 seconds)
  done (took 16.003188523 seconds)
done (took 25.746624165 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.252135923 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.408942668 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.485716396 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.211985927 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.230762719 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.232382655 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.23111201 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.247374062 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.238777521 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.214924807 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.625804839 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.490646886 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.237782696 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.598808723 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.210967865 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.257853775 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.231241342 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.450181453 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.231849394 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.274897703 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.21084989 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.213920809 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264221933 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.233246348 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.235623167 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.241859126 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.229576486 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.232105507 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.407322024 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.236215626 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.263318719 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.234212235 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.222717391 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.235329944 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.231726272 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.246287735 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.432043491 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.23718435 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.217691276 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.23906358 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.43856527 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.247290643 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.23016825 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.23670489 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.211878477 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.242692021 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.218213934 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.340739492 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.250040972 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.246666964 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.242656935 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.613030235 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.244675654 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.243091026 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.239453732 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.459260241 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.238734117 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.278261797 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.2588368 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.244613742 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.229670192 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.245751615 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.240592561 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.231139659 seconds)
  done (took 145.238331832 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.230889454 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.234098828 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.2351874 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.294560467 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.234388178 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.236189048 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.23094797 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.230969911 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.235957071 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.264171503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.235556425 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.231846628 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.236099849 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.205476727 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.241311762 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.254889569 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.235833276 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.232383147 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.258439166 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.232445864 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.231295898 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.237131485 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.231808093 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.231931277 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.260258892 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.306378296 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.249120724 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.242668329 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.241463652 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.233187852 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.270686429 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.279564125 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.815891914 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.105835084 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.236944472 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.264282597 seconds)
  done (took 81.3658369 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.232953709 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232554299 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.233236471 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.261801024 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.233623162 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771048156 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77337558 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.210252138 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.554517625 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.482256679 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.41704759 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.233072064 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323418452 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.247116917 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.235272062 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325148322 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260409189 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238265872 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23499916 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769345174 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.251070373 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.423308777 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408310464 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.248668377 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2641796 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.624436595 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234694404 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26524871 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561186294 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.280376341 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23544022 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.537912042 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.469720267 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.235372259 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343193776 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236855558 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264410112 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.236154989 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.510416138 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235779201 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.236220077 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.237598927 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.832663265 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.235363879 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.768090609 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.23957522 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.149920338 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.235370409 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234807265 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.158414848 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.235971309 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.794299075 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233852594 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.233431409 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.237311807 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.234932669 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234241594 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.264010887 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.14217931 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.046928442 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235666389 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.23666645 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264341152 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.233326432 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.436982544 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.239202575 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.560968273 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.298704723 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.384215997 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.743709184 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.237338149 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.233488369 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322714769 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346611284 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.232927433 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.231603767 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.232875278 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.231599729 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.340381126 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.234036315 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.871149008 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.398407016 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.248963953 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.382583821 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.329435638 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.232363141 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502405799 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.233788519 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.230858449 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883248684 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323847022 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.232010422 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.230808014 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.232361533 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.868828025 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.736078092 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.409825433 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.237053638 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.231386606 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.820386867 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.2358263 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.054834135 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.72482418 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.806821698 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.235441862 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338404274 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.39842063 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.248576889 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.232035773 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.353141395 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.236772145 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.290205647 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.233273561 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.626873483 seconds)
  done (took 378.191493987 seconds)
done (took 605.935195518 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.042900418 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.991666133 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.148099221 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.022411912 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.990483288 seconds)
  done (took 11.328977596 seconds)
done (took 12.464930603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410311563 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408754053 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286854202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411397692 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263345672 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425296361 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392617165 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.249963167 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.335400376 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.305973142 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335723354 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.279963848 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264385727 seconds)
  done (took 18.506607756 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.499778406 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.247083914 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300515999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483070282 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.281825376 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511986072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.542181112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.2466906 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408892351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254996077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253838992 seconds)
  done (took 18.166504314 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.505239738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.248168366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318041422 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487003959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28216057 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508003797 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.567510722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.246986829 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393267872 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255916258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25413121 seconds)
  done (took 18.20020016 seconds)
done (took 56.011578012 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.270690167 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.327465863 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.267474443 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.251220386 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.249945493 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.249681839 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.253833497 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.250406032 seconds)
  done (took 11.255171621 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.250292608 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.249407072 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.248869128 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.24999973 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.249452903 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.249525791 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.252505291 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.249363208 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.249217157 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.250559885 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.249590556 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.249326698 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.25097323 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.248218014 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.249667319 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.251026311 seconds)
  done (took 21.134937056 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.25361181 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.248855681 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.248473664 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.249414631 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.249610539 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.250274644 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.251152286 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.249593986 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.251274783 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.249499012 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.251965289 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.25033699 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.250011194 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.24931711 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.248711729 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.252665536 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.251331984 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.250808847 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.254372825 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.250479231 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.250718746 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.250991383 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.250095094 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.250739519 seconds)
  done (took 31.151973288 seconds)
done (took 64.680816694 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.236082857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.238329967 seconds)
  done (took 5.610985364 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.310884125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.307630692 seconds)
  done (took 3.757831439 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.252351128 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.250028688 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.252489737 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.252654363 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.251840433 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.250833497 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.250392814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.251898991 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.249776077 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.250582084 seconds)
  done (took 13.651327205 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.251894338 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.251408551 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.251207736 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.251297119 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.253388375 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.252607198 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.251841259 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.250857544 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.250689924 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.251230073 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.251591207 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.251762846 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.251300937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.25170396 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.253230237 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.251754505 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.251357321 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.25180308 seconds)
  done (took 23.668729498 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.265603728 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.270241372 seconds)
  done (took 3.674384028 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.380569144 seconds)
    (2/7) benchmarking "second"...
    done (took 1.295168456 seconds)
    (3/7) benchmarking "month"...
    done (took 1.357604479 seconds)
    (4/7) benchmarking "year"...
    done (took 1.350083635 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.294751142 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.272631814 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.294327077 seconds)
  done (took 10.384317533 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.241452971 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.541601066 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.715346426 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.393558334 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.234454998 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.260247625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.21856365 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.260121073 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.263178975 seconds)
  done (took 14.269166817 seconds)
done (took 76.157158534 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.243956579 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.247592387 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.247996926 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.268218335 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.592797575 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.270167368 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.242524341 seconds)
done (took 16.257490503 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.220456781 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.223148803 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.220161418 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.221407228 seconds)
  done (took 10.025249637 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.234132195 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563162657 seconds)
  done (took 4.938084116 seconds)
done (took 16.106858383 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254901961 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.255871546 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.254420032 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.255445448 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.254710011 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.254089391 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.254153163 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.254452134 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.255911867 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.255816071 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.253903148 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.25456517 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255862697 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.255734419 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254684014 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253524651 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25562648 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.25468098 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254669893 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255895367 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.255954677 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255869969 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.254930554 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.255305471 seconds)
  done (took 31.26294539 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.257632533 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.255468199 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.254670499 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.255772165 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.255441966 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.255196339 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.258196273 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.255986474 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.256277073 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.255881076 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25669305 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.255579519 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.255458109 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.256443596 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255438616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.256958254 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.258003638 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256307984 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256740385 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.257076281 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.256559479 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256628751 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.256195171 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256460198 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.257176187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257451578 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.258343002 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.257655679 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257151671 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.258524522 seconds)
  done (took 38.841141277 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.259840187 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.261661181 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.256989093 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.257300552 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.256581836 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.257617913 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.257057728 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.258631727 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.25839302 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.257630047 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.258731215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.257963594 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.257875316 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.259044504 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.257809179 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.258670158 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.258028151 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.259925437 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.257634411 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.257922607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.259019862 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.258712988 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.259225318 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.260073752 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.258179167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.260187347 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.258215906 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.259000356 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.259755304 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.260357976 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.259352626 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.261473126 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.259086056 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.259529998 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.259468579 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.258810269 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.262901046 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.264518601 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.258895352 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.26045854 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.258972897 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.25914943 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.260073338 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.258630941 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.260656011 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.259460326 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.259476889 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.259364726 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.26130508 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.260048191 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.258578114 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.26083785 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.260659464 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.261635624 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.260840369 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.260814915 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.261881892 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.259487118 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.260643367 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.261377668 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.261870434 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.261835325 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.26075347 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.261318519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.261409185 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.262249854 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.261292282 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.261497308 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.261375681 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.261546624 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.260332607 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.261190194 seconds)
  done (took 91.848469 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.262398012 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261831484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.261798787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261101353 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26166279 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263554915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261999823 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262171826 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261764342 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263441974 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262635929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264509912 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261869867 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262579602 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263379988 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262121863 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261897942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262696266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.263368438 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264292387 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261376434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262257446 seconds)
  done (took 28.922635506 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261971363 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263581709 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.263060113 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266234122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263678667 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264581452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.262820525 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265210604 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264697629 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263032455 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263454808 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263565287 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26509248 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264992903 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263137183 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265872376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266641212 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266034474 seconds)
  done (took 23.907063268 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.264125905 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.264175745 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.264489072 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.263646302 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.265240029 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.265428517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264955228 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265417237 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.264288158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.264733591 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.265271808 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265417926 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.264537908 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265215667 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265315186 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266191778 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.265258118 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26494257 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265065696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266435968 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265744771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265425471 seconds)
  done (took 28.980433002 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266094305 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265424584 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266679293 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266893341 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266187424 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26720045 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.265906281 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.26665474 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.267209164 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.265541008 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265197297 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.265819147 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.268523198 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266317221 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.266519022 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267678621 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268068685 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26578365 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267096361 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268150544 seconds)
  done (took 26.484405898 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268644779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268022832 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267640923 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268076902 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266804209 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26950998 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268090117 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268382578 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267619049 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269427512 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268567561 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267898116 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268647184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269536001 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269562203 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269584829 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268885624 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269287559 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269771739 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269061649 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269700851 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26935923 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268886092 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270342912 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269387035 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270099359 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269786748 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269673152 seconds)
  done (took 36.683547732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270362621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270058297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.267904322 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.269118712 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.269479003 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.270352259 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.269352679 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.2699488 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269682159 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269017644 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.270263311 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.26997239 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269141083 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.270621329 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270689346 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.269937647 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269959523 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.270055818 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269609553 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271481647 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.269739833 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269377595 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.270047378 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270101101 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269808758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.27227695 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269818649 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27050879 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271171075 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271753223 seconds)
  done (took 39.256208234 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.289612243 seconds)
    (2/2) benchmarking "in"...
    done (took 1.289052414 seconds)
  done (took 3.734417902 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.271437477 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271877601 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.271154765 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.272043213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.272285187 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.272566004 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271440276 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273237191 seconds)
  done (took 11.331320956 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.263742047 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.272188329 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.271911815 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.271104181 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.271068831 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.26305989 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273085708 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.276048995 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.26577653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.266164858 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.269127149 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270376623 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.268064564 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267169777 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.265534396 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268148878 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.276243477 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.273040649 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.273320846 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.272727136 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27211977 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268089845 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27204428 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.27532454 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.265482373 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.275171705 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.274361403 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.277096462 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26703605 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.272808498 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.270494098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.276151319 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.273343689 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.273876203 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.274947677 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.274236309 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278310612 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275527563 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.275649996 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27792686 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274627105 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.273861017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.268849894 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.27289335 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272034342 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.279685106 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.274464396 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.274388338 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.267610275 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.270286987 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.278711466 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267959876 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.276366997 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273533723 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.272676302 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278891291 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.28245966 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.269067674 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.272915696 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.278331985 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.285405053 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.282295494 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273410941 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.278735494 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275001417 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.287038045 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282056416 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283957434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.277479747 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.276990506 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.276081207 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288280497 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285009163 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.282096558 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276185312 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.276698793 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270114115 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280077752 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278826081 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.280548218 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.282922804 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277683116 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27773669 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283638491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.273640982 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.281028739 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.276903718 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.277020244 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.270269843 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282702643 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.284969098 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.277493243 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.269441907 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.272518648 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.270364332 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.275569706 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.265881221 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270267759 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.277221537 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.272982445 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273508917 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26194707 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.265801351 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270044284 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265365418 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.266821313 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272561399 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258703716 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.274201035 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262481406 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255413731 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.248483648 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254108701 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26137607 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250642975 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255678217 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.264518772 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.250166089 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258750515 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254429973 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252773647 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265987568 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.26039294 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25313175 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249145659 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253135782 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248580343 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247035251 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254858975 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248799917 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248032576 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.245580139 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257351281 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234269811 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243261334 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235010434 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243560209 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240990788 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24171402 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237214962 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245704162 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.231825835 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234565001 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237026648 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240350822 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.232360425 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.241932785 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.234878895 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.234820744 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230946078 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.234653047 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228874675 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225768034 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232950369 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.221679631 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232449104 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.224005804 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.233755527 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227559174 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.228186882 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227979765 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.219534934 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224928295 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232075826 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.226985691 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228456501 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.229489669 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225414547 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.226656057 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.217857411 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.227034362 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218772685 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.221411299 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230730778 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.224908561 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.223451415 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.222932077 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230773859 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224843106 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226414077 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.217791048 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.223506971 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.227429098 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.224183266 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.230027805 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224269469 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.223928383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.217397786 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.219815576 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225262604 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.216286404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.228298327 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.230354448 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233643077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.220247248 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.225980206 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.215353791 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.226268982 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.223359879 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.23176819 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224417741 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224664397 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217090502 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227033396 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.220558378 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.227739327 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.216838033 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.228465334 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.224881326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22552336 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225650851 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.219164885 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223131319 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.228296545 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225102969 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224613535 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.217896204 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.228139541 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.217331002 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.221299466 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.228469611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.224489459 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.22769054 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.232996645 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222151696 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229958526 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.226042335 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.220848237 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.227890186 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.223980991 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226242003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231480243 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.230057772 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.225587187 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236038568 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.235280649 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222855731 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.230609462 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235983561 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228496416 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.222788173 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.233003482 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229868288 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.227154907 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.227315761 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222185017 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232629314 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.231319975 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237550447 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.221423126 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.233191796 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.222699318 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232299237 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.225809865 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.232898668 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.228908086 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234075182 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238556813 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229820397 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224346482 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.232688215 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.230169512 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229955455 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223191967 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.234873016 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.231626826 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.229889178 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229059396 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.226177623 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231211387 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22247195 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.231732503 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.223791009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238634606 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.249672228 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23484528 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.233838471 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.234020942 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234448395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.235950845 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.225430165 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226743857 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228505562 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.226756292 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.226362089 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.233468443 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.22638037 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233903193 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228543021 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.232234093 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234247644 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232276259 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.224835177 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.235575703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.230650443 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.230964772 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.223083797 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.232586125 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.227448 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233576276 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23160215 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.227645827 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239979017 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238782872 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.229407342 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.228706978 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.226843907 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.225250494 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229880432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.238154999 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.226395556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237085435 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.226100209 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.232218315 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.228850774 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239758527 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241733525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.227014855 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237444426 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.233507648 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.225477646 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.227636758 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234726935 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239031819 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.245557937 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.225752856 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.23567223 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23416816 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.232737791 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231753285 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234620828 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233672991 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234546249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241131903 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.237611494 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.229725834 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236028236 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242672281 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.230513706 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232793668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.223556238 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234352536 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.24051586 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.22726175 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.230926424 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.229479701 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235473484 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.23215847 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.233936328 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.234988414 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.23355495 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237575114 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.241097179 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23599761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.233263596 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.237996122 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245782858 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237997347 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.244086577 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.227553985 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.239285896 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.233860663 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.227606956 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.228893181 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.227821717 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.235805191 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.225266082 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.236621851 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.233197527 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.229810523 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.233570948 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241054714 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.228081786 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236917479 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250285381 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.225956259 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235088025 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233593779 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.227306281 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.238827986 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.234723049 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.227761845 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.229147469 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232354687 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240819868 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230748082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.237636005 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230238462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24135794 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236172904 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236416824 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236552239 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236441499 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.227997936 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237807635 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236818696 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245762515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.231715369 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235883852 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.231661462 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.240684121 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246763404 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.229432888 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242245835 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.238947652 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229622914 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.23401022 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241067071 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231481737 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240140434 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.230137539 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232029503 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.233975855 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239833122 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238781521 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.239120947 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.229294626 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230783982 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241255738 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.238502302 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241096243 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.235433137 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24575501 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.230673889 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.231708448 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239232678 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.232907391 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242876668 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230621795 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.233078434 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233333672 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.24003716 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.236974042 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238319752 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.230287107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.232559438 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.246661936 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244058808 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.234871661 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.235310009 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.241619173 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232959274 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239248494 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.237104121 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.23436954 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.236492965 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24392644 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.236952013 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.233873241 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.232825369 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243331588 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245601891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.245234185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.234572599 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250357166 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.250079988 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249478334 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.236520996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.239699138 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.237243674 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.244338612 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24245811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.236955181 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251181121 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.249915147 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244367393 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243516836 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241598864 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.235877976 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243015287 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24332467 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.239918073 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250787649 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.241214541 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251546331 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24327773 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.242675173 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.235226436 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.238206063 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.239047529 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.240425076 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.245861096 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242227575 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.246206806 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242242206 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251365034 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247674968 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.242141943 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244629509 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.238115638 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243653866 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.236318989 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.246286034 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.247984412 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.238986076 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247733159 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246457323 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237678281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.243355549 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.246661374 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.244474637 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.238615017 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243516226 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.250998258 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256287726 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245938271 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239306412 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.240307883 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.248718045 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24334416 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243707364 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.238793368 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255762261 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.259819696 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239054302 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.242793338 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249641131 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256452758 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.247089744 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24739965 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.243130619 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.24514364 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.248229848 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.24695331 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251103782 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25344222 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.238828365 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249504003 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.238787263 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243781522 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247241285 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259936891 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.248472172 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.24159024 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258106829 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258671898 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248346247 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267105652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.258296736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.244551713 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.252653607 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240888116 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.250234824 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.243981543 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.250864869 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.250575106 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250229402 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246926702 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.240682555 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249601313 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.255563488 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257799132 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.249311677 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.239075676 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.245366818 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.251331434 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250580752 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.249984414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250500139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.24661664 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249991033 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244045937 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257264582 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.266265099 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.255150269 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.249221751 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.251994334 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.248531627 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.25450123 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247107886 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.255952434 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248363698 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.249952918 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248319374 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260437207 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253225191 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.244687095 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.24534623 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244908452 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.253828563 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.259119658 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272380424 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.252429835 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.254284053 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253472806 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.252660147 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242962905 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25235604 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250944977 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.246825021 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.247775682 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255396973 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.254171389 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251414458 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.245678025 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255031059 seconds)
  done (took 742.706075375 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248332889 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253312416 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252402901 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252755813 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251686605 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252011388 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252483194 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250198628 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252037667 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252022251 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252667867 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253250343 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253194147 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254696856 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253333913 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251626061 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253528129 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250408425 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25017677 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249741619 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25470607 seconds)
  done (took 27.436735024 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256211549 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250179471 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252446487 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250075111 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254638357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253456827 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25618315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254029312 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255928603 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256918066 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253305549 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255955613 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252204625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.254405178 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255833124 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253369069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2563721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251149531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.252563156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252808266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25529097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252206992 seconds)
  done (took 28.730728271 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.25792007 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.254616878 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.245571174 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.253736318 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.255998669 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.256874263 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.254253491 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.255103145 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.254749148 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.249437172 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.246329575 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.248559088 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.249192864 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.258021757 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.250699627 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.26083224 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.259185639 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.255242299 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.254568526 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.258110119 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259082517 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.268334205 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.255481791 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.24729245 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.254501544 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.25922923 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.256537527 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256291609 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.249624115 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.260788721 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.254080972 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.249601894 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.259815843 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.260644738 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.249726382 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.258258436 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259101273 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.256999634 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.259126668 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.258648959 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.271460145 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.255433601 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.25948957 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.273895418 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.258049564 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.252007171 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.263981346 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.25514994 seconds)
  done (took 61.448176996 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.257118523 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258376405 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.259669078 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260996142 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.257065648 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.256430048 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.259211026 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259367772 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.25671918 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.258392543 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.259037203 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.257756168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.259182863 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.258759383 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.256858727 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258726379 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.260296518 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261558639 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.26055955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261313536 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.261919319 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.261684154 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.263198487 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.261793567 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260471508 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260835433 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260965384 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.26166132 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.259203993 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.260770002 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.261439015 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258196399 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.262214093 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.262788503 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261188022 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26251162 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.263775489 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262791184 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262216821 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.261139704 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.262009623 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260426392 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.264097294 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.260805717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261610484 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.260679972 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26247676 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.262980214 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.26515955 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.261075465 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.262043235 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.265725366 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260153643 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.264318166 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262890061 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.262917819 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.25838216 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.264285861 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.263977821 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266062943 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.263933523 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266185416 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.267602433 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.266178047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.264820549 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.266089184 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.266366671 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264034768 seconds)
  done (took 86.935400028 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263217424 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.265155098 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264783741 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26172682 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265525049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.261230339 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263777371 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.265612447 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263182901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26355182 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265819514 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.263877636 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.264958465 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264235169 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265559778 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260437086 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262643353 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263903736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262906486 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264735334 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.264697787 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266526177 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264114059 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260608646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263135373 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265022636 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262792898 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262709704 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261482786 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266049363 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265847424 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.262898536 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265991256 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26219613 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.261378274 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264919334 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267167747 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2645695 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26211929 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.266453318 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264125034 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265390933 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268169484 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.262744904 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264081075 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263944917 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261705146 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.264708799 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265422926 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263952408 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.267579106 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266548569 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268192578 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266182215 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.267172797 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.266525609 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264891729 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264933956 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263564588 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269117065 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266667603 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.265465819 seconds)
  done (took 79.553421019 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267504096 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26474076 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.267431551 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262823983 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267443451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265728623 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267773042 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266575126 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267914189 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.266636701 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268222056 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265490763 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268384072 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266493076 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267211077 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264338974 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267443658 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.269157006 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267329349 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266405965 seconds)
  done (took 26.488153178 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.266125413 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266706978 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268118916 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266592114 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268234245 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269818817 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268554869 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268782056 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265739227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268768498 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266091249 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268053801 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269478768 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27158067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268849861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26809153 seconds)
  done (took 21.439830766 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.263878905 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.269680502 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.267762237 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27125815 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269240845 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.269023456 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.27035997 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268708733 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.270373887 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.268488684 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26816677 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.269939051 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.270659129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.272616853 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.270858011 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266158934 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.270033569 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269599032 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.267032927 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.271220473 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.266814157 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.269477795 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.270377549 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269816119 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.270694815 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271801546 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.271776726 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270841106 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.271254397 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.27195347 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270781965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.270932068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.270365432 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.267479831 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269515029 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267659226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.268065981 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.269488152 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.269979765 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267550067 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268426889 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270259987 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.268304195 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270752374 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270288052 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.26826801 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.270541674 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270156407 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.271020231 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.271573779 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272540753 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.272894729 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.270603164 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271417069 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273094775 seconds)
  done (took 70.997419054 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272516896 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273445064 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274030732 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272668895 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269696925 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269670973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272269836 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275674634 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269726527 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269368821 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271733862 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27561902 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273633498 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269597379 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27126269 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274789333 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272810952 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274934093 seconds)
  done (took 24.061118031 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270635795 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271697943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273321108 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276269782 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.274559308 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271924845 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273873774 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274858352 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276824736 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273306504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2729676 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275259177 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276517714 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.272194271 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273048182 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274924662 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.2721051 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277897296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275292817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274156633 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277731804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275909072 seconds)
  done (took 29.19599839 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.264568515 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.269086318 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.266100138 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.283830308 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.275624187 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.26829437 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.267593905 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.269679553 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.286947721 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.303348131 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.296093226 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.277110648 seconds)
  done (took 16.48538342 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277133923 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272909705 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275909964 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277352542 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276738899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279615988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275499911 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274749797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275448774 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273284019 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277916734 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276488955 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275759186 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277157685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275469201 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275580681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277491957 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272937049 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273455144 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277159797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2746163 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276227587 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276715415 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278253481 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276134295 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27960047 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278698313 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276457471 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27807813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277564109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279091318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27836201 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278774217 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273121568 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279545059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277825552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277828998 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279691575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28140022 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280128933 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279577034 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277660195 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277266827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278562888 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27884147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278906678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279561561 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277324581 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276890191 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280075799 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2791593 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277369549 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280035136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27736958 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279870368 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280083183 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277859097 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278811356 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280829234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281997889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280639113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278859052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282487329 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28187163 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282080484 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279055834 seconds)
  done (took 85.50340705 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282302475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276144433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27846232 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279241084 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28282723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280933001 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279784398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277513931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278457152 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277718664 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281167147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281530694 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279552459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280553963 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280437816 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278407075 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281247613 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280104314 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280879629 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28261359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280492599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28169213 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28152077 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278836097 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282586537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282755706 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280427217 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282646587 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281424582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282758309 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282728266 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284125724 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282773682 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280979984 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281657337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282322308 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282777617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282446395 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28443439 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282772203 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282364575 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282933135 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279885907 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280272491 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283862642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279335496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282188128 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27971806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28391932 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284044889 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284105848 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282825264 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283385297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284571986 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283796805 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282822175 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281319036 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281096295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282912667 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280021165 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282281975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281136988 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283122133 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283063084 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283236209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281891362 seconds)
  done (took 85.747448984 seconds)
done (took 1749.125577345 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.440814887 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.39116917 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.27059541 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.288085955 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.268678807 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.27485102 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.2830419 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.272885866 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.273792149 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.274512223 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.276096388 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463045594 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.317180257 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.272235323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275983025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.374674591 seconds)
  done (took 26.182279988 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.299841215 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.28892131 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.387975438 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.287772138 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.304921831 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.456471783 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.340391564 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.288620026 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.44072532 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.30238331 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.277384731 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.301846592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.283256593 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.276487114 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.305571374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.462857012 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.538669978 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.281279202 seconds)
  done (took 28.293548306 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.693491946 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.308493068 seconds)
  done (took 5.173160362 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302259558 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.284582787 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283632666 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280775104 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.276211903 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.272521662 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.282838039 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.282596043 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.275381522 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403119691 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.290964714 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.295510656 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.283651341 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.284072048 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292019657 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.328768147 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.428370401 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.294477898 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.291938268 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291096328 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.283000863 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.365695118 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.322177425 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.29586637 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.398587043 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.282968149 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.291876761 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.292117363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411725882 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.296150078 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.284724604 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.285378221 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.286133525 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.234314773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.805376679 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.282803243 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.307028418 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.294060429 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29179916 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.424695394 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288819315 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294546299 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.293672565 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.811893133 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.407890458 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.402394382 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.293859781 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.291908344 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.288921768 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.352740905 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.291496346 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290465704 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.342175304 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.073668528 seconds)
  done (took 82.660090226 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.33473608 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.278595645 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458491696 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302723585 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279741278 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283067525 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.285707209 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545118022 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.339975787 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.280260904 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59572128 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878474339 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.290606959 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.342680943 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.304080924 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.31378588 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283119103 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.278971804 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.286325876 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.278714886 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833286786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287096798 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.281838907 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.487307899 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.319355963 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818610989 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.284455802 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.286236588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.288671266 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.280292835 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852347826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.289698747 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.316920329 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.281116449 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56296369 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659763365 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.622859174 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.287148279 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330659457 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.283515699 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.317082629 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811768627 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644873767 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.282245464 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.282086371 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813877469 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.279161108 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.298694409 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.293796879 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557811076 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28712481 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283947909 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.288109055 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.282961161 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.284138615 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.311332077 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.311513832 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819023392 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284166241 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.283972829 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.30017167 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.284589571 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28967406 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.281917749 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289293464 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653050422 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.477575604 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.287541234 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651804971 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846362991 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.284710233 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916928517 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.290916527 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.307929673 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.406177139 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293550945 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.285278781 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816344185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.290529392 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.281282593 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633640502 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.291160989 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583631115 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.303544198 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289700041 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851698196 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.291843673 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.32058522 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.285453627 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288118995 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287758318 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295265897 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.577039178 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.350371288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.289326052 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.285906267 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.291248258 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281200061 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.30188062 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.293392245 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913637804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.298981305 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.288987357 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290308127 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285090783 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.301094661 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.290093487 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.286711669 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563205673 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.290662654 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.303829842 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290038308 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.281801497 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.297249595 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.487895959 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.295546375 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.584381516 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.292039481 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285181245 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.289646209 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284370775 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337012 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284498948 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.289825907 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.187656109 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.605288855 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.305163436 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.287618302 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288111384 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291945238 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28464243 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289442987 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.329151475 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.293022239 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042470582 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315366035 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.321458392 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.290115843 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.298226563 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.29081596 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.28596216 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291362098 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587219535 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.577340621 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468603317 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.286244083 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.292375986 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.067834354 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.341709753 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475025284 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306219454 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289986728 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590708289 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.482882522 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.288766984 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.286981499 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.286402814 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563464931 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292413128 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60181785 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878752395 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.292040557 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.293667749 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052052168 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010860302 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.296869689 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.292820034 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.577619098 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.302327398 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.29255502 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.288324509 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.294102025 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.296845479 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.295100789 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.293763133 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.294535477 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.292985555 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.362682784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490188367 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.309164289 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.290741321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822590768 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.304072938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287841194 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.314470489 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.292926315 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.293471482 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.327541149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.294047184 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.325569678 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.291316896 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.298333908 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859898951 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295081262 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.294966003 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48943239 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010388516 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.297538546 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.29482862 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29881313 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.333629623 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851040056 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.300913798 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.594504555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.304935841 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334238125 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297228898 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297188899 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.849022714 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.297323027 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.292730877 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.011041624 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.294631916 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.065778671 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.28949074 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.293021083 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938453363 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.294582245 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.293573857 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.289616155 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291123847 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610237357 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.29816345 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.320629329 seconds)
  done (took 487.352586544 seconds)
done (took 630.824507672 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.294976276 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.289368593 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.295622476 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.299453173 seconds)
  done (took 10.369081414 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.311140078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300118452 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.312818183 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.303270399 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.314819287 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.301932656 seconds)
  done (took 9.032415131 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.296633799 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29396434 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.298510257 seconds)
  done (took 8.076606776 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.499339124 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.318746223 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.638203627 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.311810154 seconds)
  done (took 8.958311302 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311224387 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.311363261 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313026435 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.312190678 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316749471 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.315861178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.312692658 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.315405794 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317750551 seconds)
  done (took 13.007943726 seconds)
done (took 50.626271167 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.43959838 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.282846506 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336127367 seconds)
    (4/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.499043393 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.375103702 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.472039109 seconds)
    (7/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.471045608 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.423086788 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.319529449 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.278936541 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356849163 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.783934361 seconds)
    (13/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.279270764 seconds)
    (14/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.371777162 seconds)
    (15/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.279770359 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.277088961 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.307461911 seconds)
    (18/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.554879867 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340095948 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.329558033 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.702669365 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.510312019 seconds)
    (23/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.337285919 seconds)
    (24/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.414889258 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.512068975 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.642134301 seconds)
    (27/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.400252337 seconds)
    (28/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.375927567 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.380269184 seconds)
    (30/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.278505394 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.400302129 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.496320397 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.33127465 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.44868092 seconds)
    (35/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.281960529 seconds)
    (36/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.497263789 seconds)
    (37/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.279485818 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.284822542 seconds)
    (39/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.586327437 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.383924759 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.78245535 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.288347905 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.573367145 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.639522756 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379286898 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.392528312 seconds)
    (47/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.451963603 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.327779175 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.314026149 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.540680546 seconds)
    (51/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.302357757 seconds)
    (52/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.425597293 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.416354215 seconds)
    (54/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.337194886 seconds)
    (55/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282170522 seconds)
    (56/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.279776431 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.402769002 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.282806066 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.481624422 seconds)
    (60/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.468409721 seconds)
    (61/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.380992014 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.401934903 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.281435396 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.394158338 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.460465102 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.388407094 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.444958459 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.407848947 seconds)
    (69/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.345668999 seconds)
    (70/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.546530294 seconds)
    (71/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.33279255 seconds)
    (72/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.280737087 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.395097025 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.542385299 seconds)
    (75/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343908568 seconds)
    (76/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.417622251 seconds)
    (77/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.548600577 seconds)
    (78/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.307485413 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.60191362 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.289171752 seconds)
    (81/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.390570493 seconds)
    (82/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.358186232 seconds)
    (83/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285964133 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.386647549 seconds)
    (85/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.399943144 seconds)
    (86/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.484954054 seconds)
    (87/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.476419984 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.41860805 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.390496493 seconds)
    (90/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.281904296 seconds)
    (91/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.64528251 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.294591395 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.44924664 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.517999914 seconds)
    (95/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.618587905 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.448396155 seconds)
    (97/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.399944118 seconds)
    (98/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.282062814 seconds)
    (99/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.516573064 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.467969116 seconds)
    (101/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.477421417 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.420844126 seconds)
    (103/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.649495472 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.427653613 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.338622144 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.481317396 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.396837911 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.513283291 seconds)
    (109/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.380155646 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.422450169 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.395041645 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.299165217 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.42175081 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.341796977 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.389312371 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.293515841 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.389111059 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.341841906 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.411072326 seconds)
    (120/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.389850015 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.314590951 seconds)
    (122/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.381546725 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.292139866 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.34959196 seconds)
    (125/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.284210444 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.407828742 seconds)
    (127/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.285937633 seconds)
    (128/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.499785628 seconds)
    (129/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.425008143 seconds)
    (130/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.310806831 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.387708887 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.459741244 seconds)
    (133/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.605934 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.496215228 seconds)
    (135/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.551879632 seconds)
    (136/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.508169193 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344236148 seconds)
    (138/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.334827864 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.308847103 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.448621875 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.43919667 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.394643768 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.645297583 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.410545744 seconds)
    (145/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.582902935 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.289868212 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.479122422 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.431040672 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.382291435 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.461841904 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.300614915 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.465926773 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.337778188 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.643495571 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.557470699 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.337227368 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.421567952 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.290078876 seconds)
    (159/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.322194871 seconds)
    (160/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.528136336 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.425852476 seconds)
    (162/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.409744186 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.375548955 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.465418748 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.375009854 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.344296387 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351143495 seconds)
    (168/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.548776831 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.467570184 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.421760998 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.557113042 seconds)
    (172/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.288076889 seconds)
    (173/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.423806257 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.41156082 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.340676259 seconds)
    (176/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.291148725 seconds)
    (177/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.588836421 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.384834812 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.576458139 seconds)
    (180/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.518937195 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354565483 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.59697525 seconds)
    (183/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.290201836 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.434987909 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.51310685 seconds)
    (186/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.289768327 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.408071212 seconds)
    (188/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.440865046 seconds)
    (189/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.291147377 seconds)
    (190/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.372312029 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.295614846 seconds)
    (192/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.389924332 seconds)
  done (took 320.662590853 seconds)
done (took 321.852032045 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337412006 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.413154806 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.320164988 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.318463934 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313805681 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.317679964 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.343118826 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.321702197 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330523605 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.331245846 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.317933853 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.331383093 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.3347991 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.327368634 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.353682404 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.315786303 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.317112597 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329615009 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.332063024 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.336712758 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322717312 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318983723 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.34604193 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.321713632 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3246215 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325983783 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.323333699 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.311623859 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.325493987 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335964528 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.311846611 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.31970319 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337748594 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.333503066 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315843018 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.329588268 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321966247 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.412908369 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.342073249 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.331715509 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325423806 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.335427543 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.323625704 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.324525676 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.328867774 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.347462565 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329691255 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.333557884 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.312321541 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.320736248 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341986413 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.335051074 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.32971387 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.314872153 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321809242 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.337011255 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.331823272 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340323227 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.327598197 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322791874 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.355819106 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337823813 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.333704582 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32814331 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.326547775 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.334361073 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.330736464 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.335608141 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330834048 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.32641943 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325875568 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.328786895 seconds)
done (took 105.037952762 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440905863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.320035511 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.481775575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.331714074 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.484812642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.438851567 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330810719 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.33259239 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.333693839 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.129233799 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331265348 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.333167502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.323973443 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329476052 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445857231 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332914479 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332205929 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.028576122 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.335501992 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.460285101 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.323007514 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331234519 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.3315433 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.131379729 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.322655595 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.316049345 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.456547497 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.332547781 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.03214563 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.316604981 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.317721499 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.031444271 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.456816296 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.353917064 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.340210274 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.34428596 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.493018682 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.334336463 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444988765 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451031372 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.494088598 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372016919 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.31951258 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323065128 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336307824 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.339453705 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.333616523 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.365293683 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.31717984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.335698758 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.030396208 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.343699123 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344635323 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334321441 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.33838399 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.355175998 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331668243 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.338313928 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461973027 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.33592306 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.44686386 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.134309739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.137030263 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336167913 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.325495286 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.336913898 seconds)
  done (took 108.004723756 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.3986942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400904063 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.43824937 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.323954976 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38005129 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.438374015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.32583165 seconds)
  done (took 10.918046999 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.332572856 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337505914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.378187517 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378778637 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.334639326 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.500779795 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335894021 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34132859 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.337501433 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38175176 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.33984861 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339551839 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.349203991 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.327206082 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374413472 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.341515124 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.44095716 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.332295461 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.337189711 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.485185885 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338086008 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34692916 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.382766624 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.342042508 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.34000533 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.336843542 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.113001012 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340283295 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338001002 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.339006278 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33796279 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.398036806 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338657642 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.332841602 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338149546 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447467506 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.340842133 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337538234 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.341281588 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.325401258 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339974703 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.33962067 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341794005 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.341179482 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336254487 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355781458 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339963754 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341575181 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.340797032 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341981523 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.382189822 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338915906 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.340145376 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.3398585 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.385102102 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349633205 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.340551231 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341222786 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.336176331 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340431406 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.484747793 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381385649 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340843513 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.381489993 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340421743 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342829301 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.341568667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.34015671 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425392229 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.340736166 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381049813 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.343095468 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.512374131 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355638384 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344856165 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.337335055 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.336095164 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340113714 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.330203661 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.339793037 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.340196146 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.334749583 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.339696223 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337308375 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342474191 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.493011897 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440982522 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.342896525 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.348796833 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.337046491 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342621169 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.380098736 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3384458 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.340031931 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38189091 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.44633787 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.382619986 seconds)
  done (took 137.820136311 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.339940335 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.345740035 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.335709855 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.363358077 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.331463031 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.334121567 seconds)
  done (took 9.26810122 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.336488565 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.345313419 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.343063151 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.339727448 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.34253052 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.340531294 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.341702678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332984397 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.34648094 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.344932383 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345267144 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.344589707 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.34475911 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347405599 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.344499362 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.343812537 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.344483096 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341493774 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.345713899 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344484547 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.330230097 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34418056 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341048684 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.338903262 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.349221027 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345884903 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3601388 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.344793511 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.342407922 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.338466338 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.347857169 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346254483 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.336134394 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.341348284 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.347695147 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338892248 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344061489 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.347393171 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348224697 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.348734169 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.346707769 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349274993 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.34599531 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.348746078 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.341774877 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.340662291 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.35161701 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363539104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.347189355 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.347872248 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351332518 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.348745211 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.3480569 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.350672083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.342322038 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342545321 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.349648245 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.349268757 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34952305 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.340240281 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.350558655 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.349906273 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341459517 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.350222506 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.3464822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.349556331 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.34198345 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350643101 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347807105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.347390028 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.350098307 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.348076577 seconds)
  done (took 99.09325989 seconds)
done (took 366.300291333 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.902990982 seconds)
  done (took 4.125857405 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.331375393 seconds)
  done (took 3.557216805 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.894311176 seconds)
  done (took 22.119738624 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.337319029 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.357884566 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.350657628 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.335518313 seconds)
  done (took 10.602974326 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.634504903 seconds)
  done (took 3.857610716 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.347356376 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.345297817 seconds)
  done (took 5.91846805 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.501380272 seconds)
  done (took 3.72518795 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.032718978 seconds)
  done (took 4.2533484 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.358985565 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.356750919 seconds)
  done (took 5.94418911 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.314884747 seconds)
  done (took 3.537379979 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.309335928 seconds)
  done (took 20.520645004 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.348812231 seconds)
  done (took 3.562693675 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379653662 seconds)
  done (took 3.589588142 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.733564278 seconds)
  done (took 5.942539405 seconds)
done (took 102.479935144 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.317013851 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.316091242 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.319539801 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.317557914 seconds)
  done (took 10.478306873 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.39726782 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394706461 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.404213296 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390664246 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391639332 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399430862 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.358176289 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.373310669 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.388353621 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386115139 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401680125 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399315435 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374876953 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.384895704 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402630139 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389717957 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406862853 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374290893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.391854911 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.335658987 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.391187169 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.386198875 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.335561512 seconds)
  done (took 34.459930645 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.843545385 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.396564954 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.478744471 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.378042968 seconds)
  done (took 7.307642558 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438795799 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.441170377 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.46647458 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.4920522 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.543330464 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45309017 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.36224871 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.357196157 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.342469547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442588269 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.524811519 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439420507 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.655601979 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.335627812 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.653123698 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.335053718 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.334886166 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441064801 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488555704 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.518142396 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.335735108 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439477194 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442439312 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.438593496 seconds)
  done (took 35.933942546 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.344070999 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.353583328 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.337490142 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.351898705 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.338421566 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.338835762 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.339440347 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.343948461 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.337652697 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.336591006 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.338644149 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.351415887 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.338539598 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.338316912 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.345441439 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.340542281 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.340328463 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.34448298 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.34793939 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.338801441 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.337356038 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.346329047 seconds)
  done (took 30.741450524 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.323581149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.323067689 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.673745791 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.578125985 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.322577375 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.328692075 seconds)
  done (took 13.763711777 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.392978196 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536593517 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33584978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.663982199 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.756793943 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.338997504 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.331018518 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.566764263 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856018391 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.848495523 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.389870167 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.40320962 seconds)
  done (took 19.63626163 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414668071 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334089135 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334173515 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406604685 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339002492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335281119 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40785426 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035592833 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.347367101 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611919001 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337858052 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426509645 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584025625 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337360862 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359764432 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.298072864 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571113813 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809818211 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34656588 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346118511 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377715597 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344607107 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343602069 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.538015382 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346584511 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33908976 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600216492 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33925502 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612352909 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592073242 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594232346 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350519494 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615250068 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966179524 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452681215 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530937923 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339501604 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346034322 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.34392777 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.346042687 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348345944 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349081774 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585805139 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349949794 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340345213 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339757627 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05050456 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.354371475 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.339670489 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341774904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587273668 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430883767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.346804104 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340550575 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343209917 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346846522 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.34556762 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466701311 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985939653 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353632108 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347843434 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.349369079 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340362295 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349094084 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980720466 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.355807543 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.345966375 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345975534 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341970604 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342333036 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384598602 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341851416 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.361650427 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340931622 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090627491 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36270552 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348708776 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868295838 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357572266 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.348125426 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567190624 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342874467 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340687552 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.340976242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340303141 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063013289 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355816059 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.311607238 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407487547 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.039733555 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543492729 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37133254 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372307682 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565565097 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.312390796 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343049284 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.347458229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351708609 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364775198 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04305645 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348801943 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.349908963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590742172 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.556842231 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350561124 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.311848059 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800314689 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35950081 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.373353436 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347156765 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.541930215 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.950163733 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604860701 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353152218 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386514769 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344768644 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127671436 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360835276 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.355660491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35726078 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623940472 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.137046493 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35100576 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416745646 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343959569 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344957571 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35719747 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346233015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343667925 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.515255521 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365577788 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599155874 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.352774571 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343896803 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.346287162 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350160739 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.353909967 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566995611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357252493 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624749384 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345772836 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345348227 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345934403 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.565581038 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.347961821 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.359485278 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686700732 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351845207 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36101095 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600276253 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388521337 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458187911 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379660059 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.355224397 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60089559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.352383721 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.353383866 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359112727 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356236932 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350131906 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355895004 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342775453 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954823562 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331999372 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355224011 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348227113 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.363014112 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422443262 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355493327 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538974601 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.35657894 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365136444 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.361327849 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.34863192 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576072052 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595039184 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.354411134 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529223739 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.797365661 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954444384 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370313834 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.346780543 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.34854226 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.348375463 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348850005 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348575568 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349243462 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542379896 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609995928 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356205016 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959432112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359505843 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355445018 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.364720206 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596753052 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366874538 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349646459 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.34987472 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359626657 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367096306 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607002817 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578577039 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.366550426 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350258623 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.869064449 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358587241 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352397969 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352207964 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378335567 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35869998 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227861736 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698309905 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342954562 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60720898 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365460764 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373886669 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.349662253 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363400616 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369929777 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.374044604 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386431411 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.54450698 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361092779 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360044944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99146877 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110564233 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910945382 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359091402 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.371507028 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357377529 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062138195 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359432686 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353902015 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592569801 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063891392 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358722327 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804270673 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.365669553 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097299433 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610278887 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585812017 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35389012 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.388996026 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608096203 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572164994 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382554674 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366760641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360176235 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.323779981 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888136492 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365311601 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539105691 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05872668 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372406637 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361640471 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.390391815 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.36064188 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735767681 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362250706 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355283901 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354793309 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361774944 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207278382 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36841558 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355265798 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997964818 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362582413 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.814676125 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361582181 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.552705026 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612229529 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.588616914 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.363208192 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.383469357 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.607100713 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604791224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363413151 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355965856 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912799229 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.218570005 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.362855688 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355935081 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147800703 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373422211 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637743951 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.377360749 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.361602171 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385551953 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357066162 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355881866 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.357005265 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364518564 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333187705 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82628293 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.362870045 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35918439 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357233207 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379963584 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603839548 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.374377965 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961672746 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587348992 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357036527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392429608 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.361743931 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356356967 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.332195624 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356875177 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35684785 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365445487 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58611678 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361743864 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.334135448 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441805201 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574277996 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358127945 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355961119 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569001746 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.364804647 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.360547944 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197632743 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391569475 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356635044 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365757351 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351565328 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39758087 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432348317 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553285072 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.615806275 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.618296635 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741903747 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364378509 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367555525 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37439001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439657579 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358894838 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.3667207 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.365150344 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964089822 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140424221 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97589292 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620209602 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367975203 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359611115 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359986894 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601471877 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359825823 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634903386 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359296156 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.360189941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398377861 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360015092 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383680904 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578327314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635216684 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359810644 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360415875 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368433447 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.360587898 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615063745 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.581175423 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840507133 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902850026 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367552992 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372888617 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075119498 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643693062 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360590703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361222474 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360671503 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.363580849 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37031435 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376480435 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361993669 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594884079 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61179278 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002776346 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617187771 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.397387487 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.233332676 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36218221 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610003428 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198209481 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556624145 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981099677 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080770817 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616449634 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435477619 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558611269 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.369057311 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60026829 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.370440966 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364337412 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362331969 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36305585 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.36285244 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613669347 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978667163 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623180501 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.368060605 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.369841143 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393582288 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.558935974 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592139138 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095043143 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590751927 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617921515 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37897806 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363220827 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979290199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626772071 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373354578 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.37012603 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569480912 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37081156 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398611052 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.240692284 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.363706522 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899329307 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.583088656 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388066544 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378681268 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080907933 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983759501 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.372923702 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84735029 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374743865 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366141921 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650026339 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.373451118 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365834058 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660680985 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.370942212 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379052811 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568944415 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.97884048 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121415609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.373887331 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375457676 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.385273888 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368563228 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434450656 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374619057 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377865796 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.746843779 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373115527 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369887185 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381572395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.370572398 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375492222 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.37322011 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367745417 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.376347502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.34648658 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.363964244 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38205535 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501774745 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911490299 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373942627 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.984626435 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.701621687 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616508583 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372368355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.344188828 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.37383155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369255974 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36970948 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369779908 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368584979 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905766503 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.378611136 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.627121786 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382427592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.580431354 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58382369 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37293757 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572544325 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376579914 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396789822 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.338861622 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368542791 seconds)
  done (took 971.325423327 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.367662135 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.363246718 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.386768071 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.432943676 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.37483818 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.377432049 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.379390329 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426569546 seconds)
  done (took 20.355264112 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.362968708 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.371940996 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.363104523 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.370610595 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.36971874 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.843871516 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.377688233 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.372550863 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.383905612 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.363020354 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.380294217 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.985935991 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.371244781 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.37294956 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.384270686 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.379227985 seconds)
  done (took 32.299989807 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.047087333 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.381625449 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.872654577 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.391104583 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.39240891 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.366924567 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.496218465 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.367805363 seconds)
  done (took 25.566444703 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.376528538 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376642299 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.377316357 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.37651057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.378757702 seconds)
  done (took 8.134753433 seconds)
done (took 1211.213963361 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.378274966 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.377863222 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.378925598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379309116 seconds)
  done (took 6.762417893 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.342995192 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.343953845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.346526005 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.361743568 seconds)
  done (took 9.644293891 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.030896345 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.882287628 seconds)
  done (took 5.160600751 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.894853096 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.886410414 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.880124196 seconds)
  done (took 6.910136214 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.649958128 seconds)
  done (took 2.899120463 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.322299783 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.369420408 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.371678461 seconds)
  done (took 8.31396477 seconds)
done (took 40.939219257 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.363736899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.127962114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.520005839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.364511866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.524310487 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.519275044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.615385489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.377925018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.36599832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364754287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363957194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525293502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.602569078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.128649626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.603249062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.128297247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.524177208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.370044781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364848038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392784602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.61555265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364355967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.3915623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.372527643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.533035264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.511967175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.373637254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.128459254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.365474902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.380241855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.518422558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372314387 seconds)
  done (took 82.326762658 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377199982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.376724773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.378951115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366773667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.381245439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.385700686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.367750716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.366912858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367767706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.382221791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.367765613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.382719385 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.368241462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.366957543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.386645823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.368433896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393757132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372525925 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.383698133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.381865635 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.372280474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.377288198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.373803946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393047862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.373467453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.3740448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.386912906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.368302355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374254043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382616426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.375225892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390311987 seconds)
  done (took 77.319619298 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.366851178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.374324038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.383873593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.387745006 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.372997531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.382642255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.376662068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.375115111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387108628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.387459108 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.388519959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.37499242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.377862316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.386527327 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.37338141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.370267915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376445393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.375097787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.377070427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379472554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.374253587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.369309283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.38026078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.374305461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399228345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.376154759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385193507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.374996906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.377740752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.377029056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.377745585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.375043635 seconds)
  done (took 77.369967483 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.611075651 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.385250162 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.38876975 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.379547734 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.388669599 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.383990234 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.379944105 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615002924 seconds)
  done (took 14.78827407 seconds)
done (took 253.057909738 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.38759416 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.387304743 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.412777245 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.389651245 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.397694627 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.408824125 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.581094958 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.411566717 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.568004889 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.402310393 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.395967162 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.38176343 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.158564557 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.51789816 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.385172016 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.387347025 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.238987906 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.379491609 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.388941907 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.60421708 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.413974037 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.373655818 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.39143156 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.248955937 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.357092122 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.464404344 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.449938408 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.53624736 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.502042405 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.446053524 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.381704014 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.389550924 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.401994151 seconds)
  done (took 65.799517773 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.379911944 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.389836276 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.387674274 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.39087971 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386945811 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.39030303 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.380296469 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.389124653 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.391527658 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.389880634 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.390935129 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.390545189 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.390285595 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.389538843 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.389418807 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.364660042 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.380579166 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.389931889 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.381286354 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.367707848 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.388560017 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.389839342 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.391172564 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.391987979 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.389851112 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.390174123 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.391290182 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.391716011 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.389505435 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.390504901 seconds)
  done (took 42.874219754 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.391570193 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.381312074 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.382314034 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.390772849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.383659931 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.38596971 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.660740195 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.398172465 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.386093026 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.387390229 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.320043317 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399457334 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431904799 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.379225342 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.391182259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.393460315 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.390983067 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383310281 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.376192447 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420778315 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.669111869 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.399369902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.662436041 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.406199755 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.388032288 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.3848136 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.387770906 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.376835843 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.386996221 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.315592163 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.12729423 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.661912912 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.377671923 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.377870298 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.14801842 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.400342689 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.393413509 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.328742195 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.387175057 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.38613652 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.659360949 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.385207946 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.378866722 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.378796357 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.3934498 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.394889564 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.378791718 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.326091733 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.619328149 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392149865 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.379380039 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388159825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.396412703 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.388389276 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619541728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387830771 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.386660245 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.378934966 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.407422445 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.661350432 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.39643219 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.386463594 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.386711022 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.386360371 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.381254883 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.388148905 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.402751849 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388661525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.380177793 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.390066784 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.380272477 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.389045718 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.394404486 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.317950629 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.381009687 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.380708001 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.391276929 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.39264352 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.389820396 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.660283231 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.392212782 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.380921812 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.673988901 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.391462872 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.398567194 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.399934264 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.394922251 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.458012968 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.662598547 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.296207432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.39918417 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.398188588 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.666617752 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.395424616 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388398619 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.381174123 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.416807544 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.397028961 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.381596245 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.388782385 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.394280144 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403428467 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384052665 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.396761854 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.66759745 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.393612652 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.382894434 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389786787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460464514 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.39867676 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.402536697 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.395577341 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.676105414 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.393692525 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.397505001 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.383310131 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.34747893 seconds)
  done (took 204.860472206 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.38494051 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.383729587 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.385504414 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.382846183 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.383787609 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.391582693 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.383851519 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.38602712 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.390176491 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.384194189 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.388995713 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.392654725 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.391979471 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.385317528 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.389149108 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.393938827 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.384400348 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.399776744 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.39162833 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.385143342 seconds)
  done (took 45.026548192 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.400208891 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.931100547 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.904157207 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.400754278 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.40217096 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.392811 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.447231639 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.405716191 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.400059964 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.681498311 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.555852875 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.408442596 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.401522416 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.401606901 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.904576594 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.376152091 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.67929058 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929833676 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.400832524 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930021304 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.37406961 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400835404 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.390883727 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.929379394 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.689895939 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.667175026 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448594702 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.938228832 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.402676155 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.401846302 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.931231996 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.403138781 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.39325735 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.918344527 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.402961996 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.41558911 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.401735947 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.448330555 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.456546379 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.688248969 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936373459 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.678859243 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.413383686 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.558730002 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.411845268 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.37504481 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.941333159 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404822989 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.375735641 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.404509162 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.410013126 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.917826407 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.395870264 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.919533333 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.405304402 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.404878376 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933973023 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.918854957 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.909396186 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.557683134 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.400985979 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.670295715 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.403504731 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.942275668 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404731866 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.40595642 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.405055915 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.560455362 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940574437 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.671454845 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.684312626 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.685248454 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.403840207 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.462655848 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.410644752 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.685104579 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.459598117 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.788725231 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.691295421 seconds)
  done (took 126.077413834 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.66128 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.504255889 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.767038758 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.95741341 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.881368082 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.529026456 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.509746246 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.639418293 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.400039372 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.503891029 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.02154333 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.486746105 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.150214184 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.458084281 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.503644941 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522792805 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.782314947 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.328522345 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.030669044 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.999027434 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.399211802 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.49886303 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.159308336 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.764056636 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.407037446 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.155984707 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.281637043 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.902283087 seconds)
  done (took 53.475513202 seconds)
done (took 539.369884279 seconds)
SAVING RESULT...
DONE!
