cset: moving following pidspec: 32511
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.52982392 seconds)
loading group "string"... done (took 0.503072075 seconds)
loading group "linalg"... done (took 9.255623544 seconds)
loading group "parallel"... done (took 0.166649027 seconds)
loading group "find"... done (took 3.12626784 seconds)
loading group "tuple"... done (took 2.018445091 seconds)
loading group "dates"... done (took 1.373241471 seconds)
loading group "micro"... done (took 0.193202372 seconds)
loading group "io"... done (took 0.503624991 seconds)
loading group "scalar"... done (took 56.280587609 seconds)
loading group "sparse"... done (took 13.750942748 seconds)
loading group "broadcast"... done (took 1.751339482 seconds)
loading group "union"... done (took 10.32678062 seconds)
loading group "simd"... done (took 3.568842183 seconds)
loading group "random"... done (took 13.393267483 seconds)
loading group "problem"... done (took 2.205144253 seconds)
loading group "array"... done (took 24.047980462 seconds)
loading group "misc"... done (took 1.151420703 seconds)
loading group "sort"... done (took 3.777602944 seconds)
loading group "collection"... done (took 21.927172673 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.672236397 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143332203 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.180741982 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.221780061 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272541225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163286004 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139971808 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.162147321 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.637507918 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205698408 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137248558 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410036951 seconds)
done (took 6.098574471 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.261502146 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060759723 seconds)
    (2/2) benchmarking "String"...
    done (took 0.153146971 seconds)
  done (took 0.910708778 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091695564 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157690435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107368069 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092269959 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091909873 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106996189 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092438888 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107956041 seconds)
  done (took 1.454891815 seconds)
done (took 3.419877645 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.548240889 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.886181546 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.518823681 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.177299839 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304209044 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.305527995 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270176051 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.215332165 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090256454 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.068307362 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.186155565 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.435644154 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.405845013 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.987599439 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068302315 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092584817 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.149235417 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.7906571 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077868105 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108220875 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.52883811 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.208442047 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113800491 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106096709 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183336922 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13074741 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139414322 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099998466 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.659227021 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129223139 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.211130613 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.081877148 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.136612183 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.160685876 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216605678 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108359892 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680913602 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198438998 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098139718 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.0977133 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682723412 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116880991 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.197729293 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103747195 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.066788892 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.157921193 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100150718 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091815486 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092659602 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083110892 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159855123 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449144501 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10455495 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.188678863 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091168996 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698014822 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095766579 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272766367 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124444197 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093898467 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089271855 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088261568 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158964638 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093274529 seconds)
  done (took 20.115001381 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169479025 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.185812505 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076259846 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159567212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122399299 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096442475 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088129365 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078142065 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129572643 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179399306 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139530708 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.175398067 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092054734 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0884898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.165867042 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23314831 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123095237 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102350875 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087884417 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109491895 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123495724 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095067363 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109251343 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093520913 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168901041 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.2019785 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105367539 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120270293 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087852501 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094541344 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140698124 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147479249 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090966801 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086217589 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171533026 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120715532 seconds)
  done (took 5.281131366 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.229046288 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105716301 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.242825101 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194504446 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.19507417 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131219244 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181357355 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.189847963 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294184298 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.211776748 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178843846 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12592496 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080377343 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092298011 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0776522 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094712231 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078097748 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.822992261 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15043352 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165702178 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182039376 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094164256 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094757384 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36094402 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099197565 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084393307 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112028096 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062786878 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.216898028 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092542958 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.594113104 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.085215335 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097677086 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096040558 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081243417 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128730699 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121344719 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134120799 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091797558 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102492972 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.209243916 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100098442 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07537709 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09457118 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115065916 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128772377 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.090274387 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12194174 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.132236171 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086305989 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107778044 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.038894061 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19350105 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.142095073 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100895258 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263771165 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126238702 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097925208 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107855599 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.823192443 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133529002 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082034947 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.092068465 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094370774 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076557137 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.449777322 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121863833 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.712804096 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082297888 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155482978 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094913291 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11529309 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083953851 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082424025 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12449621 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08398176 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094204839 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087005672 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07715329 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103671069 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111601507 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082604049 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093024781 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144158845 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096691709 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121482749 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107783117 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10320861 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085073157 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124705758 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079973354 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086587671 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.182579346 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094618997 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100765739 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111791021 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112096866 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140909367 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087702481 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.279302827 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095351155 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120336154 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095733249 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110922696 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110784784 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07919684 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082557446 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094511453 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080022471 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144084775 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.10226825 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078582145 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086032457 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108094921 seconds)
  done (took 27.451806317 seconds)
done (took 53.545343696 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.402285359 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079978653 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079618252 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099542072 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080292781 seconds)
  done (took 1.513900276 seconds)
done (took 2.260925653 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.297178017 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193285614 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084744608 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182604171 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085184085 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190830363 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161125682 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116373773 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200169955 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083963377 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183154205 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082803842 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084427377 seconds)
  done (took 2.720122788 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10407723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103937635 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100080617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117012102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084730494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099566729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116161616 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106259738 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098362088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109834069 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085376871 seconds)
  done (took 1.877400828 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101177929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102266412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090126502 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113688344 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084330665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097290789 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112611565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105838032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09761532 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109583694 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084835512 seconds)
  done (took 1.85061917 seconds)
done (took 7.194771324 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.193574959 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.733779439 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.187028679 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.238690567 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.337336105 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.268464639 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.622124663 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.19653415 seconds)
  done (took 15.659988687 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.187204402 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107493899 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093465404 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088091978 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108211705 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091058949 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092966521 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09228792 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107955534 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090593383 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092936265 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104106327 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094082995 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091760794 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110078871 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09583884 seconds)
  done (took 2.466152974 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.134490363 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112930559 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113999704 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096463591 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091676437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115114161 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10048593 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09415331 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.110835541 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092617387 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099337851 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112071136 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095641166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091613236 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112408017 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117107599 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092224853 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112607963 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.1148621 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096465303 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.113572838 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09390303 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095859816 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112998073 seconds)
  done (took 3.361667939 seconds)
done (took 22.240222456 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142259707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082461705 seconds)
  done (took 0.982638785 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163902275 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.177628276 seconds)
  done (took 1.106255677 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113461655 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088414797 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135305966 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101149883 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089194635 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105632908 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114581438 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.088986124 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.106650771 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090385209 seconds)
  done (took 1.80374019 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096477209 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092780645 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119477273 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.165485905 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115213453 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091574457 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093386105 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.108871177 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.094715208 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.087963975 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11083017 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.106971448 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092740788 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124165722 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093153884 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094009616 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113805886 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092031803 seconds)
  done (took 2.661820371 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091792586 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090821909 seconds)
  done (took 0.951029605 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094609605 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090842884 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09006415 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107782801 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088597128 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087805019 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104845956 seconds)
  done (took 1.432317974 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523940915 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.234242218 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.36809214 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07112133 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12064727 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296247883 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.120859348 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072107318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089762299 seconds)
  done (took 2.699318878 seconds)
done (took 12.399375604 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09267905 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.18910899 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.610252309 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.128347147 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088696732 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.143091628 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.304182323 seconds)
done (took 2.329436121 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349380483 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161137296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083338659 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090360982 seconds)
  done (took 1.452880965 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082815636 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097784601 seconds)
  done (took 0.958322858 seconds)
done (took 3.191701931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090802618 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088204128 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086867116 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.127061873 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087246369 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.087513466 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.106434637 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087369074 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086314021 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086238077 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106537967 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087087803 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086268511 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105168604 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087179772 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085785695 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087628535 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.104168339 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.205734923 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087872406 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103368138 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087377106 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087161926 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086457067 seconds)
  done (took 3.150832429 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112847362 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089416307 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108982586 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092819071 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091326777 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108944424 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09232315 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088885664 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10917922 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089811631 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091680122 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092383658 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10639623 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092230428 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089347985 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110412548 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092411994 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089114497 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106310109 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091943617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091057705 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107154713 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092806511 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09131832 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109231636 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092428151 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088988672 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107103019 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09263165 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092123073 seconds)
  done (took 3.691690466 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098132089 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08438479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087965766 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114373267 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085121864 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087886175 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10221523 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088727479 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090210006 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086859511 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106991863 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089437003 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087026997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106176679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089519563 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090275489 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095936099 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106720186 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089382177 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088448868 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109042853 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088024342 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087795797 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087375865 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.105780871 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08592366 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087100754 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10456471 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089040821 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087383756 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089868074 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108360836 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088199016 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097270887 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107165769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08905149 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092499019 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102476707 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089561416 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084290431 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084499664 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105741384 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087979532 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09349533 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105385584 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089637873 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087781425 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088886876 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105875824 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090882877 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084731912 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105465204 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090650416 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089506117 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09044724 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102851473 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089425189 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084362434 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107420373 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089174024 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085033322 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084614433 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110963239 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089511043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102217053 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112387783 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088113678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089228872 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106075746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094302613 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089875245 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116268862 seconds)
  done (took 7.583742747 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115498053 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095807033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107106698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089651597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087532283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089888703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111207694 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089393216 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090302588 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112611629 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088980111 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089469364 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106601236 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091246926 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08860763 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089786288 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111806834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089304831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088560368 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106138934 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089184456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092435868 seconds)
  done (took 2.907203369 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219949755 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113806405 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135655004 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119003786 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105268769 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119282282 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093970488 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094316236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109580313 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098769635 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096808428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110911383 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105595558 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096988037 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11559515 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098625625 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092590243 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117455695 seconds)
  done (took 2.833026851 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106444902 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090901313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.151790827 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090944097 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089523812 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.108826154 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097626307 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10906911 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110059358 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091137263 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096188221 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108595145 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091063457 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09010278 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089857686 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108583754 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091381622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090163293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114339119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096222734 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094951802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114290205 seconds)
  done (took 3.023348876 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106843608 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090257118 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125060884 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094448996 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090152762 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089591729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113661597 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091277869 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096098315 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109026652 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09079354 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090261885 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.1220534 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091070086 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095960737 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108567698 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091996382 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090750192 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108717999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090267358 seconds)
  done (took 2.776863469 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197069579 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125187037 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105989331 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113637327 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124814346 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106468176 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132108246 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106552404 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106380521 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134035952 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105497308 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106157412 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132049046 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110465174 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123758497 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115755778 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113918512 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135002846 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105270049 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105529751 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136474711 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105414194 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131869197 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106676791 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105892301 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124347524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106502112 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109894977 seconds)
  done (took 4.126743565 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093875837 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089231076 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088295021 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107626103 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090294305 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087872387 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088943632 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107714718 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090705884 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088280043 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107145788 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089649924 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088664452 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088951633 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107205103 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089761557 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088774649 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10735078 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089927491 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089212964 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088428293 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108555954 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089507147 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088631493 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088485791 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108359606 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089235853 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089261689 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107683053 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091088885 seconds)
  done (took 3.624168141 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106168428 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098483182 seconds)
  done (took 1.000707455 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100952071 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103190424 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088472939 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108293853 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097214281 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089365777 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115428538 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096476667 seconds)
  done (took 1.5974194 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167984437 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.186458286 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095028122 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120799427 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.166469322 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.177118571 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127609558 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114347874 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089959802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082831432 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.179009597 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081330082 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109293483 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087675978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089145019 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115760737 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091970846 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09877995 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.115888371 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09284373 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095236706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112567734 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093624268 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09983854 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084047553 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11185633 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093150859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.119812545 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088775468 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091679295 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088271329 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.110443156 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.093287763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09487538 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109294646 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165963091 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115958999 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087666999 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090735287 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114556395 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124274146 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090063887 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.111210968 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089374288 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093770704 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114347258 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095662131 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091599636 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101212686 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086690922 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091120122 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084835067 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.108791282 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091788426 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090235408 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115182499 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.092640372 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087155046 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105140187 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087732273 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088988652 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105385229 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093906663 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094513071 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108875134 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091439766 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090275204 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109982691 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093247158 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0921762 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090018942 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124346847 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091946118 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095855524 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114236994 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092152267 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087563649 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117032451 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089823841 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092110453 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.11332804 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120003972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092456977 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105524491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087194923 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096940744 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110830235 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093606994 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083786166 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117284406 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093886783 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092097312 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083509732 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107260022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086830995 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094092412 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103045628 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091248983 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090162699 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113276417 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096735024 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088321467 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111893048 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097513999 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095213446 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089216494 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.172928628 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087802848 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109051129 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09374912 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095988437 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105223045 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091105159 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090609994 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107667529 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087461384 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095987341 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090561098 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11459736 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096980886 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092463516 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115224017 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093521543 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09113577 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110037433 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095985175 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099848673 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114421262 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093408865 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093534906 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092528203 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112306561 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094947565 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087854608 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119389811 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088358171 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09120839 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11523356 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09723639 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092497047 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108706615 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090711012 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091535518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111820915 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0965651 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091596355 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10782304 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086773046 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091519168 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087089436 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.115336063 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099587075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087365307 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115257235 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087891527 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099942345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.110182264 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098064582 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094230164 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118740525 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097412687 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084191628 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108406162 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094922053 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093904941 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08820186 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.114787159 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091962753 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097833719 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107072128 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09600761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084214273 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109199161 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097238783 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093480643 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094756594 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109463558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130488647 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103993843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119838005 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091063838 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091232786 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117783148 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091642314 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094901822 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119524592 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097424358 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088907511 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111054096 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099522313 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088043547 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094459709 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112289265 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092531073 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083583925 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113824566 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0848645 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096865104 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116489943 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097429367 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096860691 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114172831 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090897968 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099541093 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.1090668 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096593168 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084922891 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096325222 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123767137 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098149756 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096738878 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115396216 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089708766 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092743413 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122493583 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09391223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090956305 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.11347038 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086203643 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084869052 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097364153 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.115783453 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087808618 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092794929 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114844213 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094325668 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08926215 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106020329 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096145416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09474426 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108548777 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095297444 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088396711 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110629775 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10034257 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084428992 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089205418 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116434231 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096778887 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092588481 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112518372 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094563507 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097395275 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.116832606 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09626145 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089405734 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119951511 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091183979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092148508 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088559367 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.115934999 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086087085 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093991872 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113582617 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089202151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08826508 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115912881 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099332765 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097295342 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111048458 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097921467 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099306785 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096799365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111253944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098735734 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087182195 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106757141 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089229698 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085119772 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114781963 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090489841 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096715869 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111640445 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091552285 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095594632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102869839 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112046351 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099325194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12252426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087835845 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085612111 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090156616 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114467897 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08836539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088555831 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115663744 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093787232 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096785009 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116004204 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090043909 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092990642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120346387 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090102461 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099491655 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098610807 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.119309385 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089818614 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096355851 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110871544 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095782969 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086179875 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11340727 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09281909 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092166705 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110369768 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091862384 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088487265 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106789437 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089620624 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098410992 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09052959 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.11873485 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092802854 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090262302 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110836251 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099408513 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098458637 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112931862 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098965478 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093316289 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10669046 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086618796 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097829155 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092698382 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.119418772 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088268587 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096672844 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119778108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097095798 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093825285 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122514475 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102412982 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098478595 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118004299 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087181469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090933535 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117868802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094998735 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095678897 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094860903 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107765519 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095055118 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098149288 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114887213 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091861551 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086273066 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.114697822 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100978203 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096192965 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095817797 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.116807192 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094275688 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088036102 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118109811 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098883756 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09238078 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119527341 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094220273 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097140041 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109213254 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098680522 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093995576 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087230272 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10735373 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089561695 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099326375 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.11034125 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097549654 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097276184 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109829801 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091551801 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097877141 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089106114 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118200086 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09834861 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090894626 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123665969 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095379359 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089852985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118314605 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098394947 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086232473 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111726419 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093053761 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099676767 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091384932 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119404797 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092585837 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097557396 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118581796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097368847 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098516271 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.120903094 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087677144 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099410003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117013747 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097249132 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089748556 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090551008 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109693958 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091664365 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099426637 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112038062 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101346655 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.098817638 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112214068 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091852153 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098649803 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112970459 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100827745 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089076927 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093825134 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111558959 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094741818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09117105 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120893622 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08968687 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087416723 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120856922 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099049509 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09715666 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115814129 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101131838 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087540883 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086358431 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118292249 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090364403 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102189375 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11771921 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091969785 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09110122 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117152719 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094994577 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099121954 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108691906 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091795926 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092777641 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115370339 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092612179 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088101105 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09713875 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114504745 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095535588 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091224885 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110177227 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092372632 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099887817 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113017394 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089666576 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089936886 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120866323 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093510257 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090238295 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087604275 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120893493 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094243684 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099343383 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.113172526 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092877727 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089569289 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117458658 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100110901 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091194153 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115367485 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092572815 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097898432 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119474103 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087342011 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090712357 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123594053 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098459735 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093776584 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095310705 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113664415 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100213601 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09955833 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.119452985 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087927253 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088957429 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112577538 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088516619 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095877193 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118855842 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093757873 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089921627 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097225012 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119912316 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096867636 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095005053 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.110743378 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101598117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091022282 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116609078 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088865864 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087255511 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094799381 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122735968 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092528723 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092721342 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117462032 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097155435 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087915287 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112474713 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097545241 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096757746 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098072926 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115184566 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091574448 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096387376 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126300461 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095214528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091696088 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121451988 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10034419 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09337246 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118471526 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097591841 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099071709 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117591267 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101399966 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091374852 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113648033 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100776821 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099868252 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122704377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093768768 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0868707 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098234141 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114660555 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088692415 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09657309 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122702115 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100324229 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092786665 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112907585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103284384 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097991189 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11507196 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093141217 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090401543 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118684282 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094004202 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097241262 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090240327 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122371096 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100251155 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099219869 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124582384 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088941604 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09836855 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117309281 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10264528 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094838068 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108257893 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089583939 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096234454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100194846 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121349679 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098076077 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096723238 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120543275 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095982002 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093501033 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112338621 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101604355 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09905558 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094517633 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117917742 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09319699 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093316736 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116776332 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100328225 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101152779 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116080051 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104486905 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099398273 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112462535 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09268607 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093941523 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096642084 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116168449 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098532619 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091247613 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108828219 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100867857 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100676081 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113886151 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102238759 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102364526 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113777325 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09771975 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100618713 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09836727 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.117551117 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095739518 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096083683 seconds)
  done (took 61.126241319 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149195388 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102214951 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118090968 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096642595 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112799422 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120046996 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096519338 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098069345 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118153596 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10611559 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096223471 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116809617 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112413551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115759984 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137554916 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106709569 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116507567 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098257309 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09568648 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097176496 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132290014 seconds)
  done (took 3.19497457 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.120537237 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109155916 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128982175 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109812429 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102535118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129685705 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108084413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128869393 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110454044 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103306857 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1321392 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106294288 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104503212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.128719484 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104312178 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125097832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111414596 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102029421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130364096 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107160562 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104844747 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12916971 seconds)
  done (took 3.384813872 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130737095 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099513658 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093628796 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11635387 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100087182 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096097774 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118770557 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097369071 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104578679 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091314215 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107984006 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091769011 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094328123 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115547719 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091868476 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097639352 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125796536 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099918394 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101045303 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096275029 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109404437 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097322126 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097177626 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107753484 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102330696 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101113234 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096637926 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.120615638 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08755951 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100514111 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116175226 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091933161 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087158292 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086734988 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107956168 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.099743529 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099341186 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117803446 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098010445 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088164977 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096737469 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120179844 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089350059 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096769729 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118421139 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091269039 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099914946 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096056866 seconds)
  done (took 5.742592984 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132133568 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155190809 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101213136 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123435177 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134639274 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106447608 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09938262 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148517499 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098750561 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.099748087 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136742193 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110239104 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124633004 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105457165 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101401672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1236077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102540446 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099380686 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12563473 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101532903 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104410913 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123912121 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110179168 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.10921829 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126912101 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100665696 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100683668 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125027725 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109410819 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125301334 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104767877 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104686238 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132043866 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101136225 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100365012 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122131215 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114314657 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101071877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123937665 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099753743 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.339694114 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12377602 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103628436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.110327991 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122991113 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10255951 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101377097 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.118100675 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109997518 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.101051704 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128359088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110006267 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102457359 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124563657 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104485272 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.108608875 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125472944 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100868588 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.100819416 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132645181 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098120462 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102399002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133652682 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100910166 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126031925 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111848983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10104842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124941834 seconds)
  done (took 8.906794066 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134914753 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103504125 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133414454 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113103311 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104480357 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126320875 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105112418 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103172369 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127708755 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108841425 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125833669 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.220282146 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124919468 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110163311 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102473129 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128680634 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10628372 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103530568 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128001859 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104373421 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103156465 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135661901 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103921395 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133965203 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114370608 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100089296 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125683776 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104025551 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112356371 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125632551 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113320411 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124665046 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105215345 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111713265 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136669113 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103491048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098769085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123955067 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104385868 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103820314 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123882858 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113502144 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103045069 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125167677 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104897237 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103722963 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136022524 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114326973 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130120732 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110345565 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.103355705 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132364921 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104428462 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124862891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113481054 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118094733 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13570757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112084728 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125828324 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113436375 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111666853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140852281 seconds)
  done (took 8.161655501 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103892505 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097316506 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096966588 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118796947 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099078456 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097851357 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0972813 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118605221 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097887167 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098413966 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117156025 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099349649 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097557038 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097425396 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117633341 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098374732 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096689948 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116446649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098362988 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097831829 seconds)
  done (took 2.926210786 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112041654 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114676591 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12169776 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107872593 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09950422 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126367617 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09998132 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099821051 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098805085 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123090244 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107644874 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106736681 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121917914 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106466195 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129174977 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107288737 seconds)
  done (took 2.650910347 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123335945 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114687075 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210241141 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10207728 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124240588 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106714664 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09961533 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123769389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099755528 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106864958 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102589988 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126439926 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100865732 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100837621 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123469141 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103127126 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098396034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125419391 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100799968 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21273342 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104137085 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102293424 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124398654 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105405486 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101247008 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128416096 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106648617 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100430759 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123992798 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104121445 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10335908 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128104424 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101106064 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104944718 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101376618 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123958612 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101080553 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10193853 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125752837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102114253 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102318095 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.121804707 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103459618 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102360589 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098736877 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122779914 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101834566 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104657693 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126037958 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103676213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100794135 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129292987 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105771713 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109040505 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128570414 seconds)
  done (took 7.13317894 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115928187 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102376783 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134078092 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100562404 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101332465 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101276947 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12495492 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103837836 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102611482 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122245872 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103412122 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102093812 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124202079 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102444704 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102033085 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101213656 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122593642 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101909666 seconds)
  done (took 2.840551725 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110228616 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100691276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104143102 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126491971 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10113841 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100856645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122152378 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100112893 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099133809 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099433109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124311619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101382905 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099165905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122097438 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101838802 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100680861 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12159515 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100919009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100211291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099282749 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123354727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099678024 seconds)
  done (took 3.234438486 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118017452 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.209578832 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107337272 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.217733895 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097705658 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09649058 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131048633 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097955603 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.136888454 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097500845 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097068961 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118457597 seconds)
  done (took 2.402713849 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133346037 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138394268 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123590625 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10212819 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10928973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128874623 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106722032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105876812 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136500115 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117269635 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128137555 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114777273 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112079339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137144283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109396953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109990352 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127989849 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10700747 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101854706 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143549306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105614207 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13494097 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105400662 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104926542 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127729599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11414062 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112499395 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138168645 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10571437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134595883 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111106598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105441399 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134799047 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115995232 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123370739 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115886111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105862903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142166902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10984731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135050979 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103471247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110401022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135061939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111138691 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113303731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128522863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111583999 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10520016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129178343 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125559027 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133041045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114487041 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109130261 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136027887 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113170034 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149866927 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116264538 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135905571 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111489307 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116967738 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136601675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110272306 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136164446 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116493841 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109432775 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134967769 seconds)
  done (took 8.809261157 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144214008 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102643595 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128492774 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116941982 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112659772 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129939585 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10606028 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127029273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107794274 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103616304 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170563495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107274131 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113856297 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136310749 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105816802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12760389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10768903 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11369296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124931758 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126187932 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107153969 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136798846 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113166742 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136713117 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120932973 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10952698 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129334697 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106332251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105903362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129004757 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109992446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127789854 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114831535 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10173056 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136749483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107849994 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106673702 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134461786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106876817 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109795844 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136175165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121418433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129878546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10693066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118078276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128538013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107786403 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103005569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128767837 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103035449 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139860614 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11977274 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116870913 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137865378 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109664301 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105771106 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129307606 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107579526 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129077614 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113344182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114305245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129517085 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126320757 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106950313 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129291074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114719643 seconds)
  done (took 8.763550415 seconds)
done (took 166.370602673 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175144906 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.211578557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.192707338 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155307281 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092598472 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15117303 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126359311 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.192997504 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093444991 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092518643 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092011227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118301617 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160272839 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092631109 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.114743734 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095426794 seconds)
  done (took 3.036430985 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196699105 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.334565167 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10872268 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120509255 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099900695 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098074137 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120227602 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099078032 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097429169 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127315373 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098129448 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094329575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126248193 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09595854 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098791538 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119966601 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105492378 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097246573 seconds)
  done (took 3.130571936 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121847529 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141316295 seconds)
  done (took 1.156834558 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133838962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212250133 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292329505 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168481935 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117622295 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138793962 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147049644 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132658513 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186524915 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134133337 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110589004 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09546399 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146801071 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103348155 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113543413 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119790583 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126128851 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134326648 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113946052 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099183122 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145350366 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101716255 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102557328 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134735156 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177726305 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131998055 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101897716 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101046378 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122726234 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114020348 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104051661 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138025489 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109217975 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176863301 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100718585 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172990325 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104065489 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122000161 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112275635 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098158611 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124302202 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101310439 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110162133 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119231139 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102046604 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104178447 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124300905 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10159843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105482599 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128031994 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106178659 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126719186 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150120932 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127811297 seconds)
  done (took 7.821598656 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.909738032 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.145003493 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097083806 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.024971384 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142083599 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11104184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.869010763 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146374955 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245814916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.889835238 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113544702 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105385347 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258950793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257085355 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.239911837 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.380321147 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.727435449 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132862027 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128560649 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163297158 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103090782 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136769396 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113530775 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441555702 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100050507 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097922438 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125093534 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106771009 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175741468 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098729624 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102302935 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195093643 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290387369 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20990161 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098450612 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120050062 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09829161 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185065241 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266658752 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217348125 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16745133 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118573416 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097981562 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102790877 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135884953 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09579999 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179278424 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190028872 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166331648 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125295116 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106445207 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105170759 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124695223 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17670459 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096254791 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354753387 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357641237 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11995616 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1051419 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110280588 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260308471 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123204541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236268976 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119748896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212643749 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120650137 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793745065 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162597723 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12138395 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102452091 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102928119 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126354339 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100998872 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179658661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397002427 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127745263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103359839 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097463828 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222930928 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098321372 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122649668 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155946631 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121467031 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103241556 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12781794 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104946582 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188043333 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246316641 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126773187 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103261125 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125110703 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110362049 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099787725 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22843957 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227290908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177264914 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22588133 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102825736 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180353599 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184719148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103671853 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187917986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103460542 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109215701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124336909 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224723918 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133558679 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122829524 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103902286 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104804698 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159622578 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101856305 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128816872 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164469434 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478736931 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186790058 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096106897 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125702784 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104686545 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178832117 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104993908 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260978667 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104895889 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186228442 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126008557 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097144404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104480285 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179844817 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105920033 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127064715 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102001344 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10757356 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279779266 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217603289 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129551281 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248070796 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.1710696 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125801184 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169151005 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127883126 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16176139 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132620073 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10140975 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120894709 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784713042 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110033728 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104349264 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12614087 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179252008 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120347282 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102769257 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.097767205 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095701969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785839822 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125545438 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097011792 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101681893 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12527749 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104111522 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103906207 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12564214 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159435188 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266656506 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107785437 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103447286 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121525175 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.153653172 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12302671 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09871383 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099072359 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122036438 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105919204 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103273083 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124449644 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163231939 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177088949 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229995521 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578063524 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122967097 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098903617 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239760342 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09956729 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351056341 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105063516 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23437742 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18095602 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096463687 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356287206 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183543438 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.2025827 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102241607 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192246948 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097854076 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105735148 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177272389 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12066312 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105837972 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178521376 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108554295 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105698068 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281221286 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099486338 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245285358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096973644 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188974096 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100572077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104981926 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345914493 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099269889 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110918575 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179081145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104042096 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127584379 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.873700997 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10058823 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10750047 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125529903 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234728366 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18200716 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105168417 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105374602 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131102254 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155888302 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.225319995 seconds)
  done (took 45.947129201 seconds)
done (took 61.982780701 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.252714002 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168090743 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.367447009 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14959225 seconds)
  done (took 1.921207529 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269350814 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166058445 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.247587384 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095671609 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.254514141 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096803353 seconds)
  done (took 2.049412263 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178626691 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167367162 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144424063 seconds)
  done (took 1.411877723 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206584986 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205521816 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.343020059 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.232995256 seconds)
  done (took 1.99465587 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.279026562 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115670709 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122853293 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.230992406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.248029002 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205061935 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122260786 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172940433 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127516636 seconds)
  done (took 2.589764274 seconds)
done (took 10.88439318 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.215565794 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.217914127 seconds)
    (3/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.336163604 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.363982571 seconds)
    (5/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.417753236 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13591633 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.255023724 seconds)
    (8/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.211541263 seconds)
    (9/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.208600629 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.313839619 seconds)
    (11/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.196984324 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.363937673 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.16044111 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15002179 seconds)
    (15/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127084085 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.411831939 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.186286141 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136911579 seconds)
    (19/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080673586 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098849736 seconds)
    (21/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.090274443 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.18710639 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104950938 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127066522 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.145271489 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08417014 seconds)
    (27/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206013724 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.146167394 seconds)
    (29/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.34717476 seconds)
    (30/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11043942 seconds)
    (31/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079047055 seconds)
    (32/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125493936 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15501388 seconds)
    (34/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.133380032 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109122256 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126374487 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.234567619 seconds)
    (38/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1977685 seconds)
    (39/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.14923711 seconds)
    (40/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.141738959 seconds)
    (41/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.175333249 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.181579471 seconds)
    (43/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178680486 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169690367 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098852413 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.2618169 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189334062 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.135072805 seconds)
    (49/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080987929 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115968405 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151478834 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106330485 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112103216 seconds)
    (54/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.157639417 seconds)
    (55/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.183538758 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108040562 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.110993756 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189158431 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076729425 seconds)
    (60/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07958837 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.146730378 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121645363 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.338130237 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079559412 seconds)
    (65/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077470418 seconds)
    (66/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.165066446 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102194926 seconds)
    (68/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108950483 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.143534074 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118192524 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084225465 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.144204376 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197696963 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104980284 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.330212686 seconds)
    (76/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148931128 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.279237586 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128186949 seconds)
    (79/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.130225331 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083961943 seconds)
    (81/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079305956 seconds)
    (82/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.15835307 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100081851 seconds)
    (84/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10897626 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.173330327 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118525124 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101379977 seconds)
    (88/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.158392855 seconds)
    (89/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129794019 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084462927 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12629295 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08013419 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.099400367 seconds)
    (94/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105617488 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.125602431 seconds)
    (96/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078495375 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.178556676 seconds)
    (98/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108526508 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.202052051 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108391149 seconds)
    (101/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.200640788 seconds)
    (102/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117900069 seconds)
    (103/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079675613 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084531175 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212531734 seconds)
    (106/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.140288732 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102049179 seconds)
    (108/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128410859 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102682703 seconds)
    (110/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083596493 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.126259442 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081667094 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080917941 seconds)
    (114/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.131297931 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134482035 seconds)
    (116/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140940307 seconds)
    (117/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077736935 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083333307 seconds)
    (119/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139629105 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.111020123 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086088013 seconds)
    (122/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.143139467 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.08090927 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.13639311 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086032895 seconds)
    (126/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107618947 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125268451 seconds)
    (128/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084618574 seconds)
    (129/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079256098 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122068057 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.146327396 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085494097 seconds)
    (133/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108739769 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.133699404 seconds)
    (135/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108782407 seconds)
    (136/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.205840814 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.133326026 seconds)
    (138/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079660925 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110303207 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080903588 seconds)
    (141/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083470409 seconds)
    (142/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156550677 seconds)
    (143/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099361353 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084775001 seconds)
    (145/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13652304 seconds)
    (146/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080715176 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079631883 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109109073 seconds)
    (149/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077809492 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126604812 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102354981 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108141806 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107690264 seconds)
    (154/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102962466 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087490564 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098883793 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.103012598 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103096075 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108207059 seconds)
    (160/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108273053 seconds)
    (161/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.105193104 seconds)
    (162/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084536109 seconds)
    (163/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078778069 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123459774 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125788158 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080637336 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110913326 seconds)
    (168/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.109924461 seconds)
    (169/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108302972 seconds)
    (170/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099711133 seconds)
    (171/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.08336166 seconds)
    (172/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081242717 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.126550099 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085976718 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086042084 seconds)
    (176/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141776707 seconds)
    (177/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133219484 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099936424 seconds)
    (179/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084767505 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12051254 seconds)
    (181/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.101760394 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.131663316 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103031923 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077955996 seconds)
    (185/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.106115098 seconds)
    (186/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085236726 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100455096 seconds)
    (188/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078181365 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.10864811 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081957095 seconds)
    (191/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084850926 seconds)
    (192/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085697187 seconds)
  done (took 26.918072531 seconds)
done (took 27.843976607 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223941423 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128910799 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109247342 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108400479 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.227437706 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116284202 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151509522 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111050023 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119444868 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134549414 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099851266 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122720623 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13428316 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202445882 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137226922 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102308357 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099962211 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144630423 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12587745 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125924229 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.228546988 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101490832 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.144898882 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102638768 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229395106 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102066034 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109073023 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.135711521 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123552604 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109436089 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10907113 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12802354 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125075294 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124733119 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124124825 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111259132 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099213091 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108743533 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111705485 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111171952 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.14627427 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111797123 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109930131 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101101288 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135068043 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109529134 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099733378 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138647518 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100108732 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111983071 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128336699 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126874685 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108900445 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122528634 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100152195 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101646632 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.143191894 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10136729 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123197473 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099795744 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126339044 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100270504 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111824461 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124966652 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109251515 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100567756 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134308359 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112310426 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108381312 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102501617 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124794547 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109919864 seconds)
done (took 9.915674347 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110972315 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144875665 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.229613524 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.231240139 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129145061 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144034795 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115490609 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123768513 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138564495 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120780453 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138026875 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158134283 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.207763479 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143052083 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116136147 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139007399 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112760202 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109677561 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.232942526 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124618305 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150134621 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117143165 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124884505 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144240181 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105324281 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15238601 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112337512 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113072249 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103542841 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14845725 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125540796 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128901535 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109149866 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123997552 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145618169 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116336728 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116710478 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138493332 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106273457 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105072631 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135977085 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121215805 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105255581 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143182478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114160805 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119688838 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136581625 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118067291 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107057715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136598738 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107932975 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.128592162 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142011153 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123336182 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115873248 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142523021 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118392987 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117061579 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133448838 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117450007 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105497138 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128039119 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108097475 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124569192 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133488294 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118522734 seconds)
  done (took 9.615316018 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129866469 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134155592 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140103382 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117026497 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110544884 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12446889 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099253625 seconds)
  done (took 1.826482911 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106178533 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.238527867 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212910202 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.239272297 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.236661332 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.250034725 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123584704 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100176925 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163552786 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111261418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24246436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269129842 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111963566 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.116377289 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243689575 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127086275 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.219689772 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129005453 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117019821 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24404349 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118586937 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131681365 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141519322 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102287148 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.236544444 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102429092 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.287344822 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118486515 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138706924 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116053882 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114829084 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207109446 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.2378496 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115443696 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109542596 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.237672031 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.237587021 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115675111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.252594197 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105125234 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.236896048 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14221493 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118056217 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1164197 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141518155 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.201229756 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.149099702 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117530185 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115401415 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246873461 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.111661955 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.238443315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113029795 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142687748 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112672967 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116872485 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150542963 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116193575 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.247448358 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118448961 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24006276 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.241016182 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.238533715 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215335776 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15414788 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214152242 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.227739718 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114195002 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137407558 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118246759 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244235469 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114427048 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140451125 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.205928447 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146992256 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.217385059 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.244288028 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140285629 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116277057 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104672919 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113660568 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130505848 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.233631803 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116746363 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114692514 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145933444 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115702822 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115442604 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132552997 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125713077 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115230306 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13982614 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122243576 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115931545 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1434934 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.246620746 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113471468 seconds)
  done (took 16.776306774 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109390686 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103124343 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106689177 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129606626 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104123663 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102760388 seconds)
  done (took 1.65341107 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145219839 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116751255 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150572517 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117747369 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163034634 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.24633219 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.254906303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111227399 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163283983 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128708594 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.249938264 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.251096811 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.222977113 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.147877813 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.254265505 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120059821 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.255809141 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114942711 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124765106 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140900629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116737147 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118891042 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141238963 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212156785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.144601761 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11822385 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109169866 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.153331379 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.124399298 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137165059 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120847346 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117108439 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.132664201 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111368967 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.254965724 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108817126 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112830902 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.146596861 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119957895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117115017 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.251969849 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113984165 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.150733529 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119176426 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137241645 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111201971 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120111112 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136623222 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.230156727 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146538233 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120094394 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116536542 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.144545965 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120368432 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108801221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137681542 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119885797 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.255673767 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119796714 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.136208172 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117642139 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117636334 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138199984 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123168895 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117259501 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146084279 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109330945 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118354669 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139837468 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119525309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119724975 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143335798 seconds)
  done (took 11.606611579 seconds)
done (took 42.443978969 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.672927494 seconds)
  done (took 2.664870591 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.106361592 seconds)
  done (took 2.100147272 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.831097224 seconds)
  done (took 18.86035293 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.433908794 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46218971 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.146075321 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148244655 seconds)
  done (took 3.18280911 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.843919245 seconds)
  done (took 1.864265248 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.341234982 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25132349 seconds)
  done (took 1.591971842 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.709464928 seconds)
  done (took 1.725055719 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.729960095 seconds)
  done (took 2.730317956 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.293616578 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244816646 seconds)
  done (took 1.554742397 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.657388467 seconds)
  done (took 1.672402138 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.45662443 seconds)
  done (took 19.476535157 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266486095 seconds)
  done (took 1.28500267 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295393368 seconds)
  done (took 1.317931606 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.523247276 seconds)
  done (took 4.542654218 seconds)
done (took 65.571872449 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.144898063 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119668184 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119195174 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143071581 seconds)
  done (took 1.531389959 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128793413 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116699819 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119933711 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141625682 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123864511 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117474788 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142124873 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120546308 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116795218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145308985 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117955707 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115640613 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144836495 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116698103 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114491692 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143712099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120441672 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116598431 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141968834 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118345057 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118116546 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14423747 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120819242 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11870801 seconds)
  done (took 4.044605612 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120383 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106837383 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108944795 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131394919 seconds)
  done (took 1.489105271 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131175349 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127554035 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151080094 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123765684 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128035627 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151130636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116074837 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11345044 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140214095 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126207667 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132778542 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154509459 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128587057 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118669549 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151112889 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111644392 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116994589 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153971322 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123266588 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123569904 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142036539 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123585624 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12064638 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15095005 seconds)
  done (took 4.177761982 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199757513 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128446949 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173399642 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161892617 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175794124 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114818242 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143747904 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147669264 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12560505 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117818304 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145764309 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162529851 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148511543 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119271186 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116531921 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146551945 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129865648 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122343958 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189005593 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121522253 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148141953 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12896808 seconds)
  done (took 4.187006835 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12786678 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107928988 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105265102 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.130138452 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120316424 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109577008 seconds)
  done (took 1.729912591 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112947382 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101868153 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102166987 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126489034 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105804766 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101923746 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099977533 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.126888592 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102673434 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102706628 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126280194 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102189231 seconds)
  done (took 2.339395057 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209523362 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14376489 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250738904 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392845645 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186978784 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157223358 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.308955578 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187285376 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175827453 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162049055 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209340817 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160897988 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151975311 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210535833 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138427765 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183764253 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16308276 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232659858 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16797022 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21160788 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181222416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199989764 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188622727 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174032548 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138511559 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184386559 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118875516 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126543096 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194091937 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162421927 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199661371 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17472622 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140427071 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216864808 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256106277 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176120872 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267385891 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156507334 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171230202 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211648604 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256847174 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138990239 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215628516 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175072796 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12755344 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207455627 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152508478 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207063042 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131660744 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141109923 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210185221 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20426812 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.16685841 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162284421 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31916206 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133507057 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165871412 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176018862 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213129239 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224541471 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176693215 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120731174 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199102999 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211985947 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239475312 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139870657 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189292105 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122875761 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189590143 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202157476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207732699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186341741 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237152883 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129919874 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195641334 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167011685 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181881085 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203033698 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196169826 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117836328 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177286766 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133161038 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1234632 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213457093 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119345782 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239528332 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12887254 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.20698425 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204097772 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153604089 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187497512 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159333843 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187524942 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145669049 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099974341 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170963814 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157772413 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183245467 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125691325 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179915871 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138553631 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123155307 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17762432 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120163707 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194108389 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132670064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188048913 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166556061 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157057359 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178551601 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173450953 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.158801203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194407809 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216035224 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127981661 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129311999 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242631154 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194388581 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134384557 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196950359 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193454765 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175557921 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132318735 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191401072 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189662552 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171117141 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222139897 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136481325 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132429294 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165961596 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194381823 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157087406 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.184977674 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12643833 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16230423 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215293278 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151569207 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138003729 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20482147 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131424058 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121488323 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161331576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13424395 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139633388 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173070883 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136299808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179771576 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163163076 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19048407 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153896583 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160045502 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197104984 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130188073 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166411891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173563202 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117146088 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199311336 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218300221 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127461036 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177266743 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186765658 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206175757 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16983913 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153249252 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179989775 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154040807 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119369883 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186598213 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167164377 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188726241 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184413472 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204122507 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189568911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159650247 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175254327 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166045933 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.208235932 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181392569 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140885135 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199710812 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167938989 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117820437 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148792989 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124239851 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161607686 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12901763 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134421779 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205806276 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189818681 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176221914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19042471 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134634352 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216241029 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121578075 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185667538 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17055729 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16579443 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211797194 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186191199 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203880893 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138568655 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188232066 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119446768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1237819 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158890817 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158433161 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163861358 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133862631 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16640474 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187927114 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199097348 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144849101 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216077145 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19092663 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224280431 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120475935 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157765825 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19510658 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165202971 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209305958 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131466153 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183843026 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189169943 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166931428 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189428608 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192959163 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20307824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192833509 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189652172 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127376693 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172130214 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159734495 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162687673 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159145512 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141637712 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155669794 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150568756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164397533 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13778156 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211860126 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140445215 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203680268 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181011888 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169544806 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150915754 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139255384 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197111661 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144101507 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105129292 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196335805 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219597541 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147734805 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179253704 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171035112 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154084383 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313619117 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211729731 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173892694 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162346109 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135611323 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198545852 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15676351 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188199742 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180328957 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167971869 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233443529 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167066766 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167192677 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130402791 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145457541 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17579937 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139257335 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178407803 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159245793 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170069684 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21231256 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135131452 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166629922 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202382866 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142413094 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.1766386 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136223833 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250781576 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193112 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170476819 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.18940241 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162018644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208899315 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122020697 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152566415 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132142641 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18234951 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157026058 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174666032 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192253727 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206505925 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19842 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159564872 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137974149 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.153310095 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16478572 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174908149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209265507 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133556653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134950525 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215579519 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127007956 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157348261 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156700968 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313989609 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144717317 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197974789 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105047037 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30989749 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127586297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157698753 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159334772 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196691837 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130794583 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.205334046 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17341744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164930313 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15981317 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133738353 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203890952 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208355474 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164213883 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200567998 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170608828 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160837839 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186236021 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172177152 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171820611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145447193 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184605198 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192436274 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202257142 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12963538 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195265434 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166320846 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195309625 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17116703 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165268297 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179287075 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153354109 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162258768 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163690527 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124318154 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184283589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.164979745 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154719758 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172797936 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197522939 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128348282 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153722694 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145736251 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18980949 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13878342 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126820351 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213044657 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12589381 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207881178 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236342168 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128465277 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192112629 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143919581 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127463023 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165244909 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141378123 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156348275 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17131559 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179702874 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.156043446 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174809058 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190920687 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18910036 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156360336 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170444794 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.261860691 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126985762 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217557793 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147864061 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222239416 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175799221 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173305965 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19561267 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149011839 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190811184 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145415842 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.244503017 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162827773 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.193682344 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129196236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168674949 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136759181 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130971958 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178164489 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164640043 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16978989 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133763702 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.193200918 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142324679 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17216353 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140278034 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224238077 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149065083 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21473619 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182775224 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166567547 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171375613 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202599477 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125941637 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191211976 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198911335 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143224838 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176695137 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132532423 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134643597 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241182289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123278561 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18926025 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171993578 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194874879 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168776266 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161196742 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174027942 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167646894 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173326566 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153979054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149484692 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195504147 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132875716 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124657076 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197494697 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185333778 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162122799 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13827645 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.200158164 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192172731 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.148681511 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131605807 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310876545 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158848322 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21964343 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134057015 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165067604 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143890604 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186155259 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164312291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196586132 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129120674 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12589111 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171619792 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157151427 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165501699 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165418203 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208685048 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157924709 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211529181 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132632209 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280847242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140260311 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197646722 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116462215 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12581273 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167970482 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132807774 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170442699 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17869249 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213310574 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190147727 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146406505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160807136 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125793292 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129230744 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190951116 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150322293 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193882551 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145866036 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102348105 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167856704 seconds)
  done (took 84.087790024 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165146706 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150480461 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167243174 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221013137 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194045314 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290856017 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228247839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244283198 seconds)
  done (took 2.765588842 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121617317 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157626804 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140019337 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141719913 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108343047 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.479487021 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157420847 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118571195 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159686755 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150738644 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134675721 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569512167 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114154998 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143228462 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120494043 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133541043 seconds)
  done (took 4.046110996 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.171940054 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545824955 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.961147149 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.299927134 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.263540095 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.206361031 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.747183528 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200755017 seconds)
  done (took 12.4970562 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174420976 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168211755 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.447999484 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.309070719 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.181459539 seconds)
  done (took 2.394299489 seconds)
done (took 126.297566716 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125832602 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121764226 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122189653 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152328379 seconds)
  done (took 1.620469035 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.191629773 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09064854 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092799436 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118992791 seconds)
  done (took 1.605649705 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.458124052 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091050993 seconds)
  done (took 1.687975857 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.351675522 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136341258 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.139330583 seconds)
  done (took 1.751924562 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135252894 seconds)
  done (took 1.255574406 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127113333 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115179075 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271960015 seconds)
  done (took 1.633070392 seconds)
done (took 10.673142644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121671655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925773924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431890581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133061683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71041834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426128534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.419413373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175325313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172682743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108068769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159539657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688865233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.431022842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880553922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.391488207 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.907393414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694025495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110532816 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142305269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110865118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.399239309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134418516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111656625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110950943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.688293095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.445913188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108503056 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.91144131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109433926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112201461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.396957704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137150132 seconds)
  done (took 20.906549921 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111210916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166771669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14467437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111117845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112428814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13868177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122499836 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121333349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202566247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109295675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159366062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109654862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114618794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109947412 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162576931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10933785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11221545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140151982 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117566164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111974598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159834001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108698902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111297488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139549432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10948064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130982546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137920641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12244906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109090341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142864962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115304159 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109499539 seconds)
  done (took 5.206150029 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15808706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175729137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146143985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14864291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188684434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112601716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195667386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176740454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202842631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110599879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130546431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135702185 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151862751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110234814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163193019 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111843725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112547545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139015889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11801967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111738526 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159032721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110302994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111827103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139329484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110496526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132613841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138290775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122858679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109238138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142633443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116823439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110303076 seconds)
  done (took 5.529990592 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124253577 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124335094 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132487751 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162472005 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120054325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124348841 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152075919 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120504918 seconds)
  done (took 2.19070363 seconds)
done (took 34.952991056 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134941723 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127497135 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129442627 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154343308 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.220266606 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147951309 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127631399 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115424144 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153694701 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131365357 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108984578 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146480979 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132366856 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120229136 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.251980705 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124726475 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.257006747 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.253138585 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.118148386 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124680011 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.148386113 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227091642 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.152163596 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118911282 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.250841765 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113567709 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.246568423 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120987983 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120531944 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.108068288 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.254913781 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150531441 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11958111 seconds)
  done (took 6.328584026 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.234910574 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.150460629 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.119527919 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.11946059 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120440183 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147479181 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.240920844 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149084277 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.1181559 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117932372 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.147397675 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223992318 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.153712405 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11562561 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119549322 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108947982 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.273177263 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120764508 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.141381099 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093593842 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114230388 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116705329 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.284229586 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113062963 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.148733325 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118075098 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120097827 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154275575 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.120566946 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.11980634 seconds)
  done (took 5.563523134 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123386933 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131501593 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136111899 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214008383 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147360105 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159794066 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138265356 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131267328 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169093972 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113449486 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127622841 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177905294 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129474151 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122561452 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142350662 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130587498 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.127689517 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141993221 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121050393 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12970982 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160953556 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130914475 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134089913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119519677 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.140971207 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120217153 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120963534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.153642911 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119708123 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126428385 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.143378784 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116188788 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115122464 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176131713 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113123317 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125137248 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165156386 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125666712 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126337845 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.174198095 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11610729 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112818192 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.168748275 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166830585 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114072424 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155418442 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125208799 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126044489 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141613864 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130877739 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154121304 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.14237475 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133593207 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111260488 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.13950085 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121847278 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112634733 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115482884 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.156191041 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114976217 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133115167 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.149169631 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123808956 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113586438 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152725806 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112117744 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111309217 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144761854 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139670242 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120328489 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.177938681 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112562466 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124158074 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123964624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.154114348 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124939871 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.110790342 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15385867 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124010807 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117760567 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154355343 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116049965 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114780789 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157202 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134618009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126173055 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154017397 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126785666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115168222 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113915551 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160016862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114177125 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117160047 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155540127 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113385285 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115551531 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154762832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124955323 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110408477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167882553 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117316657 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111554312 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137575439 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146590004 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117207087 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.120850434 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183512395 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113592405 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122326305 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.155215422 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113043876 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119170453 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145699157 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112974429 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127637227 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.156756471 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121349248 seconds)
  done (took 16.821608146 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.350950168 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.338749137 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182221205 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.424552397 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126629356 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.269259777 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.338727097 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.344146287 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113442076 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.146587915 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.207747055 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.30699543 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113215072 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.172153607 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.349054009 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.394439413 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173890595 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152326919 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1793264 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127509221 seconds)
  done (took 5.96433421 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136352433 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148092018 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165473858 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140861948 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122493791 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159591054 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113836725 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133479844 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155611379 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122192242 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115902109 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157433848 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126146177 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130037873 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156444718 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14636137 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119515546 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146873248 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13572211 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117936478 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130794685 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139354685 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121294347 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163955767 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131782404 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124210537 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140433162 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118614347 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119742637 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.121180286 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146020632 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13358648 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.1202398 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.133160055 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125098908 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128663184 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147627017 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117131966 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118271657 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.115361456 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.156281741 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126005801 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121421817 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128404691 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133182151 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11059881 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126662768 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157771671 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106451283 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132707227 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154261317 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128743618 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120349303 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134451042 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.150690473 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129758968 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.122419853 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.15753857 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118179412 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111623418 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.14066742 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117010582 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121297198 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155814677 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126828577 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132600594 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159500328 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113347446 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116912928 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145345494 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117137522 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127373108 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16124885 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122993686 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120445736 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124277978 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.150710102 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094650836 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122195073 seconds)
  done (took 11.609892861 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138564061 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124019318 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130216737 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176776506 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127164632 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119052281 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152619525 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132498531 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127257509 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162058512 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12813889 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129092671 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164916725 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123612631 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123301344 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159893741 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127601211 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150994214 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160948105 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140098723 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127498242 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148748632 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126980967 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124408661 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170069317 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124482485 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138686286 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157075476 seconds)
  done (took 5.085401846 seconds)
done (took 52.499999099 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.276523962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.486712681 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.266693018 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.260037529 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.273109608 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.273155716 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.259259028 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.267908211 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.69784971 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.229179128 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.266945732 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.267081286 seconds)
done (took 28.989573486 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.347991433 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.403516717 seconds)
    (2/2) benchmarking "String"...
    done (took 1.569211743 seconds)
  done (took 4.127432632 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.2505304 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.253385151 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.499753158 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.253981371 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.252941681 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.256689027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.255572551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254989142 seconds)
  done (took 16.183293096 seconds)
done (took 26.065193583 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.304777244 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.445283122 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.53433754 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.237648821 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.259547301 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.251473457 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.249031715 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.279818923 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.257499147 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.24310128 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.660467511 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.520177477 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.250752398 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.630649866 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.23396836 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.250843808 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.265826772 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.488880814 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.247555683 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.282717079 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.224631623 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.230477805 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.26325889 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.250415264 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.254094241 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.260739154 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.254695664 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.256741462 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.449949099 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.282970243 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.284837838 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.251400065 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2570924 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.253041103 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.256754364 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.251915228 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.455812976 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.257847035 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.234748619 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.251996608 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.463232011 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.262123174 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.246786669 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.247776847 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.2308563 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.289804691 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.235038079 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.356690067 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.270840486 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.256393831 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.304648214 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.651384413 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.249215124 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.260798728 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.256674081 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.486608513 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.25705651 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.30611941 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.272975676 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.25849217 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.24604395 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.247894427 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.300949192 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.255052354 seconds)
  done (took 146.747768643 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248169036 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.25220313 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.249951264 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.309155512 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.251374905 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.250141048 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.245455189 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.246808751 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.252131549 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.279679713 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.250778797 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.247335701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.249391964 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.212410909 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.256855572 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.287161692 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.251373021 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.26029905 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.256778835 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.249080828 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.249277627 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.25237987 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.264587857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.248547484 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.287830648 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.330184858 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.269572859 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.279800952 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.262768666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.248790626 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.282714 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.297075255 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836532615 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.121371688 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.258657132 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.263730301 seconds)
  done (took 82.014252137 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.247363504 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.247680543 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.247682083 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.277748923 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.248515012 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.247215045 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798904399 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800888635 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.221819782 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.662608456 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.552106593 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490156537 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.254817953 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.249454715 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340758426 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.263331855 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.250888343 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340809406 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.27410584 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249803553 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248573228 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794399674 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.267727399 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.356780266 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.419774648 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.26539911 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280486628 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.640392542 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.248286647 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27846766 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.597735811 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.577682489 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.293789993 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.248810481 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.248702352 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.569616032 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364583277 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.249152181 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282875549 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.252841192 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.527965696 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249312791 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.248479997 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.252960467 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867576164 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.255050749 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.797437644 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254141809 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.204272795 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.25459733 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.249525988 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.196431969 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.933880463 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.256035244 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.255142136 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.25905885 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.255642643 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.256422831 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.288267315 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.148408775 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.102382299 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.259930195 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.261711513 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284367418 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.261162994 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.281376252 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.253794661 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.487444786 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.316830036 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.366601439 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796655685 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.260345043 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353447516 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371847001 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.258329145 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.260187854 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.254902467 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.257792341 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.370482889 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.256167765 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.913535961 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.427164507 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.270406028 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.528044737 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.353978533 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.255048573 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587563019 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.259253196 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.258994275 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963131162 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351570724 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.256092089 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.258190138 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.259729494 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.255264279 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.916477243 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79442365 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477127131 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.261490894 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.773112106 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.253482323 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.088303512 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.787728475 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.917317948 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.255826109 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370968428 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.422795618 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.266873311 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.256065966 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.508804443 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.260610263 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.313655128 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.259128624 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.656064986 seconds)
  done (took 382.274114754 seconds)
done (took 612.193201466 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.108898914 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.064401322 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.213541238 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.092803278 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.057387264 seconds)
  done (took 11.693945738 seconds)
done (took 12.850941373 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429525518 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.430930763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.305915583 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.436479267 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28238425 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452339492 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415828281 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.269568866 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.359325171 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.330888472 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358792232 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.304312856 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284648405 seconds)
  done (took 18.81232732 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536613629 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.265871267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318205022 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517081852 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301564973 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530470414 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.56866442 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.266114205 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416476873 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272369915 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271767535 seconds)
  done (took 18.418810254 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533564558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268590286 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339127655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522715502 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303383791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531875949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.56973221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.266221988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420826509 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275243158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272031353 seconds)
  done (took 18.459694994 seconds)
done (took 56.846023247 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.292531358 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.350027161 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.285728891 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.270630014 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.272420076 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.268229652 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.275628468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.270672912 seconds)
  done (took 11.439502366 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.269275251 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.266508117 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.267914341 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.269632988 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.266677786 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.266161652 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.265649717 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.26699807 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.268488871 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.269215382 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.270968988 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.267785402 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.268014579 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.27033466 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.272701422 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.267749537 seconds)
  done (took 21.451237496 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.271448021 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.270351627 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.269783309 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.272029147 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267481974 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.269244858 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.271083095 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.268199656 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.274180754 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.270150027 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.272762738 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.270236368 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.269831888 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.266857662 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27388989 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.27334648 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.269056828 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.270559663 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.273776832 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.270954324 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.269162619 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2724309 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.269003825 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.267940178 seconds)
  done (took 31.652505195 seconds)
done (took 65.700509134 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.256141024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.259275827 seconds)
  done (took 5.66388443 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.325513183 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.325706109 seconds)
  done (took 3.80556475 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.266727749 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.268432475 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.270959005 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.274533354 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.267468396 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.268582744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.268944198 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.268772194 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.267421699 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.268323849 seconds)
  done (took 13.845103048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.268528512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.267717149 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.267699392 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.268938189 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.269404253 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.268056081 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.269294577 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.268540732 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.268885535 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.268552256 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.269326817 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.268871979 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.270713378 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.268590673 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.270483177 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.270362672 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.269677308 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.269030624 seconds)
  done (took 23.996277807 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.283468608 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.289208957 seconds)
  done (took 3.727718594 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.397298422 seconds)
    (2/7) benchmarking "second"...
    done (took 1.310700057 seconds)
    (3/7) benchmarking "month"...
    done (took 1.373845892 seconds)
    (4/7) benchmarking "year"...
    done (took 1.367788767 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.312443436 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.291523601 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.311333431 seconds)
  done (took 10.51970758 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.25931796 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.550225429 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.729080997 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.410990627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.248342285 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.277218189 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.236879396 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.277476996 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.282447331 seconds)
  done (took 14.427213999 seconds)
done (took 77.142451377 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.255615765 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.285665296 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.271849103 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.275311029 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.563198667 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.303934271 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.263284562 seconds)
done (took 16.377687177 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.238564969 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.240782442 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.24120698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.264656399 seconds)
  done (took 10.141787304 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.257469528 seconds)
    (2/2) benchmarking "read"...
    done (took 1.585811541 seconds)
  done (took 4.995196202 seconds)
done (took 16.296379703 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271128895 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.272650425 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.272041341 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.272177833 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.272437397 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.272312071 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.271224576 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.271617119 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.272155525 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.272379917 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.272962389 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.272769125 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.274096141 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273771331 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273150522 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272803758 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273857962 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.274395645 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.274131256 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273420247 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274649057 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272575105 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.273565593 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.273187887 seconds)
  done (took 31.705817746 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.273259552 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.273817602 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.273318813 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.273468693 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.273562204 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.273651891 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.274534849 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.273175445 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.275038568 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.274006024 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272581939 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.274004162 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.27477881 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.274095166 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276335052 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.275357004 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.275680629 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276209028 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273655613 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.273977832 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.275402467 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274615386 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.275590956 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275214423 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.274049072 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276442928 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.275113071 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.274343428 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275484577 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274813381 seconds)
  done (took 39.395058415 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.279124388 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.282221725 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.275126655 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.275757016 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.275700278 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.276035597 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.275692524 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.27565599 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.274921678 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.275977863 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.275402865 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.274600904 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.276252809 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.276672023 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.275793391 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.276568901 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.275710277 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.277237165 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.27668974 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.274658645 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.277372794 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.276368009 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.278102609 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.279088221 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.277085492 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.275043514 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.275655076 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.277382483 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.278774242 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.275963286 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.27659274 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.27517505 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.277269341 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.278608239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.278299788 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.276361895 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.280527118 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.282570818 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.277165474 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.277013814 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.277309139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.277327268 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.277940144 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.277696606 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.278211037 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.278090466 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.278370024 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.27871703 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.278251798 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.278166594 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.27908432 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.278194422 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.277540701 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.278430326 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.278653831 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.277970391 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.278334887 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.278677982 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.278363001 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.277892432 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.278546841 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.278654872 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.27870711 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.278670092 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.280087313 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.279236014 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.276921258 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.280164726 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.278231932 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.279826286 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.279065626 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.280388358 seconds)
  done (took 93.151271762 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.279773258 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279495385 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280590221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.279125583 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280038592 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280906126 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280194501 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281104777 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280589637 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280855323 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281861176 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282302385 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280129056 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280982424 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280437645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280882879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282307803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281468179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.280616495 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28105656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28229037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281307902 seconds)
  done (took 29.343453428 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281508062 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28358306 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.280330774 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282590255 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282987673 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281938188 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281503685 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281991325 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28159588 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280048894 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280892313 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280154025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284415672 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281395699 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281945843 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282559251 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283716701 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283335079 seconds)
  done (took 24.242118893 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.283673739 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.28203628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.283538792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.283836936 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.283711517 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.282935079 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282856588 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.284367763 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.283554867 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.283542676 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.285368328 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28379985 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.283707978 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284129367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283328835 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282693457 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.284273825 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283071348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283663752 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283504025 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.28342351 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284021058 seconds)
  done (took 29.406985016 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283586619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282492178 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283536942 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282423162 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283591592 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.284244176 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.282708221 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.284319902 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.285347914 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.286014054 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285141099 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284294583 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285595741 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282686624 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.283699328 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283511116 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285009123 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2861338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28432018 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285577426 seconds)
  done (took 26.851669175 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285300813 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284777635 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285794268 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285127555 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286109934 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2848683 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286346071 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286116376 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28599269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287321414 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286651782 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286086237 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286857722 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286099479 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286869103 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287003158 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287834145 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285949629 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287009583 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287235486 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286620687 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285879792 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287991438 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286045762 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288222785 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287326152 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288543784 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28674866 seconds)
  done (took 37.19353059 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288206202 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286991639 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286356014 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.287185002 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.287202594 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.287137767 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.287758029 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.285799703 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287987702 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287648751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.288932548 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.289577076 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289047123 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.286619614 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288138085 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.288087426 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288744427 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.288947196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28964719 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28860221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.289392558 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287978373 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.288102141 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28803081 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289246871 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.289559369 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288717137 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.289537203 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287977272 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289637166 seconds)
  done (took 39.818629646 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.307474429 seconds)
    (2/2) benchmarking "in"...
    done (took 1.306346623 seconds)
  done (took 3.786006291 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.290560791 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288968008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.289665174 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288444371 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289036774 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.289089355 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.291441183 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290142873 seconds)
  done (took 11.488398754 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.280848083 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.291143346 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.289372206 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.289132601 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.289990415 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.282671756 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291421975 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.2949202 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.283111208 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.284675697 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.286586258 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.2889743 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.28561905 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286357642 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.284168621 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288594648 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.294071263 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.29259609 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.290921758 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.291111692 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291410484 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287766849 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289756091 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.29545827 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.284734475 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.296229258 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.291991218 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.29487764 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28583268 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.290808963 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.288502687 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.293963201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.291789367 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.293725569 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.291565001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.293087781 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2938229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292881989 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.294631557 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298652797 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292544223 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.291764737 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.28686755 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.289147779 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289994017 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.297500654 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.294043603 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.294054964 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.2863633 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.289483108 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.299337784 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285316262 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.295746141 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.290368381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.291968963 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298411598 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.300097882 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.28974139 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.291813005 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.299879736 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.305466863 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.302551507 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292712715 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.299248335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295407394 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.30816712 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299403116 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.302390624 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.296655466 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.294333599 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.29659229 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306628431 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.305176693 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.300236069 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295276332 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.294734588 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.289108982 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298563733 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297277445 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.300661615 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.300306412 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.29580239 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298160128 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.307560772 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.291309415 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.299307036 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.297314986 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.296708802 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.288246591 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300753652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.305223987 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.295756755 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.288379696 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.29281353 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.293345464 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.298755126 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.289330568 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.294021326 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.300684173 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.29638462 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296696567 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291110793 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.298951757 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.302291957 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.296956964 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.299611346 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.305410981 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291145198 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.303435502 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.30573746 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.298208926 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.290473082 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.295702543 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.301387798 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291601562 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.29853211 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.303667662 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.294849729 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.302576968 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.297781943 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301373457 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.313105604 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.30373404 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.298633749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.295145663 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.307221618 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300164765 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.296223526 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.304320186 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.300976098 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.29968677 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.296432395 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.305999772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.294802554 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302179838 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293733361 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.302069685 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.29891471 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.299344526 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.29540385 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.299998759 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.29723875 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.30227711 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.302145696 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.305050259 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.296532387 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.308509658 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.300270587 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.299383178 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.301609192 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.305854913 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299438427 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.294342241 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.304075419 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.292484471 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.303859705 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.293310436 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.304530082 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301207536 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.300674078 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300904089 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.292696965 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.298972256 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.304188636 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.29936142 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.30144488 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.305283229 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.301634891 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.300958854 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.293286934 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.302790691 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.293051607 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.298336583 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.307434293 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.301642241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.300180735 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.298990483 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307467591 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302881151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300452587 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.296275819 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.301887479 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.307056357 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.305703822 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.311450878 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302478632 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.302325824 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.296440609 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.297929117 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306421257 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.298249685 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.309224678 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310702184 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.316143514 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.298394353 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.30677584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.295064 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.305915955 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.303054213 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.309111181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.303992862 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302930279 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296940263 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.307185324 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.298048811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.308141552 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.296160756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.306556358 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.305476167 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.303941653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.304104149 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.297693877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301159334 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.307435741 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302713712 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302472548 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.29761274 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.307272044 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.294319287 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.298963652 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.307398415 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.304296782 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.308064249 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.312858688 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30274184 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307515709 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.30569137 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.301039975 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.305755342 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304509478 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.304468193 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311386316 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.308830525 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.301239684 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311819587 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.309863972 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.299754394 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.307235039 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.313514376 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.306954611 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.30088527 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.311877919 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.306653608 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.304949289 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.307264849 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299758697 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.311531491 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.308103226 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.315085711 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.299190239 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.308981263 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.300542259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.310530619 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.303829084 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.307780953 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.306358424 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30994313 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.315461184 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.307259203 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301054739 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.310279409 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.307675415 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.305963594 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300165616 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.312077342 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.308730633 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.306878608 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.305150978 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.304103248 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.310156116 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.301854041 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.309874797 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.301084015 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318304162 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.325731112 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31246337 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.311899058 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.312273794 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312201562 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.312202071 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.303577323 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3033332 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.305065368 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.304071909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.303713979 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.311961514 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301573143 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.31142992 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306889814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.310381626 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.312132683 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.309075414 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.300974243 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.313370045 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.309905996 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.310367872 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.301164362 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.312080232 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.303562326 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311783019 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.308162804 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.305553247 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.315988256 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.315322894 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.305233915 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.307192855 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.304796676 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.303303797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.308306442 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.313509722 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.30481156 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.315237242 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.304289962 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.307346011 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.305005504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.316187422 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.318967874 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.305442766 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.314915103 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.309981513 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.302174753 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.303230176 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.312795241 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.315888591 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.322808002 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.30410549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.313693022 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310845997 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.310918516 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.310965265 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.311393121 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312794579 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.310977603 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318506123 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.3167979 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.307988599 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314206815 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.321254213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.312546784 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.310965949 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.304577449 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.3149677 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.32220176 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.310178602 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.309057934 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.30873176 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.314622909 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.311303837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.312977792 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.314437757 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.311976237 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317566122 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.316043534 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317923276 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.31413405 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.320443249 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324263883 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318133956 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.327826177 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.308335345 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.317379084 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.313282762 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.309466979 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.30952474 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.309736981 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.318234958 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.307132894 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.318205946 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.314334885 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.310231669 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.315984693 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.320989766 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.30642679 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317007589 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333922842 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.308571605 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.316914447 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.31454473 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.308838977 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.317098181 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.315394805 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.307628112 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.311103881 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316198889 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32187406 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.30881771 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.318563064 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.309903183 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.319871932 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.315317092 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.316224598 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.315562658 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.316124159 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.3093916 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.318249072 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.315358243 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.32516674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.31307282 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316732815 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.3117497 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.32301516 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.328850683 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.311907731 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3210027 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.317963881 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.311020832 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.315036286 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.323302405 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.311099454 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320815873 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.310729456 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314187448 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.315098057 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.319156295 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.319978848 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.3209646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.309897179 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.31254243 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319980718 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.318834191 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319420939 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.314717169 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.327436588 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.311913226 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.311307587 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.321941759 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.313250691 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325807806 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.3136586 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.317388021 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.316707863 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.32170186 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.318256699 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319914116 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.310117025 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.312871062 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.326648248 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326119877 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.318489221 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.318168092 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.323579026 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.313326783 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317093502 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.318540012 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.315288184 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.31560273 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.325233392 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.313071474 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.31624239 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.313492429 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323408192 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.326138229 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.321520065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.313337851 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329385512 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.329489023 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327639471 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.312990886 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.315957121 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.316708499 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.321322289 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.322226895 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.315680875 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328908604 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.326094621 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.324813595 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.321875075 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.323259363 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.314097615 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323498103 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.322835236 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.316232313 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.328187331 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.318785835 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327771508 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.321966111 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.321707367 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.313972045 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.315807014 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.316065008 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.318103671 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.320874219 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.319803355 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.326195866 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.319753007 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327252371 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.32361053 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.32319719 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.320833289 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.315610924 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322245678 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.31378259 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.324236681 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.324204534 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.315905431 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.325403528 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321480196 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317298579 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.320417447 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.327428569 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.322447162 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.315215443 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.32087265 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.328320934 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332874453 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.323545768 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315047269 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.320604362 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.325532052 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323870217 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.32433565 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.317518025 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.335263235 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.338225326 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317686976 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.320448748 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327154883 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.334771375 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.324369163 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.324199788 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.320657631 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.324014288 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.328282203 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.323694353 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328276869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330024753 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.319014392 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.328981572 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.318529231 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.322949989 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.325583118 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.336363825 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.325424325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.321583039 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.336965315 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335822921 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.325242767 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348125843 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.332096104 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.32521109 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.330387502 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316592547 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.326461156 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.321054008 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.333049861 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.326786423 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325948428 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.326461348 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.318359261 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.328874184 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.331988828 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.335557459 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.327459849 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.317784084 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.321136056 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.327733881 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.327330992 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.327328093 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.326508964 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.327040741 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.326082738 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.31921096 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.340250166 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.344327064 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.331828312 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.326700899 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.327649189 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.3274084 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.331649621 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329858666 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.333496265 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.328188684 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.328429539 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.326153714 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335098215 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.327675678 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.320768085 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.323043433 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.321685048 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.331796784 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.33770773 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350078379 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.332338179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.33082665 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.33064444 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.329594874 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.322879862 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332558682 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330648215 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.324469431 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.326212295 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333271849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.331981782 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.330677198 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.324754114 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.334368285 seconds)
  done (took 782.042738834 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330257163 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329884809 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328773295 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331249679 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.33076995 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329964479 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329118189 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.330504502 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.33151158 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330031225 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.330453105 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331758195 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33203852 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.332920209 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329910064 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.330087172 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330208375 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331441532 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330422861 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332626287 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331708825 seconds)
  done (took 29.152409715 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.332431881 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.33239883 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332187119 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332504328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332242227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.331178715 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.332216227 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330527605 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333241682 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333141231 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.332594937 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332199196 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.331878983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.332508078 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332716313 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33031505 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331736764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332999751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.334339972 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333554553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332323774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.332876966 seconds)
  done (took 30.5192782 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.332948544 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.333744746 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.326748122 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.336551905 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.332503834 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.333321535 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.331518896 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.332273001 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.333010045 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.327104148 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.327200884 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.326376382 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.33069504 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.339431746 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.329428368 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.33841225 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.334213322 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.334581996 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.334912479 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.331584716 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.338893798 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.34625064 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.334882453 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.32629345 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.336709708 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.333668525 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.334215336 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.33396667 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.326009021 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.33738892 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.333445206 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.32786204 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.338152786 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.336810889 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.330608476 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.337442851 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.336269882 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.333744051 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.335007026 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.336322348 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.353721819 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.336717307 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.338696935 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.347712691 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.334528545 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.330330506 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.340635372 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.335948184 seconds)
  done (took 65.267359447 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.335861647 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.336020842 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.334056619 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.335065743 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.336142184 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.336903738 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.334861613 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.335972139 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.33542215 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.337657895 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.336250213 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.335938528 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.337405704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.336331345 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.336560627 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.336591353 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.336078412 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.336977149 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.335213886 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.335696118 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.336838092 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.33757754 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.338765899 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.338228547 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.336856612 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.338282847 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.335081075 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.338833572 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.336555582 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.337674987 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.337838103 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337079999 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.337993374 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.338554685 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.337353522 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.337702441 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.337516667 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.337906235 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.338358029 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.337612 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.339611629 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.338007603 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.339282721 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.338050668 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.338769793 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.338795797 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.338798911 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.339067328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.338112192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.339153738 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.340678278 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.339185902 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.338780832 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.340565486 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.340410557 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.339365964 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.339619147 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.340922831 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.341413894 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.340813195 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.340683458 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.34064411 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.34004756 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.340328084 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.338525658 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.341270722 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.341002538 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.341415509 seconds)
  done (took 92.198900033 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339809571 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.342610599 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340803845 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340120307 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341943083 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.339753806 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340854432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.34173627 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340539066 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340566618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342264267 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.338739616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.339994008 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.341668126 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342427242 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.342381117 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.340812701 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.340941283 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.342319887 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342475549 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.342845136 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.341756192 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.341493671 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342669614 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.342442387 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.34177036 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.340037534 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.341849874 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342632042 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341180856 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.34441251 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.343716002 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.343684582 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342230302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.344536992 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.343913138 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.34293891 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342367411 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.342504596 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.343655105 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.343701944 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.343216713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344839336 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.342776491 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343140178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343356 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.344949769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.343936282 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.343858054 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.344825689 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.345018159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344673887 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.345016581 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345450053 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.345059081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.345118096 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346237828 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343760318 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34458855 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.347144337 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344558729 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.346367867 seconds)
  done (took 84.473455979 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344570767 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346890208 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.34577988 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.347042876 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34452121 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.345863093 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345100017 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.345842181 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.346511594 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.345102273 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347700809 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346811177 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346238939 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347776319 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.347657123 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348617059 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345442988 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.348194018 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346628137 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.347615848 seconds)
  done (took 28.148577808 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.347846822 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.347155209 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.347727662 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34597798 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.34704864 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.346884083 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.347632154 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3468397 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348121056 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346962304 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348201601 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.347149173 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345619039 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.34841329 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.348387929 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.347656835 seconds)
  done (took 22.778496563 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.345648747 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.346644097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.347971649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.347982328 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.34729747 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.347770054 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.347374981 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.347106872 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.348255685 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.348768703 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.348655743 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.348623438 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.348897696 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.349845773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.34829245 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.34826456 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.348585499 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.348012638 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.34938183 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.350376158 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.349611294 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.347968018 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.348586164 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.349585098 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.350132491 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.350039287 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.348498015 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.34993369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.351239431 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.350677711 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.349933974 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.351770242 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.348592041 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.351883312 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.350296171 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.34832791 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.350306492 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.35114405 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.350951438 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.350858281 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.349044682 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.349472283 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.350300098 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.351159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.350432491 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.350744426 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.351049617 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.351052603 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.351673504 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.351082667 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352013693 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.352033684 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.351494532 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.352215169 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.350209984 seconds)
  done (took 75.450350543 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352345764 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352502614 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.351315813 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.352516113 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.350420004 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351026803 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.350025238 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.353222491 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352827435 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351870536 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.351643764 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.354178959 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352716808 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352620804 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.352261414 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352630754 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.352043234 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.353026072 seconds)
  done (took 25.564530102 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.352850388 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352058647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.352418896 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.352866538 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.353961787 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354289467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353205128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.353150674 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353106489 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.355470816 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353353607 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.353928517 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355675076 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.353478787 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.353959015 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353386237 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.353310254 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354406359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.353544218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353955173 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354644905 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355157918 seconds)
  done (took 31.00684699 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.346920934 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.34563719 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.344629321 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.361099494 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.361064172 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.345539803 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.346280796 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.346526868 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.368371863 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.389906929 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.383509166 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.360318524 seconds)
  done (took 17.527131987 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354992426 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355336032 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355408926 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357687798 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357474159 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355601477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356907919 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355786916 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357186338 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355672232 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355824254 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355564823 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355654749 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355894437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355902594 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356122515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355991445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356220147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356994531 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356337896 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357221697 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356889057 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357256746 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356199449 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35657441 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357198209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356692534 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35778352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357825629 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358125628 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357855836 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357967042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357376095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357611046 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356711557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356686927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358499152 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358154364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357701036 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358738177 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357821007 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357298569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357836249 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358066405 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35767968 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359960703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358847349 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359835359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358401058 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359153826 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35912405 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358039921 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359038824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359239319 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359313138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360874228 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358130485 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35959488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357967753 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360320641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360443675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359492983 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361287649 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359227183 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358915282 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36076861 seconds)
  done (took 90.838813394 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35949391 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359632457 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359887676 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360740382 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360088765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360788438 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360728906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361674933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361577467 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360748505 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361299172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36036505 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36023987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36182456 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361333681 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361553272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361331165 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36033849 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36158238 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362346761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360983697 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361828217 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36053197 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36050003 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361174706 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360811372 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360193348 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360830402 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362459517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36246959 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360374481 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361851389 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361093085 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361440712 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364189753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362460485 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364236313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362388484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363296952 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362711665 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363263512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362511038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362598526 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364500988 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362398487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363540101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362567113 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364112829 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363848656 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363185414 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363752038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364296331 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363597885 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363327483 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362732873 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36221978 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363960501 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363423253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362452592 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364976557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364441715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362620881 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363926511 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363875828 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364375809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365525314 seconds)
  done (took 91.14000389 seconds)
done (took 1833.645272316 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.52024236 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.475401653 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.354454828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.370092298 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.355837988 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.35542411 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.366644476 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.356526472 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.354516528 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.353990267 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.355550009 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.545752806 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.390782949 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.353772388 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.357000741 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.452845001 seconds)
  done (took 27.553952512 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.382607262 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.364410056 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.4721136 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.358883202 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.382604832 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.546467594 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.419797136 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.363193321 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.528129642 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.380324055 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.351779309 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.381940607 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.360265074 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.363625444 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.389742907 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.545988034 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.614224148 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.357505888 seconds)
  done (took 29.799213458 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.797429364 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.358859475 seconds)
  done (took 5.391995488 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.378365204 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.361234373 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.362030097 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.359293026 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.352283252 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.369980089 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.359892165 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.372169415 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.356354106 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.487003397 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.364032143 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.374273159 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.359863522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.361662142 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.368288918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.40690143 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.502524878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.370469774 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.368351122 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.368244289 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.360015344 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.444047748 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.401987275 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.371538117 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.486346851 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.367605754 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.364214144 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.367101388 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.485272659 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.371688281 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.361201952 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.359441202 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.362338583 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.315888892 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.893137492 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.368303138 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.387191329 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.368081678 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.370050091 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.504009862 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.363643286 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.368128445 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.35836525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.898034151 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466900005 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.476934945 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.356372448 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.362585146 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.364282349 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.423822596 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.362298034 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.364239912 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.421173739 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166096509 seconds)
  done (took 86.912737693 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.375107789 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.355402912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541610306 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.376878491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356460112 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356788072 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.356349571 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.637799284 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.384876297 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.3580974 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.671273696 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968503816 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.369279073 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.403646515 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.371110821 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.388143405 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358326054 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.357342772 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.357827379 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.362278157 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914911221 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.359806342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.358512639 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.513067365 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.397569689 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.904772766 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.357580863 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.358783653 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.35741953 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.357365321 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944508367 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.369698659 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.386986481 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.357844476 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.645455078 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752376588 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.711698437 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.357927416 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395003299 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.359056625 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.358958666 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903969755 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.735287228 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.35889038 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.374415968 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90724516 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.359714884 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.369855065 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.363458183 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.626159467 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.359066667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.360005913 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.359332467 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.363727645 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.359293269 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.386331182 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.386286838 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.905661971 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.360743445 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.361270626 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395872548 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.363406458 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.366505481 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.364049935 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.360276849 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.739239625 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.527318363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.365359793 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.736469984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935888602 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.373339201 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009950515 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.361685009 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.362683147 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.433029762 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.36008347 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.378195229 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902160559 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.370280319 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.361034462 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.716124802 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.363912563 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.666038912 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.378854531 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.363688746 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.944771573 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.368046979 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.394829414 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.363196885 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.360909765 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.37828546 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.374501613 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.652097611 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.414524246 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.360904005 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.361912903 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.372265444 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.362721005 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.377970717 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.36843883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011085195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.362406249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.363139348 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.363274121 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.363551186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.363445392 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.362902499 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.366011645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.638706691 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.363189721 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.36770566 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.363729846 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.364898634 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.372487729 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.516927903 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.36426891 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.672151724 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.36543717 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.364161358 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.368835273 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.364198798 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374365352 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36515424 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.372337177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.28172786 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.678416203 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.380584207 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.364412204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.36445679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.36391628 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.386268954 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.362636132 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.401761835 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.368815029 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137990041 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.372951812 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.380707388 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.363010858 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.379558384 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.368523532 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.365913239 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.365448274 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65979185 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.652387259 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.525745777 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.36827954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.362964359 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.15645819 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.367902185 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548584118 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.381532987 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.363752139 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.664271246 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.567071735 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.365305592 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.36610601 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.365454091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.641355701 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.376917408 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.677027252 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967820675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365735511 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3701826 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.140856347 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.112018655 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.366971719 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.365343523 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.666329359 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.386507182 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.366955382 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.365116462 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.367413606 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.365098843 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.370193763 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.370213696 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.365554073 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.367129504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.481831248 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.561588961 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.384135923 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.379770623 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.908287472 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.374783406 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367607678 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.374694856 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.370208989 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.367137656 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.398932063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.367073463 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.410392256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.368774412 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.375368944 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94173674 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.368905128 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.370062971 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.563045079 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097304934 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.372069457 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.368168065 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.368183981 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.405167577 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.940651508 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.415840199 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.68347642 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.380468377 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.407323537 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.369250399 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.461550109 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.939315039 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372501704 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.369390555 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.104215973 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.378152627 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.049822436 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.367489069 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.369762121 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023273043 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.369322716 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.368921028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.374867563 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.370493169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.685105288 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.36954632 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.409701489 seconds)
  done (took 504.546775216 seconds)
done (took 655.442022836 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.370139723 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.374135835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.3749092 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.375227501 seconds)
  done (took 10.744644278 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.386931403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.377615363 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.386672731 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.37667671 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.3855343 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.376979744 seconds)
  done (took 9.543682901 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.370390814 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.376018015 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.376054277 seconds)
  done (took 8.374122614 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.582599359 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.388079768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.730582807 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.377129982 seconds)
  done (took 9.330521832 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.387457815 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.386849719 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.386390685 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.386627531 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.389307379 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.389928032 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.387107291 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.386864853 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.387802132 seconds)
  done (took 13.737577958 seconds)
done (took 52.983737077 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.483673799 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.443528195 seconds)
    (3/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.58866482 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.658106252 seconds)
    (5/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.897798317 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.408778368 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.661949826 seconds)
    (8/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.449297406 seconds)
    (9/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.578723967 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.535305238 seconds)
    (11/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.435910114 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.353117412 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.477770218 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.503389129 seconds)
    (15/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.45911078 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.676524217 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.523779221 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.406899468 seconds)
    (19/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.519177029 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.490732597 seconds)
    (21/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.707690449 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.351364082 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.494787204 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.455330992 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.386542479 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.676299076 seconds)
    (27/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.354603888 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.529764173 seconds)
    (29/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.353062437 seconds)
    (30/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.463559605 seconds)
    (31/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.522097842 seconds)
    (32/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46368511 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.472895975 seconds)
    (34/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.798260209 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.448938752 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.394967779 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.56162634 seconds)
    (38/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.600501802 seconds)
    (39/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.492866154 seconds)
    (40/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.49115108 seconds)
    (41/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.495232958 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.355728349 seconds)
    (43/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.373620398 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.474501316 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.490912202 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.69524487 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.737670599 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.567306075 seconds)
    (49/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.490734448 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.433154041 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.547345483 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.442984695 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.480849499 seconds)
    (54/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.451020207 seconds)
    (55/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.407740053 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.414633763 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.356340672 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.542529932 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.355700803 seconds)
    (60/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.468827183 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.503020915 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467966836 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.355172456 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.475872574 seconds)
    (65/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.367702834 seconds)
    (66/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.405810486 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.535153355 seconds)
    (68/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.409382371 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.630116369 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.538575174 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.642995615 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.461001716 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.383146511 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.492332878 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.357340193 seconds)
    (76/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.481907048 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.368682064 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.476515994 seconds)
    (79/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.464353321 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.538169848 seconds)
    (81/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.475892348 seconds)
    (82/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.536775761 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.499220662 seconds)
    (84/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.413891274 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.390276271 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.403057124 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.407385797 seconds)
    (88/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.376610587 seconds)
    (89/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.46919377 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.645440626 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.498595607 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.358134195 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.561207839 seconds)
    (94/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.457286655 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.52802234 seconds)
    (96/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.409637761 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.699084313 seconds)
    (98/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410811881 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.35763251 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.422759827 seconds)
    (101/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.356651786 seconds)
    (102/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.389195262 seconds)
    (103/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.667515266 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.599742283 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.741132886 seconds)
    (106/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.447712151 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.41296022 seconds)
    (108/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.382077163 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.579424359 seconds)
    (110/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.602570056 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.504721347 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.360290368 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.358598821 seconds)
    (114/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.5751052 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.420435601 seconds)
    (116/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.477658681 seconds)
    (117/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.411043749 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.636242686 seconds)
    (119/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.487654083 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.358054087 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.365730111 seconds)
    (122/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.635083928 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.634742262 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.498417516 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.396435093 seconds)
    (126/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.413720033 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.487224596 seconds)
    (128/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.593409012 seconds)
    (129/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.462127343 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.513268367 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.471074732 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.361756333 seconds)
    (133/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.43184705 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.388954251 seconds)
    (135/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.901174376 seconds)
    (136/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.46676716 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.413047634 seconds)
    (138/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.359737282 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.45211684 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.565740038 seconds)
    (141/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.555527989 seconds)
    (142/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.47624674 seconds)
    (143/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.453415193 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.368742438 seconds)
    (145/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.556798406 seconds)
    (146/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.372434802 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.370239422 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.433731349 seconds)
    (149/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.363302293 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.481173878 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.629287678 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.420678514 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.747139382 seconds)
    (154/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.386684086 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.375188034 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.448607891 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.369383576 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.628475045 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.42335815 seconds)
    (160/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.420555563 seconds)
    (161/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.57347203 seconds)
    (162/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.499361587 seconds)
    (163/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.468817481 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.493560451 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.488954417 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.36307967 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.456297841 seconds)
    (168/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.456743103 seconds)
    (169/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.633664081 seconds)
    (170/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.576931586 seconds)
    (171/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.601334411 seconds)
    (172/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.383010244 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.542658564 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.759762817 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.707228241 seconds)
    (176/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.589707753 seconds)
    (177/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.421189693 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.473687784 seconds)
    (179/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.743341243 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.587028079 seconds)
    (181/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.365740752 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.499120515 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.390054785 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.370252571 seconds)
    (185/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.611760967 seconds)
    (186/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.640802364 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.506473252 seconds)
    (188/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.364661731 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.570881171 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.674745064 seconds)
    (191/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.560268894 seconds)
    (192/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.364915221 seconds)
  done (took 335.700412459 seconds)
done (took 336.955792675 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.42233026 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.480906508 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.39483382 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.393044062 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394602873 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.385722049 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.418106774 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.394097394 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.408271938 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.408273337 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.386662635 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.404590506 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.41070707 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.40599964 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.42829951 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.393260046 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.395244799 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.404974414 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.409402167 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.414723742 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396821856 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396950628 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.422292485 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.394564099 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403724378 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401587771 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.401490331 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.396446607 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.403612363 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.41057231 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.397110019 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.4009484 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.412880843 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.406975963 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397917563 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.406537552 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398798862 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.482707075 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.417770935 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.407880229 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.404872686 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.41254495 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.401706776 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.401945754 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.409716268 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.425203111 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405992776 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.410598136 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.399611482 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.396822928 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420130886 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.408395265 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.407419184 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.398437041 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.39910443 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.411369869 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.407736286 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417393412 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.405427244 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400626629 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.431126373 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.416645438 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.410397505 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405107302 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.406293298 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.413576836 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.408094872 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.41453829 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.406043062 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398692858 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399794945 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.405538424 seconds)
done (took 110.650963541 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.520635685 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.395202385 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.557010747 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.406608326 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.562423076 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.52249306 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.405632031 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.409060627 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.406530842 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.198855217 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.408061768 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.406485841 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.398072535 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.406152172 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.521090383 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.407755998 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.40588716 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.099533391 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.407740825 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.53588255 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.399446395 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.407364133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.408272443 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.2082017 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.397533184 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.393153377 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.535358588 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.40786376 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.110773981 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.393793351 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.396202249 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.108970682 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.536738601 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.425513957 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.41867328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.416039779 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.567797317 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.412253092 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.523570253 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.526032665 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.559762609 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.446666189 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.394741683 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.398748714 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.411431492 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.410489465 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.408857348 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.437667269 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.400404968 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.408867162 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.102011738 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.418878761 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.409996094 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.409242698 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.410504061 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.438461306 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.411732034 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.411141187 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.539981441 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.410399458 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.526175276 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.212165208 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.203923036 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.410034936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.398449281 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.409773601 seconds)
  done (took 113.047121476 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.473997681 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.475122503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.514547747 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.402867423 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.450855209 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.515376023 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.402264041 seconds)
  done (took 11.508215057 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.407510918 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41151069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.464409298 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.462940459 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.410718116 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576545722 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412802096 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.414671902 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.4118071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.467174932 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411847634 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.412717861 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.420555464 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.402394561 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.463042304 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.414672614 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.518370219 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.404171132 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.411643357 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.557494868 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410928458 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.422000109 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.454435976 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.416836814 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.415171271 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.410419099 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.20144211 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413818591 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41253726 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.414148007 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.414795474 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.473056358 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413657509 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.405052004 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41251233 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.518309795 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.414448882 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.411905163 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.412439013 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.406926592 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.413035797 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.413028733 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.413457711 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.413667319 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.414499409 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.430895881 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.413696268 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.413187696 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.413745851 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.414076226 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.465505671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415100701 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.414727248 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.415828979 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.474078218 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421861859 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.416043715 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.414817244 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414428675 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.41466853 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.563679674 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.467405904 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.415245369 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.468547499 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414928334 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415501563 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.415125935 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.414818142 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.496013464 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.415030608 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.468284708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.415584976 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.634915436 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.432003887 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417447042 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.410144736 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.409268834 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416123288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.40493434 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.41384582 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.41600389 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.410338567 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.414354141 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.416091726 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.415471875 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.565781643 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.515109785 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.415344824 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.42418807 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.415492993 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.416926065 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.468906535 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.417382406 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.415906724 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476938185 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.523624293 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.46109432 seconds)
  done (took 145.309126863 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.421268873 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.422628249 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.415094492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.437071388 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.409814983 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.408244848 seconds)
  done (took 9.79458382 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.409907488 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.421313761 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.418224156 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.418561073 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.418151035 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.417995511 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.417844439 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.410238495 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.421032096 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.417390933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.417941711 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.419187644 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.418754921 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.417186831 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.418158731 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.417334288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.41861758 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.418324402 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.42024202 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420085491 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.408148992 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.41859216 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.420259674 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.411359642 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.424375973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.419944652 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.433933379 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.419265654 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.419346409 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.418254469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422104809 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.420892874 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.412606827 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.41521276 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.422630983 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.414295622 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423713933 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.421403428 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.418462717 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.420087031 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.42210069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.421048996 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.419572946 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.420280945 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.414714896 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.41636639 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.424454155 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.4340548 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.42059727 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.420786599 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.421070058 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.419822702 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.421857055 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.422845708 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.415100415 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.417071502 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.425160679 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.422172626 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.421887312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.415843154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.425506192 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.423043185 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.414160041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.425746045 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.422263772 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.423508976 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.413551487 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.426024369 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424047254 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.422105659 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.422094864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.42146505 seconds)
  done (took 104.506514426 seconds)
done (took 385.437801266 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.960585066 seconds)
  done (took 4.243114344 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.493363679 seconds)
  done (took 3.777237911 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.432941824 seconds)
  done (took 23.719422071 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.415908666 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.525925872 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.427178296 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.410003679 seconds)
  done (took 11.060905413 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.73101766 seconds)
  done (took 4.014083545 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.429787967 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.418062219 seconds)
  done (took 6.133367996 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.656519309 seconds)
  done (took 3.938256272 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.188574727 seconds)
  done (took 4.477087687 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.445194822 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.419090375 seconds)
  done (took 6.155203636 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.387218264 seconds)
  done (took 3.671667255 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.283712043 seconds)
  done (took 20.569234197 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.431564493 seconds)
  done (took 3.717195108 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.443752545 seconds)
  done (took 3.727601284 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.042847768 seconds)
  done (took 6.32743488 seconds)
done (took 106.815480344 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.409189339 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.415278087 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.410656038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.413080221 seconds)
  done (took 10.932871439 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.489011567 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.487741553 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.497670215 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.482799463 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.483075709 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.492135849 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.46628482 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.451381894 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.480573835 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.475910397 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.493349701 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.483817936 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.491214845 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.452485156 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.476227196 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.494018112 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.480669618 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.497976516 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.466866158 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.48307413 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.427203377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.48487323 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.478198747 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.427949672 seconds)
  done (took 36.731102055 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.9334724 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.484988084 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.570634847 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.469244466 seconds)
  done (took 7.743488114 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.530194401 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.533176697 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.548253319 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.592329293 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.611022661 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.546806827 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.453905494 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.447982279 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.434625839 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.531087844 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.61313584 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.530264444 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.746974174 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.427768564 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.746773363 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.428100565 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.428920178 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.532159188 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.585254618 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.609864625 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.428479901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.531005082 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.534950961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.531258802 seconds)
  done (took 38.192491023 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.436899806 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.444629524 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.429481556 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.443421304 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.429601637 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.429955183 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.430191521 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.43578177 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.428023012 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.42960419 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.431084986 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.442553746 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.428653787 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.43064485 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.436088115 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.431817449 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.432965592 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.436775988 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.438768693 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.430720143 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.429761854 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.43734623 seconds)
  done (took 32.833387227 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.413303999 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.413963625 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.76631614 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.66877865 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.415426046 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.419403845 seconds)
  done (took 14.386632895 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.491502331 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.635942643 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.424991043 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.783797003 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.872848226 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.426518423 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.423620921 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.671734607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989081058 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.97997359 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.485185917 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.490747043 seconds)
  done (took 20.9675974 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507075382 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426314339 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426295401 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437094478 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425301239 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428133251 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458771101 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123197974 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.432035415 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702879602 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424982045 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512310609 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672138337 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431531409 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432859659 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.396543396 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655057042 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925646067 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429484413 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431733355 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459018899 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427995749 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43801436 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633705941 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432390485 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427558612 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.689911841 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427131842 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716840316 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691088401 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692830968 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431156192 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703846566 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075174954 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53340489 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634726603 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428702962 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428879972 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.409142775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.439937461 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441323127 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434264949 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692072315 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431390412 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427980073 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442473013 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139722934 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.436300701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.429206847 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42955573 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692948701 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510915247 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.433586289 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430593381 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478613615 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429072855 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.434258762 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5615395 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069827577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429998079 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448994697 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.434334134 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422778561 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439842314 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127468752 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.44139217 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.434274319 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434739257 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430805459 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431088982 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45427114 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431376592 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.450437334 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429791265 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239064825 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436243719 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437309907 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983689976 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43247519 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.435121279 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655528005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432050949 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431598619 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.431236823 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431439908 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185044253 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43870467 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.400139659 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474360837 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128629523 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638969181 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455295583 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459925552 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.652495837 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.40034751 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431232456 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.446631438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439663687 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451326008 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135793815 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432726321 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.438027086 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678134531 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.64354443 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442281106 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410226068 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90647648 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436405774 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.462806559 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.444137764 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6439826 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.07724037 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709003285 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444363306 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472746229 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433125154 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243839324 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437792423 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.443978963 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434218885 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723357919 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.26829166 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4354227 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507559594 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432977856 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434151435 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443567822 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435321642 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432059331 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.620339142 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449532144 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.702477424 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.437356067 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434372608 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.432986128 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458612396 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.441039013 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.655683947 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438750448 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713484666 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434614245 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436061969 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436453615 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.652137493 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.43521152 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.443940481 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773596982 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446880222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449013038 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707019131 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476045722 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547989568 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470118854 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.441890252 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.686518544 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.440252696 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.441499896 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436049919 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441848013 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4400784 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.44514448 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435712547 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075249007 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417167608 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444014587 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437248952 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.451033281 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510172826 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444457722 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645555947 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.441224186 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454932239 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.444461325 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.445625413 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663275198 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704408245 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.44201865 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616573441 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.913739498 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079848886 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457162322 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.43836164 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.437332938 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.437595161 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439541898 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437529126 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439038999 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646327749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717206033 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437036648 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086173602 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446576125 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439777655 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.449250481 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707604977 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.451263693 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439639227 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.44715055 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458900117 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451621315 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.71251839 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664856293 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.454646395 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439692635 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.95855153 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446609797 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440678832 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440516963 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463738279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439476643 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279260456 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780561909 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436419189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710115955 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444725838 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.459714161 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.438857204 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439179226 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448543763 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.444343714 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448118461 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.650221906 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45716153 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447089695 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081602195 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255621139 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031774676 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447374437 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.449210973 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44581796 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151313985 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440926653 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441633617 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695843755 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16800652 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444018437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912421502 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.444123963 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226508333 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716099953 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672225425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441641341 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.446072351 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717374901 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660000829 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468581837 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452166033 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446164994 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.41190425 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97661188 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443864342 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626442793 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148572774 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442900545 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.449811095 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.446556703 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.450422445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850271546 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44898573 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443573013 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45815359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451292821 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285708538 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.452648441 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443989099 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116785571 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45204777 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.929367333 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449420401 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655660465 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.720788915 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.696413037 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.459123745 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.454996981 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.692117068 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715964603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451135656 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458171797 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035858922 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.306151402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.452093169 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44710821 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272081024 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451262252 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748353705 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.454240596 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.450621134 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457976219 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448195184 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446045126 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.445805285 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450968919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420391782 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950369405 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.440846494 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457318848 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454953089 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452537528 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694238657 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.462196709 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090003434 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677543811 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454969277 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481035177 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.452668393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450378051 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.42146737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446892523 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446754479 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478002143 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.669012995 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45568559 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.420835821 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438027289 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.658021723 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447750655 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453554421 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674363379 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.453331485 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.457042867 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265132694 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483326363 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.452796923 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454382899 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440817683 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488690946 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522945103 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659323346 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.725492387 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.726773094 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857119296 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458130507 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455794 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.463833186 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528915071 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458498206 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.455242046 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.45305104 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089849763 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281460434 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1083422 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72863162 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456957212 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450118448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450649109 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691200404 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449795836 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726975332 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449621232 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.458631109 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471436537 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45558982 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460750883 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666031016 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725836092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450848105 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455695703 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456477213 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.449659792 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72747011 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.666387359 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962099753 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00815867 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451979925 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458566981 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190532307 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729917599 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451491177 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452043259 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452285319 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.468787633 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.46953924 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.461772797 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462819916 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680094173 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721451689 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126639134 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726337118 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.481243473 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.340923322 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452710924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702006495 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288086257 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664974836 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107765352 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.213656146 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710237528 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527148597 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665635231 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.459875297 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689572789 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.464898682 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458107912 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4547369 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452539991 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.452902917 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.724442599 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110076555 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711189622 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.457748924 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.464446306 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486427675 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.663366986 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680342985 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227552088 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677685395 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730179906 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.465859867 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454666251 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111104106 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73500358 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45990518 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.458758499 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675327324 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45885079 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491866452 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.337161649 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.454689197 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010970284 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.66689576 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476389704 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466787565 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219636266 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116389067 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.460515288 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968986592 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458242158 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463502877 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736586228 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.462046926 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.461605683 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747313683 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.46077947 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462135702 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673072661 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.103817884 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25566357 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.481084387 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4576372 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.462530595 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457116972 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460664604 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458224387 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468675245 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862310682 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46190902 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456382135 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46887536 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.47069738 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472837825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.460715215 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457303561 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.464848254 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.432058834 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.444377146 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469843556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591374679 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999104168 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459316095 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.073673818 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.795521125 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.703848147 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463224497 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.432164607 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.462105262 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458280221 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458772477 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457967204 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.451789427 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016001701 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.468925139 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.736910835 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469355358 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.66829938 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669000971 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470988682 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678316317 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476202441 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483668191 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.427257424 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458518288 seconds)
  done (took 1015.996927985 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.484451328 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.497613685 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.461602849 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.509494397 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.496944465 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.579947392 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.528891168 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.545744539 seconds)
  done (took 21.424308224 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.457870138 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.463854848 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.458169537 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.463818868 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.452065973 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.96093889 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.456263898 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.461225925 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.473845242 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.457250109 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.462655177 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.119528129 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.466820557 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.461065 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.464644619 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.466242635 seconds)
  done (took 33.874008848 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.333736775 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.526699548 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.310608971 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.465696049 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.488102998 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.464177808 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.660388777 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.463123344 seconds)
  done (took 27.033786715 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.465296169 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.466025941 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.467464007 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.467131902 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.467345231 seconds)
  done (took 8.654876047 seconds)
done (took 1270.059676373 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.468293927 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.468101969 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.467949668 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.468793275 seconds)
  done (took 7.195556054 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.43251146 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.432585935 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.43459565 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.447107934 seconds)
  done (took 10.067512132 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.179963508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.009515098 seconds)
  done (took 5.511338228 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.014154532 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.993699336 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.997092528 seconds)
  done (took 7.328509732 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.757384566 seconds)
  done (took 3.080106903 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.445379602 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.470495544 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.459510197 seconds)
  done (took 8.697261379 seconds)
done (took 43.204464755 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.466413172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.219035719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.609854025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.462943564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.617749002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.613203111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.705692373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.453425102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.468770778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.462620962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.464239408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.616960677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.694087516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.220777813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.693683205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.219117156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.620079292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.455197447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.460193576 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.454801007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.707146352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.468252562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.46155694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.455038547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.62021956 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.601447031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.456023591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.220304423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.457788191 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.454848415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.600703132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.456236051 seconds)
  done (took 85.263444176 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.456960288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.456475946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.456814172 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.472894884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.456349428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.456644423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.474154027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.462720343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.45548747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.457610766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.455864375 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.459286268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.457202995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.457418468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.460496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.458915356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.458414187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.459125765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.458349855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458103768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.457541345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.457134142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.47240854 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.456943607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.48775323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.458197419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.474389629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.463717547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.458611455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.458247552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.459651703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.478403507 seconds)
  done (took 80.098266538 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.462694455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.459263576 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.461030837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.459022667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.476528459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.463400394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.459654444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.460943348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.459783735 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.478983464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.458664201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.457869405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.458668424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.45989511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.463362465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.458931192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.47354458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.475868779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.457533467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.460312949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.479312181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.459846931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.459409788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.491198396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.467134297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.460784352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.486617302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.459065025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.476944209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.461094964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.464979814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.476608715 seconds)
  done (took 80.235442409 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.699915994 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.47708379 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.47756799 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.469654548 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.478721441 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.475291006 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.470357394 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.706034637 seconds)
  done (took 15.582750518 seconds)
done (took 262.504939586 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.473006812 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.470567843 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.496480148 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.471502633 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.487342521 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.49628574 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.682093885 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.496674349 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.666131023 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.472141808 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.486935949 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.472187001 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.326094259 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.615865019 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.463142867 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.472831578 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.388727614 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.484240108 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.473492019 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.697691573 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.497918125 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.463281759 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.488515983 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.387133078 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.444506291 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.534952304 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.537041921 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.627196792 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.590020961 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.533426862 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.46451787 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.481226739 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.477162355 seconds)
  done (took 68.952220385 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.46995685 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.479759294 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.478865032 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.479733218 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.478772223 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.477377228 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.470092568 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.478598938 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.480042904 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.479425155 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.478285935 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.479742017 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.479460461 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.48002745 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.477694063 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.452900004 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.470543514 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.479907039 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.470251506 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.452228511 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.480180018 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.481754632 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.480733477 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.480002652 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.480647484 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.478944723 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.479607148 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.481652651 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.47966791 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.481094868 seconds)
  done (took 45.628937058 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.481403532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.47758099 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.467210476 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.479338652 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.472771902 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.478149506 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.776275573 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.485542094 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.473568625 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.476025189 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.442734554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.482734278 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.525639701 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.467679656 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.474951932 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.482531619 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.482819708 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.473813378 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.46684996 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.487939033 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.780355226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.481360167 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.772882781 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.489670822 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.476916237 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473492835 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.479454623 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.467968423 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.494470061 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.441603432 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.290617668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.770945629 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.467143432 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.488559183 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.292744712 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.487377597 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.483013272 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.458512728 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.475265787 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.475834782 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.769825023 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.475276439 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.468405095 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.46791328 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.475934692 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.481949487 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.478415879 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.453657955 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.726383857 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.481410026 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.469514577 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.478085698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.485279376 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.476294279 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.726607855 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.478466039 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.475363957 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.477137775 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.479733249 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.771451242 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.485159743 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.474830841 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.467332825 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.477436846 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.468922672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.499148449 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.490405981 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.477423416 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.468886818 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.480490699 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.470131502 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.49664224 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.483838021 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.444653231 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.486069538 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.478467555 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.478798091 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.47062133 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.470951441 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.773644677 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.484388547 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.472426639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.787783381 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.484852519 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.488429458 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.487850367 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.484709584 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.551696736 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.774336181 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.407387689 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.502661157 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.470527912 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.780189539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.490722549 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.478382943 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.484451195 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.485578814 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.487380375 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.471976171 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.471249248 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.49598908 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.49177095 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.476380383 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.479351252 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.783533931 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.487808416 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.472977858 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.481289681 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.552552054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.487045106 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.493307765 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.483453237 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.791368003 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.488988975 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.487526105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.473804141 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.470506113 seconds)
  done (took 216.126955701 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.489861649 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.47447996 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.487627803 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.473811597 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.473748072 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.481446753 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.475296318 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.476032299 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.478768409 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.474339675 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.47882219 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.483837889 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.481871623 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.473116076 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.491128016 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.475856061 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.47416451 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.493326768 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.475879331 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.474615745 seconds)
  done (took 46.924655924 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.489417986 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.075537498 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.041288642 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.493642607 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.490521378 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.480901266 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.538615595 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.491616561 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.489259783 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.797999188 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.665710758 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.495916095 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.490322146 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.491211203 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.037894267 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.466491101 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.798144304 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076969916 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.495632862 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.059612785 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.463286289 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.490285088 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.480457194 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.070686771 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.804459778 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.782277098 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.547401712 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.062962658 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.491992953 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.491358441 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.06181576 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493100142 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.482657167 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.062306786 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.497158481 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.502421036 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.491711427 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.542825498 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.543298087 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.800553721 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.089000481 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.796415407 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.508358806 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.655121883 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.493352727 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.463024972 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.08451911 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.497175997 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.464703896 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.493691197 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.498010828 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.050112632 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.488350886 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.050194233 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.496103343 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.492483181 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.060902335 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.051505056 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.046890355 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.665969568 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.489541702 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.784404727 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.498393832 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.073651321 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.494341407 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.493134659 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.493219072 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.666252134 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.067982429 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.783209646 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.794630562 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.795217115 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.49383967 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.555925752 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.494655845 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.797678097 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.553284132 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.888332743 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.797693207 seconds)
  done (took 134.432629061 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.766417815 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.601020509 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.871119098 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.062724022 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.993247654 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.625923414 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.603583299 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.728624913 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.492716976 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.59858918 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.152678373 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.578854471 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.260275721 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.554327185 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.592120837 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.612251274 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.893315097 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.480449039 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.14423443 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.133252671 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.507776975 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.588639132 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.257449125 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.867233761 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.494658542 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.230115228 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.413469608 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.015668163 seconds)
  done (took 56.463747228 seconds)
done (took 569.860006399 seconds)
SAVING RESULT...
DONE!
