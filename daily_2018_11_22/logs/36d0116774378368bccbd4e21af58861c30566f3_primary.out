cset: moving following pidspec: 23534
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.242682491 seconds)
loading group "string"... done (took 0.553369778 seconds)
loading group "linalg"... done (took 7.726002435 seconds)
loading group "parallel"... done (took 0.173344606 seconds)
loading group "find"... done (took 1.180406337 seconds)
loading group "tuple"... done (took 1.878733985 seconds)
loading group "dates"... done (took 1.264063811 seconds)
loading group "micro"... done (took 0.23423529 seconds)
loading group "io"... done (took 0.764620855 seconds)
loading group "scalar"... done (took 42.64574119 seconds)
loading group "sparse"... done (took 13.425676547 seconds)
loading group "broadcast"... done (took 1.156107296 seconds)
loading group "union"... done (took 14.192495148 seconds)
loading group "simd"... done (took 5.191724579 seconds)
loading group "random"... done (took 10.472206017 seconds)
loading group "problem"... done (took 2.21506083 seconds)
loading group "array"... done (took 24.514028182 seconds)
loading group "misc"... done (took 2.154768128 seconds)
loading group "sort"... done (took 3.48395238 seconds)
loading group "collection"... done (took 19.549212107 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577873452 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14202167 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147471779 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145585147 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187329273 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154195285 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155472435 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096473785 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.97132962 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17323915 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152668474 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517070259 seconds)
done (took 5.207301712 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.215762448 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093304062 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103780897 seconds)
  done (took 0.927452231 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077415693 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142880688 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095789018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07775015 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09602783 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077776862 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094911154 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080181074 seconds)
  done (took 1.40158906 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085595268 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096601362 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080453004 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097340896 seconds)
  done (took 1.09674159 seconds)
done (took 4.461796454 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730520948 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274285437 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203287643 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461212474 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198626556 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218858352 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677202122 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351277078 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250556593 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098288158 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.140672102 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380483205 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135267007 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680012446 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091230023 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124023413 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178992975 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464476653 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081030744 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109585402 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116781445 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142577585 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130187973 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094785699 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184213286 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080500419 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191824112 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107684141 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.078845168 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.284587879 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200426587 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69250296 seconds)
  done (took 10.928961971 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110373202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132939483 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098719073 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137875431 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134619391 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100881334 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084118487 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097319977 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122417923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178059855 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113913589 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137408917 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096212377 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082898616 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117056446 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246676356 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122230618 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105173369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101806982 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105057839 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123182991 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114435248 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109560582 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093088893 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168010489 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224837696 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11247535 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127745489 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098716554 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112711027 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143749068 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143178941 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096045854 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080154096 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173439155 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125481328 seconds)
  done (took 5.217826731 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.06827041 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190454875 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122948469 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171506031 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080293091 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14377262 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095477739 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115605603 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259109149 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186742446 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176580948 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14416304 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09888256 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096952134 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081135847 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097736873 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.616661649 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.174944904 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136305664 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.141549341 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095988379 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106311049 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100240329 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086541159 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097816742 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098027424 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112759502 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33311814 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16342363 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08165179 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.151428056 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099715986 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101599441 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133566903 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192099992 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123809705 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132363686 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078644358 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096414893 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178380565 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087016359 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098492192 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119881283 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134512501 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118785358 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099466483 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096711547 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204077404 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093756502 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096413844 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.927588166 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181232462 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104007842 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096183821 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323699057 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099721398 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09800033 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081642622 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280167374 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185728108 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096306779 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07950449 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097278523 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080848864 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.409770435 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082160953 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.633026915 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082760967 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108109731 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083425437 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097634222 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104790696 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087957608 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118001485 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079855484 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099575969 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079244223 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097318495 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077046588 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100588837 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108270544 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084525666 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098796824 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148451882 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095326644 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099461937 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128753457 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101513891 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078192645 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132909885 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095332498 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082051564 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099841988 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132809513 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081964778 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109019035 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098646049 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127366205 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097994016 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.149548678 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094199792 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124887966 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098728331 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112821767 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094423551 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112033465 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080875967 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102273788 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076994511 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096407106 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148442101 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096100754 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081314046 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100326563 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109571927 seconds)
  done (took 22.482954589 seconds)
done (took 40.432711386 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324921564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10393139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10488663 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104188451 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100386666 seconds)
  done (took 1.547526629 seconds)
done (took 2.328784284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287029462 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170237792 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094989602 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16739731 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092293871 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171843871 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158535222 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.1106285 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199783015 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093997201 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16251871 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093131964 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076093162 seconds)
  done (took 2.687201234 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094448633 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114955846 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083354642 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112853092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076913776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112323492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092500076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118728313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111405707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08766193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095077422 seconds)
  done (took 1.880132791 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093629558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112975751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082999718 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111420133 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076345275 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11232775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092558573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118237375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11143063 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086529895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09453623 seconds)
  done (took 1.873605235 seconds)
done (took 7.213509634 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090631022 seconds)
  done (took 0.865964686 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926391883 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.919651104 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111930042 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147906322 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.296578622 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191554666 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476203602 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124153431 seconds)
  done (took 11.173422482 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.145011878 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082628288 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103815555 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084752084 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10265363 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082712203 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102091797 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104671326 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087195065 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103173191 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08576711 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102733422 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10257026 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086972768 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102609913 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084229488 seconds)
  done (took 2.400822165 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117944961 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1174096 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10815694 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110103674 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086551235 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107465197 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107635568 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089657171 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104896945 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105878364 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090680526 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108140362 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10470509 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080069995 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107571541 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109103893 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08636701 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108073844 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107808456 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090724251 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109884355 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097245898 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08776288 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10828713 seconds)
  done (took 3.338685863 seconds)
done (took 18.558420935 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161116743 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107661177 seconds)
  done (took 1.050686997 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095218994 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114399618 seconds)
  done (took 0.99548886 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097833915 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098137638 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123921565 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111502212 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081439831 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099277412 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120522243 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081162283 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100176696 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08081102 seconds)
  done (took 1.78424631 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083084644 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111293843 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102488639 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096596901 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106751271 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097056289 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088940953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101371166 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111651634 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078041209 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104279416 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116289921 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08669801 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117273384 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105973178 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083436003 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10523344 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100704756 seconds)
  done (took 2.585242241 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079221911 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096415927 seconds)
  done (took 0.962390064 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081599291 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095436605 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079555097 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100292844 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095770273 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079509959 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095757974 seconds)
  done (took 1.413483923 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498133238 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138452706 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268396856 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102792381 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122698798 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299959548 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098914579 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084084919 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104227271 seconds)
  done (took 2.543719541 seconds)
done (took 12.120653054 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093466099 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118567666 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112686645 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469501677 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106440562 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099105377 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147378804 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251702555 seconds)
done (took 2.192950983 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142686759 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325347921 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119758288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068517679 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100569785 seconds)
  done (took 1.411956527 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081357056 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101318461 seconds)
  done (took 0.975724922 seconds)
done (took 3.333138929 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081096308 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130395322 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080273555 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099647616 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080074877 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09926328 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078009873 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098650973 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080020369 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100110455 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097602332 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082076257 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098096502 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079649985 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09590668 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081216633 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095396682 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079362031 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098102877 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079095439 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098365017 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081505091 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095969438 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079157328 seconds)
  done (took 2.996558016 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098258928 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097761458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101487584 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086088451 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101740271 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086835324 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104817233 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099487758 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086502433 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10199742 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101252012 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085783145 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100799334 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084649902 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10199393 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102198375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086494125 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100023444 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083039977 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103713003 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103477922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082575984 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10252684 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102773877 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086646321 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103277581 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082550835 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100083041 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104282838 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085402908 seconds)
  done (took 3.665185091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085091509 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095362527 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079695993 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104120807 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079065218 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098815804 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079036055 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097719492 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079606438 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096905576 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079371941 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097898677 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07846479 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098965815 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078696273 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102330658 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109654492 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079415212 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096284693 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079749572 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099496089 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078964845 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097408314 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078517337 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09698121 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078699368 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0972342 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07850607 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097704799 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077666497 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100902101 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081212049 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097697061 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084605333 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101402729 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077805012 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101085575 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077903379 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098578178 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095224659 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080256471 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096392893 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079752291 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102801842 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079359686 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099138316 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079700202 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098501569 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079922108 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10126112 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078538758 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097707023 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079665047 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09856856 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082508314 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098370927 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097647776 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07953463 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097129192 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079718585 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096115572 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078594335 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098559132 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079881693 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112581644 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085731465 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096783077 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080885391 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098483057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080595522 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100032824 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109582148 seconds)
  done (took 7.299639286 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082496042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106565751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08072677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100511797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076059747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098675961 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100529074 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080860259 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099206254 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086155994 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098075634 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080457367 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099669403 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109438718 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080585392 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098676956 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086176703 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096556531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079245075 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10133176 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07949954 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102111649 seconds)
  done (took 2.82682213 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207824838 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104927387 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141977278 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107006118 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083649918 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109017296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103471889 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08817854 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104854038 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084399501 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102882545 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104729166 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083624622 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103325321 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101578039 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086255575 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104213084 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085994758 seconds)
  done (took 2.716711226 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092485352 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098409478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10088701 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099863532 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100134187 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085446318 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107207103 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10917666 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08539855 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100702223 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091159304 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103313816 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102614996 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082691282 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10361796 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082093224 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103115073 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081557062 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109978754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106262259 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105480568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091670846 seconds)
  done (took 2.953696225 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096674453 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101174127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118270578 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086310558 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096583489 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081675374 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108106504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08152508 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.1097772 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102161237 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082559738 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099061781 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088543392 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100258052 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105861288 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083362705 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103089048 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082805882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103154851 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07874362 seconds)
  done (took 2.719566676 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.208479855 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102515576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10025517 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093640002 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102798901 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083014163 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112692444 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102509665 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08341021 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127860507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102444841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083970036 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112538261 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108984181 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100911444 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094253798 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11114548 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110861536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083854278 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102596198 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126603291 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082568307 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111668737 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101345535 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083266226 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102679749 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101031567 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08930155 seconds)
  done (took 3.739640376 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081848718 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097277995 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078890088 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096445997 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07869853 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097915419 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079904205 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097748807 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082600217 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097589873 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082405981 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099863897 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084482859 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100604917 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082988448 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100813639 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082774545 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098583686 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079952426 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099222082 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082275895 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101279184 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081705006 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099044674 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079169721 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101061072 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078858734 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099461488 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081918876 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09867673 seconds)
  done (took 3.518226252 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09055935 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106375023 seconds)
  done (took 1.011572915 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078744193 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115467647 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078799334 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105957125 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087077025 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103080785 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10949158 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086984575 seconds)
  done (took 1.579706576 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096132445 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111511086 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082577135 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113680605 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111581563 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098489876 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172468425 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102672001 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08564742 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099185774 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113410078 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081338843 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106410298 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080840808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106702693 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087377114 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099101731 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105455239 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08402983 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097791976 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081885217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110289467 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084074096 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09987446 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102985236 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092877231 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11541874 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083729354 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106789912 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110131625 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089512898 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09575721 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083395236 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102552909 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080391022 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111951188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118957893 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086022003 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112435094 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083749908 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114860063 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096946907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087210705 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.1084496 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111414849 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084830203 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102710234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078887883 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099490379 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084993542 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097704853 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082315095 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096531309 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090145693 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105996762 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111412049 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08144418 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103180334 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086271215 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106193109 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089358559 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105524813 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103652977 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083580054 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109159206 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087174226 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112941356 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095062757 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079160001 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101000969 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093679447 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125515004 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088968145 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104021342 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103111741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081343157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104787362 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085181879 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108702221 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107724285 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084559675 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109034745 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090441311 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10256562 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084411611 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110919802 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100684693 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084611152 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101183278 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119125109 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08270959 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099761883 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0812078 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113099117 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085610835 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102399695 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08056283 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110366947 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09555176 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084749252 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103342017 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084175774 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114435714 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107646223 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090189852 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111940507 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089060277 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104240995 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105066857 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080589536 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103143269 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085990519 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109061069 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077091926 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105283052 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083275884 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104039692 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11147467 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081419462 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102751096 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09058666 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10919461 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081340704 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099692543 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105044828 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083776073 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106455386 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091326004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101361117 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077972964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099806508 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105425452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084334149 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106173566 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08927876 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10670538 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076964746 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100893397 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106525757 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094270054 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103778723 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084175076 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109454833 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103703317 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083822815 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110132056 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086871491 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102559225 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08965049 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104220575 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07884392 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10862292 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105075239 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083294881 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106428325 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0863456 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105894235 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08355683 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102948985 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108047522 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085448731 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101845222 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082514152 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10127525 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111696444 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086943592 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097354711 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081204408 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110164537 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08033198 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10313603 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081793862 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106288491 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103124953 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083157317 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102263123 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0862319 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114936736 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106792701 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085785905 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108167938 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094647947 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103403344 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085398669 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102975846 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103044376 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084112607 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110364085 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087472489 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109631382 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105162305 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081256564 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107930054 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092224981 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102571332 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081341382 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102589608 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086829389 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109662719 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106494512 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0850891 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101530579 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083271804 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107406416 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10465713 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085305461 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101992215 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08856483 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102287689 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088895006 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106210004 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.11189091 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085637762 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098298446 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087322931 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102186981 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10898692 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080386623 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100381925 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083505688 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104406449 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083833469 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105721349 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077890675 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111699985 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109243898 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08514324 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102320391 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085502138 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109849677 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085434889 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107854631 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087338362 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111011646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114148514 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08315557 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10613249 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094146008 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10500414 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076841917 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109896437 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101048128 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083412998 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102465214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081530881 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106929298 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112333683 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092801991 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097303401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086840623 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102004603 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08265545 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099738221 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088046127 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107021575 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102718023 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092549976 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104677428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085825683 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107867158 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083658736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106859996 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103922445 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088778552 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104716121 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086936106 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103286997 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086526697 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103867137 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08368874 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106139076 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10333709 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085637597 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109280637 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084437887 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104347261 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086505432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105330601 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084164482 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105054684 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102324423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088426414 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103855441 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084601015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105964124 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07892928 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111046673 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0833785 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112324595 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10419323 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081559123 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108699993 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086118038 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109135816 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102678028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083471345 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103642727 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081250107 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104419751 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087824131 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10149198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111184587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091313254 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102352886 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084542792 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103483673 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083852703 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10323188 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084705433 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105344148 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104067446 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085067853 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109141936 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086664964 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10441567 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085515989 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105598706 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082965325 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104778536 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097768579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085011434 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103505654 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085231997 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115682214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084429771 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108323473 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102068819 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086264635 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102940275 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081318914 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112823938 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113124953 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08534682 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112656431 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083492718 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105980299 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114417893 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079368822 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10178766 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083179618 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101187866 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092572691 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105722513 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092595235 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104808878 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082756877 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102534732 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104345935 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084525007 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098664424 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082676605 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108077849 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086346808 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104526731 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084591007 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107892373 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104316346 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103696936 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103494078 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085115087 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106212726 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081333453 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103717958 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083098357 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108813061 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104941598 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082708404 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101182079 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084719283 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104516091 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085411277 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105741464 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085696534 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112628811 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103337408 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088733433 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108480928 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079395305 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107818961 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084331604 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105805863 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081952569 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108673965 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106536151 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085288912 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11434816 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083909134 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106325721 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103716638 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084496678 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103878751 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084831304 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105337411 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083172163 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106356123 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092319188 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103553291 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107464421 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085363053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10500172 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092494557 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106824435 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086976005 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112547369 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107453626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087239235 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112106616 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087520154 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108853504 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105584357 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086753769 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111177578 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083682858 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111769884 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084620082 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106207029 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085723276 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099854611 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102168412 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082072964 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101126146 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088975978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103850528 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080035527 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103005223 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08084981 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106079628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108574823 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093123541 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107543079 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087436779 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101036556 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081178095 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106699598 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081894524 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107268019 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109132929 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0915274 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107323704 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085493905 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104636341 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093570262 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110134071 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10665388 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080096155 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105619321 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082592023 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106039918 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08275641 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104593946 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102626757 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086830128 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.1030806 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081291152 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109615868 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.084387929 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104574951 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101766958 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082885199 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101269562 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078337459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102354985 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084596138 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109490321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084687968 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103434817 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113464929 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081925045 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105156806 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088701658 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105294576 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108316062 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082567096 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106088385 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08737679 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106627838 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079681683 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105121188 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082586945 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108494219 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083770442 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101208622 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115618842 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094753641 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108704341 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083391508 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104504554 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079592388 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10139718 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084388667 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107813982 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106822665 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095991658 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105229305 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084380765 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101479567 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085321626 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108926567 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10867239 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08315592 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101088907 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084775015 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109601885 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091432613 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105700926 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085024355 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11021981 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107086497 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084095787 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109323025 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082631054 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109799946 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097602736 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108811101 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106161556 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093283884 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114760835 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086250484 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102530896 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10579144 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091152779 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105794058 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087027598 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10713809 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120382218 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088494608 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104957814 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0856595 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10827194 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085159801 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115169476 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086322786 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107855879 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110441714 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088190558 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115962947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088640327 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115971542 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109121153 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089550894 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105192911 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085923719 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104842438 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083697108 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10847925 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106094879 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091785252 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114595819 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084847253 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118703581 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115440767 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091844369 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102685909 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085449537 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106421472 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081447084 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108803584 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084519627 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105079263 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082625029 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106709526 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107169259 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092975986 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107623875 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08714095 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107244517 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080653348 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111864978 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087860215 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108236739 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082781432 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107284538 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107061194 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090630115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110934649 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085380426 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107323305 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084669348 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106346715 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097085029 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090428405 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100878624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086371594 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105346408 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085151317 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108466398 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088912597 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113025024 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107261898 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089030841 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119098991 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087522894 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104400081 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082492233 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113107637 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104500177 seconds)
  done (took 58.950104128 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14646228 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081167277 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102244716 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082241022 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115841478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102360269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082948594 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102443121 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083311276 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105959591 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081241143 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102606504 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111954174 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127690637 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094886211 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106507195 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077999812 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100696125 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099550621 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080824574 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110660062 seconds)
  done (took 2.962961223 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103297026 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119559149 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118298839 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12325459 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092286521 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118653019 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117728498 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118074597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103479402 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114252131 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121941774 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117942557 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094408075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114265637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112991592 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093370477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120740368 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108894452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114124019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093831988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112691737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112860026 seconds)
  done (took 3.31037107 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084149025 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10143358 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084808918 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100790027 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085084923 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102248408 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090087661 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105071385 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089033483 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106773701 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084314478 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104766603 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107958478 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082166687 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105986116 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085156514 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15567799 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110873712 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084195246 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109561919 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080639884 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107280458 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097315451 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079325462 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101308994 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086884527 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10383865 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079900327 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105189219 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081599889 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106344964 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081053243 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107612169 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103583663 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083241096 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103001445 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083768889 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10602854 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082816304 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105145577 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086256371 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103212111 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086663732 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109304408 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084504788 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106030149 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086636447 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107449913 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100619877 seconds)
  done (took 5.603589448 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103464093 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165150385 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087594793 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148585188 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124610638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116229233 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089079142 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147726161 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106923826 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084243004 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126049482 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123757901 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106959586 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089220988 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114835063 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106201559 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084823086 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105402981 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106781543 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083891504 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112046982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090903519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12284803 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120464439 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111813822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085865292 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107283583 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112604434 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100265267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113429939 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112960948 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092493643 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12407661 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110373005 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085185292 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110738665 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125382937 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107892281 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089777632 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104600466 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086936528 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112068045 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109404647 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100967346 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104152967 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108064563 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083185662 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100805733 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117011248 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08520466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112479428 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118415894 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086133061 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104884508 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109317239 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11915758 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084461964 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102292739 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086939183 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118375828 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101111354 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087495287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118301448 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105426999 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110877737 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09869666 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110847019 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107370664 seconds)
  done (took 8.267213704 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093325754 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110661126 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119920509 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118917055 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089470719 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110839496 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109853268 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090007863 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109621773 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115090666 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109258412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133284403 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085950618 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114100728 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110209908 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089868576 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111698581 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111361118 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089190654 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112667974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111420121 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118822606 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089458049 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120455068 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140754977 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105348963 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08943299 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112013265 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120493869 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109734656 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121622471 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091246419 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112292201 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123036715 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12593731 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093417062 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10791085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114386792 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095011188 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114936466 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10848505 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102268521 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11392933 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108094022 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091958043 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11597253 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122263604 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122649057 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11424248 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095830217 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113538331 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120371096 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109699414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089795353 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123287935 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149642998 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120876951 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122338174 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112447182 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099944971 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123567529 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130472728 seconds)
  done (took 7.738550437 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105984192 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115746889 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118508126 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100877833 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084089113 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112104762 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083885858 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108041935 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116657982 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097137709 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119929365 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111091213 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089964689 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116463054 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108981693 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110596814 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088114645 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108525471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113205977 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107540793 seconds)
  done (took 2.995791221 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092856993 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123517625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083129409 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113344875 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107773117 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089465412 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107768158 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106490596 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086312533 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109007508 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095482351 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118606553 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105900662 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091107923 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119644673 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111290654 seconds)
  done (took 2.539486682 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095783789 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117888185 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121192124 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083847447 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10723973 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081535961 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108929927 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103800834 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082834036 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1250383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083466818 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113269898 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105371612 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082175947 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100585725 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086804583 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101109798 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081011235 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10470725 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118716664 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095062932 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103282476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105343712 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086378674 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105285496 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08936421 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1057253 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101517371 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082449437 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104744343 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083253643 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112840376 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100772807 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082922177 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103475739 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081724242 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106050575 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084658594 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111433083 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107327228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082972363 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107838146 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084378183 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108414018 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080076854 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108270308 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099804997 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091313242 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102148249 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083946016 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10619187 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086881026 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107427445 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117765999 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090009427 seconds)
  done (took 6.299650894 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098809242 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10868451 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079575432 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105614457 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086130455 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107754797 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10740251 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087638554 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106737296 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082480986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107279949 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08769168 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10881616 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108213379 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08650055 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111535904 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080174698 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110791915 seconds)
  done (took 2.660271692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090040874 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104395521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09143249 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105861116 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084267183 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111361824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079686075 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105106102 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103691364 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085211954 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111170227 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090473004 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108184789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090247155 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110372174 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087521171 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113228451 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106886978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089896484 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105441624 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090900935 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108559144 seconds)
  done (took 3.060263897 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118016777 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.13001412 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094999766 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236894252 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10428171 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137222457 seconds)
  done (took 1.707948689 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108651781 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120568352 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105140388 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105993005 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115745755 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084432168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106531383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107064596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116532327 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099968141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107826349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117423966 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115573981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096549778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113892957 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114106267 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106293273 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086700116 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105430286 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127281721 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085631142 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116679144 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10727688 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085530353 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107227602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11635916 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116372949 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119817669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087917797 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116981896 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113398807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086257134 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119048266 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120863989 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107021897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09789982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107009208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12635097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112202476 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095897268 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109177724 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112765903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096937524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113609385 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117546595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107109029 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093090859 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10723907 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107222769 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133869719 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092444891 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116851259 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114143613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117137706 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095216401 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154644516 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100660515 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11730865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114612132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122128521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115513189 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093124209 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116069465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121317685 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114104761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115499016 seconds)
  done (took 8.118094942 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101510566 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126134165 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107243026 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120949557 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097064095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10809896 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107047433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08596562 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108611254 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105888552 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150631739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086760957 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117752885 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116942076 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085673312 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109014725 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107158609 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117123354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086265986 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134317385 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107878517 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115696207 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115592521 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0969786 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124103429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114549865 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106258943 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087495993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107632739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105980943 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092390555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10789785 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117006297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085288276 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117777741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107706111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086300376 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114416533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108035578 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112729298 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095745603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126921707 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108025524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107135487 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100023799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108747079 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107864551 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085329907 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111601057 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105904732 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101035559 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122742108 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121675646 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116766787 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106304649 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086463896 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107739884 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10653196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087160814 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114238953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116971085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086713985 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155188519 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088266562 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107460037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115543749 seconds)
  done (took 8.004268898 seconds)
done (took 158.037884109 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.253060914 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.251515368 seconds)
  done (took 1.396493952 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097576431 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138160038 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098649741 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172621927 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104578526 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118588048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136711446 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096921799 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.110612516 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084339417 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10982806 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08773488 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174976372 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084230639 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106955651 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108916483 seconds)
  done (took 2.730314604 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197859666 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256638988 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105609971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109427621 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090012293 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111413564 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104670452 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090463186 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110707602 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084519808 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108414183 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08508928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105973168 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.084829947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109675315 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086976804 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110048211 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086575966 seconds)
  done (took 2.938092011 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112248783 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148176737 seconds)
  done (took 1.165663587 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118135082 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178348222 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315439862 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153816079 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.104668709 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12597794 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156145583 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129325022 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195171987 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121787275 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120402095 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096444605 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139075484 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114995628 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092553371 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117892891 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140504279 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091454497 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115198868 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114637043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114888082 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105889074 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114086336 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092375513 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178861428 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118762594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084078062 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106713817 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114357895 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095029751 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112707635 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122975148 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096406871 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175004997 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10076146 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175868813 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096330905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112353156 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112745918 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090508999 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118782063 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116142037 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103619069 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118316143 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086228887 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121917327 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109088952 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087582843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118405995 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100371194 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117845512 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114825905 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154568421 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11736892 seconds)
  done (took 7.548409446 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793030563 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159479754 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111320464 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.85598383 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136703637 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10223793 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.773269725 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134740739 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231012521 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754626946 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138256883 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120922445 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222734105 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234893001 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922388499 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.305786462 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.665804818 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100844162 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150024804 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151597024 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117134266 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137319915 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128470985 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428526841 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09258836 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11114728 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115260163 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099184678 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15641944 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12477136 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1129296 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175552468 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.242360237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202912633 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114309703 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088313657 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110398358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167845314 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264798947 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209551568 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178690898 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085691209 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111669293 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098396111 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130330905 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107450124 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162849921 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170724463 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192931919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090667643 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118734951 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118351745 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097281533 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182864036 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097686383 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306537403 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3178005 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110067347 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118852837 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103986479 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258493086 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121454578 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.218818089 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116435843 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211275638 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109488575 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753389844 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187272637 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088902969 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118656511 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118534558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093674767 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119754234 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168337644 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407054353 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122166934 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091322474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110401016 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204051432 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124599461 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109922454 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159384122 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092188583 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120457423 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123471095 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122373853 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168166379 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.22706441 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123342492 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117291939 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092137087 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124649798 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114322843 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209444527 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2166964 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160933374 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205281985 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121346725 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161330378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186393918 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097212651 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189836407 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096877661 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123802977 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1217926 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212981696 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143618045 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100430616 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114835587 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116414485 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146041128 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104064977 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117732111 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165980098 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480011823 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164754349 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107088487 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104448553 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118889414 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159134329 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116965628 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256134393 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099286669 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189125614 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096380277 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108809045 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120333705 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16276317 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120816282 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098463571 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12164184 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116903456 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23237007 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21428054 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099243979 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240623746 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182535409 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117797516 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170989253 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119076803 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166562117 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118530644 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098206161 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117190548 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769713699 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121030549 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09848847 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114724651 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187184397 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088540664 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122852735 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123812793 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085347055 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80433047 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126259131 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11882524 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102947429 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118441241 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118626203 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096193843 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114873798 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159945585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229037896 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120018627 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09613178 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124512229 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158223045 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116650404 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123193428 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12182415 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102639582 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120704769 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113295385 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101885781 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189281059 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159595896 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216217938 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572648445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111353248 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122975818 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2255242 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090049882 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285294567 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119144474 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20031731 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18318452 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097091977 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316534207 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18520351 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185458374 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10400343 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192638359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087693888 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117399456 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162986738 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110776559 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093901033 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182559735 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101590316 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122971107 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964235717 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088938831 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245096574 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085737564 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189300003 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095353515 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119624872 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287184836 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088576841 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12817688 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16176144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114474689 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12310283 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.850828818 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12496593 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120961186 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095859493 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220889242 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.1600065 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119219445 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118525992 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119298852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162688072 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206469992 seconds)
  done (took 43.78080731 seconds)
done (took 60.456878505 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273285979 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214264373 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262447348 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167377621 seconds)
  done (took 1.922374448 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170025285 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147684527 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119243803 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107354847 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148595508 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083257646 seconds)
  done (took 1.70576281 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353474759 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271736605 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238130584 seconds)
  done (took 1.798460738 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.314159306 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244483584 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470360926 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323466977 seconds)
  done (took 2.380972735 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207164058 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131026916 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110863633 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103293539 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195930693 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244685179 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140475473 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199112739 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097975846 seconds)
  done (took 2.409000917 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.193937802 seconds)
done (took 11.343676634 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.207745844 seconds)
    (2/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.260156292 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.161054314 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116338227 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100936609 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.132568804 seconds)
    (7/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.199991017 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098217341 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121577704 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113784049 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093574148 seconds)
    (12/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.30787367 seconds)
    (13/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.09848452 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.171680972 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.169460149 seconds)
    (16/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.208985331 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.209018389 seconds)
    (18/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207826021 seconds)
    (19/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096429181 seconds)
    (20/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.100293851 seconds)
    (21/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096455855 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122952915 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.210512901 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096836636 seconds)
    (25/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.263231719 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.18474912 seconds)
    (27/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.138648596 seconds)
    (28/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095469523 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.222482939 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118119553 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08524298 seconds)
    (32/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.186014838 seconds)
    (33/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.222741231 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.196404652 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138799611 seconds)
    (36/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.219126362 seconds)
    (37/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.264638212 seconds)
    (38/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101158273 seconds)
    (39/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.121223246 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.208215418 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093043956 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13650553 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131596314 seconds)
    (44/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.222438295 seconds)
    (45/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.091444661 seconds)
    (46/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093630774 seconds)
    (47/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.164006069 seconds)
    (48/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11855999 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086201048 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.118604671 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.139422263 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.233253495 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.185469906 seconds)
    (54/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094387283 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119456238 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138769215 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085438588 seconds)
    (58/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.139477592 seconds)
    (59/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159423775 seconds)
    (60/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.088915749 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111840433 seconds)
    (62/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146967047 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112716998 seconds)
    (64/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134537707 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089386984 seconds)
    (66/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086231046 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136910523 seconds)
    (68/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152599719 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 0.087612749 seconds)
    (70/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229734527 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18317641 seconds)
    (72/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.13024386 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170827598 seconds)
    (74/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116208569 seconds)
    (75/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092724295 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139331135 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.21042327 seconds)
    (78/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113651684 seconds)
    (79/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08704073 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123613122 seconds)
    (81/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067406418 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.171294008 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089289885 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.14900457 seconds)
    (85/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183514371 seconds)
    (86/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113012034 seconds)
    (87/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090944455 seconds)
    (88/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086011501 seconds)
    (89/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177932496 seconds)
    (90/286) benchmarking ("sort", Int8, true)...
    done (took 0.216592502 seconds)
    (91/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067847314 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109573462 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085442772 seconds)
    (94/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.142718597 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092888739 seconds)
    (96/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116210103 seconds)
    (97/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086460942 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115457682 seconds)
    (99/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.116513035 seconds)
    (100/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115188269 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075552823 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.088935172 seconds)
    (103/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095023716 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114499234 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09634378 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139086765 seconds)
    (107/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065841159 seconds)
    (108/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11737688 seconds)
    (109/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070328751 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124853146 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066919904 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.180323131 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117478734 seconds)
    (114/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084004032 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138427281 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116653132 seconds)
    (117/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102866774 seconds)
    (118/286) benchmarking ("sort", Int8, false)...
    done (took 0.186484514 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115728804 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092590068 seconds)
    (121/286) benchmarking ("sort", Float32, true)...
    done (took 0.228325087 seconds)
    (122/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154145649 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132176035 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153337308 seconds)
    (125/286) benchmarking ("sort", Float32, false)...
    done (took 0.177881231 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117062229 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086792414 seconds)
    (128/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090562065 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09140895 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10872227 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093128302 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119885855 seconds)
    (133/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091963798 seconds)
    (134/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139595013 seconds)
    (135/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121758737 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162023172 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11019865 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.115264899 seconds)
    (139/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097951429 seconds)
    (140/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171134795 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10810551 seconds)
    (142/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11296225 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083731484 seconds)
    (144/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089990021 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182029746 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067008441 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.132893188 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197148399 seconds)
    (149/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067158732 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167661436 seconds)
    (151/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.129896112 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108128138 seconds)
    (153/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092521724 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107772769 seconds)
    (155/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09578316 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090628678 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067096392 seconds)
    (158/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139138882 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082222848 seconds)
    (160/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076808041 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119786302 seconds)
    (162/286) benchmarking ("sort", Bool, true)...
    done (took 0.219627904 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.178917327 seconds)
    (164/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085004213 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065331168 seconds)
    (166/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091152187 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110502835 seconds)
    (168/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.098991573 seconds)
    (169/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066224125 seconds)
    (170/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064720955 seconds)
    (171/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099446112 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149226647 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09080562 seconds)
    (174/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065686064 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108491733 seconds)
    (176/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.117287343 seconds)
    (177/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180226137 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065812916 seconds)
    (179/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164055484 seconds)
    (180/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085131884 seconds)
    (181/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.350077882 seconds)
    (182/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117384978 seconds)
    (183/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094736574 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117786246 seconds)
    (185/286) benchmarking ("sort", Float64, true)...
    done (took 0.225377996 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086751834 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108284582 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.095702111 seconds)
    (189/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.1148184 seconds)
    (190/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066737169 seconds)
    (191/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17353732 seconds)
    (192/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088685528 seconds)
    (193/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.102268408 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084669163 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166956821 seconds)
    (196/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.130569644 seconds)
    (197/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10865621 seconds)
    (198/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.093714446 seconds)
    (199/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.194933445 seconds)
    (200/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086916187 seconds)
    (201/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177638073 seconds)
    (202/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091065727 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136169312 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067663566 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109635493 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087256392 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109478682 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084380713 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111088317 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 0.217201359 seconds)
    (211/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114331164 seconds)
    (212/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.068045089 seconds)
    (213/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156799034 seconds)
    (214/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08541265 seconds)
    (215/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066124655 seconds)
    (216/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125940945 seconds)
    (217/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066402465 seconds)
    (218/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092601345 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086110608 seconds)
    (220/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113250828 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091098868 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114110064 seconds)
    (223/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085280976 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091895688 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067027758 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112389755 seconds)
    (227/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067776127 seconds)
    (228/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081113687 seconds)
    (229/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113620382 seconds)
    (230/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087276127 seconds)
    (231/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12036695 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13335354 seconds)
    (233/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09417409 seconds)
    (234/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.065693441 seconds)
    (235/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089854009 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085030266 seconds)
    (237/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.169923865 seconds)
    (238/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067194589 seconds)
    (239/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117152659 seconds)
    (240/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066493089 seconds)
    (241/286) benchmarking ("sort", Float64, false)...
    done (took 0.169727517 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114991712 seconds)
    (243/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087132644 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111429004 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067179344 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084311716 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117835312 seconds)
    (248/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.075409162 seconds)
    (249/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147857769 seconds)
    (250/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107302908 seconds)
    (251/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068443011 seconds)
    (252/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09305483 seconds)
    (253/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092326974 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066715652 seconds)
    (255/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089034343 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100704248 seconds)
    (257/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109187518 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066489702 seconds)
    (259/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066101178 seconds)
    (260/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090801074 seconds)
    (261/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08888193 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.115938737 seconds)
    (263/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09126094 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107413146 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084948837 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.180927992 seconds)
    (267/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.086249794 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118178518 seconds)
    (269/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133400215 seconds)
    (270/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085238666 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115587013 seconds)
    (272/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09284145 seconds)
    (273/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.100709131 seconds)
    (274/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080422517 seconds)
    (275/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139464594 seconds)
    (276/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091213189 seconds)
    (277/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074159478 seconds)
    (278/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090315947 seconds)
    (279/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066688049 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090768491 seconds)
    (281/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086979577 seconds)
    (282/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111151085 seconds)
    (283/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.225733837 seconds)
    (284/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067888279 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108969514 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093384155 seconds)
  done (took 35.98750936 seconds)
done (took 36.926971872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099823713 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147177591 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094057421 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134277529 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122000942 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089808737 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117195212 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096012822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12304102 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123557355 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096091318 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09344732 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095712834 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119511937 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096361355 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138516766 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124003831 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092420063 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117169628 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085096007 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117525326 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084523403 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111391008 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068640598 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121345234 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092322171 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116140115 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117645249 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090068902 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108180188 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089808182 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11625474 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086443229 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122594841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092077857 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11774911 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095923843 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.1201216 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086997108 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11035487 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117116917 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086091039 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11511131 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093947678 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11443345 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09245788 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116608432 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097014868 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138904115 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113777573 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094438371 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119215657 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094522381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116165365 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089283205 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118147217 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09053919 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138677894 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117076288 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090452264 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11688243 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094353219 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115515181 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093060673 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118414286 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118558064 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098382982 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114492603 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096297714 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114944248 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085604478 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118209396 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088838064 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111445645 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094397747 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121497369 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084524456 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116508177 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092194047 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115635584 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107635851 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089517801 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109363554 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093201425 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110881463 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070025605 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089171086 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116856071 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084738523 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119176593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115128077 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093648687 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110431001 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097236759 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109017041 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091258185 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109480845 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086086013 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112713808 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089180236 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109290959 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087681982 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118732674 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087418908 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116475036 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096986029 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11042413 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115094705 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086214387 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108381316 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100865045 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119481504 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085382903 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115191871 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084578835 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117104307 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085100537 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109812793 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085638842 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11013475 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091414653 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109719226 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0876562 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117110486 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122459925 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087335325 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112014951 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089534176 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110436921 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092816736 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108945749 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086376859 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111270536 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077381934 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111449949 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086612346 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115906249 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089458805 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117618678 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087956553 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118950615 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090318413 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11648439 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.090656538 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.1089778 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0737319 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114469403 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088150805 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111159432 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086180409 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112032802 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085546319 seconds)
done (took 16.78853024 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088374844 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181687317 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148429461 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.139713763 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105012495 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112102155 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119329203 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116980368 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112925729 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13973506 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109066834 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13101991 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146007912 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086144343 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110163322 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090204121 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111467817 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100205324 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143422095 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131036632 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160835321 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084765884 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144267507 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133727429 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118407537 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113138493 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111112906 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.089915977 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114141925 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101711747 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131326409 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.088326912 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112165461 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131199884 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103098719 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118500242 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085338532 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117453191 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085418023 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110854557 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137642907 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107503402 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116576184 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11547261 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090619322 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112749772 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088363772 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11967647 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096284811 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115287027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123878034 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153206578 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090419735 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12073181 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.084733914 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122160744 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118226113 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090264723 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110066879 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090419069 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109219269 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090263329 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124743049 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138690656 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090471126 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120275701 seconds)
  done (took 8.538564272 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104310692 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138133314 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103226201 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129836452 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109625663 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087819161 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113950462 seconds)
  done (took 1.784027137 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088447727 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131934604 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109356021 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134804295 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129727383 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109009684 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121874455 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087549968 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130146588 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.087481212 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133006725 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15002091 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088587684 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119409481 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135352067 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088507286 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136071647 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086771936 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115800994 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109661401 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115250728 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133222883 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089820945 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111935893 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101610527 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113075947 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159514706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09269802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112951417 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091376326 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109965328 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163940772 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100160371 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124691263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086322785 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12761383 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.142540348 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086046251 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127950363 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092050484 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126146752 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087987249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114473447 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084437991 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117269748 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.121247406 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09055735 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112320029 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091271211 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131212876 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088926935 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126010605 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087831557 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116216504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088196526 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11849368 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121062756 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089965998 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13248264 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08933552 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129760782 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102951169 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127976401 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128302728 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091201076 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126484915 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101485837 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115549371 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088984534 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116819989 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.127509028 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086603682 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112983684 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099965021 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114109637 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110708103 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135909397 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088202103 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124253979 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112604705 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089775958 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112580987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111504535 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116588517 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08802148 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119666039 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090175625 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111656572 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086606529 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116505215 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086071016 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114408403 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090911318 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11403571 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11395182 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106268925 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115166228 seconds)
  done (took 11.740201881 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09027596 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112641855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091713655 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112729065 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089047494 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114027557 seconds)
  done (took 1.617326247 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113897652 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116304387 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102043095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119405343 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154099763 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101458419 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128910326 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122097109 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105569829 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127083261 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127101494 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104316233 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135085583 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119867783 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102838142 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118853468 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102372714 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123512619 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124678238 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094871044 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136743901 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118664426 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096701942 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130536565 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11574409 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095517729 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12360428 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101233211 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126155624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121251612 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096156343 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116946477 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094216826 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122918177 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128581301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094492648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12088807 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116127279 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099912709 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116734306 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102458366 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121259994 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1252697 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09328517 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12273836 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118728487 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093779723 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123373639 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101880978 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118585532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.116840745 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094774253 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116309099 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092306807 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12040898 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120555268 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093519238 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128483654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094147604 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120775948 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116309421 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092280452 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121777352 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115487123 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10389001 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117290401 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094250544 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120875441 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119817604 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095699927 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118010316 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090757124 seconds)
  done (took 9.153971077 seconds)
done (took 33.824580715 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686697715 seconds)
  done (took 1.692218917 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.835389173 seconds)
  done (took 1.84322608 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.798838939 seconds)
  done (took 17.83729807 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491408766 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.578279846 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990352313 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177357315 seconds)
  done (took 3.246434757 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949721579 seconds)
  done (took 1.977829786 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282939877 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229324699 seconds)
  done (took 1.526235587 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784247356 seconds)
  done (took 1.809404551 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.358964672 seconds)
  done (took 2.377584287 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323881702 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182511562 seconds)
  done (took 1.526411008 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547055973 seconds)
  done (took 1.566540859 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.809023314 seconds)
  done (took 7.833408335 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267407836 seconds)
  done (took 1.29713486 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299381691 seconds)
  done (took 1.321903769 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.475232177 seconds)
  done (took 4.503617521 seconds)
done (took 51.377878281 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098931831 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125018521 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101398666 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123012222 seconds)
  done (took 1.470016842 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10054485 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119537689 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099815364 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11951495 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123408745 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095917822 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121125158 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099902457 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119973299 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095278524 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120185376 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117291246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098301429 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120892145 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091909761 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123045036 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097194013 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119975986 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122761689 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095688328 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117329138 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095982602 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123778762 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092502195 seconds)
  done (took 3.662361015 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100317734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117658136 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09635115 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11672293 seconds)
  done (took 1.46764914 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100073562 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140089073 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136640659 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099420918 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140907542 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133313636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091747736 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115246612 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09320295 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.122896115 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090099633 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14789798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135054797 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098263357 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126670727 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086770746 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116986171 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135127218 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099193755 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125112859 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091940681 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124713914 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089190329 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138776226 seconds)
  done (took 3.810408841 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169085651 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126687198 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136839884 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094084101 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159676554 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138759133 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08719715 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.1395039 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086357364 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130144188 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116206073 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132942303 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128174756 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086783333 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113418004 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086701091 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128288636 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126466794 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090607435 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12657504 seconds)
  done (took 3.443014703 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098344216 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115276556 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088417241 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114125123 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098299227 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119469482 seconds)
  done (took 1.671542147 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091053181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112398114 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090572607 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.111849297 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094097857 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112853266 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087892978 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112949243 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0896418 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113620007 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08850671 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113855 seconds)
  done (took 2.257313216 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.496245968 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120647971 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117912397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088613038 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120028256 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088740725 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128184234 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09153121 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139388038 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087169642 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115076432 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08946094 seconds)
  done (took 2.71985619 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231294682 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125243452 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281005853 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363723084 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155659975 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174277403 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280032448 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163673455 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222279104 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165288876 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198823535 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2198579 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149784341 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186613975 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136863911 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14270321 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201268996 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242329817 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151255045 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203535234 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224680541 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165196904 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178210664 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148695783 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135869644 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169872895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117389605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103835416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230310939 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173749559 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211784623 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160260528 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143472342 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206464322 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249140794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217161415 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278195094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135295897 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146298919 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167250127 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262857611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137306747 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223860687 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126948059 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129711165 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213722272 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165566377 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174085865 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149000905 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135922261 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193090627 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235211901 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189654703 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13678029 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298553408 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148562598 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.197445506 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192008736 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248061541 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197886894 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209032255 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094755186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186236693 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217867724 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184057026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172293394 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.204174693 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144593114 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197137013 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186723227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162749131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217932179 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184185358 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139944231 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166584293 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170157624 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169314446 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253528112 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207403179 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094521768 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16676776 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147583544 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131764195 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191894118 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097156011 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237040035 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142200549 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.160579686 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212343008 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158345946 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158143862 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198856874 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225500114 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145945931 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082790001 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152595915 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154269211 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188973301 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138246328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155965658 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159773763 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12867254 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180261697 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122755163 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181235802 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117226367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171648379 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179907931 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125118195 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158862577 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149011325 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123512563 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196897625 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194882825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140173656 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130128109 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206808038 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175865322 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149682331 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174749997 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224726889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116089006 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14773314 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22309263 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213140239 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1391652 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223970007 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15418333 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106627077 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.130469813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178912239 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15262147 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159653246 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1336135 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179952594 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228153519 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097947697 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137229898 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188823216 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131427821 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130167514 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159827993 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145659995 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109492456 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149593724 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150071858 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204852778 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176331445 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151128289 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162808996 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150307119 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249545837 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13863033 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123559295 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147704546 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119662947 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.18994457 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195765934 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129744951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227281462 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16973137 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2008099 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168359614 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133424139 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175749963 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128280938 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091541115 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218471446 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165845009 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159034518 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192905455 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223199833 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180126546 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179721432 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196552629 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171166307 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162577081 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154395814 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111893297 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159230717 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168244086 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122629618 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141793437 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.131659128 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144315926 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114256187 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132562774 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218747704 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168922747 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187252656 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159007219 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147926963 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179343184 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126863596 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171827145 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175659766 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146159798 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194928411 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21914607 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182229257 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143181928 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197223546 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119734657 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122554748 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113627412 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193378509 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106118918 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134441715 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162204733 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179997018 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177338615 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200658381 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208887208 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196916343 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188867876 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094028551 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167107117 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182038856 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174256267 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191232764 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141607489 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148532195 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176807655 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155978976 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252094559 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16661903 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173313338 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232766524 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147965821 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10377381 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150260367 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189928515 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151292155 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200550447 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118832073 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140558803 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159338607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131922329 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15770785 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18037681 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159839262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214185952 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147574719 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183370594 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126116052 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161808531 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157154185 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163559291 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080950838 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172826378 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230595781 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147371352 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166225499 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187023669 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13062416 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305379201 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240666853 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193193594 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136389435 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154259625 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158492742 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162062265 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169494878 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177056019 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156144169 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184970921 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157387367 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135591096 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138940677 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119538637 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14903048 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12967344 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14589428 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175639242 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138055437 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18418305 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160680412 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1581913 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169710556 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148573474 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142366044 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14865688 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21349668 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181536413 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236751795 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149606434 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177291747 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229918977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097300265 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130504142 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131507069 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176670829 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10824138 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219245809 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186204261 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229351282 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182941091 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191609972 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13913064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118409686 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128409793 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197622289 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206421327 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152319088 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157211165 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229110771 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117532698 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132728821 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175342914 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288845594 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143187618 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221420395 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079753336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278100017 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12710453 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103292337 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162192447 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233483482 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135232512 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18814864 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171894196 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16976011 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163716281 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147260581 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190378652 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24123446 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199922594 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177239252 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132369208 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153473977 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173291689 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217681959 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155506421 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111106127 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229113617 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193145877 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194139427 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1405404 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166093571 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166676331 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156410275 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212993662 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105875228 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232339534 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132634078 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192586595 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151188987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143441887 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174758539 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187644766 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140913425 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213460081 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181819446 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133287683 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104508138 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165725698 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205555834 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156154898 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098092185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204125152 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097611856 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218771683 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228059107 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135122211 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153515062 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146021246 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132790147 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12626703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182131547 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113447126 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164303806 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202277461 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13432966 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187563159 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228193567 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167382173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171945635 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14441645 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690399722 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130182415 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192359674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157863692 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231930917 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147402073 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172061475 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156931539 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166125203 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192320766 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158819089 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229378541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216660845 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180028208 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103104236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182135064 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162205061 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114153417 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149726535 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16724077 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158059188 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152174156 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.201576699 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170040492 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105369533 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139360792 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195670311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158016899 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209568779 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178589804 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1091664 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200096501 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185888804 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132212665 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177204005 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234530126 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111478824 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150509266 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134277658 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155383469 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260312577 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095402378 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230231883 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181930884 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157533705 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16695635 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144733331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220000848 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156044595 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183382791 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146692531 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158699827 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155241031 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136198872 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101020085 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155095668 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165815005 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149308078 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158030025 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164204157 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19530439 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09363209 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142975183 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309961801 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192524184 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241192477 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106559167 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135363038 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160782598 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150935141 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175163369 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176342766 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134765396 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133787339 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107414908 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157949944 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112245424 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154133507 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221395686 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164793607 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207599204 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135111945 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275753016 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109826851 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154109688 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115282849 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102536189 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148805088 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144894516 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158032219 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190033806 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261844833 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146756059 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13223636 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147410645 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097468542 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135574755 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163754953 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1633443 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175396566 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144104671 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079590482 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154630096 seconds)
  done (took 82.35744446 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171443701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147639579 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163761386 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218765589 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196486662 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287863822 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.225911731 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271736639 seconds)
  done (took 2.807565353 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093662998 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146531353 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155621058 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132377051 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090843503 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117144416 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343288997 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131475117 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11707849 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121628467 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173173857 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094166762 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552388688 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090175602 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118500428 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108566293 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09184214 seconds)
  done (took 3.800730665 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.475942181 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.709752528 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512209876 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097140363 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.100962943 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112676455 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.665028626 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1980328 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116694939 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.479676913 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.770596945 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16024046 seconds)
  done (took 18.530369977 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115706233 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135070187 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122496762 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15160252 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14094043 seconds)
  done (took 1.80021213 seconds)
done (took 130.820613259 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104303097 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401999346 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070869462 seconds)
  done (took 1.638116 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107550222 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135508215 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107426234 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13557259 seconds)
  done (took 1.624613118 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097567255 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125517849 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108565076 seconds)
  done (took 1.464531255 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321889117 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188551438 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.168980509 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105678681 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128294619 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102323936 seconds)
  done (took 1.470403542 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097632998 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125965469 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096856304 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12875815 seconds)
  done (took 1.584516304 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094661284 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073963213 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099493207 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074807182 seconds)
  done (took 1.473361593 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114120999 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130801782 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103003293 seconds)
  done (took 1.483877761 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12861773 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138162565 seconds)
  done (took 1.402968365 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106165793 seconds)
  done (took 1.238511057 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116750865 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167741298 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189800335 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163920611 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233651752 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166681707 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140760405 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112073925 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131033614 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143280237 seconds)
  done (took 2.702736436 seconds)
done (took 17.99927353 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104036944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413545304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410544663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116889335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721284167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378780442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021875445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147107681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163495774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092120058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137898006 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672395862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01314008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374025729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971214644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371210736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675384642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120652175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117209308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094686406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006716749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090947838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12045189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091639092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703072998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423396881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095013331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.366320717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092407524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125255684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381758344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121946016 seconds)
  done (took 16.862357049 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095182876 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172065497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097041651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136662159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122658793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093846756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122397701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092757461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177320855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12193257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109133365 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12078455 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124190718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09492572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140170538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091371893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123592347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092099422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120980376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118976833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11134743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118498973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093603172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119662652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092505335 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134585361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093223901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120202387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118678314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098334146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125631891 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094014341 seconds)
  done (took 4.833088898 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140905312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181303951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128344084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125672003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167745352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123177646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196548767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116871445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181355842 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12180228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138516826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091565565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154813811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093932404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142337411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119686693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095936761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121472692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091559865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122210809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138187456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092464999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121045818 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093070377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121457558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10633979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1239184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118729498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093234268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124548973 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098474944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122339146 seconds)
  done (took 5.162448462 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097629452 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124217521 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108408944 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136581731 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094248208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124524026 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096356257 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124030964 seconds)
  done (took 2.0551791 seconds)
done (took 30.047557029 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111285039 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1313955 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106590755 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13309385 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101462536 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130933936 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091535361 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133328022 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131601309 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102163258 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138451071 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091492073 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121536318 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090979833 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133228526 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097014137 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131930873 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101067351 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133149943 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130143847 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093846045 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131770819 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102445058 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132180229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102460217 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133625995 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135920442 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099304113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120960666 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094072252 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123628923 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.106737524 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128176758 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104396561 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125745569 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095646155 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122052547 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093090746 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131826103 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130089105 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100272891 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131739649 seconds)
  done (took 6.024873035 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107661597 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143797074 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104614381 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.086104712 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11625525 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080608044 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136375898 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081000054 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108561005 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107260715 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074433916 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105586817 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078367107 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100111441 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077898095 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074711503 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106691841 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075764457 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075535146 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104940485 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079590821 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07197621 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107600298 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078258473 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073542385 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109230898 seconds)
  done (took 3.61951889 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099845919 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132791436 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112845893 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183257935 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158953086 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098211907 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131055759 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109275626 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137777084 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118248173 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096528738 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148147706 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107936165 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128304451 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091194548 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135700427 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133915321 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094041275 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126340078 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11232489 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137792069 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.1018027 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139709243 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130542173 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091750944 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121621026 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096052267 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133281432 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097672414 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130177029 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.094422295 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124737538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121359751 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105674097 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124614915 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093783642 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141098753 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101919738 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130206897 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091043438 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128636899 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120346085 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113973939 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160074532 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093781374 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128368737 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094088752 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131915786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119942492 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110984479 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129826085 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091160765 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124140077 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091252459 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120731439 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105514553 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123700987 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092859226 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130397507 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124850574 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106612193 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124250291 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108220627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120678733 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099347462 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120320982 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092119443 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119916423 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113212689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122350745 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16005211 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095751343 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12319315 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100182782 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130299548 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126260769 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093859341 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13554597 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101335713 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124258668 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101329804 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124100628 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093897225 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140125278 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094481496 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123383188 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.091896502 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128288473 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122203632 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09400387 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134975204 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09091745 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123841958 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109386452 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12142287 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091964445 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127711081 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125867747 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091653557 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135070228 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09736387 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122179961 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.100937194 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121276997 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093928565 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131579058 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124451694 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091905144 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125206648 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09891113 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121337938 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093857073 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124628116 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093069772 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13182539 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098466904 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125447155 seconds)
  done (took 14.745263259 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227852626 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213503274 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.232429608 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260679857 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134749277 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.152230234 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210497768 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123850387 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122826309 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15912462 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172412914 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.17946365 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166381825 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177390266 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168643597 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093278994 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142492444 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162046537 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213234526 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256299124 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143275128 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100267782 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16028999 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158336213 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13609278 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130685055 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110560495 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135189238 seconds)
  done (took 5.811084429 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107412597 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1546321 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097180209 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144096406 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147226727 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091778206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127718732 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093180452 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134761294 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133542934 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09235421 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1286458 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099438903 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131586735 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120518377 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103053485 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130858774 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094349075 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125148627 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09674013 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132303495 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100179163 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126585575 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090398776 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13208569 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118920452 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086046328 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141859195 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091780978 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144421626 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119440037 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101003536 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135729179 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09284523 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121795193 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094476176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12395054 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094857606 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123513887 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090507396 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121707467 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077055098 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120866 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10572808 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128517864 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079566773 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128920235 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097799155 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123957283 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117828534 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096331886 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12327075 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096635712 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128727656 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096046897 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122908427 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096328363 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113965221 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099681767 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123551768 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085324729 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090292107 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127172245 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115326199 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10117826 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126568872 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091691474 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124418365 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096593113 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12859829 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094012399 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128342792 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090021333 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12515251 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094676409 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128469376 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095137854 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.1218607 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091371246 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122493364 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074611475 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121685236 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074055571 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125520848 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090852251 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120993443 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095463899 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128336507 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136595845 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09520544 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13052496 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095172833 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121095836 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095406415 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111654464 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096078132 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137677021 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138552574 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094286172 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119758715 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107597501 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124719034 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092241219 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104115837 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101863823 seconds)
  done (took 12.901726172 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126803823 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152524943 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099596836 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140779499 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155891301 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155142626 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101017326 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129009589 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095651073 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140449597 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093205068 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130537487 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092225642 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137296272 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155050645 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103120829 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124634346 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10707043 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127308098 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167617271 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110922315 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141599921 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109064611 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123240063 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098430119 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139669525 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158795583 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106981756 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135909949 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140122542 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107678039 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159601685 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111683256 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128077144 seconds)
  done (took 5.489071004 seconds)
done (took 49.741936707 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.254271945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.474761407 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.244339061 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.221092078 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.28740159 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.265372868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.254832147 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.243629799 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.873371679 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.247050595 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.477340485 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.906404418 seconds)
done (took 60.926282551 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.289082893 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.379936775 seconds)
    (2/2) benchmarking "String"...
    done (took 1.512698835 seconds)
  done (took 4.073458349 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.598931722 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.184278216 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.51117865 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.244841046 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.265810775 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.53811676 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.98643341 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.571717874 seconds)
  done (took 28.472951439 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.25593944 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.331764164 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.273982007 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.253599436 seconds)
  done (took 6.287431587 seconds)
done (took 48.894617126 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.275201607 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.29903203 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.267462756 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.22587892 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.359537637 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.274813102 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.421873285 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.38033094 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.267619571 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.231262116 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.26759555 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.246811178 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.280553981 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.425273801 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.261332863 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.25076669 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.279546646 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.956219817 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.649985169 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.247422677 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.247033058 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.307301458 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.273104119 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.251585304 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.323023831 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.247280143 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.254087559 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.266477937 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.795542302 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.255346085 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.262062751 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.61648438 seconds)
  done (took 192.139830779 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.24856273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.150446578 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.292340903 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.314722729 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.519886258 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.451777017 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.380526621 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.73191707 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.271370729 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.269063628 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.425797237 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.252796367 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.496617301 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.228149346 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.279079587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.250810331 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.483154625 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.534446715 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.304997176 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.424972841 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.261943467 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.330244469 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.241378391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.419244665 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.272326321 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.358972495 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.275715906 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.259036862 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.440663763 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.397012378 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.31028626 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.256366277 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.872040724 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.111970111 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.265022143 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.287711199 seconds)
  done (took 150.848260308 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.295522287 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.248827411 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.250219675 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249250047 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.282046655 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.249131741 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811062074 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827193883 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.794217841 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.66902128 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.628539123 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54845537 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.254136076 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345456369 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.263536316 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.252067075 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.266684793 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.270737953 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.250366447 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278638397 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251647915 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829271363 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.267542521 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.428027841 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.270373477 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282666767 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.642444921 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.823331085 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.250340914 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28299167 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.581520742 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.302418091 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252396874 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642240328 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.75917297 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364849036 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253447598 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283660368 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.252712017 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.531790481 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251732539 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.252297593 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.255100913 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920099267 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.256725326 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813399437 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251320718 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.198064136 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.252624738 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.253423301 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.901137026 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.972627161 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.275191851 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.252088212 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.25556257 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.25201639 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252785945 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.285357582 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.697622646 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.348811042 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.273042762 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.255567304 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285269846 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.25284825 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.670904821 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.25992506 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.341310996 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.331565413 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.470640651 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834020953 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.258713147 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35272527 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375653209 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.253669138 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.254389901 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253794107 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.254715519 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.365096129 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.253362556 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.253718446 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.67901929 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.430963587 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.273998727 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.618781209 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.356888843 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.254950292 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.673346532 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.259851501 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.254740404 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.009723444 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.254841574 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353229018 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.254609344 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.255274198 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254908002 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.681877909 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834259785 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.528073922 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.260612962 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.809301928 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.263260048 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.700255752 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.814294286 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.957955815 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.261106276 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.256375991 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368110779 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.431919676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.276481487 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.255980836 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.634544185 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.261681586 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.315263615 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.256721764 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.653626236 seconds)
  done (took 373.528904958 seconds)
done (took 718.984586638 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.859825689 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.855747159 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.966373077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850503862 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.810701737 seconds)
  done (took 10.524184628 seconds)
done (took 11.705440442 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.45282692 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.45291011 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320448288 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.454470005 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287268621 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.47243617 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43312783 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.278228202 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366053144 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.342803482 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.362578833 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313404862 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285194215 seconds)
  done (took 19.004000202 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.587573491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.59621675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321339053 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581291195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.302531087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.587352444 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.462153757 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.482270698 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468479061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.293171012 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271500074 seconds)
  done (took 17.137600203 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.582357829 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.587324109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.328448113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.582915255 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303150047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599594261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.468465784 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.478028312 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477901278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.293109529 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271143783 seconds)
  done (took 17.156001271 seconds)
done (took 54.479906733 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.268273468 seconds)
  done (took 2.451193505 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.304503193 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.470764668 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.289794247 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.271515298 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.27013796 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.269044588 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.274013809 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.269834742 seconds)
  done (took 11.604305098 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.267769062 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.265388009 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.267919672 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.266027757 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.264824614 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.265663012 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.265600351 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.267724945 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.268246583 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.265934817 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.268535974 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.266250656 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.268835095 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.269630277 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.269279404 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.265726536 seconds)
  done (took 21.458962553 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.268156445 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.265749366 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.26538131 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.266379557 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.265527909 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.266848621 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.266965591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.266444854 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.266455124 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.267277367 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.267497939 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.265986158 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.267230995 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.265748746 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.266407899 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.267914822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.267108035 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.267374519 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.271052437 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.266988121 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.267524737 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.266501644 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.268399112 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.268609838 seconds)
  done (took 31.596062263 seconds)
done (took 68.293311984 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.393339398 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.934009034 seconds)
  done (took 9.513124212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.269830282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.270231861 seconds)
  done (took 3.727494587 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.270571912 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.269301005 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269379931 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.269100094 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.270486778 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.269467786 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.269763814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.270128438 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.27009711 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.270667048 seconds)
  done (took 13.885562483 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.271214478 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.271562654 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.268036541 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.270927511 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.270858638 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.269166169 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.271192777 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.270374216 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.270511041 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.268601518 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.27145452 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.268169757 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.269802909 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.269397708 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.271008928 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.268285296 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.268479574 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.270150953 seconds)
  done (took 24.046217404 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.271243504 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.272114627 seconds)
  done (took 3.731329396 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.269150261 seconds)
    (2/7) benchmarking "second"...
    done (took 1.268331672 seconds)
    (3/7) benchmarking "month"...
    done (took 1.269628679 seconds)
    (4/7) benchmarking "year"...
    done (took 1.269568256 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.269121625 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.269060306 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.269427786 seconds)
  done (took 10.072123256 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.27293558 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.443856111 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.520361566 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.887091275 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.273072598 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.275688216 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.114021786 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.275463534 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.277566292 seconds)
  done (took 14.527502893 seconds)
done (took 80.690153323 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.28888152 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.282700764 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.448861544 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.288203365 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.28505007 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.607657367 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.273696007 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.422183997 seconds)
done (took 38.08721327 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.280727525 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.259158611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.051929372 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.267777572 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.31712857 seconds)
  done (took 19.086141173 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.320545047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.605474806 seconds)
  done (took 5.115759976 seconds)
done (took 31.673928417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276257698 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.27090674 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.274285626 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.272092957 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.2742452 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.271459564 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.2726214 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.272426156 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.275182727 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.274107308 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.273909724 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.275069499 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273576964 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272417427 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272307293 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274095349 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.273005531 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271583537 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.27488463 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272648701 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.275173727 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275007875 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.273311383 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.272495822 seconds)
  done (took 31.754351566 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.276506122 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.27359656 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.275137486 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.274836935 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.273859116 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.276300584 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.275692449 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.27341856 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.276785928 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.276198781 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272765825 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.273042176 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.275452514 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.273013761 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276843466 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.273391767 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.275828015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274116726 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276689865 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.27331235 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.275912298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273244088 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.27469968 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276639621 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.274546232 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275250711 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.277007684 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.275053533 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277069145 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274985266 seconds)
  done (took 39.443990027 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.28344455 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.283824239 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.27719207 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.276661402 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.27708719 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.277296102 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.278173512 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.277638853 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.277470453 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.277679217 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.277472174 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.278742545 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.277880842 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.278238281 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.278131068 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.278033306 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.277777909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.278333383 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.278405827 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.277504932 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.278964518 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.279147712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.278155626 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.279307412 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.278006137 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.278285659 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.278026561 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.278057412 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.27811954 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.278298653 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.278944616 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.279005591 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.279209963 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.278322251 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.279313884 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.279699187 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.284232584 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.286800359 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.27868868 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.278876722 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.279614003 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.279518556 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.279473051 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.279685018 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.27942187 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.279710469 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.280180875 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.280332501 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.280281876 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.279947419 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.280001613 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.280909084 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.281240455 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.280433932 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.28026561 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.280494961 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.280408371 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.280440246 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.280903349 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.280569664 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.28049575 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.280492061 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.280609041 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.27969198 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.281259319 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.281487222 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.280523416 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.280487253 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.281818539 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.280528481 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.281202023 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.280651206 seconds)
  done (took 93.323036781 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.282021612 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278903257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278489291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.279186648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278232737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281382213 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.279433771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281716615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279215255 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282016235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280606819 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280858237 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279173464 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281999669 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282657497 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279335586 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282754913 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279352581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.283102287 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282322942 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282326187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280445106 seconds)
  done (took 29.373234384 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282428991 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285588519 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.280580945 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283858429 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281483727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283730332 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283622159 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285959207 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282926882 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28056218 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281078183 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283366455 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279845106 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281126899 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28181275 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28260725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284069831 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28223846 seconds)
  done (took 24.285898263 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.28183806 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281436445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.283940095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281361354 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.28157481 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285169738 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281576239 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.284223379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.284499509 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.28278928 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.284510628 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284474595 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.284749022 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282761113 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285574175 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282210318 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.284968937 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283230648 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285441189 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282251059 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283632427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284160171 seconds)
  done (took 29.435998366 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286136562 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284839291 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283864819 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283948242 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28277045 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285591012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.285096314 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.282937394 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.287015556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.285549573 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283171105 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286178571 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285032563 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284118932 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.283508839 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283710574 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286194834 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284556642 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286814595 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284079486 seconds)
  done (took 26.896152704 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288849333 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287503389 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287816407 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2885887 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287107884 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288677844 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288981879 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28873349 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288756002 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289735023 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289034613 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288786401 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288727823 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28880705 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288625157 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289175969 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291256341 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289705044 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28966829 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289399739 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290418626 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289055332 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289673623 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289498125 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290612667 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290044351 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291005086 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290145297 seconds)
  done (took 37.300835862 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289984482 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288573706 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.285833479 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.28656217 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.286422742 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.287091355 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.28684554 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.287028449 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289708581 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287136167 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.290500616 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.289098343 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289156811 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.289808954 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290331056 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.288897397 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289325935 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.287956593 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287162081 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287159089 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.289868403 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289604852 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.290175498 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287134275 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287629422 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.290428844 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28868984 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287216197 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290820901 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288173479 seconds)
  done (took 39.859882194 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.309482393 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310774538 seconds)
  done (took 3.825884547 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.288439755 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290997669 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.290854961 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.287802422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.287717983 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291417514 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29065826 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288716119 seconds)
  done (took 11.52224781 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.290211571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.290808566 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.291765769 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.291134262 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.293013146 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.291582153 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297090203 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.312173323 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.290295739 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.291808469 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.29932188 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.299179134 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.293551738 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292093425 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.292229103 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29401328 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.292222105 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.292856912 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.294816721 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.293165865 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294224373 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294390057 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293639932 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.290028569 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.294348492 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.302494318 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.315520228 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.293359992 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291529867 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.295078159 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.292227887 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.28996067 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.2937075 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.298692054 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.293682144 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.294347506 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300341503 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313737547 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.298446647 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314809244 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294783494 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.291270939 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.29393936 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.294097547 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29427858 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.293803037 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.294787829 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.291937191 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.293086233 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.297416735 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.300415443 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292850418 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.2919711 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.296047269 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.295273825 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299624124 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.315654701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.298227305 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.304871692 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.3046539 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.327454761 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.320102795 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296822376 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.296293712 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.306218533 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.319178474 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30084893 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.313630741 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.293142101 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.295892001 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.300954344 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.328058602 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.322659702 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.29709042 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297093504 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.296494053 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296927555 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297099867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302672245 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.319045914 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.297924298 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297788316 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306903362 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319370309 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.29639958 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.297671786 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.29810811 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.297591024 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.298703885 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.306814725 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.318214456 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.298061865 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.296979688 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.29867161 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.298000895 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.298363814 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.295579082 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297833693 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.295483207 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.298171364 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29809331 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30141998 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.306940084 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298748003 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299705285 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.304989267 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.318912307 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29759833 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.302915233 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.298074832 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300137603 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.300942168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.303741137 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.296297294 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300714549 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.306810638 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.30044968 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.298977192 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.299168422 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.300158071 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309494423 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.325214265 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.299341684 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.300228417 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.303770861 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.312278543 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300519591 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.301864744 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.299630449 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.297506805 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.297544112 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.300301304 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.300198853 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.300334453 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299486641 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301346376 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.297957737 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.299784672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.300409538 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.300074757 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.300577795 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.298896115 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.300643045 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.301952038 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.301079285 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.300851485 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.305212469 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.319676053 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.301168851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.301249185 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.29937316 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301281127 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.301133271 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.301688289 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.301025073 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302393076 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.300172975 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.302963222 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301719874 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.302803857 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301930844 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.302620289 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305855489 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.302265712 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.30446499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.300955066 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.299176323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.302323858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.30327334 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.301958848 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.302749056 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.301342259 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.305489284 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.312410475 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.302990057 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.303888569 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.305340092 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302756884 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303627301 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.305094822 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.306809327 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.310916778 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.303630242 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.308054805 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.325374206 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304362687 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.304021739 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.303799325 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.303549518 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.304317156 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.307314751 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.311761824 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3158045 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.330148027 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.304432426 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.309177825 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.305237377 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.308184995 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.307265232 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.305038601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.303927698 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304425526 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303014151 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304427324 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.305211726 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.304741159 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.303509371 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.306238116 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.305110337 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.304784533 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305604568 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.304359097 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304539508 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.302814897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304676346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305481056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.305176061 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.303435817 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.303726252 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.304026493 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.30566898 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.306552783 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.310892238 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.302872694 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306092311 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.306451357 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.305214343 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.304691453 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.30675122 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306052087 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.306035975 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31130114 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.326975219 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.306541411 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311865542 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.3257321 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.305895744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.307933841 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.306755488 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.304066607 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.309962284 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.316248675 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.307745287 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.308034683 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.308244372 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306706587 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306634559 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.312218641 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.325075657 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.305804603 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.30688777 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.307968352 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.304802322 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.30714236 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.309664715 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.308120085 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308756207 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308714543 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.307755155 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308115663 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.308772988 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.309762366 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.310109664 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.311505191 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.31825575 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.312669725 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.307625131 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.310341427 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.309089458 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.312764469 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.308590393 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.308579817 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.309217981 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320279882 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.33568584 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313952855 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.329571973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.309694163 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315896021 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.331230117 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.311867498 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309566112 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.308849418 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.30882191 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.308008934 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.307031048 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309580334 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.31013456 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310949182 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.311609403 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.314389234 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.309869452 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.309506431 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.310406088 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.310932377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.309924621 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.30939551 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.31081646 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.310956869 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311551549 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.309783473 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.309824368 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317020431 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331144416 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.310818163 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.310292903 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.309933018 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.309443577 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.31078373 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.311966976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.314512612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.320584974 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.314968447 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.320561569 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.312485425 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320281987 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.312084936 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.315808737 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.321033206 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.309778155 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.310288932 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.310927229 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.31215832 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31755262 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.333447232 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.313576562 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.317659803 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313892372 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.314188665 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.31369577 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.313659889 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31316599 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.31319624 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319693295 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.335492256 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.316655138 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313778847 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.311079521 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.314331872 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.313480097 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.312332253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315853731 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.314104541 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.314451543 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.313786715 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.312779533 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.314757262 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.315361629 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.31505293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.310876439 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.313865131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.319043146 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.33691515 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319858624 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.314992844 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.319506057 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336299385 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.320008315 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.335591075 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.315656658 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.314987323 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.315178599 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.31472863 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.312843781 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.314538002 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.314958212 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.315619355 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.319177823 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.315791749 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.316052 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.315055182 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.316072217 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.314722647 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325581273 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.34118544 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.315542676 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321002577 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.314066454 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.316613451 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.320859568 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.316326212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.314421878 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.318191103 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326966749 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325462447 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.316006585 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.315696864 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.316299645 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316522445 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.316556682 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.31705017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.318045185 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.316290475 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.316133136 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.316914329 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318896294 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.316538674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.316609627 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317371344 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.317559485 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.326490127 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.338200793 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.317207808 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.318836292 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.319041257 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.31674133 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.317579717 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.318512306 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318249072 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318455464 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.318838131 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325294241 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.324980134 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.318979152 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.318292039 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.317977072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.31777329 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.317982447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319686603 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.319007427 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318369841 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.318837704 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.319420723 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.318252597 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.317308195 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.318898918 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.317898036 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.319209403 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321705474 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.325725933 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318563481 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.315378952 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.319291157 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319141873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.318552542 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.319255119 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.325147987 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.343470287 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.330295452 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.328356588 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.323921406 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.320728589 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321080586 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.326951693 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.318554908 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.319363924 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.320258364 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.320142706 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.320034641 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.323869659 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321190203 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.325593327 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.340084694 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.319826106 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327008696 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.340839466 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.320570693 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.322332503 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.324437686 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.319707248 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.318817242 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.320934016 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.320354921 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.326011958 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.342072227 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321335186 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.321905533 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.320568634 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.322185962 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.326490176 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.322015942 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.320735066 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.318751138 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.321209852 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323013349 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322968248 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.320838144 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.320751475 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.321804335 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.325420202 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.328384643 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.320363982 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323221595 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.321779547 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.322195974 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322734207 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324028218 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.319873944 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.320203621 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.322482658 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323034981 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.323088765 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.324395607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.321051798 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.323610095 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.325270921 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324622934 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326343441 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.333310301 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.33169489 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.321535755 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.32223479 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.322463201 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.324299471 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324505653 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.324295816 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323481769 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.323788021 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.324201363 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325685309 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.324846138 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.326811465 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339672318 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.345116833 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32398007 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.323999576 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32614869 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.324694936 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.321998878 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.324157511 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.326501899 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.327785298 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.33435758 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.325658536 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33047173 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.345749178 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.325737409 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.32943269 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.328773101 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.333618993 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.326193697 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326017366 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.325614576 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.331327438 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.342091986 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325040953 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336438026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355997132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.347635163 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.326368469 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.326413853 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324695515 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.327063154 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.326582738 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.326863057 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.3278269 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326791418 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.327338919 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.328121702 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331470955 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.327764022 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.328440569 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.327864463 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.325666793 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.327359231 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.326069765 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.327923496 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.327908412 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.327856642 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.327989203 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.32907528 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.326781477 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.3391118 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.355215474 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.327601052 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.328525079 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.326945178 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.330729118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.330677203 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339060234 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.336086206 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.327260499 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.329788994 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.328321797 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329307853 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.329483491 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.327514124 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.327007764 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32778032 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.3259161 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.340661781 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.35649865 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.333533932 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.327432325 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329900006 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.329604578 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328457603 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329409377 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330131483 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.329149885 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.332079284 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333886318 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.32889064 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.329715595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.331842682 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.337219331 seconds)
  done (took 784.088318497 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.328756622 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327774121 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326902255 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.326401604 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32733287 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326992344 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327402967 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327486371 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.328230099 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.328048969 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.32830453 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328287472 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327259676 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.326992337 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328597484 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328596247 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327859697 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327973132 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327499446 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32916793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32862265 seconds)
  done (took 29.127084824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.332489585 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.328573389 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328561526 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.330651103 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329002383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.331597608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.329747607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332580676 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.332399833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329762087 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.331397307 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332025734 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.329127548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.32940157 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329340086 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331364824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.332432273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329897474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.33345979 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328446355 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333538386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.330177085 seconds)
  done (took 30.52065093 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.333501692 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.33363307 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.331897238 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.330083836 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.33355624 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.330098009 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.332866135 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.332944618 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.332926388 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.332287637 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.331782617 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.334064507 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.340141139 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.339164131 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.333698171 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.333366784 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.476728184 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.33386792 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.334341104 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.334704513 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.331804767 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.338186911 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.351603467 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.331098296 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.331888958 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.334042668 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.335474031 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.334123201 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.334711203 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.335177548 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.339749976 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.334638981 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.333580017 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.334797914 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.333747574 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.335490029 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.339865451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.335626232 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.332968138 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.335349275 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.344872629 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.35967806 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.336370601 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.340175272 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.355397652 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.334554687 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339407517 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.344990319 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.332927417 seconds)
  done (took 66.864494362 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.336665498 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.335073064 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.333266801 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.335506576 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.336306285 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.336632049 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.336142568 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.336336669 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.334500723 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.334255835 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.338398305 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.333715733 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.333326349 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.336111329 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.337041014 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.334617953 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.334509831 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.334773906 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.335292327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.333716528 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.334399358 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.337550538 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.337021797 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.334471965 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337679683 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.335311661 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.334761524 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.337116107 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.33488288 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.334670393 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.337829894 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.338840926 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.337277164 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.336416362 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.335109512 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.336304954 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.3384349 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.335280529 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.337585077 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.336477625 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.337539122 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.337978075 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.338961293 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.338521866 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.336087994 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.336144151 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.335993104 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.33604628 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.336430536 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.337911821 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.33967833 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.336451252 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.338484841 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.337154223 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.339282274 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.338639345 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.336090642 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.336635135 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.339017891 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.337329026 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.336408431 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338956204 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.337601629 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.340620639 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.3385237 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.337123438 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.338470855 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338786676 seconds)
  done (took 92.140999851 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340554679 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.339853725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340549129 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340068692 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.339738794 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.339140386 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.339921458 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.340586121 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340479009 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340179139 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341024547 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.341594071 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.341850379 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.340641851 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.340306814 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.341938423 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.340743604 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.341479547 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.341331624 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34134568 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.341209917 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.34189623 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.341154604 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342063923 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.342413135 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.340576139 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.342100536 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.342203661 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341733716 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.34270798 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.343771597 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.342225268 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.343064703 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.343038339 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.342568865 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.342506331 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.341565497 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342461667 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.343153464 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.342260459 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341491603 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342033856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.342563093 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.343413843 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.342884613 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.342709876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.343118311 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.342285148 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342474183 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.342861404 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.343465958 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.342731465 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342875398 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343693747 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.343133285 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.343629983 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344268521 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342966047 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343201407 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.34404919 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.343961098 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.342850691 seconds)
  done (took 84.458118681 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344346964 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.344072933 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.340797444 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.340808007 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.343689116 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.341175358 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.344040202 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.344116981 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343574072 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.34451631 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344854126 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341544889 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341769195 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345122468 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.341717448 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341934506 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34249346 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.342615492 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.344784908 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.343286908 seconds)
  done (took 28.117474236 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.344009525 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.344980807 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.341465163 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.343264502 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.346502643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.343401716 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.345518179 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344709293 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342545271 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345583076 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.345344173 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.345971227 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34342144 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.343696375 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.346510428 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.343577602 seconds)
  done (took 22.766791285 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.344070614 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.346250841 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.347091845 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.346673398 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.34432758 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.344665676 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.346873636 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.34365152 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.34405222 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.347408483 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.347401718 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.346981503 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.346825211 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.345947246 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343722938 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.346738839 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.343987412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.343986583 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.347034138 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.347304094 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.345669538 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.344893654 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.347469038 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.347282631 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.344113731 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.344918619 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.343937076 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.344661157 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.344592918 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.347052422 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.345421251 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.345982635 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.346060604 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.344769523 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.348565008 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.346254377 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.348122716 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.347960241 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.348350766 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.347688348 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.347518034 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.346473654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.348577574 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.348075224 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.346179347 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.348796755 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.346208638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.346284882 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.345812722 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.346613186 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.349111843 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.348357186 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.349275305 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.349333314 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.348985043 seconds)
  done (took 75.313682936 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349939177 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349385482 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.348125694 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.349686585 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.349916225 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.34710275 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349803588 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.349339396 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347393341 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.349699805 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349554983 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.351469102 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347506022 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351011154 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347844996 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35095943 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349393503 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.349374406 seconds)
  done (took 25.548512066 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.350036224 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348878934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.350944504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.347607901 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.348533136 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.351264613 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348203912 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.350407508 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351132039 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.349552502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348701665 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.352051483 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351620787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.35127761 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348747399 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349075482 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.351585508 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351064961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.347706877 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348992183 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.351634794 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351379406 seconds)
  done (took 30.962267251 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.350035098 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.350243094 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.351535178 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.367237951 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.371573339 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.374569292 seconds)
  done (took 9.428287201 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360707104 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35160052 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350480238 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353664022 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352276383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349723123 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349415604 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349106908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352341051 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349762365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349506575 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35217565 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353387158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349832105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352290743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3534706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349708023 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351074578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351063067 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353571327 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350880657 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353418583 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34985251 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350253687 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351562398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351047873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353510928 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352005787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351610392 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353537364 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354322729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351382485 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355365865 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352800262 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355183128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354187926 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351896726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354857096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354658693 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352372021 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354756697 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355179239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35489275 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351930543 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355994024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353068475 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352401169 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352040969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352652369 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355264518 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35603318 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353250019 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35590799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35612581 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3556 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355578944 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353049336 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353378526 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354895131 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354124927 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352446565 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355343852 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352967976 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354927697 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35647159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353211326 seconds)
  done (took 90.590939617 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354609513 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.353031036 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353111195 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354866736 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353507083 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354411582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353943653 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354695717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35475589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353465651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357073897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354636233 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354348135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35480641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354699313 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354600883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354100734 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355907286 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355418902 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35757828 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355460779 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354908122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35433748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35548907 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356283992 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357093623 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356033485 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355118608 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355397769 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355624178 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35568679 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356687282 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35497953 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.356264228 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356215287 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355386837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356568495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356249579 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355937232 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358263049 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355797352 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358820688 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35693241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355630813 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357226533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357326531 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356769191 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357449079 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35764613 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357365291 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358349832 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357806175 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357358331 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356513075 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357215958 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357175193 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357506003 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357385423 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357653605 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361136492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3576945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358007329 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361479581 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357160146 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358431281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357357222 seconds)
  done (took 90.779957476 seconds)
done (took 1828.919864845 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.363386194 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.44441943 seconds)
  done (took 14.078237136 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.521827066 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.475265858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.357643569 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.389600641 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.358702097 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.383665327 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.372006887 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.359162672 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.357446666 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.358661599 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.35966984 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.545981448 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.403833891 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.359036483 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.358987871 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.453143328 seconds)
  done (took 43.692987685 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.387518606 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.364870307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.485124228 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.381569205 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.387764826 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.564697831 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.427217068 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.364554277 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.550098646 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.405508975 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.085418751 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.393722884 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.364054779 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.601035209 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.391598565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.563954034 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.628484759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.048153006 seconds)
  done (took 31.668070531 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.856290844 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.390176287 seconds)
  done (took 9.519685456 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.385956598 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.363255941 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.365445927 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.362831334 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.355076989 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.356629776 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.363171228 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.357202609 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.363131501 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.507355059 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.366529976 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.370857559 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.383562472 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.365058139 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.362326801 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.400461723 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.53900904 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.36298553 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.360804093 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.368778015 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.363256359 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.452831605 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.409382603 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.363797872 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.500945364 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.371424095 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.374217177 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.371475768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.51856096 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.363278116 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.365044241 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.365236392 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.367028348 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.975282217 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.818792717 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.384562075 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.390135804 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.373393472 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.363172891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.507683068 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.366536686 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.371044362 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.367573365 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.810320461 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.505586274 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.490317873 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.753831831 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.392745471 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.366319808 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.429217729 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.366585194 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.367059769 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.39747606 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.152948966 seconds)
  done (took 114.080638716 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.385230702 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.754472483 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528683503 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.386944138 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016761672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05300406 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.377974432 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.675580765 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.428257885 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.360888836 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.656103771 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891393224 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.379528121 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.388480619 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.02168858 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.416540423 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.369599076 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.119716846 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.378652085 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.36663775 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878666997 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.361756788 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.367012439 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.534832395 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.401948212 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840830893 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.962887638 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.824111563 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.379793028 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.36199935 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850520472 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.379589502 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.378151844 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.364631591 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.635872085 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.747030634 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.74416489 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.380985857 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.401237776 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.365228453 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.401260185 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837005858 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74672655 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.398078439 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.379740958 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847708791 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.380230316 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.37100354 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.371580962 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56624953 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.070004403 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.363072164 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.934161512 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.369838688 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.736103466 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.389951744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.414352244 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.872154769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.381912117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.461414689 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.408424123 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.36607389 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.370133874 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.367347042 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.368035561 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.737510378 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506737507 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.364061417 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.734571288 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.867535443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.387957828 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910617847 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.280583346 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.377513823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.462852094 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.364025825 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.923232477 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883587883 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.416519318 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.365145023 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.723196221 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.38677048 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.658823028 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.381753097 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.364922258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89204432 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.365686806 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.429531917 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.380567182 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.377070787 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.98658977 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.368749631 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.664014869 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.400162831 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.365279333 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.364455934 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.378587237 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.365460588 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.389726567 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.371709116 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915161474 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.390782576 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.49206952 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.384571491 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.366983727 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.385641657 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.367684028 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.368028422 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.587858491 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.858250254 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.391629626 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368117516 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.367243201 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.369906287 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.559478956 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.368391947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.700302281 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.388396096 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.373650884 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371355889 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100381604 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.418965965 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.367658055 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.369202099 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.28190094 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.5740647 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.388327365 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.36777769 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.369045169 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.385933507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.700882733 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.389645652 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.425702065 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.370256858 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094276649 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.422195455 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.401206176 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.686228845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.378020698 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.333181321 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.387629396 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.367625086 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.680842868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.646479728 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419185192 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.371711081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.386895418 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065082672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.42798628 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509644049 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388963913 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.455192276 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568913353 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808587754 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.369783418 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.992036676 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.369288327 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587453252 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.369018872 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.675179812 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.882572168 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.389237512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377211498 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.095045793 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.110189025 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.185295842 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.37546396 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.660471208 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.3409301 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.860035146 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.369606192 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.370659557 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.791611845 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.372803878 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.371160121 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.370038471 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.371381172 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.527339087 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.546137201 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.944982867 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.375629377 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847588704 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.413070848 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.371831608 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.379225449 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.373431211 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.71771303 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.447848809 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.371041598 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.410512033 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.373523972 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.381542165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868267686 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.331412892 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.371786333 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.524875297 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027915019 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.390235031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.37257166 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.048734787 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.639461055 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908212672 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.393941972 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.706686429 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.390501413 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.412376363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.967949917 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.390321664 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.911712304 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.393505109 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.373096055 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983941694 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.392042484 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719644947 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.372874055 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.372443904 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945717012 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.391662204 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.379607748 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.715540137 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.394468223 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.62593068 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.374798386 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.387076382 seconds)
  done (took 1121.074142878 seconds)
done (took 1335.385068603 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.373037562 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.379839071 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.363125689 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.381477697 seconds)
  done (took 26.787236937 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.385594247 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.381381311 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.382790002 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.380724322 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.3823125 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.380692935 seconds)
  done (took 9.58418034 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.43165365 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.381757201 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.380874837 seconds)
  done (took 19.484949385 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.602396516 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.774790919 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.768139116 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.806872345 seconds)
  done (took 11.244815724 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.384229008 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.383304517 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.383618876 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.384448192 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.386504882 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.387449482 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.385332684 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.384353807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.386689008 seconds)
  done (took 13.757204294 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.384027638 seconds)
done (took 83.532073248 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.395986843 seconds)
    (2/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.231230643 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.466476283 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.909068235 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.644550345 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.444704703 seconds)
    (7/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.59060087 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.395674322 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.444185045 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.403264532 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.401881141 seconds)
    (12/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.357611699 seconds)
    (13/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.41063641 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.357990675 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.246422659 seconds)
    (16/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.776307278 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.743729701 seconds)
    (18/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.376521869 seconds)
    (19/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.521859726 seconds)
    (20/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.778419606 seconds)
    (21/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.410642252 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.468995156 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.866208645 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.475712947 seconds)
    (25/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.062802012 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.376068493 seconds)
    (27/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.874321445 seconds)
    (28/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.409975933 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.383182671 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.480824513 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.46419778 seconds)
    (32/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.016190132 seconds)
    (33/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.363114486 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.628525706 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.938617671 seconds)
    (36/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.361637592 seconds)
    (37/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.129324688 seconds)
    (38/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.470450056 seconds)
    (39/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.269830794 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.358965273 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.492043054 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.654984735 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.991520786 seconds)
    (44/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.20206001 seconds)
    (45/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.587444028 seconds)
    (46/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.087360283 seconds)
    (47/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.359661668 seconds)
    (48/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.406895725 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.435755839 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.371382732 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.056825038 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.360448297 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.720851069 seconds)
    (54/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.524132984 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.389335177 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.394362636 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.868964098 seconds)
    (58/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.569311497 seconds)
    (59/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.083099068 seconds)
    (60/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.379542111 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.358438998 seconds)
    (62/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.657024706 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.398573934 seconds)
    (64/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.370462534 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.371697157 seconds)
    (66/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.390078211 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.992069163 seconds)
    (68/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.394237729 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 5.654202824 seconds)
    (70/286) benchmarking ("sort", BigInt, true)...
    done (took 6.380477547 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.911153918 seconds)
    (72/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.808483417 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.370843372 seconds)
    (74/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.467262892 seconds)
    (75/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.378818628 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.162580289 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.433798987 seconds)
    (78/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.425583336 seconds)
    (79/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.42873549 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.807967883 seconds)
    (81/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.084045889 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.661274956 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.445889327 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.922449742 seconds)
    (85/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.38306526 seconds)
    (86/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.409430821 seconds)
    (87/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.362626315 seconds)
    (88/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.39003041 seconds)
    (89/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.362579524 seconds)
    (90/286) benchmarking ("sort", Int8, true)...
    done (took 6.382408679 seconds)
    (91/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.387319813 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.375976613 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.156545047 seconds)
    (94/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.788423242 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.606505925 seconds)
    (96/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.409223231 seconds)
    (97/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.49188792 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.208061384 seconds)
    (99/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.068267875 seconds)
    (100/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.912220465 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.551894452 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.274905439 seconds)
    (103/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.468926932 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.409226895 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.383820717 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.4341426 seconds)
    (107/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.677298529 seconds)
    (108/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.433204401 seconds)
    (109/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.363122083 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.543956711 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.365181744 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.944332917 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.427055353 seconds)
    (114/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.465568491 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.382744716 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.683535669 seconds)
    (117/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.963776455 seconds)
    (118/286) benchmarking ("sort", Int8, false)...
    done (took 4.481325812 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.210151035 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.645853923 seconds)
    (121/286) benchmarking ("sort", Float32, true)...
    done (took 6.383639123 seconds)
    (122/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.786246326 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.048024204 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.369867169 seconds)
    (125/286) benchmarking ("sort", Float32, false)...
    done (took 5.423964531 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.506874327 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.382683485 seconds)
    (128/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.364900005 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.233675345 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.215378802 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.411999165 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.812141577 seconds)
    (133/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.429701119 seconds)
    (134/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.891823328 seconds)
    (135/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.892776419 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.488172368 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.812200859 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.42616694 seconds)
    (139/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.445148558 seconds)
    (140/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.364672627 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.515029041 seconds)
    (142/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.487296573 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.806182271 seconds)
    (144/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.187736974 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.488541352 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.627452341 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.418446801 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.366140261 seconds)
    (149/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.394421643 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.367756702 seconds)
    (151/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.814969214 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.165563578 seconds)
    (153/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.412432915 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.316414798 seconds)
    (155/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.428989342 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.366015154 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.385961504 seconds)
    (158/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.278299137 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.977298661 seconds)
    (160/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.309382233 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.412185764 seconds)
    (162/286) benchmarking ("sort", Bool, true)...
    done (took 5.502192594 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.495270769 seconds)
    (164/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.445178626 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.461912118 seconds)
    (166/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.387301271 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.471515703 seconds)
    (168/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.787789145 seconds)
    (169/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.205303832 seconds)
    (170/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.663756601 seconds)
    (171/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.939760485 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.857296627 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.3681175 seconds)
    (174/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.716594107 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.755779412 seconds)
    (176/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.595574354 seconds)
    (177/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.24784696 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.389078972 seconds)
    (179/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.388936442 seconds)
    (180/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.276241615 seconds)
    (181/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.397884382 seconds)
    (182/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.048127681 seconds)
    (183/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.603662348 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.412961985 seconds)
    (185/286) benchmarking ("sort", Float64, true)...
    done (took 6.38785556 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.403993544 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.328090928 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.387651632 seconds)
    (189/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.470854083 seconds)
    (190/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.077555455 seconds)
    (191/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.376090771 seconds)
    (192/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.509434886 seconds)
    (193/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.20852054 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.060391361 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.376084225 seconds)
    (196/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.867672395 seconds)
    (197/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.406457791 seconds)
    (198/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.43281867 seconds)
    (199/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.960388175 seconds)
    (200/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.512722489 seconds)
    (201/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.826592881 seconds)
    (202/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.412694198 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.079023754 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.370336712 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.314604835 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.511567079 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.40292536 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.431522947 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.389558411 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 6.409640973 seconds)
    (211/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.633892465 seconds)
    (212/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.100425644 seconds)
    (213/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.504605248 seconds)
    (214/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.472131863 seconds)
    (215/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.37892038 seconds)
    (216/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.126739996 seconds)
    (217/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.531942763 seconds)
    (218/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.688546079 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.053097869 seconds)
    (220/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.499193237 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.501960345 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.811044803 seconds)
    (223/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.677423203 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.388663364 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.371419482 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.455004227 seconds)
    (227/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.371034951 seconds)
    (228/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.371324302 seconds)
    (229/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.428442518 seconds)
    (230/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.501389743 seconds)
    (231/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.40134165 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.988014439 seconds)
    (233/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.400740297 seconds)
    (234/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.372156185 seconds)
    (235/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.177602526 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.637808147 seconds)
    (237/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.390229188 seconds)
    (238/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.38350109 seconds)
    (239/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.41924556 seconds)
    (240/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.37116871 seconds)
    (241/286) benchmarking ("sort", Float64, false)...
    done (took 5.780641138 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.420040192 seconds)
    (243/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.443805653 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.522011876 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.372428695 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.201776087 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.782844705 seconds)
    (248/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.807618459 seconds)
    (249/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.255119609 seconds)
    (250/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.93914167 seconds)
    (251/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.409062193 seconds)
    (252/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.448678268 seconds)
    (253/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.978599962 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.987752255 seconds)
    (255/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.504654151 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.149736284 seconds)
    (257/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.413361933 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.403768181 seconds)
    (259/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.373937692 seconds)
    (260/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.113905934 seconds)
    (261/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.457211228 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.475557169 seconds)
    (263/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.419189164 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.475446826 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.503663621 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.410883833 seconds)
    (267/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.517574228 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.210744487 seconds)
    (269/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.392594721 seconds)
    (270/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.470603104 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.435907818 seconds)
    (272/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.403013288 seconds)
    (273/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.769517274 seconds)
    (274/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.375625813 seconds)
    (275/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.272490195 seconds)
    (276/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.437341699 seconds)
    (277/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.773016928 seconds)
    (278/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.375840048 seconds)
    (279/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.396368513 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.365181141 seconds)
    (281/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.413503346 seconds)
    (282/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.478819664 seconds)
    (283/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.394533244 seconds)
    (284/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.944501707 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.393201976 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.544392788 seconds)
  done (took 964.412344919 seconds)
done (took 965.703919991 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.427187251 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423853383 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.404578789 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.426145842 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.516787796 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.42971113 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.415667325 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.407697928 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.453901189 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.454443476 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.403901189 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.428078275 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.406528349 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.405501843 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.403984955 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.421431879 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.543646697 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.407448934 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.42290839 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.41676221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.422393488 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.404218138 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.455543055 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.428718887 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.409241401 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.410043419 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.409982147 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.425637692 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.518734294 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.410545175 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.40944022 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.418810907 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.544903432 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.406312598 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.402080641 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.426519243 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.417669738 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.41586971 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.409743146 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.439168876 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.990717032 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.426025609 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.408801945 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.408576781 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.408173835 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.412425508 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.409536649 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.415455932 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421943365 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.423389594 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.97895705 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.441493336 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.411504612 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.408828032 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.418316682 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.408022801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.411261531 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.42611501 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.427665141 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.426510437 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.531259784 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.413111172 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.410369048 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.425474005 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.41645425 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.016654348 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.423023447 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.414115278 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.993315259 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.433983067 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.016928194 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.436952884 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.411790001 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.423118718 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.441801871 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.546071061 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.404456811 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.40878729 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.417085097 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.407812006 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.420577124 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423946702 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.413989959 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.410921323 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424854598 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.433993699 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.420802593 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.411570035 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.419555548 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.429627674 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.417612641 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.421591049 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.41390889 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.405600034 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.420115981 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.415843076 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.413201737 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.413894592 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.416622909 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.420731376 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.99095854 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450168147 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.408336756 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.407683154 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.41063504 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.425132629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.992077465 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.431413879 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.43382612 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.459003635 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.414365106 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.534696751 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.415028668 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430599581 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.421192357 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.415625115 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.407285422 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.534140424 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.983219236 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.446516131 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.414441895 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.410942454 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431594816 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.415199189 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.409925878 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.550356037 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.414435949 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.428648469 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.533608992 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.424040883 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.445122492 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.411633366 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.417656106 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.437042256 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430951622 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.445677521 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.416999019 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431438845 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.430266386 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.410548531 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.425106689 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.425010577 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.415306506 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.420515729 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.408735631 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.438908488 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428110906 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428812732 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.435410951 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.535301427 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.412121066 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.537938765 seconds)
done (took 239.202076434 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.473736096 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.407875266 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.495166724 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.412397818 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.513191343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.514162649 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.409079408 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.410390711 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.410280931 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.785883579 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.410439553 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.410799252 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.410003837 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.411123767 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.493613006 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.41227324 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.410340616 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.749540895 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.4141874 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.483717024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.41262284 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.411068057 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.412514869 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.791500477 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.407400943 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.407381722 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.48379291 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.414220522 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.757294079 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.406149345 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.4056997 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.758801216 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.50216863 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.431119548 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.424030344 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.420763607 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.516820624 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.435340377 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.493942692 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.494441828 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.496773673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.452290349 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.414946644 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.413215427 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.415803715 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.415713401 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.413114363 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.440709906 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.4067213 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.41258533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.750902521 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.424076088 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.42145465 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.411781727 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.413410197 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.435318609 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.413225232 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.41558432 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.504670239 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.416450561 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.477207055 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.794650106 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78917666 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.415225378 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.411685405 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.41325759 seconds)
  done (took 153.734629867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.480897095 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.489008199 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.534671368 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.434671419 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.465323525 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.539303257 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.435917904 seconds)
  done (took 11.702070202 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.421922502 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417161187 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.465383062 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.465499373 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.417500677 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.564650393 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416857901 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.427190288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.414874742 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.467970208 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.417737019 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417429308 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.423710996 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.415167425 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.464856355 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.42796961 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.530312302 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.417254579 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.41833358 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.568031889 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.414664293 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.424756477 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.469000157 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.428404209 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.418702823 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.422566673 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.993905595 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418436518 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.415269316 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.417736352 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.414813739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.455154477 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418139159 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.415915441 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.415526445 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533820272 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.419235394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.415441927 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.418369548 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.414823018 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.41908927 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.418971107 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.419395607 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.415311963 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.419176739 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.44096486 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.419502132 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.418896586 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.418940172 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419654381 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.468421364 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420372427 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.417286665 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.416329579 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.474301044 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.427443329 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.419765275 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.41738516 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.420089347 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.417009952 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.570521787 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.468292375 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.419822035 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.466404144 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421282436 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.421629804 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.420012339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.419940614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473873924 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.420727167 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.469323942 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.418680193 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.576622528 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.444532658 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.422038618 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.423739145 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.423244874 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421887632 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.414673353 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.425670156 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.418412608 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.422081048 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.426565755 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.419145465 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.41914109 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52297631 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.529207076 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.418476893 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.43433665 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.428380449 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.419829616 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.473908542 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.42200273 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.418781072 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472151842 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.536486807 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.4745206 seconds)
  done (took 161.558594523 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.426649974 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.429123611 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.422938197 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.438344253 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.421848383 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.421379179 seconds)
  done (took 9.8881052 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.425476488 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.423747525 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.422698646 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.422709664 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.424146636 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.423134287 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.424089999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.425378114 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.427988209 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.423474249 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.423680379 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.424756608 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.425241116 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.423469483 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.425421458 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.423845174 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.424515151 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.421367589 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.42387187 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.425400264 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.518944569 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.42503022 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.424636877 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.426053644 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.429616354 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.424765933 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.432182135 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.424393262 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.425552672 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.428698361 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.447607794 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.425897723 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.426064909 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.430900752 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.429806863 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.42734304 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429572119 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.426356451 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.422146932 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.425188297 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.426368185 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.425463973 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.42529957 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.42533893 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.426848751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.431448858 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.429221315 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.433076475 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.425323916 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.427503101 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.426292811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.42608654 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.425798132 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.426529936 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.428384364 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449566092 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.431083954 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.426942488 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.426787073 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.426896842 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.42739374 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.426671463 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.428614918 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.431835244 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.433078314 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.42831077 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.427500995 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.432379834 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427372568 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.427109398 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.427728133 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.425162555 seconds)
  done (took 105.179596511 seconds)
done (took 443.381224807 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.562788218 seconds)
  done (took 7.894061205 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.80618694 seconds)
  done (took 8.141167215 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.998475342 seconds)
  done (took 24.334600945 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.527275108 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.44127067 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.432373648 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.428934438 seconds)
  done (took 27.162699703 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.502855452 seconds)
  done (took 7.835532688 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.43713436 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.421146073 seconds)
  done (took 14.192052354 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.738298768 seconds)
  done (took 8.071441256 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.104320339 seconds)
  done (took 8.442861388 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.424791271 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.437595595 seconds)
  done (took 14.466002161 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.402460961 seconds)
  done (took 7.735576316 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.599897764 seconds)
  done (took 8.933303018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.424481702 seconds)
  done (took 7.757965396 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.449302328 seconds)
  done (took 7.78315638 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.242916481 seconds)
  done (took 10.576376441 seconds)
done (took 164.660018846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.421435695 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.427461649 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.428508958 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.421052127 seconds)
  done (took 27.032830151 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.461803585 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.461800976 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.463149148 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.472869789 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.465037058 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.463076397 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.454808222 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.455838356 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.473435137 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.465297622 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.465030096 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.465258811 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.462090889 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.455085037 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.464238802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.464967201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.474353337 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.471954686 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.456484697 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.466543596 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.431363895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.473800833 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.465943181 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.43140933 seconds)
  done (took 36.421486564 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.94914413 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.500411233 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.583861937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.484384817 seconds)
  done (took 7.854036942 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.482670304 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.484234557 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.495575246 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.534101915 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.56172744 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.494518226 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.45777787 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.452240687 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.438526858 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.484345585 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.559678601 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.499961981 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.571923686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.431157924 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.634432784 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.43164214 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.430956013 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.483395114 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.534550084 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.549698591 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.432373084 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.483548405 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.487300881 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.500702564 seconds)
  done (took 37.253226341 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.43180889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.450187788 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.431648244 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.430932119 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.439214622 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.43013538 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.432436594 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.432887501 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.431930006 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.438031349 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.431577812 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.44413284 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.431610229 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.431653731 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.439083685 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.434022339 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.43821256 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.431130501 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.433252687 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.438221165 seconds)
  done (took 30.03961568 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.42614759 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.280630658 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.778012579 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.682903008 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.424266485 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.425829955 seconds)
  done (took 28.35663464 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.513253107 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.684038148 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.433175032 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.848868807 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.952827243 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.459712149 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.433703459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.70102981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.081391059 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.071594908 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.497411658 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.508607184 seconds)
  done (took 21.526017529 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.438451703 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.435139907 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.442263236 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.450664377 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.494767792 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.457561067 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.440939026 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.427973605 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.501742675 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.519407276 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.459315755 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.496792967 seconds)
  done (took 38.905726468 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5172139 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472111292 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.503215907 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429060822 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14729837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641911293 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.440495299 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905806902 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.433948829 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704706682 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438943195 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518840773 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685373252 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437046154 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438667675 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.542089834 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682999701 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00747889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437979685 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.886645346 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456304147 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.433337114 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.102687618 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.471313875 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642042625 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.572811202 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.691745669 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.206277902 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760776351 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442176312 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442512505 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431588258 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705874093 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130044693 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548814793 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442810217 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435084091 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0052538 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.420444239 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.883869492 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446743986 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433726388 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442924692 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432600201 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.366392789 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447480223 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918230235 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.438546502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.143905558 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432911576 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443379033 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526969525 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.435910239 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.00328941 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482597552 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.460637617 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.430930071 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528399622 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020394322 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.288155389 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443704569 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.375782542 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446504183 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.818125314 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12937391 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.55649549 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.438186611 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437982955 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368883631 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.81487001 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451357767 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5814546 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.457508575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.084295131 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206280178 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458253761 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.364827836 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043072193 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453197737 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.375880597 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661974214 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211834364 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370306287 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.380816056 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.368691861 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239672932 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44519978 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.927728704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453363614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932238054 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.446090897 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452408601 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458835425 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658480475 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.313496337 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435984966 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.438965242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560898347 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458488379 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91153129 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370736979 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.439267358 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692445354 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.648135747 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435153422 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.580365859 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705074248 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439053536 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.457506326 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43645862 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.454105456 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.102978395 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.475356508 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.295343511 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453425785 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.214114454 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27234212 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441871007 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.560851782 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445883656 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705555435 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.280438788 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.336986443 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505182968 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44218064 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438816759 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.919448044 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.50608842 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.338886937 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.434747129 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452928196 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.455567731 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.438642672 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383250478 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.446058121 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451097942 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.215043219 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.661268139 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445283652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719717001 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371440081 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584987718 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.447454528 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.661943236 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.80071264 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.463292702 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698074777 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43860493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.452067603 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456500088 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458025354 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540537567 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461118778 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.454609421 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701408862 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.443694157 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.442722289 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.994891014 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.224148199 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440901352 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.444893185 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445689848 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124331481 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443972666 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443274884 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330164028 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.454117794 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50776708 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446404285 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.45003847 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.50812156 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488131048 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.451990278 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.451285166 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670667237 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449535751 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.895848322 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52434465 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.670147976 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114112603 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479502422 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.374862481 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.152257247 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.134701626 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441705201 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.630347266 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440845133 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452575371 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452095782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461810572 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113638279 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468421665 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906575065 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.451095892 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45216737 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.446248362 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442475502 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.455979208 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323386449 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445558418 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.458371297 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587587079 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.456552539 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.377084714 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.958850136 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.447197068 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.442370919 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.219530104 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476646043 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.900117521 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951720704 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700758086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441599723 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460869453 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.050014066 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.483180284 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.442203987 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457706275 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445231907 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.465774725 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455998504 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.454719816 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.003232417 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.809587466 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008373177 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233864221 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098618324 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505709879 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.453958409 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.329084296 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924853694 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377494915 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.100671945 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656388239 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941941537 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38818207 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677375009 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.814794637 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317282865 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45617632 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671542318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442760012 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.449518411 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457711656 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656545407 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479434328 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.454156846 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379433212 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.725662062 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736284879 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454016334 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523638405 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923839766 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452057187 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.223239531 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.463193088 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.872025647 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658634335 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.990399653 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.832402641 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.453368753 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453536414 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95016601 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.449152436 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973190055 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154862945 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471260323 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.683979484 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381539532 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.455527045 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.457441647 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.442246226 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.019647674 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.466773086 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.708255902 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458377807 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380964204 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447620982 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078309053 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.325200402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.453273336 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447794171 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265663345 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451691612 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784910333 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.458816721 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.498974731 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476572116 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.38295778 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381803289 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.140569935 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457483292 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423550124 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022110166 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.46759509 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483010972 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469555135 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302523913 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704583942 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.462716403 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127557721 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700618787 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46704232 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477757729 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.548170977 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449458714 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.430894811 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.345746753 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685129179 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510608828 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.694803539 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.474369427 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.348989043 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496321858 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661195682 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.341936995 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.460214144 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731042251 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.181034727 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.47435912 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220803665 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496782561 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455580806 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.462055647 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.455122893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47068727 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542104561 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460652902 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.461029191 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.461373375 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644651117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45703655 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453360172 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.463828104 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544648757 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.338071547 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.452873842 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.22469994 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139160211 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271388009 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149064505 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489565798 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450983135 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452681274 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386379223 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603688427 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977802525 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726081214 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581845537 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.474662645 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482137943 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464542538 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45525149 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689438702 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728008659 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.423502078 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466622959 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243713437 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.334001023 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464082721 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.663152682 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034117132 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078545261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571073936 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.452875767 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933381316 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726714536 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.543871789 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453624831 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043259241 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.462721338 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.885525178 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.481122855 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465233989 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602515025 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464319066 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158103078 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.48454556 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.613870326 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.22774666 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.955727087 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709591693 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.05408879 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.469308905 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143467988 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299891012 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723577819 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525204064 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465308568 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.558820736 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605686993 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.466340094 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.343063786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45564417 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298678813 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.170569185 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.465742729 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132170276 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744090234 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.453197574 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.468660893 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485287709 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.466238525 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.679642606 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238942639 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.67904131 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466547027 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464884055 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.447579466 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134425465 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493948305 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389690248 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.460965338 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734741035 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.713039455 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479893977 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.909108881 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.168967958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071825615 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.428706575 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478829508 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456349755 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297842797 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145584022 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.492243959 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047722018 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.115957346 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457974113 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756366298 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.462122449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.458470134 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736835695 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.461577325 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458010236 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495064723 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.145714046 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35565076 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.473600404 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.991972258 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.395308843 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.685425665 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.517401177 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394536625 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458635003 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.659717971 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459064901 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589478446 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47080506 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.473452405 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467402378 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.218864201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742454986 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.465812122 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.446301479 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.451053494 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463181146 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559306438 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751299794 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464520682 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.135507145 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.809116747 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.716810045 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.459779434 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.445342921 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.463603443 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460278043 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179080775 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.469288336 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477392321 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090080384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.461451324 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.478263502 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463455345 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.676451081 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671959533 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.474831585 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473133531 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46161784 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479438466 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.366500045 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227996161 seconds)
  done (took 1710.374858034 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473890013 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.479635037 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.500193505 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.470991146 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.520300363 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.58544347 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.487165006 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.509251231 seconds)
  done (took 53.396316181 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.477607757 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.623817212 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.494746055 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.475892753 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.474657856 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.463780186 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.970658382 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.481094385 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.470698944 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.470734472 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.474497128 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.462231353 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.195362716 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.470109118 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.469176386 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.45862754 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.470514547 seconds)
  done (took 67.781684457 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.462737498 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.021449266 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.490066233 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.463009214 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.26978323 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.487364158 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.057765536 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.516298224 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.490707532 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.511516271 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.112685399 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.516715841 seconds)
  done (took 82.771711576 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.480228076 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.479485508 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.479785122 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.479068868 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.479602556 seconds)
  done (took 8.769150061 seconds)
done (took 2151.818188528 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.468353551 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.272118412 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.180712733 seconds)
  done (took 5.82390314 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.611905909 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.65901959 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.778888259 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.784875418 seconds)
  done (took 8.208088917 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.745551089 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.854594121 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.653229575 seconds)
  done (took 6.626087476 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.785634784 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.470884342 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.485775071 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.46494366 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.467750979 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.468045271 seconds)
  done (took 20.775038637 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.469081442 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.471470986 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.467764763 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.471868714 seconds)
  done (took 7.253086314 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.444742044 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.157570943 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.44522618 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.458836979 seconds)
  done (took 18.878326537 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.215378825 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.228584584 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.212033187 seconds)
  done (took 8.030294884 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.498220013 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.492516482 seconds)
  done (took 4.363811549 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.769354797 seconds)
  done (took 3.143893644 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.483866691 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.522310651 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.703159469 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.599512822 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.181024871 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.484394886 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.397539294 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.904321433 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.571221583 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.077348999 seconds)
  done (took 34.299249206 seconds)
done (took 134.984989553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.701047347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.713915994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.668263444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.672978841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.702347321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.669878049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.684616912 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.633979951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.175468803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.168755619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.672760277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.705225856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.635077397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.700809727 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.634290121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.709493495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.701649535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.732573879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352686054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.466558943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.703448279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.301743095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.498213557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.460470694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.705569236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.621521145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.908858762 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.710327302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.46984035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.13397552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.626206587 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.479209082 seconds)
  done (took 205.098575066 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.46789775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.488638956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.467906144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.497013988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.468247283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.491785184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.485715806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.468516888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.481275357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.472618018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.468436468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.486306173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.471340687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.469220126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.489370772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.469246879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.487597748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.468610328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.468032298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.470347857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.488734502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.468578819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.488822556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.469548337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.474041201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.47079488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.49599226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.468810091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.475812909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.481116984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.470347817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.490965435 seconds)
  done (took 208.659076645 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.469163747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.488026882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.488475179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.469358733 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.46857528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.471240675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.490704549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.502174613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.472350896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.470366284 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.481269995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.470987031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.470304666 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.491143871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.472074138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.47047672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.471024492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.471974023 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.472858027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.487040293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.471128671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.50490092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.487954975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.470788768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.470491116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.470737933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.500805345 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.471403486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.471147187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.470712391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.4915654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.471661564 seconds)
  done (took 208.682765335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.66887127 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.479270364 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.478566166 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.412328142 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.4803713 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.478439839 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.473499721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.675962266 seconds)
  done (took 15.52770868 seconds)
done (took 639.344553849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.045226664 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.733013624 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.691420292 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.499909019 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.407304362 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.524547904 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.500494678 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.686219091 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.480453831 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.701091445 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.899999162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.522133913 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.044211915 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.502390809 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.771851306 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.606195526 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.404968045 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.526894406 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.844686405 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.164886872 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.783067998 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.097028626 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.713643377 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.48517082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.080656228 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.099081437 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.35636124 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.394047432 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.525847521 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.850942053 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.421297089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.641336431 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.571592895 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.570727322 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.629562803 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.608930109 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.594051318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.573129594 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.710352847 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.795830118 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.176432492 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.276127858 seconds)
  done (took 100.896118747 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.464906301 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.46583149 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.46447045 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.466174402 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.467222035 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.466289108 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.465037567 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.465534003 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.464790333 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.464710483 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.465697171 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.466783923 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.465209952 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.466562568 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.465014072 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.465809613 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.466547455 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.468738684 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.464996814 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.465912355 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.467914676 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.465072205 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.467250998 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.4661934 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.465838452 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.466826882 seconds)
  done (took 39.500423544 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.485016565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.745059768 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.926388762 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.490876327 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.483422724 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.48801282 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.571995396 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.486618426 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.486927548 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.488278515 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.64717706 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.488335662 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.519692045 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.964773804 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.491261807 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.486161111 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.486315962 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.483932495 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.757313401 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.493239214 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.593647405 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.487161931 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.573233848 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.494282628 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.507970875 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.486422783 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.489886333 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.065043991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.508354228 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.649646612 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.410929316 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.574738635 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.040457636 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.969355536 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.419604659 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.491882809 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.487389531 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.653992769 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.488074258 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.485429269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.573795329 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.487795623 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.941017064 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.177313512 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.50888343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.487288005 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.088510342 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.673931214 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.765946856 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.496981463 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965100379 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.489803549 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.489217218 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.488480633 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.765804159 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.494573784 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.486005849 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.120604897 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.515459027 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.574933382 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.488938951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.48832296 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.762686638 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.489674643 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.751453862 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.49129495 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.496296369 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.509849361 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.948975488 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.494747617 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.201006583 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.510912497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.490368601 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.652333866 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.754424881 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.124383054 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.513402552 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.768618804 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.056492544 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.596657529 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.493747352 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.057423117 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.600579463 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.493834911 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.493922015 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.491947885 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.490646653 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.544813032 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.574826374 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.138663155 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.216744246 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.150819181 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.601322907 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.504295506 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.491198407 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.122673911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.514782351 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.493077735 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.938931143 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.20544784 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.512785462 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.496735523 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.207319157 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.51465577 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.580369399 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.497388135 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.949419414 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.493585375 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.543165006 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.493187021 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.500219053 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.516970939 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.579594603 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.496443393 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.49321514 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.171507185 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.68297827 seconds)
  done (took 196.269176222 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.499207961 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.484715905 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.491546532 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.484826009 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.486341004 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.501499389 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.486515874 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.485341499 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.491819226 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.486567482 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.485378463 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.485291373 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.488700888 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.51599605 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.497879979 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.493308593 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.097100701 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.486773591 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.488696479 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.487159084 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.320669168 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.49222365 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.488965558 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.489427566 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.487629283 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.487077569 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.491100145 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.489248642 seconds)
  done (took 156.565586762 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.49476969 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.129202991 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.51707328 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.642949432 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.519887218 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.492166622 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.640279826 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.559086676 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.515443356 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.49431719 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.493461559 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.833774888 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.496767641 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.084585977 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.717501238 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.668403658 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.107950216 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.51957253 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.494129567 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.494192995 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.645909291 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.502064255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.855446073 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.172652075 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.522462514 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.171561364 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.484430894 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.496712215 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.494336659 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.17443326 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.519459087 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.85773337 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.587189888 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.564017595 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.194381886 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.102958042 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.099291261 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.664799546 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.495961372 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.495116038 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.495362146 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.4807149 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.175146067 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.523240431 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.497845597 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.162346566 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.523740058 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.499391178 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.503376385 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.496978196 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.563494801 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.584985363 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.875915877 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.183907035 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.608701577 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.50976045 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.644437777 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.88230168 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.502983561 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.082155348 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.481186726 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.183348058 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.525315591 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.481347797 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.498086083 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.502233411 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.667371339 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.645644782 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.07959138 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.519006897 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.081185548 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.689664405 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.498103304 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.498085645 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.501886409 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.180295873 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.104203938 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.688024432 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.650737179 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.72237682 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.486763483 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.498042216 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.483082877 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.585377751 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.49885407 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.183795156 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.107136142 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.521154013 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.500897034 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.501342661 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.500885905 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.701811056 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.202654342 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.610418993 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.071751982 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.885500428 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.868386754 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.505386233 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.566449747 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.520061284 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.868075788 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.507457893 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.566407808 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.949374836 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.870781323 seconds)
  done (took 179.971640607 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.770432963 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.795852139 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.597270415 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.660475344 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.166251462 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.09039063 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.861263832 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.655895694 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.621226091 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.778955384 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.816668369 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.594054241 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.73183737 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.595954677 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.311498863 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.599955679 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.622127923 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.656204669 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.674181875 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.582286479 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.226057291 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.80915415 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.712775662 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.5452401 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.602686794 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.336191518 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.107653255 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.049082889 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.692600765 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.989389431 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.076905821 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.681470716 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.585818801 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.311966576 seconds)
  done (took 72.313173311 seconds)
done (took 746.897856243 seconds)
SAVING RESULT...
DONE!
