cset: moving following pidspec: 29721
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.370388849 seconds)
loading group "string"... done (took 0.564082629 seconds)
loading group "linalg"... done (took 7.719780344 seconds)
loading group "parallel"... done (took 0.172959117 seconds)
loading group "find"... done (took 1.296003912 seconds)
loading group "tuple"... done (took 1.974581479 seconds)
loading group "dates"... done (took 1.427914018 seconds)
loading group "micro"... done (took 0.247002951 seconds)
loading group "io"... done (took 0.979697451 seconds)
loading group "scalar"... done (took 42.032650894 seconds)
loading group "sparse"... done (took 13.546398771 seconds)
loading group "broadcast"... done (took 1.040316027 seconds)
loading group "union"... done (took 14.384390046 seconds)
loading group "simd"... done (took 4.763124484 seconds)
loading group "random"... done (took 9.667144098 seconds)
loading group "problem"... done (took 1.991340952 seconds)
loading group "array"... done (took 22.633081462 seconds)
loading group "misc"... done (took 2.040112394 seconds)
loading group "sort"... done (took 3.446164643 seconds)
loading group "collection"... done (took 19.535646484 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577321254 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142581802 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149883283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130209752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204274019 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156160235 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157607727 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098582764 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.979874205 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17501714 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152634593 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521711677 seconds)
done (took 5.176428305 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218589758 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094843582 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104513832 seconds)
  done (took 0.87362518 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078106793 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14448598 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094402532 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078186731 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095572648 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078075937 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095759558 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07925768 seconds)
  done (took 1.349376382 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087191339 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098033173 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082773632 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097895238 seconds)
  done (took 1.050624339 seconds)
done (took 4.260896258 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730743749 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271740686 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204358843 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461462282 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197345283 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217340173 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683160434 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356150501 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254319085 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098446208 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14171846 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384309013 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136525401 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.699606266 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091062934 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125327799 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178158523 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464082628 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082302006 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109655815 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116478419 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143923617 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130738278 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093398225 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185729011 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082375223 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191719015 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107458351 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081334085 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274606025 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201472803 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68837619 seconds)
  done (took 10.90455901 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110260053 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134281994 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097162235 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137873925 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133124558 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099289309 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084667671 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095793196 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122084181 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176431385 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130190357 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121656104 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094891951 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082164922 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115552538 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244836169 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119161296 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099002863 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09986093 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088090799 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137980535 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112266126 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108383898 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093255546 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165673668 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220560707 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113544657 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125882027 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095534672 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112067462 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142718354 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142418646 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094197882 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080205494 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172191707 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124218208 seconds)
  done (took 5.124924148 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083567756 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19030566 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120902276 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16965112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080171026 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143073377 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094460238 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11312176 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256702265 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.118204521 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486591431 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142282526 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099319802 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099016373 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082278229 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097349879 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.600917595 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123032599 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153068337 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116371224 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103647831 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086968679 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368078983 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095981297 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084548671 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097624379 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065814275 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162448796 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09783604 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.131881379 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101126229 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101159264 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133620904 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1929997 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123228692 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133336274 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078139277 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.138276548 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097611147 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174998598 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077151855 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106025369 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095871465 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10292625 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134782087 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133485531 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096013706 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080378158 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201635957 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09674831 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112503034 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.927648172 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181478197 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078445694 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104857743 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080863923 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.31025369 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114147781 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079459403 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09671316 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266653279 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.203725541 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092619816 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081344991 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096199755 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078791278 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098843096 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378305159 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079662755 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.800300098 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083852723 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107766431 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08343457 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098138654 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105448364 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086870156 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114502266 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078584701 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098745116 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077925701 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09661069 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079949889 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107731104 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214064867 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098649029 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079746385 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095863127 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115616144 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111721075 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100170968 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09640213 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116383779 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099094464 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096374279 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116441878 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099695471 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10733779 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083263454 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143037353 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096911304 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144143729 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095793015 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125221074 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099985742 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114286409 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110483016 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098288896 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168349397 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078249018 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097007855 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082147295 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098813142 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082885792 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102857007 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111245563 seconds)
  done (took 22.797752927 seconds)
done (took 40.591771992 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.331422963 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103634669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104101528 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10213521 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099957781 seconds)
  done (took 1.496724176 seconds)
done (took 2.224889378 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286108486 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173468241 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096441729 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165825844 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092731259 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.16299162 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158863646 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094080687 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217079333 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094097435 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160341849 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076625437 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095160988 seconds)
  done (took 2.630739368 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093888419 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114154025 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08279041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10986772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077173117 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110816315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092939615 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115634016 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108475441 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084759781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092554291 seconds)
  done (took 1.811926683 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093778214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112762828 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082662029 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109443015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076691137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109826091 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092041072 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116221187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109446324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0861698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093574091 seconds)
  done (took 1.807583456 seconds)
done (took 6.969497004 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091397621 seconds)
  done (took 0.812913127 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.9332837 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.475844377 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11285015 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148843589 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315517054 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.173032954 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.452608693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126403903 seconds)
  done (took 10.668776948 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.116777364 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.117726165 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104766896 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086415402 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105736435 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087190394 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103165179 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099453853 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083297243 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102620173 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083828758 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099467405 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102157076 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08677016 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100986827 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084611583 seconds)
  done (took 2.358954334 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120923568 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120592267 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106993224 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108709005 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087459338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104223216 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10638001 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089632561 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102185742 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103957268 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091038265 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105840452 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103721749 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080802698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105933417 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107641064 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085775619 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106342853 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107396567 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090215052 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107428634 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094856651 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087094423 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107152242 seconds)
  done (took 3.272903087 seconds)
done (took 17.839549447 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159613026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108530821 seconds)
  done (took 1.001508995 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095541938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112489574 seconds)
  done (took 0.946929169 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098192329 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09554408 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121606106 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108899101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080529305 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096664315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120281113 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080262776 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096666997 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080566356 seconds)
  done (took 1.722067661 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083245957 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11093206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103316887 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097184141 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106448767 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095087412 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09117494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101282373 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111905157 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079432663 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103963829 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114140053 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087132726 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115685988 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105259417 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084000753 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102203203 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098447913 seconds)
  done (took 2.53281353 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07987812 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097558646 seconds)
  done (took 0.92002239 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082011099 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094257197 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0826994 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098608615 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094337541 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077165426 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094190429 seconds)
  done (took 1.365405714 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483862575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135812622 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26325562 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103128727 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104553164 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301102585 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097918384 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084661028 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103753667 seconds)
  done (took 2.478350923 seconds)
done (took 11.705565725 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092911339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114800979 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11271594 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462721746 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106717967 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097683311 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148391782 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246505891 seconds)
done (took 2.131324461 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144640854 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.601372168 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428687081 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.234946751 seconds)
  done (took 2.014140119 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403504687 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099871234 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085350656 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083195847 seconds)
  done (took 1.42450013 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080122 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10064293 seconds)
  done (took 0.933757682 seconds)
done (took 5.269513557 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080879423 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129924553 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08140389 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098430567 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080872501 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097718558 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079156007 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100742807 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081728326 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09846625 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098987121 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082482835 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097911526 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08275531 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096561694 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080194988 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098869882 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080221094 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096093355 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080905627 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096175045 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082429989 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096503633 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080120858 seconds)
  done (took 2.965661277 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100301539 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097431725 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10347728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086226297 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102421716 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088412515 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105445612 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099554921 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089706338 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103027352 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103909306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086826751 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102400123 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086783369 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101874446 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103569387 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088475012 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099682722 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084325078 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104903593 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104774664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084092122 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103702988 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104625584 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087315241 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10361829 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085016623 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101359581 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104811733 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087943627 seconds)
  done (took 3.662784345 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085335328 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094251377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079505486 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102749641 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080265806 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099160622 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080490127 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097582284 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081011545 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096799656 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08158294 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097435076 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080249425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099610578 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080700396 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101951322 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113928905 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078605091 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094659336 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07951324 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098785177 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079068102 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096799159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080662944 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096096444 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078719808 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09627012 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0798026 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097424753 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080035935 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100158153 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083539183 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0980125 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086348975 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10048888 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078875007 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100117558 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079471101 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09787282 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096103252 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080121733 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096182006 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080970295 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103596483 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081232747 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099480343 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080807414 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09887578 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081162229 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101237419 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080518261 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097521511 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081601899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099573412 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084067409 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097616434 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097473088 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080172605 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097745667 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078992111 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096002812 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078910444 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097679905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080455939 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111151518 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08599833 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095225229 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08085047 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097566269 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081549269 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098116934 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109788361 seconds)
  done (took 7.282043529 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103748217 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126108297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.097929054 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097890383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078799844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097877188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084780846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098350312 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082810948 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10424747 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097459446 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082415381 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099669452 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096475739 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098700628 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082600282 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105489723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095675168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080886679 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101689776 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082180463 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101968401 seconds)
  done (took 2.860568299 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209108328 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105195873 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141898348 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107099082 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083352191 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108048927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104141691 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089792972 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104702275 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086119888 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.214615246 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103741004 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085748909 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103039054 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101896387 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088274807 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104895367 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087732876 seconds)
  done (took 2.792397926 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093055669 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100836013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101045286 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101501287 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100762355 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086921164 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106870833 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111099343 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087169076 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10095487 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093644313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104550535 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103242371 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0839807 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103319663 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08462161 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10439826 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08404903 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111103924 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107436273 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0893955 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111317925 seconds)
  done (took 2.938898463 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096929344 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101791996 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121150622 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087201612 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098017332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082686455 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10791176 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083619803 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110297998 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102487342 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084265656 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099534023 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090480492 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101967263 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106943837 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083999756 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102434848 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083851714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103101237 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080004289 seconds)
  done (took 2.696004394 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102478608 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102446931 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102494483 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094498745 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102616315 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084511722 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113315856 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103206535 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08562869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128141573 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102621571 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084808787 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113713486 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108441496 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102213491 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094965603 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112776202 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111203523 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084921406 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101693821 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127221764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084289857 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111530051 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102581778 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084441112 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103401555 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102149677 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091699919 seconds)
  done (took 3.615933298 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081707589 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099147132 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083892848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099587774 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081458286 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098681206 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081982572 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098359647 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083648634 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098013563 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08379668 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100865448 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083791908 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101191403 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084390178 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10048536 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084170456 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09900541 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081145727 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098557272 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083163828 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100692245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084237595 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098795704 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081324547 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101135052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080732972 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100643854 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082685694 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099630276 seconds)
  done (took 3.510509957 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091580179 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106119564 seconds)
  done (took 0.968990612 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079679407 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115148778 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079916079 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103820366 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088338879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102166976 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108069245 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088860572 seconds)
  done (took 1.538302697 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097522035 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112511674 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084684229 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115085517 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109371802 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100445327 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174478474 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102044526 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106053608 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080251801 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113487239 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081919978 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105702161 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082121472 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105536331 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089360795 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100860125 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10827541 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088103313 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.104102565 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085846505 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111310716 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08616004 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100580771 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104052197 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094903741 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114734752 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084941615 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105237933 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107707197 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089948138 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096103745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084173356 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102856863 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081986362 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112143064 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117535787 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086383252 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110268785 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101260384 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095022876 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096329058 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089331285 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108811857 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112622319 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085853601 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103449532 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079708179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099719417 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086941064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098064623 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085184011 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097759238 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091213249 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106947492 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112171417 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083496201 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104339934 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087057236 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106736383 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091335092 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105802711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104480171 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085448477 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110009239 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089290262 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114043625 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095930539 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078583759 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100610299 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095582566 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127182922 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108603983 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086091082 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103100346 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082973774 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105326244 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086225345 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109363441 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109076537 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085248359 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110250102 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092476232 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103227299 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104701806 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093086154 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10151308 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087122482 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101133256 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120933466 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083879467 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099867798 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082546219 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113393026 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087449062 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103398855 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081112888 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11144292 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096031582 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086522372 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104278122 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085350646 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115013628 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107095023 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088921854 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109307343 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106537589 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083461274 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102910027 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079463895 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101303097 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08542869 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109861523 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078640123 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106879126 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08542935 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104896944 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112389497 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083238836 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103168336 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093136346 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109133891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100877335 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082379983 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105618976 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085272645 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106754086 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093965341 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102278373 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079166667 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098890778 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105648044 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084624806 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10716749 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090804294 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107215063 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078988032 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101935762 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106731234 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095596795 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102846616 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084659701 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110141219 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103372068 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085181747 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109468374 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087557473 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10240553 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090420416 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104914058 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078740035 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106721084 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105764113 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083880693 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107039555 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089371969 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106436261 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104536472 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083772508 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108939106 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086002462 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102443674 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083794206 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102684721 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113649396 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08791551 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097753194 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082227931 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110867487 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082432582 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103427976 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082976778 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105890542 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102714061 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082915656 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102876994 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087197099 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115524979 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108270303 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087160913 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109101192 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096955427 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104288467 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087029561 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104474982 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10469617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08707751 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113406674 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090736938 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109013848 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103401486 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080758839 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108285523 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093066703 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102303107 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082437998 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10329633 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106659975 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092523457 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10736955 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08630965 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102402643 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084952933 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106861641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103769509 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082613421 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099884032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088015282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100937128 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107220224 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083782399 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111109119 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085526576 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095950985 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085542306 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099576567 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10545737 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078426429 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097465522 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081951854 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103370798 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084292371 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106419709 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078959917 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11151285 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111657576 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085402729 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10194709 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085616887 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110540878 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0868367 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108342173 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088165147 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110376584 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113690842 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084495459 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10759511 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096711831 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105843469 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097357835 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091719878 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102328892 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085586082 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103154962 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083427331 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107960535 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114237774 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093587309 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098544812 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089314122 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103454041 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084366233 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100195844 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090127484 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108153465 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104459276 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093089577 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105619744 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088928193 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109094757 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084715633 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106313616 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104790911 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0899477 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1052063 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088568301 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104393214 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08836875 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103882107 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083705163 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107794742 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104158631 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086367787 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110623376 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086328963 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105428683 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088306717 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107123672 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104408602 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086814913 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103417869 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089511991 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104102061 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085587507 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105626626 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078552984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10958423 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081637898 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110192165 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100738257 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08046905 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106778771 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085373583 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107339914 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102628243 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084935581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103945572 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083809006 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107569004 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092497768 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103501519 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115764325 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095877665 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105990718 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08885407 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106071634 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086959657 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104737933 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104941494 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088185518 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104678857 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086770558 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109574463 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088927852 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106332139 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087705124 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107119132 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10440833 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087893767 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099053322 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086800614 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104727463 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086633485 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116202116 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102920649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088412482 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103352638 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087603929 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104216519 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08267791 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114190078 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114144777 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087142867 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113153603 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084694284 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107826598 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115002045 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078844342 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09896056 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081799905 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099060198 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09181697 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10336867 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10056208 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102209426 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101223974 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080930851 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103203538 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082624707 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095716092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081349845 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106324205 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085687267 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100586271 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083174803 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105281886 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101918702 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094116006 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101692898 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083748618 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10263332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07945255 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10100934 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100400934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087033947 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102575522 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082074257 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099005045 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083561271 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103077778 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084293186 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101962096 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084839369 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110400922 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101546826 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086791085 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10637813 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079406552 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109140967 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085480897 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105645851 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101694926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089019445 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106532776 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085729732 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112578433 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084412328 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104438351 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1031625 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084246374 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104423814 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086505314 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106133659 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086230906 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107020431 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113016445 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085254023 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108812672 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086640023 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105988711 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094144528 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106453786 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086978581 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111973698 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105546365 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08582133 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111749775 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086416695 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106754839 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101921177 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085175468 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108267379 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083066517 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109873165 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083195808 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104081663 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103046737 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082044367 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102727803 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085110596 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103437589 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093135949 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108199583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085994244 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105332732 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10313885 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08769917 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109961212 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094794224 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109050935 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08936157 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101553869 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083954444 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108712772 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103012743 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089019932 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109779754 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093653294 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109792839 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08644912 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10664568 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115635851 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093033758 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110084429 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084404832 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11017474 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08766985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10842638 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104043123 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085088601 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104439353 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089983902 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108126294 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086051801 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114221901 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089626439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107355983 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10772835 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087880446 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106238188 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082655215 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107248128 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088971964 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112294156 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107945449 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087906738 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117349979 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087097273 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106483322 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089826421 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10620039 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11045814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083344463 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107086143 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088327883 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107424809 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081701219 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107017177 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08383821 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109828221 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086318547 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.10278036 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116966297 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097181002 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110150942 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084998288 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105941707 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080992696 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103209981 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105956791 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088783283 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108165734 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09835092 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105730494 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085800479 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103010999 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086755681 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109576121 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108295657 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083142845 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101192672 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086095953 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110586359 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092341643 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106823336 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086758297 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111968868 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108139303 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084864319 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108552192 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083462389 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108888462 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116382203 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08647939 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103761266 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090846612 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113238863 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084529189 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098937336 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103519163 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088550012 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102830711 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086268275 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10413708 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118461277 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087912674 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101470801 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084137823 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105379784 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083555824 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112250149 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103547286 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085627514 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107848346 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087157551 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112674788 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086535718 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112250332 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105527328 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087533739 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102972111 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083791679 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102000057 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082285504 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104824741 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103165984 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089211639 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111986054 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082496913 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116422793 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114399682 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089326697 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10115099 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084253205 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104796166 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081074951 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110888622 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083289099 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103921471 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104278208 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086283709 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105799222 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091547802 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107598747 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088001347 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107434741 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081338592 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109842696 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109507954 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089670537 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104313195 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088585498 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108009511 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092217823 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111817759 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087346815 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109551251 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10799827 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08957154 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102173208 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095188179 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106550277 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089994371 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106548176 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088393624 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110339136 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089901792 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114562719 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108829201 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090388587 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120348162 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109832069 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085992115 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104341591 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093797782 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105215083 seconds)
  done (took 59.24505442 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147370799 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082215067 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098998749 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079440444 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115438006 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100289513 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082276008 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103260644 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08473657 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10610888 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082623937 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103414059 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112537065 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129142137 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097413163 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108621092 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082515263 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106468442 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102379899 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0862899 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113032972 seconds)
  done (took 2.949512523 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104783431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120867568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115529725 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118785402 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09012025 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115557958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114464218 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115559382 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099314175 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111939713 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119234901 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115035948 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091848284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112454485 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110570175 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092946706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119542271 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109799174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114984127 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095440757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113530542 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115336497 seconds)
  done (took 3.241880909 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085715832 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102235132 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086358257 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098083563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083551815 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098225806 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088971891 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101496046 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087259148 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103170036 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082067912 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10355477 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103663161 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080648268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101779866 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082216112 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151138798 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107734602 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082818529 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105526799 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078168008 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107013188 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098131928 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081123756 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102023038 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088885862 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104438581 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082052725 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103910913 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082364037 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103966042 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080847986 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106955229 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103259954 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083996882 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101398072 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084449757 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102780888 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079958281 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101098369 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085414716 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099676251 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084433974 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105103735 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081492514 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102125311 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084512068 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104812067 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097492083 seconds)
  done (took 5.483309784 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104961468 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165079593 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0870804 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144227848 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121228814 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.1129111 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089527354 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142854912 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103689763 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082392324 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122265462 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120307294 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102950962 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089077527 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110905165 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104251739 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086030837 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102979869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107756018 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085573706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10881173 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09057106 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120384148 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119069549 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107634751 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083462644 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103655644 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109106828 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098357164 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110686338 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109891805 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089936032 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121246083 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106542284 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08293546 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107504267 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123449426 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084405743 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108028743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10094858 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087226589 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109475652 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110740311 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103109451 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105328388 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10855888 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084997279 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102002103 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117387022 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087920685 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11408778 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120564854 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087983925 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105564948 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109363632 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120656543 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085990887 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103236001 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088538585 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117604231 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102592558 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08835342 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120611204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108498542 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09546498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124562381 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117504705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11189959 seconds)
  done (took 8.180118911 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094575288 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111742653 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120787909 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120381603 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09206073 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111405284 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110548787 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091131711 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111236881 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116331635 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110569979 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133402539 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086678245 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114934744 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1107612 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092301135 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111976145 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112004899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093965957 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116418369 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116658662 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124731894 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095070039 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124796223 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144646992 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106221101 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089861672 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112960181 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11987826 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110238124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122988372 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090857373 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112385649 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120533155 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122882898 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091932905 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104317469 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11058066 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093405157 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115674186 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110089924 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103671253 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116489095 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110924753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095021852 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1166379 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126066538 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130287818 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118643119 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100985493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116322632 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12650419 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115955453 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095417141 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125887304 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.15247449 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125615423 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12566112 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11444465 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102714457 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121957831 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130873822 seconds)
  done (took 7.810634183 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107778697 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116518849 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118424152 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100489488 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084079786 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1098891 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082984332 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10488737 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114640212 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095386902 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117434095 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110199386 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091760559 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117465209 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109903763 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111644026 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089523986 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11016684 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114583034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087107166 seconds)
  done (took 2.9320737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095128559 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12541447 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084384528 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112996564 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108773073 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09098545 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107078079 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107055349 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086304695 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10773519 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097178303 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116886635 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106263757 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090984926 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117444637 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111678897 seconds)
  done (took 2.507894784 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09915239 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117798344 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121298596 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084463293 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105406278 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080594204 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107062511 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099732712 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081509222 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120882374 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084366986 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109825486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104254623 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083765566 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101675183 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087948513 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101815489 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082382391 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106137107 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118935756 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095971998 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104158692 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105569878 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087307472 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105063414 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090314513 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106257573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102119138 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084067333 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105045399 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084927389 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113977273 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100959581 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085202257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102952181 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084692657 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108097528 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086552644 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109783588 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104306796 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084231127 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104599905 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085353281 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106171331 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081169233 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107685012 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101037509 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09192991 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104067732 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088054587 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110430221 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089896598 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111030061 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119611272 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093022218 seconds)
  done (took 6.285925785 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10079578 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111224416 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081100033 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104709701 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089939309 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110413926 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108190109 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088965281 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106700619 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08297276 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107176772 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08824862 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107921201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107915593 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087405999 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108256902 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081058132 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107021867 seconds)
  done (took 2.631926535 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091996939 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104435943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093738736 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106553993 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084392943 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108680697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079414427 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106736691 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10393362 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08848662 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107961102 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090753973 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106985272 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089023186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106235578 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084437691 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108994538 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103081017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086215522 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100655457 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088432706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104003697 seconds)
  done (took 2.993720062 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118277555 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125839415 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092370008 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231535832 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103905108 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132715414 seconds)
  done (took 1.653545363 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109496046 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121167191 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105686384 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108262854 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115034519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08623099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109156391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108294812 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116767612 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101705403 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10806102 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118619338 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118260673 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096887591 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116875066 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117443482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108559428 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089742175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108422026 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128954945 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088243499 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11915439 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108949018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090679773 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114195977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122075366 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122094317 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127317095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093194506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12334606 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119042796 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092369154 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122763949 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127908873 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113616978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10271067 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1144889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132892429 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119166254 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100463828 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114155135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11655428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09784852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116202707 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117613303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107658376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094225921 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108188062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107071538 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13571969 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094940877 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117686446 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115897455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118978854 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098023151 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154990077 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101747981 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117238094 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11618052 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124791344 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120967983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098199638 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121626338 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126789969 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117574966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101132261 seconds)
  done (took 8.262996769 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102812849 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127287397 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107234978 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122118832 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096895378 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108294974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106747503 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087970949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108475724 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106110698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151963423 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089029041 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118182555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11775503 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08718638 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109413799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108053174 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117301985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088094578 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135161856 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108738054 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116517905 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117637028 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097061824 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122203693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114908374 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106543918 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089012049 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107800941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107054717 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093746334 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108642841 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117710517 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086739386 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119009042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10850967 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087225014 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113802505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108515278 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11371176 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096689371 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128749741 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108401065 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107977292 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102153505 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109087163 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107492551 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08714021 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109290292 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10670695 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102049704 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123247617 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122820894 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117605744 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107212985 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087680674 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109943777 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107550803 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088200247 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11502784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117370322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087321934 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13480849 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110026753 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108404065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117156945 seconds)
  done (took 8.022130554 seconds)
done (took 157.78220819 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.226006465 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.216816783 seconds)
  done (took 1.296569747 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088059666 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136340225 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096726236 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171317666 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084167713 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141259289 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139120334 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09863758 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1067324 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085505338 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107326648 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086837531 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174348884 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085071488 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107882568 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107273119 seconds)
  done (took 2.679716229 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118578925 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254797339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125381755 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10497394 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090035002 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111092632 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083650497 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111973478 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090001559 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106767671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087076719 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107778887 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083228059 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.1074611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109611301 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089567069 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103794311 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088931496 seconds)
  done (took 2.834688359 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113508517 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147900801 seconds)
  done (took 1.126153381 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241210286 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163467958 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230966632 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.475839181 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.276858269 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365869862 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.203577806 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212959719 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165845275 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208534844 seconds)
  done (took 3.403843397 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118650792 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180630485 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315464298 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154384105 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106107959 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130162297 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15705862 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130547394 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122051495 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100782451 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123155217 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117482802 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138061113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095244311 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116304858 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117000971 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120037964 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11444367 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114749598 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096696354 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137642147 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084087452 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117109099 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114751758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097250512 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12000602 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105708383 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085786891 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118309952 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092556513 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113978587 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12574949 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117664762 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155359776 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122108636 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156426217 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117556386 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09152896 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115738457 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090510276 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120528297 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120414543 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124013193 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098283191 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106101358 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09842175 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107967605 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084121246 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115760237 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118746392 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093427141 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114173336 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15345095 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119393564 seconds)
  done (took 7.387754617 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784018001 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155544685 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090306713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875042598 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135019848 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103306868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768788817 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111847425 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25457269 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751292218 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132751715 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118426022 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202509912 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256226885 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.919414818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286422804 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637032165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126469858 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152577134 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153487231 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11716024 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114249982 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131366504 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429017267 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115914655 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089237948 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118307806 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11934176 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159969604 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124923992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091760973 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199369009 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245587955 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202149869 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093747212 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112394032 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088257593 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190759893 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26115356 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191166012 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179984822 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108968861 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088111713 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122711605 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131645721 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085863811 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183372343 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173697473 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168500926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115113052 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118155805 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097944021 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120999108 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162616223 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121349228 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306352186 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323916486 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088765912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121085269 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12554244 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233036362 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124531737 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224280869 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13929865 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186763421 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112154511 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776583371 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169167141 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110706235 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095450097 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120430255 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115059302 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099334797 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167625221 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406274321 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124111028 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115075315 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089918622 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224956766 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102288226 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11261463 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160195048 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117273374 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119934897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101863442 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122918455 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167308149 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249489408 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100772434 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119604072 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114447316 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102442434 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117040101 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210112793 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217803714 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161325713 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22832568 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099728532 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18489744 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167508004 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118502265 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171537126 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118364187 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102031327 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122264481 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215425213 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144476707 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121771436 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093952188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118901782 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147566238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126028576 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09668934 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190603736 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456921385 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166255956 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110216266 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126938865 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097485166 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182550962 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095440613 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260408812 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120509095 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167678133 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117815969 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086481045 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120843524 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163145532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122443091 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11941631 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101179679 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119991761 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235921945 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214546629 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120626061 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219056741 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183933957 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118725271 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169880057 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12244839 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165988746 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119832467 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097813194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117185886 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770392235 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122648692 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098349178 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117139046 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185808692 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088578707 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125034585 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12492495 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085693215 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810168797 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12695094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120805481 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102060235 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117784321 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119539212 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096772217 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116407461 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160261216 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228564542 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12029967 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095990732 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12503931 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159575015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116516328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124517271 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124015995 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103094096 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121895238 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113936927 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103046458 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189630779 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162838531 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218379896 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57306757 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112980517 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123840857 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201890821 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112762998 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287789024 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118913117 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199564604 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185245838 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098261105 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316920958 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162289576 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186232802 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126970303 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17009425 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110660762 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11789102 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165421434 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110293728 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095481445 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162066316 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125313258 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123526543 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950687114 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089261783 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246541893 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087335097 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169574019 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117232489 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119350707 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283221731 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090098103 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127405471 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163187627 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115322652 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12317227 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.849104718 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125517893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09831982 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117876897 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21866201 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162705348 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120385334 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11779493 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097495747 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184028183 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209924195 seconds)
  done (took 43.821490547 seconds)
done (took 63.408990578 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27978664 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218352101 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268165931 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171225989 seconds)
  done (took 1.901699891 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172510428 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149425293 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121587214 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107884743 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151555059 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083956412 seconds)
  done (took 1.67396521 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362198905 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277114621 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241691089 seconds)
  done (took 1.770886237 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.322465828 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252494994 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471190452 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323826088 seconds)
  done (took 2.357616483 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213743895 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135733567 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110238409 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102579667 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197370145 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245020247 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141663765 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200245821 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09791969 seconds)
  done (took 2.378770954 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196096015 seconds)
done (took 11.169381183 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.263644208 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.172604095 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.230235092 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.235410251 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.192986777 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.171751907 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098988998 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12030283 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.241271782 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.235355646 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.264027802 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.206886248 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.186305109 seconds)
    (14/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.12112485 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.261109303 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094818303 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.227940651 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19545834 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122717586 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124402352 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093189476 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180775155 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171836415 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098243904 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.215832357 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.115496664 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.190848499 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179853259 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 0.149530007 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119899045 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.185201078 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127532542 seconds)
    (33/309) benchmarking ("sort", Float64, false)...
    done (took 0.147514131 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138461026 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119321462 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09589722 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.181361679 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130983285 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.224169948 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.152244856 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072062759 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120280053 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114728239 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12444968 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195544646 seconds)
    (46/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198812297 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.17932603 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.116562331 seconds)
    (49/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.19976045 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.18997146 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131303456 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.150270493 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138490179 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.134257059 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.167788493 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096394822 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.142794245 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092483349 seconds)
    (59/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244583118 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115405545 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118012474 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11406301 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133646201 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148473725 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099044052 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115416691 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099619657 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.133354947 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109374842 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118805227 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216303458 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110506021 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136057184 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.168913883 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115547731 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09081941 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.16411199 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137237537 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149823757 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.111727163 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085395914 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115434335 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123851206 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100012961 seconds)
    (85/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088485294 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.146105125 seconds)
    (87/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.227080413 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121342375 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13657852 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089912756 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116210442 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101914645 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088040731 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127061126 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.138168735 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107657284 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110676285 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178757624 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.144871944 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191344625 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.199508666 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099143572 seconds)
    (103/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.146196186 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099146532 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.201386145 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20402407 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120661438 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219945802 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093447541 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125017909 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077707439 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071428384 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096323683 seconds)
    (114/309) benchmarking ("sort", Int8, false)...
    done (took 0.195235742 seconds)
    (115/309) benchmarking ("sort", Bool, false)...
    done (took 0.185736396 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.386365188 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095543028 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.176127393 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.0688276 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.167531165 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092067104 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109970532 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138651623 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091193221 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11168055 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.133662664 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159616916 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.147397559 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.165779135 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099467664 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120657845 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092142973 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136051895 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067527678 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.141838228 seconds)
    (136/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094926544 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.124663543 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079164545 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116704642 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094986701 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174551904 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.211987801 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111775248 seconds)
    (144/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075751556 seconds)
    (145/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185417258 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077683237 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066191204 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.088714329 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09425777 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182996677 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066966882 seconds)
    (152/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119630245 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093480632 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119434003 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17303526 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088879695 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115318325 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.131003303 seconds)
    (159/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.099256004 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088930977 seconds)
    (161/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.105276312 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097012812 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131209143 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145267443 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11679996 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11592205 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068955311 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093241365 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097214111 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072922756 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147649312 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072765489 seconds)
    (173/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.177626185 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092218656 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225489965 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.138805506 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087251066 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114676649 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.076511292 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.123069629 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100447664 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.14098492 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.193353605 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093140133 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.138821664 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.162965008 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135503368 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085189855 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114279481 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095861188 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111460043 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067882325 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124146469 seconds)
    (194/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077578573 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208293321 seconds)
    (196/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193223531 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071175342 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.191921534 seconds)
    (199/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095323844 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124877147 seconds)
    (201/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109221995 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07068571 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071666615 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.218357299 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120290343 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.150639668 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114119545 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06794905 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.136934124 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113275013 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069708814 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09029253 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116163475 seconds)
    (214/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072214701 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0958257 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093914739 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.114249924 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102998747 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.129106198 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.071831161 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071961154 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.097353047 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094091739 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12490827 seconds)
    (225/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.121410405 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.196240118 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096160046 seconds)
    (228/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.0832163 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071842022 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117161321 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091578753 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.122648685 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091217281 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097585341 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073613634 seconds)
    (236/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071562482 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.1407261 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.179245902 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.073619986 seconds)
    (240/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143751259 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097994861 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117000748 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.09258753 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114217485 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06698903 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.098321472 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077142374 seconds)
    (248/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068000349 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.090786531 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10151507 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110206507 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093264418 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180642245 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068185135 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.132576897 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087801925 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.092401041 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089906274 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12284838 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087883634 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090600896 seconds)
    (262/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093229573 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137913041 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085996193 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110861199 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096964667 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124019605 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108195359 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067332111 seconds)
    (270/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085967619 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135090565 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.135813293 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157038207 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090760148 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088017127 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.091897186 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.198006944 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07214794 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098318934 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.125386441 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072763895 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115602488 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072840482 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.114834429 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.073544966 seconds)
    (286/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140910955 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.100901986 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.097985053 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093129359 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.115899549 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106449406 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116241341 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072768704 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.121434479 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.073564727 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.071466543 seconds)
    (297/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117193351 seconds)
    (298/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.0733595 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114557186 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101323141 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.182825961 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094707311 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217027143 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113264103 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094788513 seconds)
    (306/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.103153819 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073215874 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117017506 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095703021 seconds)
  done (took 40.384417816 seconds)
done (took 41.279077654 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09987315 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15019362 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095178014 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135494436 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123523653 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091877199 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117858983 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097663012 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123509701 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123509635 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098223809 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092576697 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097871717 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120103124 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096317586 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138986953 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123509353 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094226233 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118522709 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085584198 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119218725 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086359282 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112197473 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069484681 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121812898 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09272296 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117272407 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11895385 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087849991 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109311395 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090180187 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116690238 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086663589 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122906926 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093567622 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118237448 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095764151 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121568493 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087845137 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110911864 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118070663 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087489334 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115656669 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095048659 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115158138 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092998372 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1177183 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099530181 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140759857 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118514604 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096776114 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124192494 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097585438 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120715518 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09058501 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122602687 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091164029 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141822527 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.126837632 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098429601 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.125211819 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100170031 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.121723235 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097930787 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121851112 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120339596 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097984057 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115292374 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098148321 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11886508 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086057186 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121241826 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089327414 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113383478 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096302946 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121660871 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.1104062 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093791789 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11808582 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092050828 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113120312 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091294047 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114322923 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093356446 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115823231 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073542534 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121205205 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099473318 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.116186613 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.102696914 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.121817506 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099679883 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119673832 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104760386 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11631256 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098210258 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115762672 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088358397 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115229859 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091301766 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113513101 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090640242 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122605335 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087205228 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117437279 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122127456 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087645423 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118255383 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087710328 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113635379 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102864317 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121346144 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086573633 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11686968 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085460482 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11871221 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085427845 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110977534 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086080691 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11089908 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092162183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111801908 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112258225 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094923833 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123715181 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08793232 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113876457 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090634155 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109895903 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093201334 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112726914 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088172239 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113195754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077978397 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113629447 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087631898 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117634144 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090227183 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119811699 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088367091 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120931857 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091474383 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117636628 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091822954 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111106527 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074556654 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116540082 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091042044 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114166129 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086308221 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114115731 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086541284 seconds)
done (took 17.083980985 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088051037 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185026562 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152466657 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142644018 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108221447 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11174755 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121301686 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120942249 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115944166 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144456985 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.115861036 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137861161 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153351661 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093269608 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119019278 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098226365 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120319431 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109755878 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151164146 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133390954 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164039461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086297797 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147694607 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135654137 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121056516 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106521543 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112008431 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091991993 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11652822 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114668795 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132939854 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089527216 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112127043 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133382149 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104520639 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12036821 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087941164 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119278388 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086693368 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112326693 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140999719 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132996342 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093321809 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116842185 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091308545 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114036686 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089159711 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12061594 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097435154 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116724108 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125946274 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156624321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092731837 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121506607 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08661854 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122735548 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121023031 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090034946 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11171241 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091000544 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110750079 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090957258 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126996589 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14211847 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091628355 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121855912 seconds)
  done (took 8.68308187 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104909401 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138697001 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105034243 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.147475387 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110950977 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088857428 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112015174 seconds)
  done (took 1.765234977 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088569753 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13379851 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112259417 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136435448 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131571779 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109010833 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123161376 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087931018 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131305511 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088534242 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134561959 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151291803 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089537018 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121230157 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137458074 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088630741 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136768643 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088130176 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11621571 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110825507 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116288771 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134317786 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090701906 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113389578 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103294944 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113810845 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160727357 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094136187 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11405845 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091575706 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111416969 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166454808 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104407487 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12536968 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087314076 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128482087 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127157908 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087254658 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132383181 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097058698 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130336238 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092852066 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.123960386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.092372974 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.126014222 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128699965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091398746 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116698393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094041323 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13791117 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092352853 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130237177 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092061328 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123039935 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089323845 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119957162 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12215914 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090480645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134449386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090171843 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130204431 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105568052 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129413338 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130041223 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091827249 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126777587 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102836522 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117666261 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089758051 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118696851 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129366679 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087491135 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116210131 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099615238 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115727719 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112211757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137273012 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114748985 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099775611 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11284287 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089775457 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113146064 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112499304 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118205839 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088783116 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118336528 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091637144 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112342441 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08727344 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116858603 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086409149 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115736615 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116319083 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089707891 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115762921 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105905335 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114281434 seconds)
  done (took 11.857477697 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091053112 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114108008 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092529208 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113120123 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090203266 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115111828 seconds)
  done (took 1.586173296 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11498977 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117344884 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103508971 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120870343 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155990756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103922406 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130537279 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123224267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108477855 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127804336 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129309721 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105203735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136066598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120454971 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103770324 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120793994 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128787011 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100845924 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127006332 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096493256 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138151042 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119853912 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096844416 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131134012 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117625247 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09695327 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125130801 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103886571 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127274194 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122364074 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096365765 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117518046 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096062795 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123869839 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128748376 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095247739 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120260073 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118851586 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100476767 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118139486 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104975306 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122550636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126512592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09500027 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12260085 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120316211 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094941306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12473066 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103001188 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119483978 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118194316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095574094 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117812096 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093796472 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122289806 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121589859 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09426423 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12893989 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095701924 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122007239 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117475543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093261332 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123574313 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117544697 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104587943 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118768051 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094720398 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122834355 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120824813 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09617467 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118673857 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093468694 seconds)
  done (took 9.208811023 seconds)
done (took 34.055977863 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686568084 seconds)
  done (took 1.655466917 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.706264655 seconds)
  done (took 1.678650042 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.919217995 seconds)
  done (took 17.89030042 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498186224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.581842178 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.879965575 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179772537 seconds)
  done (took 3.110928786 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950316599 seconds)
  done (took 1.940192621 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296439027 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257597909 seconds)
  done (took 1.531555634 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765692148 seconds)
  done (took 1.748012971 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.349635852 seconds)
  done (took 2.325876402 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331452478 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184328895 seconds)
  done (took 1.501540324 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544899795 seconds)
  done (took 1.531226627 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.755577148 seconds)
  done (took 7.745574983 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267596798 seconds)
  done (took 1.266621033 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300872451 seconds)
  done (took 1.289906645 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.466472477 seconds)
  done (took 4.456256933 seconds)
done (took 50.652657851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098707857 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125926557 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102294052 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123134146 seconds)
  done (took 1.435843647 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101017866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119737568 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099752973 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120224107 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125005856 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097479383 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124846164 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100780628 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120232188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095807622 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12153849 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118980984 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099311867 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122071721 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092527787 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122919402 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099010123 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121176035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123435536 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096136559 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118118296 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098197986 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124500025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093752858 seconds)
  done (took 3.650440238 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100587114 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11784293 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097147066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11745571 seconds)
  done (took 1.432624054 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100273986 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140983583 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138213415 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100973885 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141950706 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134801328 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092825267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116665729 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094085809 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124037976 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090684242 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148475267 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137244949 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099618583 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127135482 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088243049 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116789863 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135778332 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099470292 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125634131 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094549213 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124681456 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089916368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139707649 seconds)
  done (took 3.797625047 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170241113 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147127661 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138032824 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094766428 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160217421 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140896768 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088172705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139965338 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087624568 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132140536 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116966592 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132941539 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129128519 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08791174 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113270101 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086605737 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128787858 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128364425 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091285732 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140428953 seconds)
  done (took 3.453873885 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09783245 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116587034 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088404136 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115826197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098778384 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120246977 seconds)
  done (took 1.637465813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091250905 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113392627 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090238039 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113674309 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094293108 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114219412 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088673896 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114089353 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089763878 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114058355 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088868796 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112740788 seconds)
  done (took 2.225169905 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.459983282 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09284468 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119863852 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112968182 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098764546 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114588965 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103351276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118028639 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138921841 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08955624 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114215199 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.0912505 seconds)
  done (took 2.652768326 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233233732 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125612261 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28609682 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278790612 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159535812 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170195862 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280812533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161132181 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224044824 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159377213 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202731743 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222032186 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150515288 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188168828 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137108804 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118678322 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22445872 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238825076 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152412247 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20171366 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225024403 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1659647 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179396204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150053484 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112797933 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169920227 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121539273 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129020231 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204949655 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201366518 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188034086 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162672512 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146501843 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238060985 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251832852 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193065295 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284608059 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135054312 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172935382 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168003286 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264301054 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114268337 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230648669 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157741109 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13222724 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193663109 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166094122 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175370965 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150369428 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139613157 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218843816 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213443 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.218188106 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112885084 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235181315 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158681917 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1690126 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19499071 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250825457 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223785744 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178367509 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092912377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213699874 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192252522 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184737174 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.194117157 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180986678 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146542241 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190159485 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187270753 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192335269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188031853 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185789593 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141469008 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16845772 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172322096 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198464852 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228292993 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202016714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095236388 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1691117 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149636333 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132861049 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194382481 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098284563 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23772286 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147765971 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164338988 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221406291 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159773226 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159565918 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198789236 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220711032 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150190236 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084495505 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154055962 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155747121 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191980045 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140136982 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159651874 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161619287 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13017497 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177670599 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.095932794 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200918989 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091077567 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17258372 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207583373 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099782048 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161214968 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15150453 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15010455 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173127491 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224395948 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117064864 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133938747 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208366726 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203740494 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149025675 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17733918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202240727 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143900532 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150093818 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197602108 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243289177 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14012624 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203556123 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156570848 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135031023 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104814656 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207259121 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154450552 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133384274 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136330015 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.20705355 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206137147 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125712713 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110704893 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209597386 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106283924 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131522915 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160767742 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147712623 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139591149 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146982168 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.124455653 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210202234 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17796344 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154705024 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165255823 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152060018 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252893814 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142101919 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149823674 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121781623 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121259318 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191614995 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225133762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104120684 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23149335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171198732 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203455603 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194059954 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107771601 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176859818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130728291 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092838705 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220511565 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16773447 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160478583 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196231239 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226552075 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177906819 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.207009209 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173544034 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172236245 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165319543 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157349617 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11142418 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159388727 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191214587 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096054864 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142297787 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133385857 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147359042 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117210089 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13396537 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220792278 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168860453 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188941712 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15874216 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150044008 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181907172 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128837125 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174930784 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177528021 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148981182 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200198527 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223798446 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187269412 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144212763 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198762223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122505251 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124240536 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115389242 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195541393 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106933003 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135724463 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165753822 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180905835 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179780751 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20316823 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212002828 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195826922 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190834648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095817812 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169458454 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185116793 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174767586 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187154864 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142736439 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156092214 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17630624 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158351236 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254854426 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167148404 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177045961 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232044652 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123801405 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13204728 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150962551 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185931825 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153476493 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175986153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148319431 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1416579 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161315082 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132548764 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159958525 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182701674 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163036315 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215651209 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122081677 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212115675 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099781613 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191348979 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158345777 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166632414 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082266101 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173825961 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231455339 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149892826 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167211135 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189956839 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131525015 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305938933 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207765409 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220006068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136540716 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157483131 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160026613 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136247291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197105924 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17763362 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159739616 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19072354 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15786308 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108449965 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140406004 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148887781 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150306923 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130528557 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148030447 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176742468 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111371984 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212201665 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161922093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158004564 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17240082 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14957846 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116296328 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151129581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242555286 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175873509 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236743224 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122785425 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206109619 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208387642 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125382222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105536748 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13344087 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17736854 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136401649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191421855 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215308988 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205564021 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179483213 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21429488 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113079262 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12041918 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157364569 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172898437 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234178064 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151683691 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157891584 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202452996 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142316435 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102924352 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170575942 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225646768 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14550165 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19645141 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078928473 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.303161624 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100073589 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133513493 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163535939 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205653326 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136936223 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183786844 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17153401 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167629307 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164310263 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150027166 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190473671 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243768718 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198756359 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208314377 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104014704 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155990451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175991061 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220168146 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157949972 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111723216 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232286299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193468208 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223348653 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113441894 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197677833 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168053382 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130143302 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214141629 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134108627 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206817084 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135036091 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192337583 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153539444 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142791164 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176334385 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214724153 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114167376 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216438428 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175105351 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134874384 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104703113 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196645314 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17781857 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158466425 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099011124 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207403095 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097008352 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218390086 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229753197 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135832416 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15611833 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147334949 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10733826 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183120408 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157778105 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113411936 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163892111 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203423674 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135548475 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190744254 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230165317 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168606027 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174009877 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144979077 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692398491 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131625062 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193735786 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155937551 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234377881 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149110527 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172207275 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15821259 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167971589 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19528386 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160978294 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233812332 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191167125 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207047126 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104225697 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157183918 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161606815 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14483886 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15082148 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167760931 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15963394 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152405136 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17648305 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197156739 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106316748 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140556158 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198572629 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156291386 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180222481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178563708 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13824743 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173108493 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216513747 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10453221 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.20662579 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205420346 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141804472 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152976282 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134236782 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15587515 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259777441 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097057382 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227236344 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178549293 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159208524 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167636637 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146521806 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190253647 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15663688 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178329129 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145497175 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160619594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157608986 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138345143 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129160182 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127375135 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1942149 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120944437 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158295139 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164769089 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192889665 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124452029 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144055845 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198024431 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188174652 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242690856 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136102366 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107469408 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163431977 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151363845 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1782721 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205057712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108530429 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137648162 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136966983 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13077491 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139468206 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154472035 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198184948 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166114516 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206007659 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137508095 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279923287 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140055138 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154419151 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089058844 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132111625 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150297006 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117731598 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158386261 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219390998 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263187476 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119547051 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133748267 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149609922 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125471347 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108224879 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165396518 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161431761 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175872389 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144851898 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108865989 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158040517 seconds)
  done (took 82.476446499 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162456116 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13124731 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146708906 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200647056 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176000202 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268769126 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208903045 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254032045 seconds)
  done (took 2.638207639 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093064772 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144882008 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.161827728 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132893602 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091476742 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119211538 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343894958 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133842456 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115625951 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120950981 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17151379 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09372105 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551262453 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09663362 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118896812 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106298187 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091566174 seconds)
  done (took 3.772312636 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.474365094 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.707789909 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.507929433 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096653364 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.0825934 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112379276 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.597590918 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193956155 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113698901 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.476894733 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772025266 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161379093 seconds)
  done (took 18.387772306 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098698335 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119578554 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108135064 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.13489156 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09456115 seconds)
  done (took 1.65499685 seconds)
done (took 130.20285224 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103394128 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403749477 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071282167 seconds)
  done (took 1.603265146 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107769399 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136698145 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108103134 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135777789 seconds)
  done (took 1.591627463 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097254379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126408175 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108156902 seconds)
  done (took 1.42957062 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.319930615 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189267569 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.16340926 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105346106 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128948408 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102264071 seconds)
  done (took 1.43345567 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097347397 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126678029 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097471485 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129154874 seconds)
  done (took 1.550616643 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094807163 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070431935 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102133743 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074816218 seconds)
  done (took 1.435659463 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115023424 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131116909 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103524568 seconds)
  done (took 1.448332917 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128705354 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13770239 seconds)
  done (took 1.36592202 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104871903 seconds)
  done (took 1.201677242 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117340007 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169484336 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188126052 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16490652 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.22804502 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164487266 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140812224 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114195276 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129946609 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143356096 seconds)
  done (took 2.66105399 seconds)
done (took 17.594603163 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10421639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.516399187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.445600907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116187513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731387734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379575882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.072020558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145794672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164419199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093049566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138085346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672421458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026806106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468026315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986227321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.46528299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701922855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092776355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118606051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093410473 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.056123649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09144364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121384814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092123833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70219699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424508448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094325973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.462441795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092231611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12526027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382642302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121601682 seconds)
  done (took 17.390236924 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095109864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173467785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098642723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136166375 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122337905 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.092888937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123355751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092857355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178832814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121287901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110699868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120277785 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123823141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09541808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141179645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091554491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124577649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092650641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120101677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120656062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110878574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118974855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094349754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120627536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092789489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133828331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121682349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092311865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119331923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098671892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126210065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094217608 seconds)
  done (took 4.804580934 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139626474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181258986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127280482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126442392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167617352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122886162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19865702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117919492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182123847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122694601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138532477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093044213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156074944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121774455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114131545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120656852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096260998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121159495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092293155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122276551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13879695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092726455 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121735703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092789358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122421853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107510401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122559684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119744498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093768688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126124389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099353165 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123644733 seconds)
  done (took 5.133192544 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096983609 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125385762 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109225676 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13830798 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095313501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125102348 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097520872 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124146061 seconds)
  done (took 2.018185106 seconds)
done (took 30.444353146 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112260872 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126363153 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106910129 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134397405 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102668244 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131520579 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09138067 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133343804 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133680576 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102454272 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137135427 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091483926 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122259887 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091712982 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134622711 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097899888 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13222358 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101641513 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13331048 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132297175 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094994958 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132715735 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103506312 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132651574 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103514715 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133052792 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137284515 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099441391 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122650835 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093872726 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123784128 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103637763 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123602251 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104965675 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127410938 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096758304 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124680203 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093482529 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131989828 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131374361 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09937364 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133073403 seconds)
  done (took 5.998340068 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107490674 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138463484 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104493099 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080834068 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117191597 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079916216 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137347579 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078043115 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109927239 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108115559 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073721352 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105745108 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077684361 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100536392 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077773876 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07507908 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107563678 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075675132 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076113605 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105502024 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079464073 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072500919 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107703872 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078218286 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074804242 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109437262 seconds)
  done (took 3.573825953 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100588664 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134757598 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11151766 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182590771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160764824 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099187492 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131832213 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13833703 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108399985 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120157201 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095912354 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149273512 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110170169 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128371567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091117089 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136275938 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135199195 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094404014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126840808 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111833989 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137963321 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101475512 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142082752 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131900331 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092656839 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12155721 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096396896 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134053436 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09681041 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129890539 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095958677 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123974584 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121992809 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105186075 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125937656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093213305 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140741745 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101890301 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130185837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092424727 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131989519 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122095196 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113298747 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167326216 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091194892 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128212038 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129147874 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102557002 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120816106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109936503 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131220662 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091745303 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124833277 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090977017 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121165516 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133981515 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094495909 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122339337 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102139977 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123434289 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104594081 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125014241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10750036 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121281072 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099812087 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121080088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092460189 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119870525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14317763 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093773431 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16278631 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092561448 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122487042 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129474384 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100030759 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127013793 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092850793 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137224996 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101157822 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12463324 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101631378 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124735399 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123726269 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111986438 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12339276 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094124448 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120867663 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099825672 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124479034 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093366616 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137289526 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09240457 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124872091 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.137561429 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092352243 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122005198 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099522867 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126361893 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.090800318 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134999944 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097734431 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122538864 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130526624 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092854801 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124000403 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10265189 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126272692 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091008333 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126030391 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098116903 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121632132 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092868129 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124349998 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093523499 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132303077 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128001268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09784698 seconds)
  done (took 14.756009007 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227826467 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213875196 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235687629 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260264352 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134843555 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114445829 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213333267 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155281437 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123004317 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15950744 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160938253 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.17970018 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138598369 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178655088 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.138709183 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121473406 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111814585 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165062219 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212789392 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288343037 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111495031 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131747355 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161531747 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159326848 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105503255 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133543767 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138653529 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105683728 seconds)
  done (took 5.712778569 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107817566 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156202485 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.126879105 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.115430194 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148164096 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092635578 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126739976 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09454596 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134728844 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134440862 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092294768 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128148294 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099339146 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131514633 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122315674 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102264355 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132072686 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094363977 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125281731 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096526744 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12829788 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100733993 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126411252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120368601 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101854044 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121191198 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086196586 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141476595 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121029222 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115194131 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120063642 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098693824 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132413824 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092776344 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122754986 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094345113 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124672147 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095301007 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124038483 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091138649 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121052074 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077132918 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122006418 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135206744 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099983435 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079061831 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128819593 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12785102 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094593731 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119929187 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095755291 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124330022 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096665115 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12944073 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098248208 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124296096 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096489789 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115258916 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099307906 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124952158 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084937881 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12028075 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098077086 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117131065 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101726608 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127298313 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091189995 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124941292 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097373881 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128610801 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094750703 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125405975 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091303353 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124864864 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095839457 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128142351 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12481899 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093633884 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121820916 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09367693 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075637819 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122596384 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073451296 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125722479 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091574108 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121585678 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095432162 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128720091 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137231195 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094848879 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131009977 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094138419 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123070181 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096043265 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112428202 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095899867 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139114716 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140685915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093518764 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120691571 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1068874 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124975577 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092300245 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10581297 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10014529 seconds)
  done (took 12.901205465 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127761934 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153162635 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094787025 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14259036 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155590445 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155870892 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101074556 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130239909 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09504909 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141390186 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093248829 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131245132 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096774177 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136408501 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155535563 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103475474 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124282732 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106040456 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131194034 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16905782 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.1109843 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142184781 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107626239 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123935319 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126819141 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110849117 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161386391 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106869618 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137029492 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141018382 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107743004 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160615687 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141925535 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098558744 seconds)
  done (took 5.468101021 seconds)
done (took 49.517627223 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.221780903 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428532278 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.208532947 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.148322188 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.239063212 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.236509171 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.21969074 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.211322749 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.640350086 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.207527612 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.468205644 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.848823888 seconds)
done (took 60.221119246 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.273530508 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.336951365 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479900077 seconds)
  done (took 3.952742456 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.560115103 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.119366457 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462138079 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.201675489 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.218311403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.502193179 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.806766531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.500010354 seconds)
  done (took 27.945993361 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.211170025 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.575792856 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.762334717 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.75721849 seconds)
  done (took 18.441796447 seconds)
done (took 60.315645168 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.212430464 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.22578007 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.23943683 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180281029 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.313206954 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.231278882 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.546704471 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.228830946 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.222226561 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.190410547 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.223852946 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.208546269 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210535675 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.528290909 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208089382 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207294735 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.26622329 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.74128045 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.582860001 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206338774 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.232363927 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.24925483 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.233487672 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.213818874 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.230082445 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.213603052 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205430141 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.208171653 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.397857206 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.208688705 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.299340974 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.682141874 seconds)
  done (took 190.48695313 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.200860366 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.994267418 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.092658614 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.244177776 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.515333703 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405173929 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340310719 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.681736342 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217377869 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.210332657 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.399561404 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.201443343 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.434925354 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.176496277 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212686044 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.261295252 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.37738244 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.493326225 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.216526942 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.479821666 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.231080275 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.207256605 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.140034622 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.393282665 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.232336372 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.29197314 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.245800874 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.211598293 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.403749199 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.333758654 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.228338003 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.250369858 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.731167925 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060817328 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212773043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.220297877 seconds)
  done (took 148.67870241 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.488002536 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199612542 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199376911 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20253959 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227179333 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.209450419 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.692368673 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.697296384 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.69927164 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.528655306 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.262735458 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.402964448 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195163863 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288374487 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211834241 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199958994 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213867907 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242501915 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20565616 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199584497 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.691064457 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220131181 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.215873575 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203177124 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205792708 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228870293 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593002742 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199998275 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231759712 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523638784 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240831008 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199446043 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.512445427 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.089647269 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310582366 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201328348 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234700213 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.20381093 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200251175 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.471719492 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198270298 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201160893 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199364348 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.205386594 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.799167577 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200278185 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.69330186 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207475998 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.095414339 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200597839 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204808846 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.626471328 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.716852511 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217011801 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.201230584 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205046402 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212252304 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204752661 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210312038 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23530647 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.539271969 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.29879148 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.227620816 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204904452 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205566826 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228161562 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202740635 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.384952618 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20851194 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.602408611 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.279636462 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310184152 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.692810303 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211466259 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301124171 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317901883 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201988504 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204060854 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204346741 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204329838 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.30698017 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201502478 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581838658 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208406488 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.207578291 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.26416492 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295982377 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201554964 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.517639447 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.2025734 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206150528 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891624255 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292692978 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20053171 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204723431 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204975596 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.582104661 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.69130008 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.383231701 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213494906 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.546482067 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211136453 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.594865528 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.686390627 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.792921104 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20253604 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310664785 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205604211 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207782719 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.20826444 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234113316 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.223820554 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264739706 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204401889 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.602359769 seconds)
  done (took 344.611209276 seconds)
done (took 686.39882406 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.853687261 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.848810663 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.956926763 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.843151455 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.83096204 seconds)
  done (took 10.464963453 seconds)
done (took 11.599540667 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377574481 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375430651 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256472074 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383235846 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230892332 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396826334 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355956708 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221051072 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302664807 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.2848422 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304625035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259324158 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237550583 seconds)
  done (took 18.121508407 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.514346359 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508383881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273279001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519426057 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257408925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513532976 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404550716 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424850066 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414068731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237895542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224622939 seconds)
  done (took 16.426011153 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519262871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534341761 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277562947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520831852 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253219087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518296706 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4081861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424677512 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427083859 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246754903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225399626 seconds)
  done (took 16.49470356 seconds)
done (took 52.174695986 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.218547976 seconds)
  done (took 2.354965324 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251137501 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407290992 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24061067 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223214859 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.221482478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.220716091 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230034071 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.221215403 seconds)
  done (took 11.150790381 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216090006 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222021874 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222624932 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219718601 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225843326 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220446156 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21956097 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.222486341 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212418718 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223881562 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220967638 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220708927 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220276287 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220271594 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21905622 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215029888 seconds)
  done (took 20.65956967 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216214823 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.21635816 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218020368 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217558831 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220628155 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221858736 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21865118 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220886503 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219506234 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218360301 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219634774 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215944153 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219453341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221205492 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21938444 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218719979 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215345567 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216699578 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224122761 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216821405 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21591714 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219243596 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218644778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218709819 seconds)
  done (took 30.3872984 seconds)
done (took 65.689431069 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.152541214 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.753189053 seconds)
  done (took 9.039809652 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.217754687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.220930418 seconds)
  done (took 3.576721173 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221902552 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221747418 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223104132 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21869086 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220597868 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221819562 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221359051 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221029761 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221039987 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.219374459 seconds)
  done (took 13.349352033 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219554009 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221570568 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222922949 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224034101 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22106069 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217449751 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.218032297 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224367417 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218978467 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.217969182 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218871474 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216547084 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219412531 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216769772 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220033315 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217089744 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215915168 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218174681 seconds)
  done (took 23.091980057 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218468651 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222305502 seconds)
  done (took 3.582026468 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.21622697 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22050806 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220260632 seconds)
    (4/7) benchmarking "year"...
    done (took 1.219633305 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.220826727 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.218004002 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.217036704 seconds)
  done (took 9.671983164 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219076625 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393543987 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.463180183 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.820481792 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.221900369 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227239098 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.093716461 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225101311 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22423484 seconds)
  done (took 14.029888965 seconds)
done (took 77.483180821 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.207229846 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226330191 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.358564009 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225028206 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.229226072 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.561419976 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.225084056 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.331333037 seconds)
done (took 37.507192813 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.221315173 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.923863011 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.929517988 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.229614268 seconds)
  done (took 11.224328435 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.208701809 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.071655493 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214347578 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.17110547 seconds)
  done (took 17.807139489 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182243456 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549104873 seconds)
  done (took 4.869967466 seconds)
done (took 41.268294268 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225506008 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222227212 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221438971 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.222035047 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224789109 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.224369779 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224148918 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.2300627 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226608474 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22599541 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224026704 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.225542167 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.225183744 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226771647 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21974412 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22053144 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226199366 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223282987 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222969432 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222664821 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221763588 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225089127 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221080899 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21856763 seconds)
  done (took 30.51269633 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225514498 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219902226 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223830511 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226055515 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219516606 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223875557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225205119 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224079227 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.228870661 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.224316568 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223021916 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220414881 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.225522347 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.223087719 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226074565 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.223981065 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228875142 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224304849 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224460603 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223977568 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224876906 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22142664 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221951021 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224617666 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223979636 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222469511 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226980332 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224389734 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224528609 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222490732 seconds)
  done (took 37.865071949 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230926331 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232648565 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.225042707 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223672507 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.226107191 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228166569 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.228575006 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225781908 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227640133 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22663947 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227090564 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227597815 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228255594 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228752248 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.22568446 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229794614 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226236165 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227240811 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.227710395 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226076496 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.22598791 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228693082 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226033856 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230901823 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226719208 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228213461 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227085126 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228031772 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226011242 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223853063 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228855862 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.227750257 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226515493 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228462491 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225417278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229092751 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23298039 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233709343 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.228386919 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228118767 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227769561 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.230907803 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227022678 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228218269 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.228770442 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229684589 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229698883 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.228310869 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227041683 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.22842103 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228419131 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230403616 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.228054114 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228451011 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230124489 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229740218 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230453961 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230252951 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229695309 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22371489 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227507386 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.229123815 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232857994 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231547556 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230657792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231110473 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.229754961 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232666069 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229889815 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.23065373 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23083243 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23030398 seconds)
  done (took 89.601511351 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22766597 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230502391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228354327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228869135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228813145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229303679 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227034245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23356122 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228224567 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230628861 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23043161 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227985892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224933344 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230826279 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231550388 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229610618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231721188 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22919684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231764573 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232190867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231620236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228653153 seconds)
  done (took 28.205214517 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23458657 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234647786 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229446498 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231466581 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228236232 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229390823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230832056 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229039555 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233327367 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228845001 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227496102 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235165577 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227754698 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234217617 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22955835 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2320054 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232458741 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228180189 seconds)
  done (took 23.305565141 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231246004 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227794323 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233064185 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231427724 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232227608 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230948255 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232773155 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234731046 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235572874 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234650078 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235443546 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235767598 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.233534198 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232302305 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235202697 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233354354 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236040737 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234029336 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232288709 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232795157 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233718938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232695365 seconds)
  done (took 28.283428339 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235478924 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233592338 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234763961 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233467077 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233170821 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237858297 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232795661 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234711872 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238518322 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23624307 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234923024 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234018019 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235532542 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229379784 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231853535 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234413542 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236303212 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232452578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236167478 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235519927 seconds)
  done (took 25.844467468 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237179518 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236180736 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241438555 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236851184 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239157964 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241087378 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237169885 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.235839294 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237389069 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240319227 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240731712 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240511831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238523381 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239310305 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236725962 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238344673 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242001582 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238734399 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236955331 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239798532 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237585876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240147675 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23847732 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239011216 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240062886 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242318949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238406701 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241467144 seconds)
  done (took 35.847015596 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237883729 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238414862 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234179734 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.235870857 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.235459862 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235923688 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238015555 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236086238 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240678757 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238683064 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238507277 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.237314384 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23790794 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240935115 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238510888 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.238186889 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240731777 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239707518 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237099274 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234354621 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240683799 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237733391 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237411696 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234495392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234916199 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.2385158 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238226168 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236432112 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238442368 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236824194 seconds)
  done (took 38.285543531 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254925897 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260164023 seconds)
  done (took 3.674849827 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235620323 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241548026 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.241345862 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233796485 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232604572 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234392556 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236265189 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230052809 seconds)
  done (took 11.047152773 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235855916 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234726873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231483487 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226848388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230892656 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227486686 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233470717 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245337714 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228530486 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22632703 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233058696 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.222836159 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.21915112 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217337492 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.215762847 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218560257 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216355146 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.217499754 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.217664791 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.213402918 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213352448 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.215186876 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216057373 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211036639 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.214429677 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.224134777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.236392819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.211271355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210675907 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.215125708 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211359243 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.210197956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.211802393 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211855612 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.213745506 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208491703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214203173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227069643 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.216484103 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228168049 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210659249 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.20759998 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.211674852 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.211342427 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209760103 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209597419 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.209344416 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.206092182 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.209293688 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.213102836 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213717965 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209238407 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206003648 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2111004 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.209599532 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216502962 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.225340235 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.211608339 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.21703302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.218903949 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.236984059 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.228826411 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208465022 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207313605 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215841467 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.227368147 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21472998 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.223581506 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.203266809 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.205921788 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.213066627 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235651672 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.228166178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.206201054 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.205932287 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.208571779 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205284033 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.203277217 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20977722 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.223689462 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.203997246 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.203942471 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212175805 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222571985 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.203477158 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.19982947 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.200605568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.200198601 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.201933834 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.210555717 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.217686209 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2004842 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.199638529 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.197577156 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.198519046 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.198869792 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.196918878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.197407102 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.195587009 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.197595834 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.197867959 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200039887 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.203021665 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.196637389 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196319009 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.203051108 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.214331811 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.195473424 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.202288051 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.197125543 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.19630467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.197749258 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.201325186 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.194062513 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.198232073 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.20383529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.196829675 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.198171941 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.196940868 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.198274217 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205214391 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.220569158 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.197147304 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.198055388 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.200683691 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.209847634 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198011674 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.199413422 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.197395973 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.193716394 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.194055994 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.197023126 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.196254878 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.197413148 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.197370067 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.197390191 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.193891774 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.195961633 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.19734135 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.195673274 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.196757916 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.195632042 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.198780141 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.196577861 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.193834674 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.200244336 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.20122247 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.213884351 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.195616153 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.198872396 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.193001233 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19618271 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.194694804 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.198393574 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.194770976 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.194082075 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.198385511 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.195927717 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196755916 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.195446796 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197615184 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.195354191 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199913464 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.196422909 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.200397667 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.193663863 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.192044033 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.197680455 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.195657167 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.197019596 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.196260199 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.195062536 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.203479447 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.202405311 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.198391672 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.199677431 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.19980951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.198612955 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.196399433 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.199866733 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.198748235 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.200683736 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.196330829 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.203234698 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.217399437 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196497614 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.201719786 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.195753811 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.194199156 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198025443 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.201437938 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.205722877 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.212990647 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219317916 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.198770728 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.202130489 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.196465513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.199795119 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.202001957 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.198465235 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.199571795 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19706715 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.200976517 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.197984529 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.199295107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.199473698 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.196840936 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.198991938 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.196475969 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.19837157 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200475037 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.197944221 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200168943 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.195747089 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199354755 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199297951 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.201781972 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.19534772 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.200184174 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.19962443 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.197614028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.199453886 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.206005639 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.196044287 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.199978534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199147569 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.196458074 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.19895062 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.199935238 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199648578 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.199857968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205095663 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.215295246 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.196558547 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20167133 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.219992101 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.197795117 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.199827391 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.198373067 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.195513521 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.202647249 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.204831287 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.195534172 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.200466591 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.196587463 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196884626 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.196543327 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.208294661 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.216161843 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.199654231 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.200114979 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.202678741 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.201518804 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.202226094 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.201869367 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.201849316 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.199733113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.202956337 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.199954559 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19943852 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.201562187 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.198718436 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.200876566 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198031877 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.206780164 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.203193482 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.199087266 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.200987282 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.199113241 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.203840082 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.199481228 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.19942422 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.200010349 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212170308 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.224813087 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204333473 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.220787086 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.201457752 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.204536363 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.220476204 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.202161923 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201544783 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.201820678 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.202118172 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.201242083 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.198722745 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.199011845 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.200621709 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200503309 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.200218721 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.202719634 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.202428929 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.202703051 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.199684597 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.203824217 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.201642705 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.201702919 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.20063439 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.202133629 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20520962 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.200840857 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.200621222 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.206516627 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220019889 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.204007289 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.202562501 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.202784531 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.202598067 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.201579434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.202076552 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.202627995 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.206547608 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.203594825 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.208903539 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.201602984 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211046684 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.202727525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.204289524 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.206312115 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.199385753 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.199732347 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.201084696 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.200901914 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.207538525 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.222126388 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.203270232 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.203610181 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199407346 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.199538739 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.200937777 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.199322032 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.200362622 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.200029797 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210049427 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.22130292 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.203908935 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.201751341 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.199463433 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.200479273 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.201160455 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.199557126 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202749361 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.200618069 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.199369003 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.199001867 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.200332159 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.200348497 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.200297039 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.200647189 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.198855489 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.202243916 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20529439 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.217476304 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203044241 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.200286997 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.207023014 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.217994904 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.206137679 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.221635386 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.19998362 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.199057357 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.198813672 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.199827416 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.200427918 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.20066671 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.199771964 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.200852272 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.20380042 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.199281069 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.20199396 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.201227605 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.201202815 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.200562556 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.209054129 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219172478 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.201963993 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204856116 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.197824366 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.200394596 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.204056344 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.201711198 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.200553023 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.202638563 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.209039392 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207223494 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.201170542 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.201386115 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.201676394 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202307507 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.201538041 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.202005372 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.201597673 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.201690221 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.202257726 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.200844003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.204945344 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.202499855 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.201990984 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202437647 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.202240784 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.212441972 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.222164172 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.205013165 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20229951 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.204896742 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.203049518 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.2036426 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.203979643 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203995728 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.204962815 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.205750887 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20880027 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.208929468 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.205785036 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.202876124 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.204496087 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.203570746 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.204780561 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.203380175 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.204495244 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203957743 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.204206983 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.204442785 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.205051746 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.205344467 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.205598411 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.203900159 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.206025613 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.208373959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.21184736 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204850577 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.205905032 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.204640164 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.206512648 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.203742614 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.205088493 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.213155376 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226138816 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.213949616 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.213101554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.207960695 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.204936424 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206719716 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.212301359 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.205865085 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.206451942 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.208532819 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.206568735 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.205116589 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.207576786 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.207113184 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.212574509 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.223697253 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.205189186 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.213877061 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.223294116 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.207199733 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.206650729 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.209246878 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.20656253 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.203667411 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.206494858 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.205803466 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.212930752 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.228095648 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211256493 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208896396 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.205932548 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.210742405 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211315972 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21090479 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.209155122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.207114408 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.208733505 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209925324 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.209851468 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2058504 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.208317064 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.211099983 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.211018102 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.218139663 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.211286381 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208955587 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.21187284 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.211595901 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211676178 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210491024 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.205355521 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.209247761 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.20710073 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211186378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.209736325 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.212814467 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.211140736 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.20905225 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.212054169 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.214505021 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.209239466 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.219518588 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.220478577 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.209956516 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.209501488 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.212806899 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.215904465 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.211153467 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.213927874 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211662238 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.211786257 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.209529052 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211715793 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.211356278 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.216136052 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.227275154 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.236783493 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211922398 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.216212009 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.217962075 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.212774857 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.212362162 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.214277997 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.215167731 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.215102155 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.218233149 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.216450682 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218120041 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235710162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.214630383 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.219231865 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.217170763 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.222436231 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.217001846 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215529084 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.212948174 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.2144402 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.230755196 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.215977377 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223914462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241854664 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.233967434 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.213489201 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.213973721 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212848805 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.211824501 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.214283259 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.216018203 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.209585978 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.214384966 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.215015009 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.213901849 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222400914 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.212638431 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.218806298 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.215591448 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.214263763 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.218802772 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.214551075 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.213393778 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.213742668 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.215709286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.213443313 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.21334439 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.216211454 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228591398 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.243335297 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.216877311 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.21624029 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.212817232 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.218440137 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.217826128 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225682481 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.223509181 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.21386269 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.21339399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.220594012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21559849 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.218027401 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.217314586 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.219195401 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218668797 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.217924304 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.229836861 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244001559 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.22299406 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.215608636 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21542846 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.216197927 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.219448989 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218785703 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218274987 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.218418078 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.222527801 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.221568351 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.21629424 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.219556637 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.216855826 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.225132974 seconds)
  done (took 720.855803381 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216613056 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215226734 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214616123 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217023048 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214460892 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217788416 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213893168 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.21746739 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.215759217 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215850501 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.217898587 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216461455 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21694698 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218194778 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216906716 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218173568 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215195186 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214819333 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2156553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218340443 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216413765 seconds)
  done (took 26.672497634 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.219830471 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.21641033 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220402783 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222021269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2163197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.219896253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217511803 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220252605 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218180537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216642849 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220869829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22048866 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.216799277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.21888074 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216417805 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219711507 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222790613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216394033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.219018985 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217171889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223628145 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217918858 seconds)
  done (took 27.956843956 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.220143964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.220903503 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.221138165 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.219774237 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.220742345 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.220928388 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.220105853 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.221424463 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.219742498 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.222860534 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.220048496 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.223337716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.226857006 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.2248585 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.221357703 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.221910315 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.365736059 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.220693837 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.221590594 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.217725511 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.217311278 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.229181009 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.240900009 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.217919171 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.222115815 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.218948241 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.219446277 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.221419342 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.221840693 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.21946491 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.22099191 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.22281635 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.224648465 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.224324294 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.220754139 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.225355252 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.221412254 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.222980697 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.217274069 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.222424423 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.233906289 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.23937748 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.225746506 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.226722389 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.245427284 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.223210403 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.225613789 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.231554367 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.221330511 seconds)
  done (took 61.237211886 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.221442262 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.225615007 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.222025074 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.225356895 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.222418824 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.223194941 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.223040062 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.224976335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.219641956 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.222713886 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.22544329 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.221370315 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.222795646 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.223995051 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.225910993 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218910563 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.221795985 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.223410495 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.224154207 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.222995503 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.220745873 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.224084401 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.222108381 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.225151253 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.225453112 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219032443 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.225398115 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.223541343 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.21886185 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.221967657 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.225151725 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.225520617 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.225598548 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.225412236 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.222964726 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.228620927 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.225972163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.223906631 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.228106938 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.221874152 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.225252528 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.224830112 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.223265943 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.224433397 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.223298414 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.227341033 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.223188887 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.226004264 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.226902088 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.224148738 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.226597088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.226339282 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.227500057 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.223672271 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.228569648 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.229527961 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.226278818 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.224625012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.229540379 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.224865004 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.224919061 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.228736364 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.221270791 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.228439225 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.230224364 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.228587101 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.226780648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.228690178 seconds)
  done (took 84.4192076 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229315935 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.227352183 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221916518 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224503234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227428117 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.227302698 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226011407 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.226213831 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.222377239 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22405877 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228256023 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.223189508 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.230053436 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.22780128 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.228192638 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22731053 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.224810219 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228030904 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225441978 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225238999 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.227447317 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226159318 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225971601 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.223412251 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225137161 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.228218761 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224046966 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.228586471 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225619575 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225326105 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226027559 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.226129276 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.226069924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.224186671 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.228641657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.227011582 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.226717204 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228384663 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.229901536 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226339317 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.227983904 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227143157 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227257076 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.227048671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226789098 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.227196006 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.228084638 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.227916913 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.228878306 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228869775 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.227528405 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228455073 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226854675 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22880495 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.227042314 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.228687652 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228602917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229262635 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233188994 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.228703361 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232015561 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.229817799 seconds)
  done (took 77.229071385 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233099063 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231927261 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.230450633 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.228832666 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231335239 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228716943 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232540937 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.230646062 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22882718 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.229460718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232595083 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227521172 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228941289 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229862298 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228354353 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230368743 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231817365 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231984417 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232809587 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232632516 seconds)
  done (took 25.760155066 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.230709896 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.232594435 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.230704892 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232715572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.235352754 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.229800806 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.232299652 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233500795 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23349938 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233310389 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235363818 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23230071 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234814909 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232288464 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.233192544 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.233070336 seconds)
  done (took 20.871991117 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.23257261 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.234596112 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.23206603 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.234889094 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.229568152 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.233032048 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.236660204 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.231141069 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.231641294 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.235617984 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.235422242 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.233868493 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.234863918 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.23391599 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.230379098 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.236974713 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.232364329 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.231769457 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.234579439 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.233988583 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.230412195 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.23191181 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.235963943 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.23311679 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.232991032 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.232890134 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.230058816 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.233888712 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.23251462 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.236473952 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.234262306 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.228357854 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.229028564 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.230699209 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.234750418 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.23269964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.234817276 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.236726508 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.23552285 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.233199247 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.232482987 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.233154812 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.234582352 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.236145819 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.233581782 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.233039278 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.232258773 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.23120138 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.234363588 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.230274028 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.236521106 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.233689731 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.233683901 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.23720652 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.235695967 seconds)
  done (took 68.986237931 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236908048 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234636075 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233523737 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234025423 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.235389175 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.231586539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235251718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.238442888 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23269738 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234171696 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232915628 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.237127895 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232435237 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234435672 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23318493 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234291642 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232169453 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.233770609 seconds)
  done (took 23.369252625 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232399579 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233000966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.234788891 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232451296 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.23302856 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235271192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232859218 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.235678033 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240018187 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232156512 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234030846 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.236147141 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234855694 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.236597723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234263221 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233977264 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.237052184 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236027034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232854513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233100974 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236660416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236423878 seconds)
  done (took 28.311325994 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.23719147 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.233740102 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.23475002 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.249939358 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.25181802 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.255251631 seconds)
  done (took 8.619002093 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240807291 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236247377 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.233198118 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236393371 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2368416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233393285 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233533094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234533384 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23605082 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234614226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234236309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237411516 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236824136 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235017134 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237497462 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237853223 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235257873 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234153517 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236344338 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238692155 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234818819 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239047114 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238744164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235039464 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235721481 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235072427 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237686352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236624698 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235352452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237882394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237599999 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235050642 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237900014 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235363256 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23931568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23948661 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236428318 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237543671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238368632 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23592726 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239812829 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238791738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239129464 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236990044 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239152267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237501686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236134309 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236430812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23649774 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239525489 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239228131 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236834278 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239417195 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238327544 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238652203 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239072536 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237560523 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23687451 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239505175 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237715189 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236221869 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239264894 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236014307 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237517276 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239221748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237596066 seconds)
  done (took 82.824067927 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235897592 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237640358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236366156 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238312793 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237392739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236479847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238240934 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236786345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237882465 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237267897 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241061167 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237981423 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238266464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238576232 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238644123 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237719742 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2378799 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23784675 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238454975 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240261257 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238459325 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237496431 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238277166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238000166 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238473777 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24091778 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238873055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239123412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238720149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238554591 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238665797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238953847 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23868552 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239345159 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238551944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239261347 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239243513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23979483 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240477364 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242127556 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239589702 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242721531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239233691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239089583 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240929443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240358452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239736024 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24071307 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240932716 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240840095 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240535798 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241389169 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241105433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24092143 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240592519 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240681134 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241624261 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240726688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240934366 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243076574 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240491208 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24026061 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244262973 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241424569 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241576562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240541091 seconds)
  done (took 82.964841115 seconds)
done (took 1693.690357609 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.286510105 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.296245021 seconds)
  done (took 13.743207979 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403792748 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.35824368 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.242514171 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.291718104 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.241494569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.249885854 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.237771087 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.241312035 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.24249544 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.241189535 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.2424675 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.429187315 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.235510828 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.243083673 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.243046166 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.338044364 seconds)
  done (took 41.644198231 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.266198022 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.252280839 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.355667036 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.276132873 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.274345898 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.423170287 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.306001245 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.251982381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.409330651 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.297895002 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.70825881 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.274975971 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.252097913 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.287880025 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.266778579 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.424109661 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.488048087 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.714080921 seconds)
  done (took 28.692801484 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.663818767 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.253019612 seconds)
  done (took 9.083790442 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.26280911 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.301756931 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.28534252 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.266661871 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.265902964 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.299676128 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.318006539 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.31527213 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.303722173 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.283376469 seconds)
  done (took 64.070697465 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.269959855 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.253493528 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.255291813 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.253298331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.247671671 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.247021905 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.255856706 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.253473018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.642185793 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.375279937 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.262495668 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.261618954 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.272325176 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.256085476 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.251971226 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.287646513 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.394559329 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.255566924 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.254124316 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.261500777 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.255227613 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.363695036 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.293301671 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.254814046 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.370767505 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.697762167 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.258263205 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.263815251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.378041154 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.255255216 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.255621018 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.255063179 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.257824938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.873970154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766623038 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.263968825 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.293979516 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.266346575 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.252476098 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.419308004 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.261318162 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.265237866 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.248367379 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.75603224 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.393355129 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.364843192 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.378487766 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.272432514 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.258126197 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.312936379 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.260440554 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.257408388 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.285569373 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.988286437 seconds)
  done (took 106.580719278 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.27695642 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.640192821 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.417086682 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.270372355 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.852687174 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938457039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.271248831 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.516077602 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.325559316 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.249762209 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.532910087 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.731809386 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.274041586 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.256089154 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885919403 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.31361611 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.248090493 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.95575899 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.267643282 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.256889672 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733479701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.265879291 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.251487517 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.409289306 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.287321867 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.684948791 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.535301673 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.53231753 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.271760248 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.251375542 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.694116261 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.270656878 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.255139337 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.254467247 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.503466195 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.585456171 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.577348279 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.268973865 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279379455 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.253601833 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.286189442 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.680048384 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.587861217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268267694 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.267318658 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.684651937 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268418687 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.260505737 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.261924053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.449280183 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.8573727 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.252199298 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.523206251 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.254056571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.613130857 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.291290098 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.321918308 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.713735672 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270240714 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.1961104 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302192646 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.252986109 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.253566612 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.255069108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.255876883 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577911301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385620809 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.255429901 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.575365277 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.704518783 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.27587318 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.763711588 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.172811637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.272664642 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.344998548 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.252445576 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.780608004 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728795551 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.287583895 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.253095803 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566151809 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.275051782 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.523721459 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.268041652 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269086779 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762756116 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.262863903 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.297754444 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.255349264 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.271105799 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.878262509 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.263879749 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.524601344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.333067787 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.255112447 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.252712481 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.274076644 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.255553837 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.272947735 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.256217968 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.752569239 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.281435586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.214969053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278873708 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263278887 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.26158024 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.259051022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.255826885 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468804098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.791656367 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.280400118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.253945752 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.255143442 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.263939714 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.410235625 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.255935684 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.544066314 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.27828171 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258877065 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.254558408 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.950326382 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.310701391 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257637213 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.257656064 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.12257642 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.465685457 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.274779941 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.253923927 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260038607 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276616405 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.396650295 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272844833 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.289599328 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.259209169 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938168805 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30350941 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.295279966 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.520828677 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.272453951 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.117884028 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.273954319 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.257467028 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.559890019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.515144267 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.312013866 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.258132698 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.281075563 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933283996 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.315198575 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403627153 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278916864 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298878345 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.457873207 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661068907 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.255725459 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.902118216 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.261072233 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46545975 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.265029915 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.564929496 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.729423252 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.281885065 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.268021429 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933477636 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.958997812 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.952576386 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.26979354 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.523416847 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.198228077 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.742427046 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.261123977 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.262777973 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.671864696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.266812219 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.258409311 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.257565301 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.264619437 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.395214177 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.430299239 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.446210992 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.265435199 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.693606907 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.290094025 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258263233 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.271053508 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.263388656 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.608689948 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.35759966 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.265162441 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.262241384 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.266546851 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.258904632 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.719429373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.22014195 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.265353844 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.412754127 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869646881 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.281921426 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.264931679 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.902533072 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.555338869 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753356096 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345097834 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.548473493 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.2831034 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.297684345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.816712942 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292040077 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.714417244 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282740822 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.268200228 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830902394 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.285070229 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.615363539 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.260186995 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.267210865 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784833498 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.280616947 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.266733985 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.434537374 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282141463 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517071188 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.269067257 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275933214 seconds)
  done (took 1091.80408965 seconds)
done (took 1356.780104851 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.265310728 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.262209954 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.253045714 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.269693201 seconds)
  done (took 26.233493433 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.275003359 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.270211478 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.273173502 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.268286137 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.275624438 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.270635998 seconds)
  done (took 8.814810248 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.335906344 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.268825154 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.265633108 seconds)
  done (took 19.063112509 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.454744952 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.520968142 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.598157185 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.367430996 seconds)
  done (took 10.128811006 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.274357354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.275531291 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.271408887 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.276788988 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.271879905 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.274949833 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.274150116 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.275601179 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.274688414 seconds)
  done (took 12.658875763 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.987225357 seconds)
done (took 83.06970012 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.245921786 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.028358282 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.243853608 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.265123829 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.277400656 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.365781212 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.296351411 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.968160777 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.262353581 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.09874994 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.767249152 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.25913701 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.990294865 seconds)
    (14/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.386934895 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.281249152 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.524134778 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.275636106 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.43540795 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.301835014 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.268853704 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.295446794 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.441761264 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.245564166 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.350599042 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.05187115 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079106167 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.291453253 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.242756231 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 5.260833641 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.283329173 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.302152596 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.386387128 seconds)
    (33/309) benchmarking ("sort", Float64, false)...
    done (took 5.528626134 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.603860437 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.279924628 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.332363751 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.710160405 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.337971263 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.249340536 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.502540183 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.267218315 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.392167306 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.162691818 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.350495534 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.240653768 seconds)
    (46/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.251141483 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.28600626 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.840815032 seconds)
    (49/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.445229431 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.286192414 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.350261124 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.088485244 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.164373494 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.635326768 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.297416415 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.291226912 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.895175125 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.381508462 seconds)
    (59/309) benchmarking ("sort", BigInt, false)...
    done (took 6.274140145 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.31225026 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.527134329 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.512536916 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.303795202 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.045182286 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.295576449 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.69632391 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.283028434 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.120245702 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.325444618 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.271966352 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.272361693 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.265230327 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.3585265 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.245812594 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.287865677 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.508985036 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.350365317 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.097337522 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.464362764 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.425798312 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.832216925 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.678094796 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.364770484 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.396049645 seconds)
    (85/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.780349877 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.866497871 seconds)
    (87/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.552096203 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.295522422 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.390510379 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.452722873 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.858262368 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.617838163 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.287309236 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.573187401 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.847818337 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.635666322 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.280634506 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.253229378 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.460725361 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.247822828 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.271231852 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.512473836 seconds)
    (103/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.473314859 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.365377322 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.268680497 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.356917158 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.393524823 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.272163467 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.409887573 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.413402857 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.495224986 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.2531402 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.506100736 seconds)
    (114/309) benchmarking ("sort", Int8, false)...
    done (took 4.357406052 seconds)
    (115/309) benchmarking ("sort", Bool, false)...
    done (took 1.780185965 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.253802026 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.312832979 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.376199204 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.255048723 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.271924052 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.53135194 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.287021022 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.70782078 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.999550552 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.331280592 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.552210348 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.092235922 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.665583004 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.322055379 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.280020079 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.377014898 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.009313038 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.289229063 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.256010123 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.322029172 seconds)
    (136/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.301376628 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.275314646 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.280505172 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.006249574 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.299004615 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.254754892 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.350127731 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.304036825 seconds)
    (144/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.608553558 seconds)
    (145/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.638617846 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.292016524 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.279788672 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.050824833 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.298790955 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.292345698 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.254854452 seconds)
    (152/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.318050235 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.300432032 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.36016403 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.620350648 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.402989358 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.301044885 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.262865478 seconds)
    (159/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.500419098 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.807493325 seconds)
    (161/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.777089384 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.66280626 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.660101231 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.368229734 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.293664841 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.613512173 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.819905094 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.335346024 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.256689333 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.121695564 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.199866442 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.25189747 seconds)
    (173/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.282053599 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.327263952 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.277726701 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.449240905 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.374376792 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.362521701 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.612415485 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.298759315 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.319544266 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.661826794 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.259179981 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.282550093 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.591871072 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.257088376 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.294256531 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.333240631 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.030846063 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.300878268 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.730104441 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.662263469 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.364495374 seconds)
    (194/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.615504424 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.985809042 seconds)
    (196/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.821140306 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.050938361 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.260742259 seconds)
    (199/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.495245688 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.934209109 seconds)
    (201/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.61867989 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.256506516 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.271464339 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.270854453 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.30022487 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.262951405 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.343031459 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.258870788 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.151807132 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.302673838 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.876347182 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.392244426 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.121136312 seconds)
    (214/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.772937795 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.26347948 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.329381987 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.320618147 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.365261247 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.595357213 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.64953882 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.974095804 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.268625163 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.339554834 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.306372321 seconds)
    (225/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.632030333 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.295612427 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.256291705 seconds)
    (228/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.013819426 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.266036171 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.318005125 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.623874056 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.360954896 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.003697088 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.815955926 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.579444122 seconds)
    (236/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.059278984 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.676829417 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.210933584 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.303602515 seconds)
    (240/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.30916466 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.307402103 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.684671231 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.296509954 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.503690773 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.275478248 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.636811246 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.684757549 seconds)
    (248/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.823915979 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.258131183 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.014136416 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.698834119 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.320636531 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.282916066 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.25954383 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.325726214 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.40543182 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.860786087 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.290326329 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.67399762 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.28479872 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.310989574 seconds)
    (262/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.405396636 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.285543282 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.112493796 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.399989099 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.295672309 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.97753002 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.10179701 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.476498598 seconds)
    (270/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.299848227 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.642564596 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.570212658 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.264732795 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.262296857 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.40363697 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.236706413 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.302076963 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.668947484 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.321107944 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.373325583 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.267116263 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.368802558 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.721469034 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.391762908 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.266322245 seconds)
    (286/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.305017452 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.115775023 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.262477706 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.18384872 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.90327896 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.441198363 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.173372516 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.055283647 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.345087454 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.374792113 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.984126243 seconds)
    (297/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.1268867 seconds)
    (298/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.261334757 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.485020043 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.31515702 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.391708194 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.311144791 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.284281404 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.385446633 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.293923311 seconds)
    (306/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.531387001 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.274598156 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.904934944 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.350284037 seconds)
  done (took 1011.966438299 seconds)
done (took 1013.159051084 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.3169562 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317662981 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.29663201 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.320898584 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.408938681 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.322839041 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.306331834 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.297858489 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.345577885 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.345518156 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.295355171 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.319650025 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.298010649 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.301136918 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.300035868 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315099079 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.292094853 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.297147601 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.316009125 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.310030218 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.317104621 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.294551979 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.349505609 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.322988494 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.301920127 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.304342351 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.299641854 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.316686467 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.408560472 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.302027145 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.30287287 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.311497179 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.28466381 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.293305355 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.296791262 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.316837587 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.309719384 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.309812435 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.304321425 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.333010192 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.671983598 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.309707115 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.303469236 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.301543757 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.303450674 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.307119923 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.3040218 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308513142 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316254926 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317244466 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.681933965 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.331293553 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.303397042 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.300963085 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.315548519 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.303881314 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.307594615 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321608652 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.319609255 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316934421 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.280679551 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.308072297 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.306137881 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.316021751 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.312871377 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.699954686 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.30763531 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.307960013 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.684234289 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.324341726 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.699402228 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.318679725 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.303103675 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.317680926 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.336830253 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.297972142 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.300403878 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.304843565 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.312033181 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.300741307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.317212172 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317208439 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.306163753 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.307277018 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321000151 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.329570844 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.314295673 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.304897959 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.312232846 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.323840639 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.315483869 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.313205149 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.309381474 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.301312541 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.313798942 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.306791107 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.310244778 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.310510154 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.311978426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.317152681 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.681039668 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343106268 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.303675651 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.301098339 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.307922688 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.319442002 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.687491087 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.323635471 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.327795389 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.352411218 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.307343049 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.288378941 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.310249585 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325788213 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.31549836 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.311214368 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.299785907 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.290280622 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.663503689 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.329949325 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.307137719 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.305313839 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323966795 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.309558904 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.304359183 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.308622153 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.309698663 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322408582 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.424955766 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.317420943 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.340271833 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.306808391 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.312576467 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.331730874 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325542228 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.339759297 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.313248068 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326084287 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.324459091 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.307064888 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.319226586 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.320359102 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.310200889 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.315590287 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304179963 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.331659279 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322683149 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319863232 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.331227399 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.431166862 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.308022117 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.289610636 seconds)
done (took 220.119162755 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.367883585 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.299836289 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.388948909 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306875178 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.404090989 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.402424225 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.304656404 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.305618585 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.300978718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.677890403 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.305248904 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.30455019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.300635119 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.304935915 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.388908734 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.307809832 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304420438 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.643667963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.308100253 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.377238524 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.306802384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.306424654 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.306283945 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.687790064 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.3081512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.302107996 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.378487194 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.307728241 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.653633269 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.30141595 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.300295748 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.653134071 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.397423239 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.325461542 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.318440657 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.315289836 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.407892546 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.327344701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.388696081 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387661554 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.392093549 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.347967669 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.301380555 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.307627391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.31093994 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.310030981 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.307511289 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.336428775 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.301933936 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.305107816 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.646300905 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.319238075 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.308186753 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.308077859 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30791677 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.340541817 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.308927268 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.312057222 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.398809906 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.310674871 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.374048498 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.691905783 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.684665399 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.311062156 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.304781408 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.309715368 seconds)
  done (took 146.660808449 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.374529449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.383248616 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.42096992 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.324081652 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.360080387 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.425292682 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.324375471 seconds)
  done (took 10.834199342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.316072049 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312021226 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361103617 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36166966 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.311591468 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.454880091 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311958339 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.322148894 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.310326114 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.36383891 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.312387346 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312111788 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.318840115 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.309348172 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35898534 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.323322985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.425295013 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.313296754 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.313253651 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468872128 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309736073 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.318953481 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.364629568 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.324518409 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.310224099 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.314293126 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880953854 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.314642886 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310324519 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.309763511 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310437015 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.347002365 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.311468298 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.311612265 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.31050998 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424268642 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.313341997 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310678064 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.313680669 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.310401578 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.314629203 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.313179242 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.313778175 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.310975248 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.313901144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.335636744 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.313283105 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.315010019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.315214068 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.314643007 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.362798485 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.314372412 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.312214934 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.312748126 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.36860988 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321590973 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.314850329 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.310685703 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.312993663 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311826155 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.467071154 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359129645 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.311783394 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35923726 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312514886 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.315374314 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.314271565 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.315322699 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368709465 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.316067383 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3632206 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.313361463 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467694941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.336812764 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312750692 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.3170014 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.315454707 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.315142386 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.309802122 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.318046661 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.313122358 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.31508524 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.322012672 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.314177444 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.313738549 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417790123 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425473844 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.315210176 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.326684681 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.322265005 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.314326326 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.369226732 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.317373298 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.31464762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36793077 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.432985627 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.369895571 seconds)
  done (took 151.210678236 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.319360488 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.324776998 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.317886489 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.333063862 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.316188195 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.316394828 seconds)
  done (took 9.153042064 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315965483 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.318620886 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315951439 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.317137152 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.315533689 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.318169719 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.317235646 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319842182 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.321151501 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.316531006 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.319065914 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.316539515 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.319567754 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.318425429 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.317844439 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.316522817 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.31740521 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.315438072 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.317029712 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315201665 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.412203822 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.318582071 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315402472 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317701635 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.322897644 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.318777123 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.323119263 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.318139851 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.315789679 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.319159028 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.339792406 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.31853103 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.316082709 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.323575485 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.320156332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.317601978 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32322447 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.31605863 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.314955686 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.317119255 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.319700656 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.320828202 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.319371246 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.3173695 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.321728821 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.323639177 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321134511 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328261281 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.316630236 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.320595984 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.322837676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.321317111 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.320796882 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.319478707 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.320180895 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338058687 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.322037976 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.318954334 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.321264528 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.322459524 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.322614601 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.318992153 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320215984 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.325959957 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.325671519 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.32093595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.319368851 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321739914 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320634676 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.318951289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.321558958 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.316298734 seconds)
  done (took 97.35661018 seconds)
done (took 416.428983658 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.631269271 seconds)
  done (took 7.861078813 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.35002553 seconds)
  done (took 7.583615578 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.202394242 seconds)
  done (took 21.432485611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.333250081 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.337221792 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.333267217 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.324270359 seconds)
  done (took 26.559650667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.441214867 seconds)
  done (took 7.672100713 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.314548296 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.719448222 seconds)
  done (took 14.262902609 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.699603466 seconds)
  done (took 7.925858387 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.509182953 seconds)
  done (took 7.741982041 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.335675239 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.331362747 seconds)
  done (took 14.157875791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.2975002 seconds)
  done (took 7.531222672 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.05205761 seconds)
  done (took 8.286479067 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.332039887 seconds)
  done (took 7.562108273 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.350785972 seconds)
  done (took 7.583584316 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.096425452 seconds)
  done (took 9.329840013 seconds)
done (took 156.72083056 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.314117898 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.315412292 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.317027068 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.305907029 seconds)
  done (took 26.484638788 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.354088362 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.357941623 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.356572597 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.367001867 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35913913 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.35697232 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.348050569 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.347875017 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.364982896 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.358089199 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.357705959 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.357231412 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.357287924 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.349030075 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.361021642 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.360206212 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.367353437 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.360992153 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.350101848 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.361364127 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.322956038 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.367940986 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.359893405 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.323534368 seconds)
  done (took 33.759501567 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.841783941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.397660173 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.476109887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.377502012 seconds)
  done (took 7.328053031 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.377810125 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.377141616 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.389406969 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.426789371 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.457975651 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.385171968 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.354575181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.348368852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.333707668 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.378120874 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.454367388 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.392277553 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.470450654 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.326490433 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.547676612 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.324914957 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.324639609 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.376772787 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.430207095 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.442782497 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.326502905 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.376765347 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.382334421 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.393348307 seconds)
  done (took 34.634957511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.324262638 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.331477241 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.323574719 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.325210995 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.333313468 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.323530019 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.327644901 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.323826866 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.324988699 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.333676276 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.324887819 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.336621214 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.326986367 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.324287893 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.330513199 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.325274128 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.333775732 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.325898143 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.324312613 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.328666855 seconds)
  done (took 27.787616383 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.317460383 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.174068239 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.670441087 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.576969449 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.32195236 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.317282495 seconds)
  done (took 27.614684203 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.389941097 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.539201813 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.323753788 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.674993027 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.763855266 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.341748242 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.32992378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.556269624 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.861319413 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.855868266 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.382023286 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.389805508 seconds)
  done (took 19.644816524 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.324658467 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.323527018 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.325079191 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.332059324 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.37681718 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.348284637 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.331696753 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.320547746 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.37831832 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.400103376 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.348031019 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.377282498 seconds)
  done (took 37.424108131 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405382445 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367876252 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.20392594 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337519413 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044884015 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525648639 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396749174 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.777021617 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.322939816 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595765412 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306687523 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429961417 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579401905 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33137592 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321851542 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.292534137 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560500097 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775105366 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323729331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.171119294 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347124166 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330160078 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.260694079 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.354484802 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534969388 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.465201484 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.582654699 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.098139838 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610993431 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333717251 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336069006 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326060106 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598502062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98092814 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439608929 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336276369 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337261499 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871691519 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.310226402 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.188815239 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.097068698 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328232249 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337594931 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326154013 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.258444826 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326292486 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758519027 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.328479908 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.03586065 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32471983 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336598426 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419247646 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.330247427 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.894670537 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329803708 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.333752893 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.321689329 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350499081 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912321488 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.655782389 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332862611 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.261932637 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334318869 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.261879143 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951061099 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.442831162 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.329008952 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330202079 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259466543 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.225057022 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341651722 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471009657 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.341440857 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977725437 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007829367 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353005633 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256058473 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84252719 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330324868 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.262329051 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556567472 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103074689 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263781932 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.273568215 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.260786064 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995011569 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32708729 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.669484808 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339484606 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782148803 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.341713075 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347091531 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352007585 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.550579044 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.205810644 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325647479 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.102381975 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476421983 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344038649 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.761618031 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256782838 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.32369442 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584626601 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.537987239 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324866212 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.305823399 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54093638 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331384538 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343391842 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.330269338 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.353363831 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.885111631 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356430675 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64881567 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345987483 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.107390593 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017751402 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327881211 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.427820077 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341490497 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565217907 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.039888944 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204227056 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398712509 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332914263 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331839098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.281200213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.922980991 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.209386595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.327009698 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33156014 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.338623829 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.328340324 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277301207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.31863697 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343102067 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.109651169 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554960719 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338155453 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60531339 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264518306 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47622324 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333046647 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.548252053 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.51084868 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.344679959 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591102283 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33748351 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339177232 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343918078 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348441364 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432345341 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351274495 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.333385813 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586339519 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.333372769 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.335322235 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.304671332 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.109014815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333496619 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.340079585 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335725217 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909620952 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32574186 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329986269 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218181568 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.34489702 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400897058 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338284951 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340573243 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.095681983 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357926089 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.338290604 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.334311889 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55701299 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344387159 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.294344662 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41454407 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.527730391 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892454483 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363977196 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.265819166 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.04329911 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.029081026 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332373409 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.52467165 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333471009 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345124025 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345116478 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337417338 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894535167 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354332597 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.221331426 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.339399503 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343139702 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.342851119 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337962667 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.063794329 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.69770395 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346481275 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.347330368 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477617535 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.350103191 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.271856061 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.852443432 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33805861 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333648078 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.111550048 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369166951 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.208573086 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811249887 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588083063 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352725156 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347282925 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.388863487 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.370038459 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.344048714 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.146925634 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364645594 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.350951577 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34879797 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.34676228 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.27974895 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.703843392 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898831692 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035646848 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877753422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263278554 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.341442826 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.232064276 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.773001649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27231245 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.993572724 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515411953 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792137588 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274626772 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529480027 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.514330345 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092947521 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349605567 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565329572 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243891115 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.157985205 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368921141 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549173048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372271668 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347468461 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265089399 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.851442658 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576083472 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.164659732 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417147093 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775981585 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.15357507 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.139652488 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.344968026 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620776458 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513809438 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885838024 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.72529143 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341166376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348216214 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816166892 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335372175 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.864089458 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951005526 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363336075 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.537071503 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275136812 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353286261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.351220782 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.335746624 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.585470616 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.342898133 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.596349152 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353290174 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278909027 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353578693 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854878196 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.214114382 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.349172173 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344877871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048695764 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336430711 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629855534 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.343320409 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.064605256 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363595545 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.278223274 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274761722 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.026374326 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335278788 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298748546 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794631058 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.347698278 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355943949 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340422011 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179344712 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584461784 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.342498383 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892918317 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579270879 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329609414 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376459243 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.428132787 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.174110846 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.337044542 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221637613 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564896739 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344231084 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56007016 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.235798448 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.235511303 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38565016 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548694154 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.236470864 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342278343 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585559382 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.065266862 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.346002675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019482889 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373488728 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333462276 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347583319 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329827278 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376884963 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418935077 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33842323 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.341239686 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.341301008 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498705672 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338166189 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354921767 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.346083652 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426272445 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.686346874 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.063804612 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.111346754 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901049531 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066880362 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921982221 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365309438 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330275793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329925733 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268164561 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479767804 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857865207 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605911836 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462503835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.342682177 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360952583 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.185939489 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367196041 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550955306 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603640095 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.305785309 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331869373 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126981538 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.2145326 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346840332 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.542088056 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811565284 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870749071 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44613825 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339951539 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.770033056 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614236929 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.426300305 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334912924 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924681142 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.335219058 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620619421 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.354019642 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334585847 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488039296 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34685552 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993951637 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.366891867 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.49254493 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.111917886 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.33017155 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595073395 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.796331883 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.353732518 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903560278 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034515534 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603031321 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404274093 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346715361 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.439590848 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48214324 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.339071085 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.23487593 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336396366 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177987908 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.043584673 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.344880357 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904522029 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621355857 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.331901207 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.343383584 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363369188 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.345011549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559515612 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004174627 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558465415 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346791686 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346062982 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.903732609 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909953944 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369055194 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269926373 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.340419151 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585473609 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596099209 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358882269 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.793248969 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.050746532 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865800514 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306053426 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362141707 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340750987 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018308598 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912277127 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.090462945 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816100973 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.996611369 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352894572 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615895113 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.342123235 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347316815 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620638071 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.342306862 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.33467709 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372926679 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.909204992 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107487429 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.342299329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.268224804 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.282315064 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567206123 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344939063 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280131056 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338794815 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.50979891 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347306684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464721453 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351746355 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.347460806 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343497587 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.093513915 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620726447 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.342650998 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.338021519 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.244208811 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361896423 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367703449 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598042942 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345312722 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.013470257 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.694800481 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594243492 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347668183 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.324172912 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.343768837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339366933 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060147924 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350076573 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350505146 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889982393 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.354429271 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.357001619 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342168054 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.554994975 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548948683 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343723986 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356336877 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35241859 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36058699 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.243113351 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107010257 seconds)
  done (took 1634.60616347 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367259827 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.35379326 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.368180634 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.341013983 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352262715 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367666437 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.35409521 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.361807691 seconds)
  done (took 52.12234888 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.349684946 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.502620194 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.377677924 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.341514651 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.368336319 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.347592766 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.787722743 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.361382192 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.373594406 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.35408858 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.359074199 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.352262044 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.975563797 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.356397213 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.350368231 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.335971766 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.356764081 seconds)
  done (took 65.506208307 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.34040266 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.921937202 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.43420081 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.350768994 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.350386987 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.376799249 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.067800013 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.420629246 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.343153099 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.64594783 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.010893695 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.389007079 seconds)
  done (took 84.904649709 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.350029128 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.351330944 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.346776494 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.351458997 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.347174872 seconds)
  done (took 8.000547856 seconds)
done (took 2061.053079423 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.587496602 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.996863847 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968283654 seconds)
  done (took 5.217756646 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.488859115 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.542262372 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.658074381 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.665887827 seconds)
  done (took 7.613613015 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.619311583 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.718366379 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.536525803 seconds)
  done (took 6.134503291 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.69869535 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.354050227 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.369400119 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.340999244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.34620185 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.34477993 seconds)
  done (took 20.287293492 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.34630518 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.346748596 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.353637733 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.354098331 seconds)
  done (took 6.661418594 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.323521046 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.030770345 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.327267382 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.342974853 seconds)
  done (took 18.279519128 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.096266541 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.112676201 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.093487621 seconds)
  done (took 7.563708102 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.348167375 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.191216336 seconds)
  done (took 9.79824295 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.630743909 seconds)
  done (took 2.891575799 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.476742608 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.678075854 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.360152587 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.248158605 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.374594417 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.017883226 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.912781043 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.518013518 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.230466294 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.4238277 seconds)
  done (took 27.503647026 seconds)
done (took 130.216910861 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.089173338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.725083783 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.549378318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.095574033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.572097078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.550434729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.754856632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.062680566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.609073219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.564681299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.099626237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.57445204 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.493692337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.733511474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.493173924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.73522644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.573153967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.22377938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.851707205 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.943294364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.75084346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.691039792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.929295637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.74903133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.578123892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.502404428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.267565947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.725148484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.948020872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.33145851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.506314153 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.10940367 seconds)
  done (took 190.643667175 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.361562996 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340733331 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.347619309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.359243988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.340536867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.358812597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.361169771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.358000772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.366110248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.345172338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.358532555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.371206993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.344388113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359698136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.343459519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361097628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.347826334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.348759659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360902004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.343672881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.345214036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.34417177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.35746445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.348466162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.348340295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.346817975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.343472818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.360689497 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.345424023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347480528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.345126213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.351559251 seconds)
  done (took 204.522590117 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359932996 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.353994812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.351248893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.342930728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.345078809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.363585295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362029861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.371051645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.348300562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.345032585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.34776609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366491914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.360153889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.349324302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.36161001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.345787092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.359740583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.353240716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.357335301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.345941353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.345380548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.365104639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.346909134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.361927727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.365588739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.348377194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.368265673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.346800599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.352858459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347387297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.36282949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.368835518 seconds)
  done (took 204.635050303 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.551674769 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.359265114 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.358928696 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.314976697 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.362755634 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.360982741 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.361545913 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.549836643 seconds)
  done (took 14.48442363 seconds)
done (took 615.546171323 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.590336453 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.312698341 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.562631047 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387294027 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.11728542 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.40341982 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.378813775 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.541257435 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.273030691 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.555460937 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.569325195 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390022206 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.706537761 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.375317062 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.633677578 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.4795472 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.220125888 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.345791335 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.691246136 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.900340203 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.639932466 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.814279342 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.567458717 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.271464926 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.7316992 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.795955797 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.046755982 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.218192173 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.392321825 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.693646406 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.933378323 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303065837 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.442207577 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.440051334 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.495759129 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.477277352 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.2789635 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.43976514 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.587243295 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.570653325 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.886214397 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.100013945 seconds)
  done (took 91.826522156 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.352382601 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.34890196 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.349904411 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.347813946 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.352597949 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.351083177 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.3478956 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.348994046 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.349309571 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.348891174 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.351013966 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.348615127 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.347121391 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.347985768 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.347329451 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.343753059 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.343614625 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.350768641 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.350860371 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.349100113 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.345851503 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.350055532 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.352428133 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.348784629 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.346535483 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.352002381 seconds)
  done (took 36.346943353 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.367100029 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.617164662 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.772217174 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.3728376 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.36625404 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.367939556 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.441403471 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.372001382 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.373495062 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.371907531 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.531648962 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366016374 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403631425 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.806848726 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.373403833 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.36511978 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371318132 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.373897782 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.618466531 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.380988547 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.469609628 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.363847693 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.444425912 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.372728661 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.389921324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.371318014 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.366863364 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.884224797 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.381780261 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.536611372 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.125175312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.442766648 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.832677862 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.797064254 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.131871344 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.372768126 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.373354449 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.540381246 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.368413554 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.364701414 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.441795396 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.370698286 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.784164769 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.990228429 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.391646509 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.368183641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.907855263 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.549792617 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.59918877 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379667061 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.808632982 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.377271547 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.369513413 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.373295517 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.601216455 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378025049 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368372102 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.89935777 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.389671643 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.443726046 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.37319012 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.371242276 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.626192206 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.364926001 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.618777909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.369605532 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.375852475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388443669 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.787302893 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.374819022 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.002243141 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.38662212 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.368878179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.538020102 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.613584688 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941280147 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388276158 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.635695552 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852435096 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.463024816 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.376324554 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.882370315 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.461533259 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.37338586 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.375178103 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.372786889 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.374822131 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.424639098 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.447619169 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.939967441 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.005106664 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.917012645 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.463142576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.380868563 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.368663316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.900920044 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39819299 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.375149081 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.779429809 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.007331193 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.391612268 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.38371712 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.01745935 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.395763493 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.449200818 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.373620661 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.798077058 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.376093702 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.429592479 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.376556629 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.384632738 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.400315552 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.44748602 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.371410885 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.371147213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.986958742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.562477997 seconds)
  done (took 179.993992895 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.368100287 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.362984871 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.364728217 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.360979388 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.37015498 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.376995623 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.37340694 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.3693575 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.366608671 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.37144671 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.366471367 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.368822613 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.368166509 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.373663303 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.376022411 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.374267101 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.983409579 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.368219334 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.367224416 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.36223587 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.146639015 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.37208816 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.3705696 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.379829729 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.366394364 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.370963751 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.375058825 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.366726363 seconds)
  done (took 153.01916445 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.377183356 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.920708105 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.38658359 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.504841914 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.391206972 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.379357469 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.498516781 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.423437571 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.39701638 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.367582296 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.373313382 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.666485538 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.373076454 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.880700341 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.566321699 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.52164603 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.879492611 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.393700627 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.377123791 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.377131003 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.509492399 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.371376728 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.666275788 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92981074 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399971449 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930940108 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362137051 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.379890959 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.3732478 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934219335 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.396802392 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.673461177 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.455476458 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.426522374 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943826407 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.898842698 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.902352006 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.520686792 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.381634226 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.375676122 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.372516818 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.354275112 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929374084 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.39816774 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.381126228 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.91942042 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.401789479 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.381195492 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.385836412 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.375203785 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.432852589 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.440125356 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.68172678 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.941100671 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.466120439 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.385332585 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.501778014 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.788957201 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.376362918 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.87487148 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.354772688 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.931052658 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.400630318 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358393651 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.376689684 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.383752426 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.526391596 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.498822381 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.873993534 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387078665 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.879192363 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.531448424 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.375283038 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.380477518 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.382471928 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933726218 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.888219432 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.527604306 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.504090451 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.563033301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.361981475 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.377645077 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.364521514 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.445556785 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.373817152 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.929778981 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.885970161 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.3909913 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.381738076 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.378010457 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.374850561 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.547030169 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.937469973 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.462824454 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868824256 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.68713842 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.677492969 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.385138489 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.43904153 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.397834351 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.678855496 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.385051667 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434197938 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.854887764 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.679368232 seconds)
  done (took 163.71917998 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.617946658 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.526673548 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.458930258 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.511231863 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.947185879 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.938044288 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.5752631 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.518763028 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.485213731 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.636463112 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.505385918 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.470072459 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.539984649 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.448077027 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.103949674 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.465695557 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483766168 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528827007 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.482047191 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.364636846 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.999180847 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.660570917 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.540683251 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.218111631 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.472331039 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.126485069 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.919738673 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.900586605 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.547175066 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.630119291 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.883521153 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.479735379 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.299207451 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.048319376 seconds)
  done (took 65.621080603 seconds)
done (took 691.794378952 seconds)
SAVING RESULT...
DONE!
