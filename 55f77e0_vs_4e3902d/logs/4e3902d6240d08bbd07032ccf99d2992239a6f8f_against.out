cset: moving following pidspec: 25796
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.972326964 seconds)
loading group "string"... done (took 0.542175115 seconds)
loading group "linalg"... done (took 8.908222814 seconds)
loading group "parallel"... done (took 0.168586749 seconds)
loading group "find"... done (took 1.423675343 seconds)
loading group "tuple"... done (took 2.076609615 seconds)
loading group "dates"... done (took 1.365974845 seconds)
loading group "micro"... done (took 0.217616313 seconds)
loading group "io"... done (took 0.620872758 seconds)
loading group "scalar"... done (took 42.656729525 seconds)
loading group "sparse"... done (took 13.349181353 seconds)
loading group "broadcast"... done (took 1.085649278 seconds)
loading group "union"... done (took 12.133077599 seconds)
loading group "simd"... done (took 2.522414839 seconds)
loading group "random"... done (took 10.170888719 seconds)
loading group "problem"... done (took 1832.797655848 seconds)
loading group "array"... done (took 25.798396685 seconds)
loading group "misc"... done (took 1.131766528 seconds)
loading group "sort"... done (took 3.788015485 seconds)
loading group "collection"... done (took 18.867667081 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.627471645 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118821196 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.166976905 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.34723077 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.212432999 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145735016 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164195531 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.559488099 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.981578694 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211078464 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145168401 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.550421013 seconds)
done (took 5.955799563 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.289171776 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.433490434 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112254308 seconds)
  done (took 1.204234461 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093305293 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179286592 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094144258 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110253839 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111292945 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109751047 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095343854 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11052547 seconds)
  done (took 1.469151072 seconds)
done (took 3.72086466 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.489611404 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.839032913 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.499915133 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.13239698 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157120714 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.147647573 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.307233502 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160121165 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120779395 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085255611 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170170994 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.36829179 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.476290629 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.946707734 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.084197166 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127363286 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082879704 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.714447122 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082393193 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13380458 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527412898 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114732794 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118453062 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142974997 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191128544 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131079505 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163872545 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096517946 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.678071104 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104528045 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185749842 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099846935 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161119598 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.251165657 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096012194 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098147149 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674791423 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.178300744 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113260657 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101253295 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678440674 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081812709 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194255501 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103184506 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108878048 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185919227 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114943073 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078767379 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102945183 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.091370678 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156719089 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.498167022 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108401106 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14721454 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109485206 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692408163 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098848327 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155605582 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141312415 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097997513 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100011271 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108463146 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15698194 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11482821 seconds)
  done (took 19.541238874 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117410229 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140403648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094450618 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139659727 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138612962 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095931678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084264692 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094716497 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124603797 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185475403 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.121670548 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143493546 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0913209 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080031648 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11753856 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24872703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107105127 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120732357 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081423013 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106163435 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140151231 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096310933 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108875376 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10897966 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169685183 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207085215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109656642 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123384589 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094457692 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099017482 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142509181 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161185432 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075382781 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094452053 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182442845 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119401924 seconds)
  done (took 5.139070482 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200819257 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11640657 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19205785 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178613455 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145904058 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167064216 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118468473 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.266910813 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.198003791 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179360301 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117447026 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112108815 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077930082 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097398363 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077695973 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.677203473 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180681611 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149178495 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125997722 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103379118 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082163689 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37566371 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100646849 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081185247 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102477279 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072784215 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174823995 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103270685 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.295081595 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120252085 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08798046 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134168879 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215369562 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132814045 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123029764 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103433579 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08016109 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.233983123 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107243858 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07853803 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124929096 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131804099 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118225724 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100283334 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110037794 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224213397 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100683985 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11769187 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.086862066 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199414812 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.148180071 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079579573 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.373578032 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099547111 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104397561 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080995698 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.293246237 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131604231 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098474215 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078856173 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10201472 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077876188 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.460238771 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106509316 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.825283269 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096845092 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156461214 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099888325 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105531506 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085512506 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102615405 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101299669 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100379133 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079292828 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095913385 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079350107 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096202649 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08365189 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115211996 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101211024 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078569808 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098406934 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146866741 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116554492 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.129715839 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099225299 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101062413 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07864179 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126778639 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129555619 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095652936 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084007123 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145804786 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08565703 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116620247 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101180448 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142742634 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081652372 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098893846 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187973811 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082480012 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123199595 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099362914 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112548534 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12195068 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096874415 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08446185 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.0958469 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079556305 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161946025 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082226754 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078956898 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10060771 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111098097 seconds)
  done (took 23.642356602 seconds)
done (took 48.980214894 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.461249246 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09465741 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11333837 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112112248 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111338574 seconds)
  done (took 1.629351371 seconds)
done (took 2.336657415 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.352921149 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172311771 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102340864 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196329203 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086785764 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202449186 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165709719 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117125752 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199698113 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100350936 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177211639 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098902247 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087801481 seconds)
  done (took 2.794177763 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094109655 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11784641 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082210776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109619612 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075698093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109148849 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092312389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129580927 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092045955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101813493 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075543958 seconds)
  done (took 1.785270322 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091342718 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112994216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081283949 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105850782 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075676327 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089123866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106956031 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115219044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090011199 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102672213 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076284116 seconds)
  done (took 1.753879104 seconds)
done (took 7.030255972 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.042194497 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.307783034 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119325033 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165009689 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.338956912 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209695496 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.518103957 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132175511 seconds)
  done (took 11.721409138 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.131919521 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098065739 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080894801 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09900902 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082062107 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100163895 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083280079 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095232709 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081846372 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096768174 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080095462 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09510351 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081351644 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098783073 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082640254 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096280306 seconds)
  done (took 2.250193237 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117344313 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117394435 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103250494 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107627767 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084105842 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101196459 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087021784 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101596967 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082760883 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100616921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106385769 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089554024 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103981473 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082360944 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103092875 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10691319 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08329704 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10264461 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08720149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102894977 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090073193 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101323802 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104030487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089411335 seconds)
  done (took 3.1712225 seconds)
done (took 17.848914079 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168242707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08449929 seconds)
  done (took 0.962964147 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102234456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119267781 seconds)
  done (took 0.939864447 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10689722 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096171404 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135481755 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115245544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081336302 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096765195 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114411345 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09847022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081162423 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097298402 seconds)
  done (took 1.742494947 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085236242 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102038108 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089994739 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118779441 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108272941 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08294975 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102427451 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084411343 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103963124 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079642336 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105610728 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116438106 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087302842 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118199439 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085955776 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10417037 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106995808 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085949502 seconds)
  done (took 2.48825336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080482815 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083079235 seconds)
  done (took 0.883148489 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083378663 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096076405 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083346492 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098992588 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079261929 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095668309 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079208362 seconds)
  done (took 1.335724801 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.507231104 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.254200611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334788525 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.098125308 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151938863 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367965475 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135288179 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112222842 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112437157 seconds)
  done (took 2.836770322 seconds)
done (took 11.90669509 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091283219 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188605591 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.543609094 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118162351 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078390923 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158726354 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264442996 seconds)
done (took 2.164667876 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353248332 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124489031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088945058 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078926404 seconds)
  done (took 1.365629383 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079377029 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102493079 seconds)
  done (took 0.908057636 seconds)
done (took 3.004807589 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078800857 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078405902 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114776625 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095175666 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076038876 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096612925 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076080846 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076179574 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096353833 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07855938 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095610736 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078600633 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094631041 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077048205 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076046347 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095229982 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076127883 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092804139 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076128341 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09491148 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076663368 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094759365 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077110927 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076089478 seconds)
  done (took 2.826350549 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.219473903 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096800606 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084587971 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101077424 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082949021 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102289293 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101289891 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079538099 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102212343 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081615259 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099903876 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083105178 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097938184 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083952707 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098621517 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099713816 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085325878 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097484095 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081889552 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100930876 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084373374 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096579384 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083658494 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103168323 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099223228 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083479286 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097543902 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079395839 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101887998 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082918878 seconds)
  done (took 3.622518965 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087220544 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07614713 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094640526 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08778739 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093443302 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08018124 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.09323256 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077567503 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095134511 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076582191 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096118998 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076268966 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092934528 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077746851 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077734148 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101422462 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111709655 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077389673 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076000466 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095135368 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082699494 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093575705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079490791 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094983469 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077264011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093958159 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07743188 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076697274 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094636115 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077232947 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100431836 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083400525 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093578159 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090092447 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100913022 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076703134 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102069998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077096556 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095317448 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076609718 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093874541 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077130023 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076328377 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105111142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079838019 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094072529 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077513161 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095489346 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078269815 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098138661 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076297084 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093347568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079538804 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095224148 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083544922 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092340164 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078211736 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077500931 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094917676 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077227571 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092915009 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076754301 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100298003 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077531666 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118225436 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088247346 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093987467 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078935619 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098232849 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085088099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096097372 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095862326 seconds)
  done (took 7.046928485 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081745447 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105066946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079128351 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096277439 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075257431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096561992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084771883 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095091998 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079934111 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113365494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077917619 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096252666 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07883844 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098400335 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077742432 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095924735 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087396442 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093057712 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07859454 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097732951 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077818023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101686219 seconds)
  done (took 2.704212307 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222491964 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103199167 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142399678 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11541591 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096839472 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11213586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101531606 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086150373 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102343342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088517131 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104330879 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085412504 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115085913 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104638527 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087502499 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105693339 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101976783 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08843439 seconds)
  done (took 2.697212106 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093571134 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098363839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105085672 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097822813 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081217436 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100924167 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086967464 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113959488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099662436 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080182247 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108483767 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083266547 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099482808 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081267891 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100561774 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081611974 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100362439 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08136475 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107494256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104350928 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08775965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108181721 seconds)
  done (took 2.840650779 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097179076 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099341628 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110415086 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101660138 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076388467 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097138586 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087613651 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097382777 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105834454 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082708802 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097195198 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079319113 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104894419 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080826038 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10357576 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080071206 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099905372 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080923648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099445748 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07646511 seconds)
  done (took 2.595766555 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123613326 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113528182 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097938529 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126040106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114525856 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098262582 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124436278 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115082841 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09725809 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127597311 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097715378 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114767061 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125717503 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104686258 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114478499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125682708 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108535068 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125840119 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114259791 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097653706 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12771101 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114391755 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107952924 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115054103 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099040152 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114123594 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115206299 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105800311 seconds)
  done (took 3.908238829 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080542942 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079725632 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095120699 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077515718 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094623415 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077287057 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0953225 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078060228 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079930925 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094652588 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080566767 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097201117 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080308769 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09770088 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079975304 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097726178 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080268345 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077574817 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094573509 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077904685 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09726229 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080951579 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097526728 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0780557 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095262421 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080419857 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078435495 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094955651 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07965942 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095682766 seconds)
  done (took 3.337536363 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089048618 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104989563 seconds)
  done (took 0.937005698 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078885765 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115430209 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07788255 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102262332 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087436568 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098757346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090476067 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103966421 seconds)
  done (took 1.498495358 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106262119 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118523969 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086957814 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110739906 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100586826 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117303055 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167541032 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086316236 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10543255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081552429 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118213247 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080377051 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109679662 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10378355 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090436986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113926158 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079623777 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109081616 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088981684 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100764805 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087460365 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115423495 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091411274 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106288937 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084132962 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110494197 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112875222 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093239192 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104957121 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094010767 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106398264 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074707487 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103372076 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086870995 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09733381 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099805604 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116180599 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085780395 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108948064 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104547345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090819545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094510937 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092178764 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106425011 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097731821 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104282009 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087180884 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094126406 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082639096 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102729613 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.07657175 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102047264 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076043654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108802687 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091038102 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117555884 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083801939 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104092333 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086216518 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103074013 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089351354 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104153023 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108642923 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084935199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108064008 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091394697 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106770197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077574612 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092567862 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07940867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109945014 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106888364 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111081506 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087050342 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105148459 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079791944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10435872 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08799111 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106311127 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110610875 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087236615 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106817841 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092427452 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103024006 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085668741 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106149265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084149233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101717254 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083098387 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120020445 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083723758 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096718311 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082184684 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110689777 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086202181 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10380367 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083898201 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108945915 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075712986 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104176698 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088805461 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10596742 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111286951 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087964448 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1057309 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091126496 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111398406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087684935 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103327081 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078575577 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105397144 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084194116 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108047555 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076172606 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104591337 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085773564 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105463286 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092010522 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101326065 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086682574 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110443758 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092871928 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101334171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07845505 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103624174 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086584048 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108066517 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092893485 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102442968 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07812953 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095684265 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089886849 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103858022 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08895524 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105941917 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104156975 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076761689 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07991989 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104796505 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110940858 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084947894 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106151598 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091220789 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106696426 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08506508 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109981168 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084605518 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09982465 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092047537 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104262544 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077408842 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109332519 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086148149 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102238014 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087035413 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108417066 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08654852 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106455068 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083960119 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105321444 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088045009 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100264749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086786287 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102850795 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.121092437 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086542863 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095367348 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0790015 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088633241 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101495469 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086045062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100504781 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086003939 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106372516 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080501283 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102894575 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0864141 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117432323 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113398832 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088479341 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107932019 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094398722 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104678305 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089702683 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104023763 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088885095 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105681601 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092278001 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107065057 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088486961 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104885899 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079165432 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106847374 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092720607 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100105121 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080763774 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100263248 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087554963 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111321916 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087385703 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10612439 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084659721 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10697561 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091597596 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104906187 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085848138 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100277262 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086658335 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110437906 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08817533 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10672771 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093619129 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106289462 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077714932 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110486927 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084032685 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109206097 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078024318 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101595666 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083315742 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107606009 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085334165 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102852983 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076451453 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111073567 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092640141 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106785804 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082323864 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105881604 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114039429 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086303512 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108506957 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087718621 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108513015 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101576867 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101706826 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087602241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113075099 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086466649 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095115847 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090614545 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104365787 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081136468 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103778 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084523678 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105537773 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089477323 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106861782 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076701826 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104718527 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084627171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101754198 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079281788 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110932625 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087419721 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105145823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115156318 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088671894 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105979872 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088679994 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104350303 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088208576 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106537916 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091391724 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106119541 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085830662 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101062505 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088179055 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09980621 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080845289 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103940949 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087553998 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105449274 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090375272 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103556846 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092500345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105328425 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089030743 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124824708 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102315609 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083549535 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106658745 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090071803 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104844396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087388375 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096700735 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093202013 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105428463 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094223562 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105287945 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080349178 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107168177 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087455986 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107246009 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088453781 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107279836 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085822767 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105293784 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087509246 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115169314 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083453743 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113588289 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089851957 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108996173 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10504791 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08825247 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104575142 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084017797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105759014 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088824425 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106359587 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086847092 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108196578 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089074934 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104361559 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085756491 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106836251 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089045078 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107686018 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077662486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101889517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083584133 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105736226 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092771859 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106533225 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08619971 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103731343 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089379134 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103758284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080004449 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109914328 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090298 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107085518 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097603569 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101394908 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088277806 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116830459 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077145515 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103928556 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082458514 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102376753 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093654495 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107458086 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093905651 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108060179 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082967183 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098385051 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089115024 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104739579 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078241379 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100418456 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091739426 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104158953 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086953595 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106611578 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09095746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108136514 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091490344 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105037608 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087862157 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107547945 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080188198 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102404957 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083827174 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106639919 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08978255 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102295572 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080318885 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106105011 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088472031 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105976109 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087406867 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105129711 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094260923 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105539037 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088568931 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110938044 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078371465 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106956667 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087840975 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10564883 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084666973 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107616444 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090345892 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108591826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093431926 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10625211 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090303482 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106695441 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081482381 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106417375 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088128715 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10767691 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084898687 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109194054 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095203055 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100750702 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088768448 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107604229 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085322561 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108225771 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089453818 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107189881 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091576572 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108501878 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088240386 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111118995 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106515947 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089841152 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10758087 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087850524 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11023347 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084300701 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113078849 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088779207 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10753858 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087396583 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10235003 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087545237 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105662704 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08731581 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111944348 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089268175 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102077722 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0840401 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099711692 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088856643 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112466182 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094721023 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106840091 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089542208 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098297073 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080580857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107618733 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085192984 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106302757 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090905969 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111439484 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087979038 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103991687 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086427622 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112376633 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092273492 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110626228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104013428 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092004136 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108942169 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089294338 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104239375 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087765972 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108507944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091451584 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10568293 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084868234 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115669218 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092912311 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108793189 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086934253 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108763589 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087269449 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098769344 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089971887 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107297493 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09095222 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107631805 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087849533 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118289774 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101399711 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088635705 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110874973 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087069204 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112724602 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080044954 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108127042 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090146649 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108527182 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080219208 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10314452 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085997569 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107443536 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085225706 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097861471 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098756856 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111971087 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089541723 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105660736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086916501 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098708078 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081143351 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103172665 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090789845 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.1060215 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098035347 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103905849 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085272579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098501062 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089587744 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109170648 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091887579 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100197202 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080655401 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103954858 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089974521 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114906853 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087310802 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107435753 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090936449 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10751872 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08403479 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112575222 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081683065 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108695744 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100095398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108738201 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089759613 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111280891 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112986514 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090932779 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098786041 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090109401 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108172449 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089832554 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10821074 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091518769 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123584743 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090331894 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10356682 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087383527 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107010206 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085089637 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115373125 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089945252 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109562101 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090661785 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107471801 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08998021 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115872291 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10967836 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089518411 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107885695 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088211238 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107141924 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086857488 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106100209 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091681652 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109072201 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089364768 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110494177 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085723727 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118818731 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09627193 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110209727 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081637688 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103313729 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085741732 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099209509 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090857695 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10178622 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087620894 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104817066 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087388184 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108855634 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09120412 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107741167 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090837629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106461234 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079195904 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11079412 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090685244 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110437616 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083708732 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107740637 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090880569 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112290847 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094776256 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105536295 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089669214 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107184975 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091619174 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099729867 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092686557 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106944639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087510128 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103454207 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089846083 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109506466 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090815473 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109411982 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091520363 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108803783 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093198455 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111604151 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081632175 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101191952 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091911918 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102087524 seconds)
  done (took 58.833079006 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15061021 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087718118 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099022729 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080312226 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125486793 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081383461 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098838487 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081565238 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100333108 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094034284 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1008646 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080020194 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121503445 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127503717 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124680233 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113982652 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080906141 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099974989 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080930221 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100111539 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101232539 seconds)
  done (took 2.923073571 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105952342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118858187 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116313698 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101999722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111598939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118094962 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097051583 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118812608 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121102519 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111772304 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103199599 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118313915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112382937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093266156 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112929764 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114059723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103605458 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110314152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117978321 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097357536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114781768 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115638799 seconds)
  done (took 3.230829296 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094266145 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087672476 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112796785 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081990427 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107174876 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.083076841 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11222063 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084949561 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11186951 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088512578 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105368053 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08925574 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112719783 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082738919 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105609932 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084929338 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112168098 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088444976 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10906089 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083329726 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128728292 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101715584 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.084050882 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085990838 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117965518 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108262931 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.088750366 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088353379 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105079918 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088475878 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103927977 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091100541 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111458918 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086143506 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105996635 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08848791 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107580718 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082219644 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105187548 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092702133 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102723115 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089907242 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115271344 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085629189 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104502518 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090436554 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107640556 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082925436 seconds)
  done (took 5.483434706 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123213395 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159486307 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093584742 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156427269 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129848366 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119164181 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093516263 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149563037 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106686262 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088274398 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126435822 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123413312 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090672421 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118036287 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093033342 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110704933 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112570173 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093822852 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119245707 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08855846 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118485233 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112600965 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104049937 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121630771 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112801347 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088779571 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108309931 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098207044 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120067495 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114913485 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094297436 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118889172 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128968761 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.116899341 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09194937 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110773635 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105881439 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109693401 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110647378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087443168 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111393572 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098754976 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113108732 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125827782 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090740575 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110003565 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092107317 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.110782826 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125785353 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096028229 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118714876 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121861578 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094962018 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109307742 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095128433 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126776485 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109380011 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08762907 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112923213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120299644 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089050937 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118677899 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127958541 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.095578949 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117458436 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122548828 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09245231 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113141293 seconds)
  done (took 8.463148324 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096611461 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132876902 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125291212 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106247297 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11465572 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113163826 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095788673 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113462623 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094880918 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121731056 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114162002 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165104066 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088694861 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119977079 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094306557 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115945791 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11335674 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095008048 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113960475 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095042264 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115292171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125164596 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094745396 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125192512 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127272952 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107777271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09589736 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114450688 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105607886 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113980429 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126783202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114165714 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095319319 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124638872 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126494475 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095263006 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104535561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095810586 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115000071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113989505 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089068547 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125696061 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113809404 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089614842 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113519931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095254214 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125668364 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12750659 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12071329 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102878548 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115319049 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12561658 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095148503 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114828865 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124673158 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133551866 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105877714 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125164071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114234438 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106236297 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126562279 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133584781 seconds)
  done (took 7.796158109 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087215514 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085507456 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104078764 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083925042 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106705648 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084661793 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105944844 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086805796 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085568716 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106776279 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085787545 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103833408 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084399883 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105375871 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084558928 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102414843 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08458696 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082939299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105804535 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084145266 seconds)
  done (took 2.667650598 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095053377 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12663482 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087361102 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114449665 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088911191 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115353917 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108108127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090182276 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106228408 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090289043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1184659 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099428338 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107501278 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113209988 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09985776 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114114911 seconds)
  done (took 2.486650279 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107312719 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11982406 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132784669 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0920583 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103801598 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095466845 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107308928 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083054861 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101779435 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09643306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112886842 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098092533 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10722495 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085131331 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107276233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093340887 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102485378 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092103461 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106956725 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112275454 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112439168 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108626353 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088826036 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109156816 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090496388 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114435897 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.093643668 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104421405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085199059 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107308844 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090081255 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116320012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082574688 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113719143 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084195656 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103966451 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085804917 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107993509 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091219677 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107154944 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083315334 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110419568 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085993315 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108753764 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082028752 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108540143 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082485868 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114752822 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108019503 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090569018 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105887271 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095713158 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113098877 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099454238 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117163468 seconds)
  done (took 6.37161802 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102369303 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110835747 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091185128 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104555799 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0904141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114340132 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091343297 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108637247 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088644648 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104096103 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089027466 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110788918 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089057079 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11081732 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088726407 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111278609 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08227439 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108362961 seconds)
  done (took 2.610118443 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092279963 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105785759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094456025 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106744238 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088370872 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109445704 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084000883 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084931995 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105520852 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08715842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107300073 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089162508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105247471 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089456005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106914225 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086966971 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108690763 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085742341 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106103882 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083500928 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108798743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086562858 seconds)
  done (took 2.937394371 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105517102 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139950463 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101211826 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150297869 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112005432 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091049855 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12259031 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091087054 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129912948 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110431169 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091152395 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109668711 seconds)
  done (took 2.173331342 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112980982 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145304466 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084817608 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1109976 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120584436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093057643 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11186953 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092589066 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125280561 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125613903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091104189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124469563 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124657712 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122900018 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099077594 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121583985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112804295 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093454058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107866066 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134607464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093349582 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125224936 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111569969 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09327489 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112607025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123346653 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104767055 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126299961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112764781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105821866 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121488269 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112331517 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104743258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126627796 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110320182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124426495 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092312296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135589875 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120201958 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103382886 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112568512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120226309 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104460012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11950368 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125608364 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09258355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120404795 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111944194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093326694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140263102 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122530393 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123654376 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099638052 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125068536 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1241014 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139694239 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126712259 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124095004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100784187 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125947434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123440222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120498321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103760294 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125977011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120208203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124175731 seconds)
  done (took 8.404850275 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129198501 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107345875 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091904346 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1284908 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124708214 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112745959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093084177 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113233055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092710661 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110595408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1603754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112822914 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103929662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124677136 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113055196 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094241839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113755263 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125083025 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090230444 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140536801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11305424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123676962 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103782718 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124520119 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125887994 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121671713 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093314864 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112167062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092106266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11359505 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119144566 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092944726 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124498176 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105866755 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103356421 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113078524 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091592786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121901508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113140753 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099975351 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124443368 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134571397 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112821802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092640115 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126318681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112620893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092360949 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110038938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092240958 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11008633 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125708501 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126578431 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105258907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125070181 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113149825 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092547115 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114688503 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112328836 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094046551 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121366376 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123713498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093287336 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140796674 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113629638 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093147956 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123504874 seconds)
  done (took 8.242639212 seconds)
done (took 157.362488627 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105667775 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144743353 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102245744 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172673783 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087390687 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143549377 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121288844 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124621312 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0871866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108935002 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087802058 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112208175 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153133633 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10902947 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088387359 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111296736 seconds)
  done (took 2.682683183 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181691144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28565495 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107282549 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113341553 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094174084 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111697904 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091797052 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115835886 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088978668 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.121370126 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110614375 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09164962 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121415837 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091106682 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109474593 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090673161 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121990294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090491929 seconds)
  done (took 2.96708082 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113539068 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.16175601 seconds)
  done (took 1.10608783 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124522317 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187930417 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307864101 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164322503 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117842843 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131495868 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166085684 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128945966 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197387932 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130294522 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109736389 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116294344 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140402786 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100479589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119800192 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09446139 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142674345 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118147098 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097505248 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117270221 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117037439 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117156702 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12073879 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097294238 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185394141 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129967049 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116234348 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096444001 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116122606 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09659158 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121613106 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13015099 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108128509 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193456973 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100213159 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187292858 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10197369 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115926663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116180769 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094855091 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119511093 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098936122 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131617705 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114626386 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.096317839 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124390905 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096203769 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117496131 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122334972 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104791435 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124025369 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121085122 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168548475 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12493538 seconds)
  done (took 7.767517977 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.844247657 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164168789 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115882891 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.94437484 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147673731 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130181966 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.838216165 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120565851 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269156586 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.081554804 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139101819 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128932936 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235224857 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260818385 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153139406 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341379704 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.721859974 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136087224 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123138702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157859959 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122565076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143178219 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113360682 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445934036 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118494031 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115230368 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099258221 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127863139 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168350946 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114043776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097256465 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.207991372 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271783969 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185735946 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116905141 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092440871 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114558794 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175015057 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272497922 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222389692 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180168091 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090092942 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113652133 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105842652 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136054351 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110599602 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172508297 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181518822 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.200465792 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097348829 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127879192 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102121416 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126694041 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167780756 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112826504 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345981807 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345643984 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093601083 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123347665 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110534277 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270276774 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114563528 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207074812 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14180697 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217550027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091081268 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79138233 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172244261 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11508063 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122054226 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100924453 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120346017 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104129001 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174022787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388705406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130299318 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118345662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092469057 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232469594 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092751242 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114767721 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173121345 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114690813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101721659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130573622 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126810977 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179276281 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25089804 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129727831 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100133029 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11987144 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12715334 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09421205 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242318149 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201215846 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186026239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.222598378 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127722532 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172972551 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172637977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126893519 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178046134 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122240164 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132510497 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106316307 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219232607 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148573331 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092900467 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119669734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121544146 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152624805 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096542689 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122409057 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178008837 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.49679378 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173875062 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09004064 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118615674 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10143858 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190159265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100435159 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268336063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122744206 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175005342 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099874316 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111793222 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122645627 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.171595758 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127013189 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107319832 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127681975 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121698767 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257528232 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225032876 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108420681 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243283161 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184573894 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123644254 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182236469 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100371016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200364997 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102418778 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126874137 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115954955 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762846549 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128925395 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122485337 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098129751 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19969942 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114611742 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095157431 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113617129 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090874912 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817064579 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096208867 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.113078738 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094279314 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124710517 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100864683 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121446608 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119308849 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169982829 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238486904 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105702615 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124120711 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114866943 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168891871 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094819372 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116239533 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094160311 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116409096 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10194855 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119973922 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094757798 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202151371 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167967359 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225759145 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.529881677 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116962466 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092767214 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236408385 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115838704 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310084419 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10162483 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230976882 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17431645 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112263179 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342421009 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.177988342 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201936404 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096274236 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201506087 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089890397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122346733 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169148848 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114324664 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100886011 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165551163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132784242 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129482639 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158821442 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09346223 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235489037 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11391667 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176328538 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11770292 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105516052 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312642132 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115280724 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114337074 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1935853 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097174115 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116605067 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.711002391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116503893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103795619 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126241753 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229388238 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173310257 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123886038 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122038178 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107821105 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169162212 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.241233417 seconds)
  done (took 45.675095932 seconds)
done (took 61.024216669 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311114684 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275153423 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.312337951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203265851 seconds)
  done (took 2.03420984 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185293652 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16084411 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130944926 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115215109 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161050332 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091334926 seconds)
  done (took 1.702689086 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.494941278 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384439726 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.350544484 seconds)
  done (took 2.088822927 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269446706 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.293462586 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367428515 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.457437743 seconds)
  done (took 2.352180584 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212780078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13086981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105262946 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.144404696 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177619468 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182880473 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148855645 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157531812 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134666074 seconds)
  done (took 2.30095645 seconds)
done (took 11.338111771 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.294208029 seconds)
    (2/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.306582985 seconds)
    (3/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.312391931 seconds)
    (4/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.271878656 seconds)
    (5/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.1608689 seconds)
    (6/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.242247855 seconds)
    (7/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.193985983 seconds)
    (8/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.21916417 seconds)
    (9/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.1289398 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.156964522 seconds)
    (11/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.215571216 seconds)
    (12/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.146504781 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119557836 seconds)
    (14/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.210340325 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.165299556 seconds)
    (16/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098887459 seconds)
    (17/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.224840921 seconds)
    (18/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.247348923 seconds)
    (19/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221824051 seconds)
    (20/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118397452 seconds)
    (21/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.131806367 seconds)
    (22/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.198386249 seconds)
    (23/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.186381144 seconds)
    (24/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.131557566 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131087968 seconds)
    (26/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123699272 seconds)
    (27/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132902873 seconds)
    (28/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109717708 seconds)
    (29/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.206160792 seconds)
    (30/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.197033538 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177453695 seconds)
    (32/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12199103 seconds)
    (33/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181980717 seconds)
    (34/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143579191 seconds)
    (35/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.167424881 seconds)
    (36/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20764644 seconds)
    (37/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.210182793 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125448831 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129728586 seconds)
    (40/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.110880472 seconds)
    (41/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.144573674 seconds)
    (42/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194007804 seconds)
    (43/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.131406125 seconds)
    (44/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.193397528 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.263198856 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095389157 seconds)
    (47/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.149663145 seconds)
    (48/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.21114704 seconds)
    (49/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095650203 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.146821636 seconds)
    (51/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.14190281 seconds)
    (52/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.112263117 seconds)
    (53/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.254813862 seconds)
    (54/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134889882 seconds)
    (55/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095553714 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121056623 seconds)
    (57/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098871278 seconds)
    (58/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.109564867 seconds)
    (59/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.20263821 seconds)
    (60/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080639983 seconds)
    (61/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098822294 seconds)
    (62/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.239040526 seconds)
    (63/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119242304 seconds)
    (64/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.204154626 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.149425361 seconds)
    (66/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.149011899 seconds)
    (67/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.132336358 seconds)
    (68/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079733367 seconds)
    (69/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102897136 seconds)
    (70/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092733054 seconds)
    (71/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.211340503 seconds)
    (72/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101784788 seconds)
    (73/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.190533391 seconds)
    (74/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.150896806 seconds)
    (75/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.1179469 seconds)
    (76/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092399279 seconds)
    (77/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.101487562 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099363524 seconds)
    (79/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196712479 seconds)
    (80/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.2167577 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.149459987 seconds)
    (82/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.129014571 seconds)
    (83/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119817867 seconds)
    (84/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080568132 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.148914899 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128046201 seconds)
    (87/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098108746 seconds)
    (88/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205748061 seconds)
    (89/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.156896755 seconds)
    (90/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082880353 seconds)
    (91/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079396396 seconds)
    (92/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.15771591 seconds)
    (93/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.10111502 seconds)
    (94/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100235953 seconds)
    (95/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.100929757 seconds)
    (96/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.18114281 seconds)
    (97/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134785505 seconds)
    (98/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141796098 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.106539146 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121213156 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.105303388 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122345867 seconds)
    (103/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080562738 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120913738 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09859412 seconds)
    (106/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.101631401 seconds)
    (107/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079890644 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132518729 seconds)
    (109/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097919646 seconds)
    (110/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137149692 seconds)
    (111/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.16504601 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099116671 seconds)
    (113/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195559697 seconds)
    (114/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116750643 seconds)
    (115/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080468255 seconds)
    (116/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079832515 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115589873 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09567794 seconds)
    (119/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.151182773 seconds)
    (120/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.210166636 seconds)
    (121/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.079965563 seconds)
    (122/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135067402 seconds)
    (123/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.20862319 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107716373 seconds)
    (125/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.104579175 seconds)
    (126/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.088095909 seconds)
    (127/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117993183 seconds)
    (128/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.205019499 seconds)
    (129/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08036332 seconds)
    (130/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117930203 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099785494 seconds)
    (132/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121742324 seconds)
    (133/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.121574597 seconds)
    (134/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102106009 seconds)
    (135/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113540246 seconds)
    (136/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127098567 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100276601 seconds)
    (138/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.105684955 seconds)
    (139/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080818624 seconds)
    (140/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.101423498 seconds)
    (141/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081126937 seconds)
    (142/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131535895 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100682452 seconds)
    (144/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132051333 seconds)
    (145/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096342021 seconds)
    (146/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126037906 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106605938 seconds)
    (148/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.195401185 seconds)
    (149/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.102909885 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0809387 seconds)
    (151/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.078828615 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.122200675 seconds)
    (153/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.159450665 seconds)
    (154/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.150689897 seconds)
    (155/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.144003277 seconds)
    (156/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079433385 seconds)
    (157/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.15479862 seconds)
    (158/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.162113411 seconds)
    (159/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088130792 seconds)
    (160/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119275401 seconds)
    (161/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089267044 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122350984 seconds)
    (163/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.205955841 seconds)
    (164/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080819131 seconds)
    (165/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.102952213 seconds)
    (166/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0976577 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.131870941 seconds)
    (168/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.106542549 seconds)
    (169/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.101632062 seconds)
    (170/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.081236804 seconds)
    (171/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.147652813 seconds)
    (172/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080027405 seconds)
    (173/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.10198813 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099531315 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118427923 seconds)
    (176/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104471961 seconds)
    (177/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.100904896 seconds)
    (178/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093328167 seconds)
    (179/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080119036 seconds)
    (180/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.102762883 seconds)
    (181/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080769107 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121687649 seconds)
    (183/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.09234346 seconds)
    (184/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.111013413 seconds)
    (185/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.079790532 seconds)
    (186/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129167537 seconds)
    (187/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098940204 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122038803 seconds)
    (189/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.104933668 seconds)
    (190/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.103415537 seconds)
    (191/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.104796114 seconds)
    (192/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115270002 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093288254 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135584521 seconds)
    (195/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079663656 seconds)
    (196/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.10283729 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096867838 seconds)
    (198/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103238223 seconds)
    (199/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098621103 seconds)
    (200/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10272887 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080107623 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129734112 seconds)
    (203/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109736658 seconds)
    (204/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102101455 seconds)
    (205/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088250661 seconds)
    (206/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.088099463 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137327986 seconds)
    (208/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080491635 seconds)
    (209/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103754541 seconds)
    (210/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118738127 seconds)
    (211/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120938167 seconds)
    (212/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095505924 seconds)
    (213/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.103591836 seconds)
    (214/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088830936 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129999918 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098427155 seconds)
    (217/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117287797 seconds)
    (218/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080285712 seconds)
    (219/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11934355 seconds)
    (220/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080689723 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.146032135 seconds)
    (222/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080171979 seconds)
    (223/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118961715 seconds)
    (224/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080774172 seconds)
  done (took 30.61129889 seconds)
done (took 31.474928884 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135980656 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132629839 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10307574 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127243027 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14704376 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107170888 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.128444705 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106786544 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125889819 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095312434 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116873509 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105299426 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127384783 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.145506165 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106611373 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119934707 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096288704 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129498915 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104322313 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129239796 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14814793 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09724255 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.125898106 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096111253 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146796133 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097284852 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126586682 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105028095 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126119666 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095677311 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126775007 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095924918 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12883896 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130282809 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094885815 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119206266 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094634295 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086970751 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121069644 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121079969 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103491121 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11853426 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106091271 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120302781 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098808383 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118232867 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094877435 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13019457 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094406165 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128435191 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097535503 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130949874 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093967888 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118476272 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093794586 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121313907 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127593829 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095413359 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127968948 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096013197 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119574995 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095247398 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121981634 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095429121 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120071872 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096962086 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119166266 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097544185 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116539788 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098199659 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116843602 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097496824 seconds)
done (took 9.091094513 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104281497 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189904479 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152018662 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156818904 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154078134 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114348586 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129486479 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15185843 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.104703225 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148503267 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.150352739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.14158888 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133157637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.128186143 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137390249 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104176695 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126531388 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135882252 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.137779255 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14747966 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153135536 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127575703 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125176941 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14703128 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125036678 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133065904 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130083375 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126670484 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106793296 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133898872 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.119155954 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130992479 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128867858 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115441394 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134112102 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101434071 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.138588546 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122841385 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10323174 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.126974643 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138273247 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115185176 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123746745 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.133812374 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.104613997 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.130667716 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103469671 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125882367 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103776931 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121902201 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130866625 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.142051186 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125531982 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128211906 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105044823 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128942359 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10504715 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130422392 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128397629 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107135501 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126189078 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105904681 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132908044 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143335479 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125174671 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106056184 seconds)
  done (took 9.347972112 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118886567 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157035768 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133876898 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110970624 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130613549 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092216644 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116236236 seconds)
  done (took 1.771231469 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094359643 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147471099 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127327617 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150866903 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.14008432 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131055881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134831095 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093441548 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142087786 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128825437 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123456045 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173808746 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118451987 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106374361 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153697181 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117132786 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130718952 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118287924 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102317313 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151707233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123214186 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11738528 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131823536 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095097967 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140941718 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096646972 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186900739 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131088624 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094060901 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124517801 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099664864 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.21243123 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118002946 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128608561 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093402275 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147930891 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116424322 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125087971 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144355641 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099752366 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140464613 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101616527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126355258 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124422913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102346312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133481198 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106821211 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126983301 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100741892 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148551651 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129313457 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117414816 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120104326 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.098939928 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128353592 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100839593 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133959251 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100145868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147085972 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12562006 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121335294 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146081123 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140676666 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122662982 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136914258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.116390871 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.142014533 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124261789 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102571708 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127022664 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.121625351 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.122619714 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128853051 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.111229094 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126992267 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.122853466 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146741246 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09956182 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132028732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098747742 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123094019 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097437279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136362152 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098318777 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121140994 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13632627 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107740526 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124498109 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098857043 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141775432 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123299081 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.106507078 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130950537 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.098583661 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135016147 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148273085 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105541706 seconds)
  done (took 12.964307409 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096893818 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096037103 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12644579 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119681729 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096898525 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096428595 seconds)
  done (took 1.558172179 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126333589 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123023715 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112134638 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126771176 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164635352 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.120975663 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145529306 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129155041 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.11692396 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134785994 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.120227212 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145696382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149972385 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103997699 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144060534 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103284619 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.145222285 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122975366 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111024981 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124121041 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112438362 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127368405 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09982121 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143619266 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.103270236 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129826434 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125999932 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.111468041 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134811173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105855981 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.127774651 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103375431 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128573053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129997584 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.122071208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129935241 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100505987 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.133191129 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127199277 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.104611983 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.146242459 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100277128 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133132197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.104946149 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129982764 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126729405 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.106020057 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125233376 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.121529738 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129312666 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106089525 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12793092 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.104409526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.13029354 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103430009 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130632041 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128939632 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121686804 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.128196471 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103971678 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.125476428 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.10414598 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130325418 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128174702 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103159711 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128057446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103815575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12350607 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100119927 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.127808998 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106121893 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124565859 seconds)
  done (took 9.714538192 seconds)
done (took 36.260210912 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.090667083 seconds)
  done (took 2.008453313 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.871604649 seconds)
  done (took 1.791504088 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.251683247 seconds)
  done (took 18.20631787 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.523761412 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.616247427 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.976571072 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171215104 seconds)
  done (took 3.208183948 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960995638 seconds)
  done (took 1.90010158 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.316880918 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268309107 seconds)
  done (took 1.510024867 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.8268941 seconds)
  done (took 1.760818027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.579943648 seconds)
  done (took 2.511427663 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.358443607 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205655473 seconds)
  done (took 1.506829616 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.589288769 seconds)
  done (took 1.525282253 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.421121384 seconds)
  done (took 15.361100091 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235075838 seconds)
  done (took 1.187716611 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306823381 seconds)
  done (took 1.246960132 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.595651037 seconds)
  done (took 4.537408023 seconds)
done (took 59.188557764 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106762555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133588026 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110838142 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130891334 seconds)
  done (took 1.418092262 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110863738 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127265084 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107152133 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128290305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113147186 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128655562 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10290691 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.134777355 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103064503 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131332087 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12820468 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103853307 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129313723 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103481195 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126121938 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105117682 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130980563 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103900337 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128187468 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104470865 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128865884 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.129242641 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106600209 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12886495 seconds)
  done (took 3.788219081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106415126 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099838403 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127634219 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100263626 seconds)
  done (took 1.377980135 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111742329 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14286663 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116865706 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135395242 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143557772 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11829109 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12436493 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101289036 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127188323 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.113436459 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126767158 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120091446 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.14271423 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120836104 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113123499 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118120061 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096577373 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142650803 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.109998574 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.137383177 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09952538 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135801816 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10766598 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140120839 seconds)
  done (took 3.896169126 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175689496 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13826108 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148813689 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173313599 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126388054 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123660094 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124902891 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132512146 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.128000345 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099889913 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124391874 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156003752 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13029254 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126842088 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100240437 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130448672 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106267314 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129564333 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100897014 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138704098 seconds)
  done (took 3.56813198 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106820526 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12350456 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096055056 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123271466 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106757336 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126481251 seconds)
  done (took 1.63646119 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096211038 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094577046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.12010435 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094578506 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124711248 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095529674 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117890105 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095899172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095272677 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120561852 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095082216 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119553645 seconds)
  done (took 2.219226243 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499976069 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12321107 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1255059 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100927302 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128945672 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098701824 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139718841 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098871534 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180585532 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125586649 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114864868 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178805151 seconds)
  done (took 2.867090464 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218225256 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105231411 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282338101 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381410453 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166232242 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173904804 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279002572 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176174967 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195176641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144226648 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213887619 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164727888 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136477468 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187418026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148462336 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193747887 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181534027 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208703288 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15657807 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248236076 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17299849 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174795055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198950171 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134142751 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145584657 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164819441 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124987048 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110955882 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180797183 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177029152 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205690118 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130340442 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145250685 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208020297 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247691994 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18537959 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310285598 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141081424 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198621269 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199354546 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283167149 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148123978 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204743425 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163684005 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113162837 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214762425 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16331873 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186561786 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114786708 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149719986 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191403255 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183690121 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188467951 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147340165 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329222701 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130644028 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.154258051 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188815583 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197677065 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234184207 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174998504 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105471848 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194756236 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224039089 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188970514 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126750739 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174879996 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133424087 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185376698 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212976413 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185277815 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175587053 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216555221 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141697855 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170453934 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186708317 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13490096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187383623 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168794081 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129154148 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156655574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117621781 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136036828 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19308372 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105299357 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221752066 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144700283 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.297983487 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242460542 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167470081 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168790788 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17124628 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174685169 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128235395 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.12707129 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15420203 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179124853 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13793728 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140091748 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165146855 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154173013 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107019444 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16044395 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.132275942 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167154967 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115551184 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175052525 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171747907 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137404975 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174925741 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157084545 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.141317667 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178598091 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229775692 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113869395 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14149217 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21253229 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167263914 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14454985 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193467182 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205964437 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182677214 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144900915 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177399155 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204154397 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149616225 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205850682 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150292658 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115527094 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158460571 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166134335 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164942684 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162720758 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110452879 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159852371 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210686525 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.136303354 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144719252 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182425152 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107769698 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136387125 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151735659 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116414815 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151507498 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15859065 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119064625 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164022114 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167996496 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162873831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166157923 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150885593 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200408154 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141377247 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167657016 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128932102 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.127448269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188422371 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202454592 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138138494 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19632421 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177961155 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205898533 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171630447 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139674347 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190423383 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137381432 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101823348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174656536 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169648264 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171431658 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200474976 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202683351 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.202016356 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.133412596 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158070666 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175632593 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193150693 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163918848 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154507204 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170145696 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17504918 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102549551 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133894507 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134208315 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122011879 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139393497 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139310286 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189914666 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172389169 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197398127 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168087285 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147753607 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201230043 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105920141 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17332574 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179604479 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147024833 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202949536 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200300829 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176776932 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152110135 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178211715 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128605738 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10650148 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141051959 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17477067 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113175587 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142952864 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153326599 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200860666 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184128196 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158563281 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236996118 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177199787 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211555219 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102078723 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174126654 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189226512 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167481726 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.19421829 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11723583 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168311652 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196656825 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152909316 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201807879 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171428295 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176401344 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234601568 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.138322972 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139079601 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158407277 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178541705 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148411653 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180703938 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127257783 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144767993 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162702104 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.11678451 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136008982 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188249884 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151560555 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187034945 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176722783 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212108358 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10787258 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152618766 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169318332 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15372211 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.099391715 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180358445 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204036336 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151986697 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166786331 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192587924 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139177478 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322106096 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206545395 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192242861 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147131099 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152106747 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171571928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17732629 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17362976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193128156 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152323862 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189236137 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140320177 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15193018 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143025341 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128589483 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160253602 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160546238 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142391287 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161571461 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123505007 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221654903 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125759666 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167386272 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173068646 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15688912 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162859345 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121098248 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246670882 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139463549 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21411412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.139551175 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184338376 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197815986 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135303522 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135996226 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107485027 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19095892 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142172696 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166717898 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191284345 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206424408 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166478276 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177925039 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147337375 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103825459 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167554592 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157283403 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208160869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150960429 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145750837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20985183 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160611869 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13844391 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145011631 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317694906 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125859657 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19052507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130766029 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287054923 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134658564 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112119324 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178890433 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179380838 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140123199 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166655654 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170467287 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153845716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179430184 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146975701 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198492665 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214903717 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178487619 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212148666 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.124295825 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166573745 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172459353 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193904812 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153117983 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.153817916 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171544886 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201016003 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204331416 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140742079 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143339364 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171230171 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168380052 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182917413 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144165601 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196764045 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143918376 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174954873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146721917 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105501827 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166724267 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193078291 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14106129 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194370964 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166875915 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112223289 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136285305 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160356411 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167686639 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151991192 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.110529343 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186726538 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136820552 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171968732 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189389013 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111359043 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164030116 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155060188 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110027439 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151553404 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152609452 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142893607 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151694735 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19949472 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140082421 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19431153 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17940909 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173031044 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168081302 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152605464 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64171225 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137644588 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200732697 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156383386 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196474932 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158764608 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174120343 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169343047 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129588576 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175362709 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157474361 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2286254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174281592 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167059554 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139069014 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124290638 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154132843 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.139334432 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160154277 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141644914 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14947613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144990425 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166908586 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12673506 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153665917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148511264 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203722794 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156761352 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192191037 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19387858 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146645836 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174291052 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183815519 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109213885 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168752616 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18042969 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151621524 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158594039 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138766284 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.116098568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189858487 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131997918 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141436566 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168373923 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170156368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171872041 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143444314 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168531988 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122325686 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170559197 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135900797 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163031475 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165160982 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112237145 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13646969 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164738282 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167528484 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.138864873 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135287866 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178877512 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201788153 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105607015 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142471523 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290179978 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168377938 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20300687 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162081542 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114068788 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15297556 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163614871 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161473412 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169965761 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109122027 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141556343 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138317935 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188521094 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14655437 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166630856 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193847571 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169490293 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198809055 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.146228573 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272611038 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119043351 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165852286 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.13932732 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109369593 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149403595 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144215789 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154871491 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199776142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189845727 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160914627 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125878024 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136208078 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104835042 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141646075 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179772035 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164453558 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167059921 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122663516 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.127238185 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152835422 seconds)
  done (took 81.300554225 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162930316 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151117035 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154934274 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207753567 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176814756 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264802729 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214330192 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23663911 seconds)
  done (took 2.604710614 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109927159 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143424376 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150075021 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132026388 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132111934 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.355192918 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143580365 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10612749 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.19203275 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144036214 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.130548654 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624163844 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102004416 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134001007 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12093107 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13169937 seconds)
  done (took 3.880717328 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.289753312 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537518549 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.987061811 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.252411389 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233978906 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162158648 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.736731119 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19320703 seconds)
  done (took 12.427668728 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137263916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151214739 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.266045224 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.183248134 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.16872745 seconds)
  done (took 1.949497371 seconds)
done (took 123.870075277 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104423894 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132492085 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104667387 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134364812 seconds)
  done (took 1.506032791 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118341494 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091054208 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119502676 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087864272 seconds)
  done (took 1.454830649 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442475208 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.119981381 seconds)
  done (took 1.640342158 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.128364958 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145029335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128412964 seconds)
  done (took 1.448966629 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111973328 seconds)
  done (took 1.159708931 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115189465 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.110315558 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.150416264 seconds)
  done (took 1.422443556 seconds)
done (took 9.675346902 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14090621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.445095171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394107206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146995887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730160255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387938361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.051957361 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163480377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171749795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100038097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147352336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677685924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038057624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348872374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023207087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441738658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709802054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101311015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133923012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100881581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028222981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09820194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128023227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101249311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706724798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404059527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129004646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.48133668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099345814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131218012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389606593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126829814 seconds)
  done (took 17.312629563 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143543077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18817255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135316697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101701705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130506312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.10162734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136893906 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113087615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186645491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126954216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11920657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127594828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104590398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12767539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121735792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127328701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10239679 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129632934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106913704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129879865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118971099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126859122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101679575 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130037177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099361519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139924929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09981503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13964866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09922545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132994822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132093769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101199766 seconds)
  done (took 5.030269362 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149580285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197675091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136880739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134913393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178393984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128794461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214547235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13601885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191045777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127780316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11938199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12866326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165121892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100390787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149916048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099813699 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129609934 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102218601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134857966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10223374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148398364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098537879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129948294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101471789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128084818 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114156793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128962937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138573934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101295757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131599531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106352695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127299185 seconds)
  done (took 5.336092994 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107263517 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134628809 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117615303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145281376 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102323147 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133233227 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107411931 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129780422 seconds)
  done (took 2.027653873 seconds)
done (took 30.753592365 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121593593 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140486211 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114308188 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137063734 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135407452 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125920631 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.111777399 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098302731 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138782538 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115941053 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128479233 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101280319 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143093565 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105160736 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.144577161 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109855848 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150393354 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116046807 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129882856 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110018771 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.129892334 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.121783977 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.134877771 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100420695 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.146135775 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.103129905 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148072146 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104599003 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13451133 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101119895 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.145091285 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106766859 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.129536085 seconds)
  done (took 5.127620063 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.128582565 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.173645025 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098270663 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.1271401 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.168722889 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098271045 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.155438245 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098520906 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126024918 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098939365 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.096761149 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.154483978 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159357922 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.132168936 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176585228 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.16346532 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.124875921 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.167113581 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150766869 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.137934091 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.157405498 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.096815376 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.162983006 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.160522366 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.09899698 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.125428752 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143297028 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157778495 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.170437121 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.132989368 seconds)
  done (took 5.202891582 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109325766 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145175628 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127003016 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200994468 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.169828488 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.11577118 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142654352 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119335616 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157653671 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099787844 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140855954 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.160559732 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117710184 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139742717 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106777475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142967065 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.122040917 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.130643408 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109381374 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149335564 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118705915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142439561 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115762204 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13991594 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10017612 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13848868 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106596251 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143982454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135259368 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110887928 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132527889 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106424161 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131321654 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111690913 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132366065 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.108523256 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15088878 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111123445 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142950641 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.163445285 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111436778 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.132631946 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123045341 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.177213931 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.1031287 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13744235 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111999141 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139715263 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099820379 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149488127 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116044714 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130588759 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144675318 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101490145 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128380131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108913576 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102712366 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132765751 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.111863706 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133754971 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149450055 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109572132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136817673 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104054577 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135975669 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.100833602 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127971004 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107068508 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154153946 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106857126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161894023 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100728579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135788374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110082579 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136315573 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110696381 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129928235 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108651786 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138642663 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10646068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138059882 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103595275 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133535951 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119610441 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144462287 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137307748 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107314639 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136135843 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105429248 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131488394 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116512041 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132259998 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105231605 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140398765 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102693511 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132847487 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107963723 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135030621 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101412834 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15085331 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106550022 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129537685 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.119948209 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131826847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105642852 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139141515 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114556491 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130508429 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107319878 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137265111 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100600636 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137890165 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104598581 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129634657 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114050024 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142551488 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106554066 seconds)
  done (took 15.83062621 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.252148492 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.231944155 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203819515 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315993045 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153612144 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128158197 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228261613 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.183098665 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.131229627 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171094826 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187200354 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.192981933 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101214576 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.164667006 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23282849 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.322191806 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.165047699 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.143793444 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.172197547 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154208431 seconds)
  done (took 4.909908418 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118313072 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171421774 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160846567 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12795165 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.132886641 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.115984263 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.133704799 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147331207 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103509298 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137485242 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101833745 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.13983496 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10453812 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134540143 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120289941 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148942488 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105861202 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139048274 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148086559 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108577749 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131540695 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151897615 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111412775 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161280207 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110989854 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148908093 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101667111 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139894707 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098871237 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132286617 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107327614 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14660591 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138542776 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103762509 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136662602 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102724519 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127236234 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104230488 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132976229 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107391875 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147299068 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105286447 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131506116 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103044225 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140520873 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099806481 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.134239704 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108468408 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135727373 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111132505 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13722816 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107606226 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13887997 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.114253769 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128011467 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112004207 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143952874 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135308469 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109180083 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130311653 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101340645 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10585867 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130474691 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107453438 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137635318 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147896236 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.11146272 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131494687 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108005379 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135828748 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.106351975 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14874404 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151052737 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100862385 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127848857 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124573424 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.127930944 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091203896 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111888859 seconds)
  done (took 10.957497685 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131716704 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131723223 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122087713 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167366703 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117506293 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.141676502 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102887392 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.153243316 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108696782 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.14089639 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109543268 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147003011 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159603694 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115924539 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131409324 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118251088 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136563153 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.14433515 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.153170369 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162787892 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114812398 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.137624047 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116680094 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143198042 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.136319721 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.145622635 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165010484 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.107730408 seconds)
  done (took 4.849410695 seconds)
done (took 47.927500925 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.191527268 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.375729904 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.145274331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.146239158 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.187846606 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.156947712 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.162563022 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.337569685 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.801274203 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.133130986 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.144227962 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.143472283 seconds)
done (took 26.996303845 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.151988306 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.733953437 seconds)
    (2/2) benchmarking "String"...
    done (took 1.478760505 seconds)
  done (took 4.28067483 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.141960977 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.143815466 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.389981495 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.143043266 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.159081504 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.159432629 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.144334421 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.157132422 seconds)
  done (took 15.364234221 seconds)
done (took 25.007096739 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.189302944 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.362626915 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.418077657 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.165361347 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.147851917 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.144768679 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.132998628 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.179033656 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.148049432 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.152952008 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.145502155 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.413455501 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.146798583 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.521880282 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.130375947 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.154236781 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.17360823 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.383611702 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.159265055 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.189392622 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.130209783 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.157539271 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.166809656 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.184646905 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.158827466 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.152866251 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.134197694 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.131088552 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.365456553 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.160416682 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.187199879 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.148487496 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.211451254 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.148260161 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.25353918 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.182981704 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.343820447 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.138702759 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.138511954 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.153808971 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.34506 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.538405259 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.146526631 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.133539049 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.149781861 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.224676996 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.139019349 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.860607982 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.15461031 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.142671302 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.193925738 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.527844738 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.165432305 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.154998844 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.164768151 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.395692352 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.172732314 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.175793872 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.177769344 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.14901837 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.152547254 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.146582216 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.19921808 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.148794845 seconds)
  done (took 139.938760475 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.147121891 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.148264231 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.148039446 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.209766937 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.153351239 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.148660369 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.148944477 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.147931688 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.149936598 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.178082988 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.153806543 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.147970475 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.155333584 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.109276675 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.149818257 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.170761697 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.153793746 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.150525751 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.154178094 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.149143982 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.151475393 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.154125343 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.165383341 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.150839644 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.190128546 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.244959465 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.188199668 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.180298318 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.15456556 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.149752824 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.187073333 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.216583399 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.742217254 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.007165469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.157203067 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.16290152 seconds)
  done (took 78.350541544 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.148648042 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.149455026 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.149838459 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.180323406 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.149591678 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.695176453 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.697669038 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.874158636 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.33104548 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.413496296 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.413110354 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.157521013 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239382701 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.162979643 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.148864678 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.16332212 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.174374462 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.152669583 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.150143175 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.688130016 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.167571016 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.260340221 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337033018 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.165036744 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.177889147 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.542301132 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.149567426 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.17842484 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.475620864 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.195997172 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.14947457 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.497085256 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.90636243 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263558875 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.151026539 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178000372 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.149834853 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.425313262 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.148541567 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.148528166 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.152513663 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.788281736 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.154685007 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.681051508 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.155521788 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.083398287 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.153576905 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.148413826 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.168867952 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.760021486 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.167617532 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.146511621 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.149222097 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.147320931 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.146556487 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.175478318 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.151648541 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.258005115 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.147511192 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.150221604 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.175420556 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.146954863 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.197312789 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.16757216 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.762591514 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.211086364 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.249025637 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.665609696 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.153098304 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241335436 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264413188 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.147077519 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.147018215 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.146400816 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.148070974 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.147514732 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.25559095 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.147116432 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.524226159 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.313228764 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.163621247 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.148480678 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.339719706 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.247689864 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.148722701 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.148548599 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.146653423 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.147072478 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475802193 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887835993 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248343199 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.148175768 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.148318195 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.148915958 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.525689325 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.662613078 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.34743827 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.153365483 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.148239686 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.413227335 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.154674885 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.535225076 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.645150675 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.787899881 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.155731648 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257741534 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.313956286 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.164594341 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.146854939 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.328416097 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.154390839 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.208105026 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.148915569 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.543218769 seconds)
  done (took 358.427129589 seconds)
done (took 577.783957725 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.869782173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.816812664 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.943021552 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850670715 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.806182985 seconds)
  done (took 10.357666203 seconds)
done (took 11.426063807 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.328215283 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.332374728 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.208924127 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.330647232 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.186032224 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.345821767 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.313334731 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.174614033 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.250155441 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.232207932 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.248725525 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206023551 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.186247303 seconds)
  done (took 17.414891545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.418910862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.159370518 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.231101641 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.382960035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195070129 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.39955904 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.446824927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.153348438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295436975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16417764 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.16308975 seconds)
  done (took 17.08452965 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417501191 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.157256475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.218622506 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.384978637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.197204584 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398999569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438685077 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.158115925 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292587214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164578967 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.164752868 seconds)
  done (took 17.066929169 seconds)
done (took 52.635903825 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.188561565 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.312667653 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.185565913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.165501207 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.161387383 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.163413928 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.166884595 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.161799209 seconds)
  done (took 10.581993147 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.161866724 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.157079685 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.158473209 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.15806773 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.160734496 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.160941142 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.161523023 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.158293458 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.159704089 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.157265368 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.157524515 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.156855918 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.160143476 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.162081627 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.160307438 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.157939263 seconds)
  done (took 19.624302886 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.160739242 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.158482344 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.158436016 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.158102733 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.158972301 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.159925032 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.159725928 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.160296598 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.159194668 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.157400254 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.159652031 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.159467923 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.158421024 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.160143149 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.159421163 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.161718394 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.159961444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.159663687 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.162815849 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.159485218 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.158323028 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.159897029 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.159260177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.158725084 seconds)
  done (took 28.907322336 seconds)
done (took 60.184703688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.163476581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.160342803 seconds)
  done (took 5.399862769 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.222282226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225186406 seconds)
  done (took 3.526179284 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.162903279 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.161813768 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.163567592 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.164064927 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.161967073 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.163919556 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.163998423 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.162829821 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.163640447 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.163445984 seconds)
  done (took 12.70972075 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.163439185 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.164048923 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.16038103 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.163114251 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.163292305 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.16045766 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.162735142 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.162269367 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.162745249 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.162848729 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.162856994 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.162113576 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.163464757 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.16223559 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.163687231 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.161634214 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.161747173 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.161821678 seconds)
  done (took 22.003395819 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.179040051 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.185988121 seconds)
  done (took 3.442701525 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.302863002 seconds)
    (2/7) benchmarking "second"...
    done (took 1.203176134 seconds)
    (3/7) benchmarking "month"...
    done (took 1.279416209 seconds)
    (4/7) benchmarking "year"...
    done (took 1.268598937 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.203163002 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.182219564 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.203273113 seconds)
  done (took 9.720989363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.166305181 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.361358578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.464517802 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.732438099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.165307331 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.169483816 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.048339576 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.168450353 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.171187912 seconds)
  done (took 13.526994215 seconds)
done (took 71.402684231 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.15552712 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.220552861 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.183813942 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.175061292 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.455532363 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.198765626 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.163141766 seconds)
done (took 15.631294302 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.15507585 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.149916927 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.149266006 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.174046709 seconds)
  done (took 9.708067251 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.126678224 seconds)
    (2/2) benchmarking "read"...
    done (took 1.568044062 seconds)
  done (took 4.773999953 seconds)
done (took 15.559794817 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.166579436 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.16603325 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.166440481 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.165611797 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.165244738 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.167163792 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.163542577 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.164757647 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.166993821 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.167512571 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.166626535 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.168121429 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167517839 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164299696 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162621594 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166511816 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.164089022 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.164228816 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.16373712 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.166503553 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164801548 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166751937 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.163869965 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.166852808 seconds)
  done (took 29.057692896 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.16704617 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.164033776 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.167453593 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.167659387 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.16347976 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.16809998 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.167686572 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.164874188 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.167295726 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.166883173 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.164944064 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.165412297 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.167630328 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.165744129 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169060437 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.164666192 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.168981487 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165789881 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167854635 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.165467085 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.168142448 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165660818 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.165913615 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168588518 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.166815628 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166042378 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.168018541 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.166287382 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.167641785 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.166767629 seconds)
  done (took 36.082312414 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.173963337 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.176269192 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.168721406 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.169155196 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.169099957 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.170630011 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.169569369 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.16886075 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.169393506 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.169216367 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.169469028 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.170887574 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.169814094 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.171024218 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.169802781 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.171386984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.170341749 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.170191257 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.171309512 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.171011297 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.172103343 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.171179809 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.17221372 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.170870938 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.172133823 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.170574771 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.171568491 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.17150742 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.171773497 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.171362361 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.170745187 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.170296057 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.170760592 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.171315628 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.171404926 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.170470576 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.176084677 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.178145852 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.171559997 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.172359472 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.169850433 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.171203698 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.171179992 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.171128279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.174073574 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.172569615 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.17171328 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.172250817 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.171205772 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.172763406 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.172979129 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.171811937 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.17133447 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.171389993 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.172077853 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.172360194 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.171304308 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.173362547 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.172727944 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.173160399 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.172744035 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.173095892 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.172658412 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.172682971 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.173591744 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.172747183 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.173392884 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.173301712 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.173444473 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.173036095 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.172756441 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.174680404 seconds)
  done (took 85.452643919 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.172832086 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.171560475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.171325058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.170936504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.170688227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.174571946 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.17139317 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.174672512 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171477057 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.173858328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174554163 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.171723228 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171888864 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.173195289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.174466725 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.170722426 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.173952245 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.171517261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.174773042 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.174238278 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.175485368 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.172430572 seconds)
  done (took 26.890587491 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175473792 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.175995464 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.172592152 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.177203892 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.174689498 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.176144255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.175783582 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.176006435 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176007504 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172629759 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172988444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175034529 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.173656167 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173635084 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173929722 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.175649647 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177201893 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.174447024 seconds)
  done (took 22.237912585 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.175625678 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.174852808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.175844019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.17483188 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.175582774 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.177225935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174581706 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.177872888 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.176602257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.173874547 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.177264883 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176984807 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.177256477 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175434918 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177183008 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.175334565 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.177188042 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173465102 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177281137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174745659 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.173952564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178351685 seconds)
  done (took 26.96085699 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178342891 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.177955983 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.174043628 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.176962923 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.175878851 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.177898231 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.177602352 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.176474089 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.178779142 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.177715338 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176857689 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.178003285 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.177624885 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.176851611 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.175203625 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175814111 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.177983218 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.176241111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177861072 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.175748498 seconds)
  done (took 24.631126776 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.178240702 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.178920355 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.179494311 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180922356 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179494251 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.179712354 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181280224 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.180694892 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.179816583 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.180349844 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.180704723 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.180148395 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179556503 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.180866731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.180413898 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.181149147 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.179568065 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.180903731 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.180928779 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.180749686 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.181152754 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.180661821 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.182345807 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183064231 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.181242188 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.182404598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182786961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.183016945 seconds)
  done (took 34.153549465 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.180639722 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.18306502 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.178285494 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.179168144 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.179071654 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.179849843 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.179873765 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.179238447 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.181839882 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.179147415 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.182204357 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.18101572 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.181894502 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.182103572 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.182663234 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.182818103 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182450133 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.180610107 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180373325 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.180702937 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.182048551 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182724249 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.183317598 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179750507 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178912577 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.182596754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179677742 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.180924523 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18422139 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.179759961 seconds)
  done (took 36.527696197 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.227634892 seconds)
    (2/2) benchmarking "in"...
    done (took 1.225945217 seconds)
  done (took 3.54929235 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.181101315 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.183325452 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.183639679 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.18052031 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.181326213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.184120442 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.183052057 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180922426 seconds)
  done (took 10.553979751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.183406921 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.18307433 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.183905478 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.184095558 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.182577988 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.184637089 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191349174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.202531438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.185146299 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.184597298 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.19141385 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.191029721 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.185836423 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183914084 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.18450707 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186726169 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.184930843 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.183826137 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.185827148 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.186019518 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185149227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188118004 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186921388 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.183855617 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.186952419 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.195318713 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.18932931 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.187006325 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184918888 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.188843331 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.184495506 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.182140666 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.186182391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.18659475 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.186481323 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.187074076 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.194062805 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.204422672 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.191538632 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185369804 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.186393651 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.184179851 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.187329907 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.186615198 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.187653979 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.186034438 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.186485638 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.185497538 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.185942522 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.190918927 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.192301012 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185483051 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.184233686 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.19086068 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.187812603 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193816631 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.205545234 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.190117855 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.196605819 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.197177158 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.199545059 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.210698439 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190121146 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.187323575 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19869305 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.211129328 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.194484648 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.202635123 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.186431916 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.188128712 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.194490434 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199653856 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.212130123 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.188401747 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189320001 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.190026859 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190428523 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188707086 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.194498277 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.208810644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.187984339 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189734952 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199615563 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211545771 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.188268045 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.189881819 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.190201249 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.190593612 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.192664353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199971349 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.20710901 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.189773897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.188946408 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.190659224 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.189671975 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.190143355 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.189569476 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192038761 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.188429346 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.191773368 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18982417 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193965204 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.199753219 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.190237602 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191534013 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.19785611 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.190648265 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190529828 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.196671573 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.192033917 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.190678648 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.19282733 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.196758137 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.189092337 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19410411 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.199509654 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.191547545 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.19212939 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.192997293 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.19224053 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.203109474 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.216841066 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.193667277 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.192723241 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.196713389 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.202173634 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193486598 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.195500929 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.19279822 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.190083012 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.19062286 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.193382198 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.193614758 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.193053419 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.193335127 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192946175 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.190187082 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.192388929 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.193669837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.194328424 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.194323454 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.193774851 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.192256011 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.195860437 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.193515765 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.194733391 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.199742403 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.19416327 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.19484269 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.193832885 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.191854851 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.195624876 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.194660253 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.193574327 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.193907074 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195384846 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.194992107 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.194384169 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.194969724 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.195370546 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194926813 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.19507396 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.198308809 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.195085883 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.19790399 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.194986619 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.192971857 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.194177423 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.195858439 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.196295126 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.19727544 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.194234217 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.197400057 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.202602491 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.195416599 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.194103353 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.197391888 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196862999 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19583158 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195243506 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.199581628 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.203770357 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.194449948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.201464818 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.197411067 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196011089 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.196645544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.195279255 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.19539489 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.196837654 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.199227716 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.204226316 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20783046 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.22018807 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.197554155 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.200763387 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.196860994 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.200569965 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.200360427 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.196383836 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.19730377 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198428705 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.197722702 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.197863132 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.199859037 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.19717845 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.197416968 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.19848429 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.199982243 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.197797646 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.198670105 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.199431712 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198535105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.195541228 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199433404 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198862573 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.200336537 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.19600977 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.197630451 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.198729516 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.200500649 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.197671376 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.202909791 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.195924209 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.199808478 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19984594 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.200363746 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.197416414 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.198859528 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.200332203 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.199323218 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205630703 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.216975953 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.200219677 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205422242 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.217083528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.198846828 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.20170631 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.200339953 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.197427287 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.202817091 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.207818639 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.20004245 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.199943164 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.20086898 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202415077 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.201122447 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.205353672 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.198590444 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.201043004 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.200729158 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.20053561 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.198120908 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.200762281 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.201200814 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.20111277 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.202055352 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.201281265 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.20206813 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202244287 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.201827325 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.202287674 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.202336136 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205658676 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.210218587 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.205640313 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.200589354 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.203007624 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.20256932 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.206513572 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.20185864 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.201489502 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.201435876 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212847884 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.224454496 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208219312 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.221392831 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.202733723 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.206306741 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.221566713 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.206118924 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201516829 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.203458084 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.203239473 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.203228344 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.208349587 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202711815 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.202442015 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.202211607 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.204267129 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.207933041 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.20581015 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.203433566 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.204616208 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.20466959 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.203252432 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.202976777 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.204169871 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.205007213 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.204840858 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.20191245 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.203554715 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.209106314 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22156779 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.203791633 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.203544629 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.203683909 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.203705269 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.204738686 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.204931416 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.208763053 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.211513364 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.208195466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.213069554 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.207155435 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213115683 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.205293987 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.209333177 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.21417972 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.203325165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.204593048 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.205163086 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.206194926 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.211324021 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.222294769 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.207919193 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.209880958 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.205624788 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.207005639 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.206630288 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.207011331 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.206187347 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.206270152 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214508066 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.22649927 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.210706146 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207590332 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.204221278 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.206349974 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.207036232 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.20588392 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210193758 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.206727972 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.207936692 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.205920731 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.206772682 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.2078495 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.206504156 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.207522356 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.206165628 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.206952632 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.212663813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.228424141 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212196951 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.209254834 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.212774479 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2067458 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.213802269 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.226364643 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.207903898 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.208025667 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.208046601 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.20955367 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.206974921 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.210742915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.208515503 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.209784128 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.212786047 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.208628428 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.212186403 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.209268817 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.208839074 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.209610962 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.219390252 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232783414 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.212714161 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214336847 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.206952467 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.210881627 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.214058329 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.210227444 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.209150303 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.21369911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220526801 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.218672687 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.20912959 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.209400621 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211110041 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210395875 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.21136977 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.688994266 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.210171667 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.210213865 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.210822949 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.211119263 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.213789321 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.210914268 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.210412999 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212009244 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.210643862 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.220146065 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.211577245 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.211073556 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210632865 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.212610683 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.21085337 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.211169625 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.210274067 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210835196 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21080127 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.213487639 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217584449 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.217769873 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.213726924 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.210719622 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.210591117 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.212475491 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.21367177 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212519781 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.212326403 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.211623435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.212471748 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.211087363 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.212468375 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.211595499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.212113671 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.21099286 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.211803728 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214437205 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.219199253 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.212044679 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.210122831 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.211935207 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211926491 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.210703025 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.213474673 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.218197225 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.215668889 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.223565727 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.221008569 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.215841607 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.214130028 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.215209971 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.221792955 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.211591739 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.212234483 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.212287085 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.214952594 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.213464697 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.21688331 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.21192152 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.219534856 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.21334073 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.213679314 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22219873 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.234012799 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212858991 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.215790109 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.218357789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.213475712 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.211664385 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.214783926 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.213319028 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222314754 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.233102217 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.214458234 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214555076 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.214138826 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.217124333 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21963928 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216386721 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.215092023 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.212268614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.21560719 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.214978537 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.21526951 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.212145475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.21571991 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.213695506 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.218399232 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.223131363 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.212263522 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.216514131 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.215673771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.215488811 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215053261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216524957 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.212536808 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.214286051 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.215010377 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.214927986 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.215634859 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.216813201 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.214939935 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.216602631 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.217179376 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.215082935 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.219273445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.226061744 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.223595082 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.214633178 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.215077147 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.216316152 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.21796732 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216441048 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.216917648 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217614067 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.217427143 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.21706139 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21653526 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.217433172 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.219837096 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233325183 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.238612428 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.216693556 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.218060296 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.219955762 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.217522005 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.215639502 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.219280656 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.218544939 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.220757909 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.224888172 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.218510191 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.224078608 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235204474 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.219522724 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.222480051 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.220628019 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.225736523 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.218449828 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218733267 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.217684806 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.22424 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.233835244 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.218166997 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22903338 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247187155 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.236941551 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.219224665 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.219640109 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219252772 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.219656675 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.221359255 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.220127509 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.220672696 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219892329 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.219882772 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.220273987 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224257631 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.221742885 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.222191688 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.220339445 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.219972979 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.221532726 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.218065924 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.219860982 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.221435715 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.220963773 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.22089115 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.220878409 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.221851304 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232717158 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.244512515 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.221065077 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.220812779 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.218704332 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.223365811 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.223415692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231300476 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.229443541 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.219996259 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.221662164 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.221445643 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220913396 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.221918142 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.220759891 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.220586111 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22329189 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.219129827 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.233079925 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245466917 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.226404225 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.220280353 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221997619 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.222635528 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222197796 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223359281 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223347918 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.22220968 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.224596487 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.227629916 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.222719661 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.222614118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.225511833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.231037375 seconds)
  done (took 720.42308521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220599062 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219660249 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220836591 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220365776 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220035638 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221584579 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221136809 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219363982 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.218948815 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222346871 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.220723596 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222359596 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222825713 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221424992 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222350254 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222801964 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221857245 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221972541 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222724232 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221348581 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222584136 seconds)
  done (took 26.779349479 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.225225328 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.222870777 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223853884 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22575983 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222329432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22534511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222392797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225274813 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225958715 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223235203 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.226935092 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226558568 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.224494994 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.223100946 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22397878 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225428692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226350002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223004632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.2264069 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223688173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226079916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224324904 seconds)
  done (took 28.075052084 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.224893112 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.228194482 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.226724498 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.223248262 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.226904665 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.224201439 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.226700297 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.227334025 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.226984668 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.225947876 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.225919446 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.228467393 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.233366303 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.231954164 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.228271966 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.226926729 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.226814951 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.227594986 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.227366611 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.224286515 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.233580717 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.243800093 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.225478188 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.225788696 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.227889093 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.228498093 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.227294824 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.226815812 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.229123248 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.230704073 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.227556617 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.227405519 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.230140408 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.227807399 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.228747258 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.232350855 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.228927078 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.226553077 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.228353823 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.237545455 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.248257663 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.228191625 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.232768352 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.24785128 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.229134134 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.231925541 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.235788047 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.227298236 seconds)
  done (took 60.155140999 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.803231752 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.826138759 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824179925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.831923484 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.828055705 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.83212736 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.834757069 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.838546304 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.83160552 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.826945986 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.832685542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.830472059 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831478446 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.829892236 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.828355535 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828389927 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829451434 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.832416102 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.838347076 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.834673507 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.830742526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.830333739 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.830844366 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.828344211 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.830232276 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828073897 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828801019 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.829969875 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.83470964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.831448143 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840561148 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835820377 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835301736 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.829153945 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828891183 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.836317124 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.833367586 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.828232062 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832959018 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.83003278 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.833849789 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.837373334 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.834319322 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.842294589 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.841481404 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.830142097 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.83298651 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.830549503 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.831188788 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.840182589 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.834310394 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.834172732 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.833900238 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.837267765 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835472329 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.841209163 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.840126925 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.843150163 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.837426559 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838334576 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.835563492 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837787568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839795876 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.836930957 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.839844703 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.834362368 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.836479734 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838945462 seconds)
  done (took 125.797817138 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23306949 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.235486952 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235269465 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234934941 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235639281 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.235688319 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235075775 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.234686706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.234308665 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234827265 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234790008 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.236735161 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.234507308 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.237348899 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.23429052 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23580413 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.235342443 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236062565 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236668794 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236873573 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.235922524 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237037182 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236758614 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.235612945 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235592152 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.236983665 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236547564 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.237853549 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238316155 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.234930628 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237597487 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.237261593 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.237239737 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.236662666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.236937877 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.235666306 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2367777 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236746448 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.236752618 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.235661494 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237220837 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237730081 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238342197 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.23827668 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235090887 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237498939 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.236518365 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.23785583 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.236069309 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238219643 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.236355231 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237658179 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237820801 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239672666 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.236924984 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.238944658 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237216826 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238816077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237544374 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.238186749 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237946533 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.239675112 seconds)
  done (took 77.815289774 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237690065 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239636598 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.236215916 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.236106368 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237492262 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236795817 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239302454 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.238349065 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240266025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.24122948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241295586 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237218586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238259157 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240345739 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238553133 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238075722 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237841015 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238078541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241130229 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238265877 seconds)
  done (took 25.917712451 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.237746318 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.23861358 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.239172149 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238664149 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.240754814 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.23967609 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.240155779 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24064304 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238439742 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242138647 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240633198 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241027005 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238216626 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.238239857 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2420379 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.238619348 seconds)
  done (took 20.98127844 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.238508622 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.240135979 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.239839515 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.241037079 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.239048215 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.238371212 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.241599107 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.239994461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.239115796 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.242112807 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.241849734 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.241763917 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.243004836 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.241299044 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.239467712 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.242963861 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.238734966 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.240198459 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.241471105 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.242772022 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.241701668 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.239866142 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.242639722 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.243401484 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.240201866 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.240877658 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.240425735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.240429698 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.239200214 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.241963229 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.240135385 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.241383822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.240945679 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.240801356 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.243087453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.241765478 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.243426016 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.244100893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.242981141 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.242872038 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.243785596 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.241791372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.243398039 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.244318179 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.24136943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.243754111 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.240194887 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.242586368 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.241596623 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.240920795 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.244449468 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.244489455 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.243726097 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.243552116 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.245151276 seconds)
  done (took 69.439745639 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244552105 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243342755 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.241496126 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.243606071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.244782469 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.242685533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.245630119 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.24438318 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243387491 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246181182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242079359 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.248923344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242912301 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245406033 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242664215 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245367721 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243339537 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.243943574 seconds)
  done (took 23.545340282 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243526639 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243589348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.245353028 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243402138 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.24420987 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246980245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244195903 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.245997484 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247265388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243902941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242972267 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.24718819 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246297064 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.247149822 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244826899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243789484 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.246783843 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247836487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.245275 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245041186 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246941301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248177702 seconds)
  done (took 28.552723913 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.246538159 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.244883073 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.245561332 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.262845255 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.266802091 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.24709328 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.246714959 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.247561795 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.268628482 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.30136705 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.29482496 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.266062882 seconds)
  done (took 16.292037805 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245609558 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249665334 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24559116 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248061187 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247724649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244509729 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245376554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24481497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249285936 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245467862 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245191601 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248313201 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248830194 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246139868 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248611307 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249175704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246397422 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247294926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247228062 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249076553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246546066 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248863797 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246624669 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246213783 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246120016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247613539 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249319999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248630607 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247417757 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249672508 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250564164 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248468711 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251398323 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248969718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252533066 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250604653 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248920404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251859012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249812869 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248119777 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.252685204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24980486 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250700436 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24973265 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250663095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247925523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247128189 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249494594 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248612984 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253358199 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251208987 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248707579 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25184347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252659821 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25121043 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251759701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249570564 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250097996 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252645243 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248678772 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249819787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252608707 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250054751 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250041385 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252867527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249753334 seconds)
  done (took 83.589878054 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250682211 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250144171 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251660772 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250838569 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248824744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248729539 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249296162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2499157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249420892 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250367864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251771699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250371968 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249478418 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250539839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250411053 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250861128 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250119199 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251081231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250883268 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253570441 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25164305 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250550177 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251500717 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25148559 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251289936 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252607364 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250286478 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251347083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251067722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252708687 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250054451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251003562 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25197311 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.25064518 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251406889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25147196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252280317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252168954 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251600106 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2542369 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252389641 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25392739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252564148 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25251823 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252199899 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251646284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25185802 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252532457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2522946 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251936868 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253798829 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253773099 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252288733 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251565414 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250741477 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25309272 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251744854 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253178306 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251843306 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255382875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253522339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252077886 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254513298 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252169412 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252107333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252660369 seconds)
  done (took 83.768597173 seconds)
done (took 1728.309497518 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.419201792 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.372661712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.254476305 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.265321796 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.255385905 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.275831957 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.266963723 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.254415101 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.253689194 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.254912706 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.254296761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.439562555 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.24821074 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.2550072 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.2546066 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.350942034 seconds)
  done (took 25.836386074 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.283991795 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.264110918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.370166073 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.280889054 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.283848612 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.445061877 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.318726313 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.260641656 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.425527266 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.30604681 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.261006825 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.288755722 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.260211017 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.258264424 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283244525 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.439162218 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.506568413 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.271250678 seconds)
  done (took 27.968631579 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.695202925 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.287483837 seconds)
  done (took 5.144524251 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.280200763 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262734868 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.262949592 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.260555431 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.251440868 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.271111011 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.259471513 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.257744763 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.262119371 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.388302961 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.268266616 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.274741483 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.280453317 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.262944522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.260681052 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.302908681 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.416420984 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.261044969 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.257243566 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.270255495 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.26323801 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.366930012 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.306320088 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.265804945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.381936719 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.26510834 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.271075868 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.269635817 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.402361356 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.259892103 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.260614202 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.263435598 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.264459516 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.175206501 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766919519 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.258813426 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.303151314 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.270640147 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.259901387 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.418969809 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.263797704 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.272023961 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.252899263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.724393223 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.429281423 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.38504252 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.275562383 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.270567645 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.263729318 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.32566159 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.263593079 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.264689571 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.304417837 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.09053518 seconds)
  done (took 81.466020562 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.270486581 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.253506164 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434527626 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.275321251 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252880074 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259345313 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.274627205 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.529744674 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.287227056 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.255557123 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582400775 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814487237 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.2755877 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.299681228 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.104361319 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.317369511 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.256771549 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.270502248 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.261582416 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.261704114 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796341924 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.261468087 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.261818637 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.432873807 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.293527826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767874119 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266405056 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.261892775 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.264792927 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.255817027 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768813526 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282458526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.309556953 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.25706807 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.523282983 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632401621 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.59644914 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.2688011 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.28101636 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.259116221 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.270704683 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750110956 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.614966076 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261556699 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.255751866 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764906676 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.261533677 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.266562958 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.266611126 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504451517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.260419915 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.257768185 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282441905 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.262773817 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.257278139 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.325277649 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330665682 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768300764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.262071 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.264203114 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.265757176 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.260082959 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.26098502 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262919476 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.263784811 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.613482827 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.411465552 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.260845249 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.613312899 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.767311538 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.27807219 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.833530393 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.279031859 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.289900162 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.472503859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.261512148 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.269793008 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766654431 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.26988787 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.258228321 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.595597272 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.264349437 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.585547179 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.280088538 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265619232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812944166 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.273102974 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.289885268 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.25878462 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.27993857 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.258902291 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260553232 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.535162273 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.314124371 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.261555295 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.259649335 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.3080454 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.259362864 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.26440204 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.262500842 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826986649 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.288642043 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.259917707 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.265124011 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.261376056 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.282938781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.260302717 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.264149368 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523864696 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.266478995 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.268053427 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.262570735 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.261262265 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.286797244 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.43916729 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.264719484 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.565309451 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.269818335 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.261656528 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.266913317 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.261513811 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.268833934 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.261337537 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.270041721 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.137013332 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.563460318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.28235234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.277915026 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.261215248 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.281382765 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.265961859 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.262130385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.294750711 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.263970841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010394947 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320475096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.290967968 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.262043129 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.276016357 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.262357235 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.263157134 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.263873136 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55102532 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.531320314 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.411698483 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.264140335 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.262810565 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01782747 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.303315994 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444327941 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286741272 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.264281331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514797928 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.484002316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.263262171 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.264121608 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.26545782 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522594615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.268365354 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582897176 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801117205 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.284012871 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.263485334 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016936914 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.967768854 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.268672624 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.265346629 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.590875723 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.285994757 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.264869757 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.263595614 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.266332454 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.280956865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.266661765 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.265939106 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.265868091 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.264750723 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.311672042 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456555335 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.285295526 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.27609644 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769570604 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.277358567 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264614695 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.291090914 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.268740998 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.265437 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.325274105 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.26697688 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.315135231 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.266004686 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.277904255 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822892178 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.271195755 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.273407347 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456607551 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94540196 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.287121747 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.266996333 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.28282447 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.163219243 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794858624 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.288441932 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.569702553 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.277386212 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.306008242 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.268699318 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.29633866 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796050832 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27374685 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284632422 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916937463 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.289569188 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.859834307 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.266718709 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.269383481 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865019856 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.287988663 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.272204483 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.267460512 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.271372879 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565745216 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.272127523 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.29121169 seconds)
  done (took 482.565910829 seconds)
done (took 624.139382709 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.269006808 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274477972 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.258289063 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.273873941 seconds)
  done (took 10.25393982 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.277516367 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.277445655 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.277259061 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.275784196 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.277716873 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.277125675 seconds)
  done (took 8.839959042 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.267663368 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.275767635 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.273128972 seconds)
  done (took 7.9963888 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.469459709 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.292149092 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.58916939 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.291433608 seconds)
  done (took 8.821806633 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.279999748 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.280046422 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.278963513 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.280650322 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.2829273 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.283830749 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.281045524 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.280758423 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.283501961 seconds)
  done (took 12.711148893 seconds)
done (took 49.798118974 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.358771004 seconds)
    (2/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.319384077 seconds)
    (3/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.356666083 seconds)
    (4/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.261805984 seconds)
    (5/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.291319314 seconds)
    (6/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.37219129 seconds)
    (7/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.279045054 seconds)
    (8/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.262421163 seconds)
    (9/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.32275736 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.314191349 seconds)
    (11/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.397211529 seconds)
    (12/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.343646568 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.289379699 seconds)
    (14/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.356532529 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.432454871 seconds)
    (16/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.33517981 seconds)
    (17/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.139098229 seconds)
    (18/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.280951721 seconds)
    (19/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.938069511 seconds)
    (20/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.289280331 seconds)
    (21/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.295118173 seconds)
    (22/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.632259401 seconds)
    (23/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.927088209 seconds)
    (24/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.264460159 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.283992229 seconds)
    (26/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.377960067 seconds)
    (27/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.393072461 seconds)
    (28/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.315882946 seconds)
    (29/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.008996419 seconds)
    (30/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.436571392 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.320158202 seconds)
    (32/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.345942821 seconds)
    (33/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.267778245 seconds)
    (34/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.295563188 seconds)
    (35/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.353189374 seconds)
    (36/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.266293456 seconds)
    (37/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.278823215 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.334604062 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.308031476 seconds)
    (40/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.464212112 seconds)
    (41/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.341016879 seconds)
    (42/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.401319505 seconds)
    (43/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.296063051 seconds)
    (44/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.382704156 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.474127314 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.286787011 seconds)
    (47/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.298991284 seconds)
    (48/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.968842248 seconds)
    (49/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.292172418 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.338230531 seconds)
    (51/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.485647132 seconds)
    (52/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.610312392 seconds)
    (53/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.446849252 seconds)
    (54/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.497993029 seconds)
    (55/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.292591208 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.310506441 seconds)
    (57/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.423356857 seconds)
    (58/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.326022305 seconds)
    (59/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.269899934 seconds)
    (60/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.268704248 seconds)
    (61/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.362042114 seconds)
    (62/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.425252789 seconds)
    (63/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.317876876 seconds)
    (64/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.456751182 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.375413099 seconds)
    (66/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.421197338 seconds)
    (67/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.311910661 seconds)
    (68/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.328720586 seconds)
    (69/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.921709902 seconds)
    (70/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.335908254 seconds)
    (71/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.269724206 seconds)
    (72/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.288468303 seconds)
    (73/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.472415954 seconds)
    (74/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.308536709 seconds)
    (75/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.29182771 seconds)
    (76/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.358651335 seconds)
    (77/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.08630696 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.437924789 seconds)
    (79/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.429543775 seconds)
    (80/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.424711796 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.388525137 seconds)
    (82/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.308318059 seconds)
    (83/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.292501683 seconds)
    (84/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.365685637 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.34817934 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.305897119 seconds)
    (87/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.317680297 seconds)
    (88/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.020577869 seconds)
    (89/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.364798831 seconds)
    (90/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.024404342 seconds)
    (91/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.408517554 seconds)
    (92/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.356856446 seconds)
    (93/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.303776215 seconds)
    (94/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.279852251 seconds)
    (95/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.403523156 seconds)
    (96/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.946164789 seconds)
    (97/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.292405224 seconds)
    (98/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.478248631 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.312207922 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.364199248 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.310447618 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.37466199 seconds)
    (103/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.26677612 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.334901367 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.330902429 seconds)
    (106/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.101620301 seconds)
    (107/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.268849812 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.296975792 seconds)
    (109/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.2878966 seconds)
    (110/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.384548024 seconds)
    (111/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.327459134 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.383443487 seconds)
    (113/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.389406294 seconds)
    (114/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.295335301 seconds)
    (115/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.017181647 seconds)
    (116/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.319550945 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.374885809 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.294214779 seconds)
    (119/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.354976733 seconds)
    (120/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.497503882 seconds)
    (121/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.021743023 seconds)
    (122/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.499438013 seconds)
    (123/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.943079448 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.291561726 seconds)
    (125/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.606020075 seconds)
    (126/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.426262549 seconds)
    (127/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312347794 seconds)
    (128/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.023603315 seconds)
    (129/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.959504352 seconds)
    (130/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.298655918 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.334241047 seconds)
    (132/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.299543095 seconds)
    (133/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.476137143 seconds)
    (134/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.267986762 seconds)
    (135/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.545695871 seconds)
    (136/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.576559373 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.282283572 seconds)
    (138/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.123330216 seconds)
    (139/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.296492556 seconds)
    (140/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.430189914 seconds)
    (141/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.288225886 seconds)
    (142/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.464502946 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.314514609 seconds)
    (144/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.368694286 seconds)
    (145/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.298721733 seconds)
    (146/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.362215242 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.284131822 seconds)
    (148/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.509493084 seconds)
    (149/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.391626305 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.439212319 seconds)
    (151/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.361413566 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.405171981 seconds)
    (153/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.350128012 seconds)
    (154/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.401830484 seconds)
    (155/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.32599583 seconds)
    (156/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.271539929 seconds)
    (157/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.311025584 seconds)
    (158/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.399735453 seconds)
    (159/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.463809852 seconds)
    (160/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.319716938 seconds)
    (161/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.433039037 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.439205242 seconds)
    (163/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.984087214 seconds)
    (164/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.37791592 seconds)
    (165/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.142036353 seconds)
    (166/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.304958986 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.447744038 seconds)
    (168/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.307460389 seconds)
    (169/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.334747624 seconds)
    (170/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.454275188 seconds)
    (171/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.305546081 seconds)
    (172/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.953240876 seconds)
    (173/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.39684578 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.384161707 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.292556934 seconds)
    (176/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.465877612 seconds)
    (177/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.354038903 seconds)
    (178/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.382002625 seconds)
    (179/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.937644807 seconds)
    (180/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.305542631 seconds)
    (181/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.271067174 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.376174679 seconds)
    (183/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.32380685 seconds)
    (184/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.380112234 seconds)
    (185/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.304788996 seconds)
    (186/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.303091202 seconds)
    (187/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.369741915 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.356160028 seconds)
    (189/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.298475132 seconds)
    (190/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.143024497 seconds)
    (191/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.317675768 seconds)
    (192/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.423696666 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.325612077 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.423440481 seconds)
    (195/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.38280521 seconds)
    (196/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.984881605 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.304110167 seconds)
    (198/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.028459547 seconds)
    (199/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.317506408 seconds)
    (200/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.454667138 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.048902353 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.351799361 seconds)
    (203/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.294559432 seconds)
    (204/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.280821826 seconds)
    (205/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.525155773 seconds)
    (206/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.43077684 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.304929568 seconds)
    (208/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.383144026 seconds)
    (209/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.367952059 seconds)
    (210/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.291569348 seconds)
    (211/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.289408403 seconds)
    (212/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.302232676 seconds)
    (213/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.380045 seconds)
    (214/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.450136186 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.469686519 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.339006163 seconds)
    (217/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.375918855 seconds)
    (218/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.390918682 seconds)
    (219/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.320535986 seconds)
    (220/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.992079805 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.289341787 seconds)
    (222/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.420948419 seconds)
    (223/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.295894497 seconds)
    (224/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.415449349 seconds)
  done (took 356.498477744 seconds)
done (took 357.679460376 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342997749 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.472182513 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.314329337 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.314948554 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340800487 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297776965 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.330589819 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.308608635 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.298402321 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.29770854 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.296928669 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.302286733 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.315639332 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.332631096 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.410178169 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.310656389 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.313759658 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.299341499 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.337742464 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355678754 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340913773 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342430873 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.309156562 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.315737518 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34411496 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344115136 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.319271665 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.28910094 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.315782516 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.337585408 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.287840097 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.32116111 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348490989 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349153146 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341029421 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.299815447 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342707722 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.476027696 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.3325753 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.334268439 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.301701248 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.348729295 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.30928923 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.309321101 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.350536551 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.310473668 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345046972 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.420726947 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.28977111 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.29098966 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346990401 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36006309 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.301463707 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.290259689 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.299967625 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.422195447 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.302326585 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346945597 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.302046557 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343812802 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414165581 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345475951 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.361603588 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347029383 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.301787449 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.32212965 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.301116804 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.359666709 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.299717631 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343054257 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3445145 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.307209026 seconds)
done (took 105.12042888 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.364953441 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.293048815 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.403587216 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.300840799 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401075078 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40046849 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.29883255 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.297208322 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.297866626 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.681189792 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.298918943 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.299204337 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.303052223 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.299169456 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.385424847 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.30193791 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.299428459 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.653480486 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.302244373 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.375345415 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.301213927 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.298891474 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.304101225 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721833425 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.302038277 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.299134834 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.373690591 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.302262091 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.648463261 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.29778243 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.29857949 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.657280423 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.393581066 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.319736058 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.312503963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.310232775 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.403649902 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.320439854 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.384946745 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.386075078 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.404667862 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.341677738 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.297945073 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.302372386 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.30510653 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.304994488 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.300605926 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.329025404 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.302608631 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.30108507 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.650427754 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.314004009 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.312971617 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.303217809 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30193582 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.324566956 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.303671401 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.305906362 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.39625357 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.30562829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.367049669 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.689068537 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.694512777 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.306594104 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.301903226 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.301773413 seconds)
  done (took 102.465394948 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.370205414 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.379136301 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.414612789 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.320802045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.356333993 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.418817959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.32193299 seconds)
  done (took 10.786333384 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.309805459 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30729448 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354591149 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356736733 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.307051807 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518813428 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306452392 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.316254594 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.301966991 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.381465003 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.306666839 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307143867 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.313672229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.300987158 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354043699 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.316793788 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423322642 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.307967129 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.306958631 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.460783129 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304190054 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.313747214 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.379498629 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.316545033 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.306379359 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.311392695 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.258426231 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307235892 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303329016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.305839238 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.30251263 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.414665787 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.306830604 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.303450695 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303317456 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465040485 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.30710702 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303106768 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.30736062 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.306113779 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.3063149 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.306701862 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.307054993 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.30339582 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.305940136 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.331037117 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.306987403 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.306873084 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.306923736 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.30817618 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.381041205 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.30816986 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.304194235 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.305173548 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.384577169 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.313256865 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.308152396 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.304136285 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306735101 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304626485 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461074404 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355476328 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.307986291 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357965184 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308227954 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.308942771 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.308425396 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.307262113 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399266953 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.311231657 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360493787 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.311386835 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535398635 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.33636075 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31296754 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.313954013 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.313013239 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308935989 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.303797172 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.314827084 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.305917494 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.309697693 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.316073474 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306942941 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.30647478 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.491584782 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466404617 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.307530874 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.321368061 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.316713774 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.308249128 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.385894185 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.310290317 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.307437989 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361294154 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426426859 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.387510134 seconds)
  done (took 135.576126785 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.313854311 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.318258096 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.313857778 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.333889847 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.310920807 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.310237493 seconds)
  done (took 9.110524561 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.313560471 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.312077726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.311064362 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.3131903 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.312146543 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.310697569 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.312459367 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314866559 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31671956 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.313095173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.30995972 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.312546946 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.312236102 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.313018068 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.313442093 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.315109878 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.31232891 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310014137 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.312944281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312294447 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.310087217 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.311718844 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312107967 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.314540472 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.31429631 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313152798 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31990755 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.313220486 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.312063539 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.31727558 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.331137202 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.311678936 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.315395384 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.317629075 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.315585933 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.314961694 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317808305 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.312766794 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310637671 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.312394802 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.313836876 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314778042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.313782054 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.314663365 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.316581115 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.319816612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.319208057 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.321151199 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.31569477 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.315729275 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.314035731 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.314495259 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.313664319 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.316320561 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316336638 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335738601 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.319086328 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.315343391 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.316620901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.316231418 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.31546038 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.315574077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.317751093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.319513121 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.313365055 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.315909137 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.317900298 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320005404 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316214472 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.315683802 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.315832903 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.314190788 seconds)
  done (took 96.906090464 seconds)
done (took 356.043009224 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.272104146 seconds)
  done (took 4.486137342 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.394230985 seconds)
  done (took 3.609517771 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.91278159 seconds)
  done (took 22.133735999 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.352281536 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.320126264 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.329850289 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.30894152 seconds)
  done (took 10.525336486 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.560409477 seconds)
  done (took 3.775990724 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.317633052 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.310608606 seconds)
  done (took 5.84449633 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.603679608 seconds)
  done (took 3.81901462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.746592518 seconds)
  done (took 3.967828442 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.324354951 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.325640733 seconds)
  done (took 5.873393579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.303018056 seconds)
  done (took 3.518518982 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.122688292 seconds)
  done (took 16.340331724 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.318104867 seconds)
  done (took 3.535713395 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.335094677 seconds)
  done (took 3.553166679 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.806612532 seconds)
  done (took 6.02156467 seconds)
done (took 98.216623982 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.311443843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.314134279 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.310839876 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.310703597 seconds)
  done (took 10.46364342 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.370943936 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.371088337 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.373020543 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.370337673 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.371677095 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.36944366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345286238 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.343323312 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.369757218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.369435089 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.370625209 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.369195312 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.370633483 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.345339851 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.369436566 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.375123921 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.371383122 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.36965548 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.345986706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.369758367 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321198008 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.37089758 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.370285442 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.320385103 seconds)
  done (took 33.910291695 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.837452968 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.389553724 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.473042607 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.371734046 seconds)
  done (took 7.288471221 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.397668029 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.396398519 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.410732796 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.449380422 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.46087057 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.424418544 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.347030243 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.341294579 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327629529 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.396918081 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.447972979 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.389232186 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.479504158 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.319781178 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.527004457 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.321587654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321761355 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.397851953 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.450000118 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.463341479 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.321162488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.39969223 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.399919631 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.397818005 seconds)
  done (took 34.807091968 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.330933761 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.33586968 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.32021016 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.33655824 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.319750762 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.320291727 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.322386286 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.326962093 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.31915441 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.320282484 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.320712926 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.33478149 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.325268482 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.321231237 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.329141199 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.323154325 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.327180097 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.326345295 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.321501168 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.327517945 seconds)
  done (took 27.728416393 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.315624262 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.314141465 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.666896028 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.570959393 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.316382606 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.316104609 seconds)
  done (took 13.719949871 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.390749412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.543145129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.322909622 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.666273491 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748316983 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.324537994 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323016743 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.567573021 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.876589019 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.854515088 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.382776476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.394295001 seconds)
  done (took 19.615552881 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.316673368 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.322222792 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.329433015 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337847466 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.376511828 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.343062364 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.331951713 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.316920147 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.382084088 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.396192026 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.341756079 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.378369828 seconds)
  done (took 21.395651068 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413640165 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317222563 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317789151 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339743011 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320890013 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162510864 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329639184 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043059524 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.345262841 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592022309 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319155488 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438175186 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574614659 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330960886 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323738135 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.308171865 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552571297 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801711207 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321580669 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318564976 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378922322 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323431305 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333541961 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53502534 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325560311 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320298169 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.581787199 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319916637 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600329495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333086588 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331666501 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320786663 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594536194 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974379298 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441250791 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529623443 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333720503 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326228733 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.330728083 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.333066587 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338857717 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327173196 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331526051 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321648101 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321622145 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323518482 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034802939 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345769944 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.31823851 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323112481 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576893995 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419538571 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.324714801 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321100482 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371379182 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32725573 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.326674179 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416451825 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909934485 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32245433 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32970969 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.328737356 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340475699 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327146806 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944985351 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.32858217 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.327960136 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327170441 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323929086 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33764724 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344323965 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323337981 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.348160083 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323082241 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040326288 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340765902 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330564083 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867007128 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331540258 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.32765428 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556423003 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323704519 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324139595 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.321895836 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324516636 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020951375 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333187078 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.308513409 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362894355 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.02531765 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.553789263 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349282869 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35525803 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548786432 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.308898289 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324583611 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.324357329 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331104704 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347250848 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027253957 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342759922 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.329223704 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58405873 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.538789178 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325175073 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.315399969 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825291075 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353256638 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.344384628 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323945279 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542713481 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.907275324 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347091029 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325221156 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347003523 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326955932 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058068165 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334554928 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.431291448 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337867753 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603018606 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.099357833 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329698556 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394290811 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332734409 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328580459 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328076402 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334233058 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326107704 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.528703689 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350992667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.342926256 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.329269254 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328023568 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.325896275 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332052751 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.333535488 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551217523 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331636365 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607651895 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327991023 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327918376 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328703091 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.552126133 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.330813362 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.666692865 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591632678 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3414342 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332282762 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360975344 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347188142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431913829 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351283442 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.32866391 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605312904 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.333642069 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.333262623 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329870203 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337033281 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334682997 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.337758784 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346442387 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916875561 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31421403 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336700563 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221105249 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.345895646 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399846693 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338210407 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545476249 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.332027978 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332694093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.359542142 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.32827608 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561428735 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341137295 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.33221614 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430052684 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.807844983 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.930931417 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351370583 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.33116922 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.327973015 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.328069002 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3324289 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332398668 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331081662 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542787175 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349210275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330459768 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921903301 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337559672 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331450907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.341474855 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343034211 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.336651296 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332885636 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.329802127 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336417251 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351875356 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.347931347 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478260377 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.346124109 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332345983 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.849999008 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338711711 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333516562 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332566077 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367298593 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33372061 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136710325 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596849795 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343883673 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596018463 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336914813 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.370775674 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.333844301 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3394401 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347515474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.341161722 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346991338 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.3448197 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333979887 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339004476 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914080247 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072014204 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874794103 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346888876 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.335185171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338790717 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.044574451 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354399411 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334523214 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571944509 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056573569 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354361063 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8117054 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.36617606 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09610615 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599813659 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570370111 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344591885 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.342930554 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601974265 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548264476 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372158108 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335913476 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339184442 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.320030751 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887532095 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35472213 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419343238 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060952286 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362650273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341833886 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.411491631 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352584241 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740524352 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359157676 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33664902 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337165007 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357305373 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15762211 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344355323 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335893854 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943659027 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34578115 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.817925736 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355065934 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.552256686 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.352918065 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.341245956 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.340205358 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.348295904 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.596030698 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596598019 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339607672 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339722835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877270614 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257085879 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.344710353 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337923037 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077564802 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342042145 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626342112 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.338100404 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364986478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345324563 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337988119 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338742685 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.338013932 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346991104 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31326666 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829515276 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.343195728 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341538274 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35775871 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343174183 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594240691 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.353587623 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926106263 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574036918 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34170781 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365440122 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.342979788 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355106244 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.332983399 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341104238 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339409107 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40804264 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56763861 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358295633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.326719341 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415371123 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556381636 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34065147 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338250189 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59098518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.344064751 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.350757662 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078995663 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379011158 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341313209 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348437613 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351809496 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36535039 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41080864 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556582051 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.357528111 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353565492 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747115239 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366155939 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349716901 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.354863774 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438012885 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34968992 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.351204618 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.115597242 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929430863 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085320081 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939718864 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60884488 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343953515 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352547997 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343558865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506797854 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34328715 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617488761 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344329332 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.363776452 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369628845 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343572485 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384358748 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560439928 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619994896 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344370942 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346700007 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34817858 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.344359526 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356555949 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.555793276 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835695739 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89538753 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347190277 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359936682 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071773666 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638078483 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345152689 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345110635 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345436735 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.347734177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.380821044 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.351445202 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346829723 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495102289 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604661768 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010125488 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.380355453 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.376623987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.863340835 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346641413 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604636392 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344237595 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561689674 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94062857 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057549144 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617740343 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417629939 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562539764 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.350046653 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508621162 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.353165118 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351564063 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346981606 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351687505 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.343363236 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.358529525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940227215 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618430122 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.352092325 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.357001156 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380811178 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.365779203 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582947126 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058466229 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572306687 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358869773 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353124667 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348597474 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94289931 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616334958 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351012216 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.352223572 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592762618 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354392202 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371153297 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.865807283 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.34645437 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896113061 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.320636747 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370871516 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36193944 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063033684 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94713647 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.363968374 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843852305 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352237937 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353275582 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628894341 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.355837491 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357376137 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630328781 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.35365862 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355567434 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571401693 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.940606284 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124841398 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.36701143 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358771072 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.35856381 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350922599 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366541663 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354100076 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35167173 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.769315156 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374034256 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350949905 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362286661 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.357687045 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355214723 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.369453011 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350997233 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.357033363 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.348685693 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.336505809 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371062032 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449022034 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908540023 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3792056 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.023245352 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.679020341 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606466532 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366004305 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341130404 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.355409797 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353065942 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353064903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354517406 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368436347 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904972591 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.355644663 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.367993908 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356292084 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.353547171 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566406519 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353821119 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574958601 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358749677 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373741355 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.338542019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353300241 seconds)
  done (took 958.517250646 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.35440806 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.364704379 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.386951801 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.362466649 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368677594 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449293286 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.399829759 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475358268 seconds)
  done (took 20.415351372 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.357105929 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.368104964 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.367475285 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.368982575 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.36590546 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.823772198 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.369974513 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.364440567 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.370453287 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.353871842 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.358798462 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.341177336 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.367600003 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.36402612 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.344050492 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.36846628 seconds)
  done (took 32.514509877 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.314839251 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.481948099 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.258404246 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.383626629 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.397695312 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.354719241 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.564347909 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.373776447 seconds)
  done (took 26.385050762 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.364724213 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.366209343 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.365913084 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.369410857 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.366367596 seconds)
  done (took 8.088959083 seconds)
done (took 1216.063476268 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.360088953 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.361639215 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.359820918 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363378091 seconds)
  done (took 6.701436326 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.34029296 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.339861151 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.338602873 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.356986313 seconds)
  done (took 9.632732396 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.057044362 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.005515626 seconds)
  done (took 5.318665277 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.845848203 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.847815742 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.845265679 seconds)
  done (took 6.796298397 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.673716193 seconds)
  done (took 2.931161618 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.252144961 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.361390046 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.041711603 seconds)
  done (took 7.912808668 seconds)
done (took 40.546480899 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360018506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.602278304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.51160051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.355663628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.532715142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.510981188 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.096968216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357258314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.362874654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.373122375 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.361092564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518399357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.076319413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.603210136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.077173935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.698073973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519457663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.357600219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.374796258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36851675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.099181096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364968792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.359380828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.356013117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.540778615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.501475617 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.367710231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.697785454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.356737828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.369610278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.505583039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.357803133 seconds)
  done (took 82.150755972 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.357043603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.37434851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.358333549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.385932073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361728031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.377397326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358405681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.35811287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.363609153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.361949789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382281531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.357683456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.37425986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.36035288 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.37575854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.359538914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.375191513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.364001555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.360539033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.357853616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362108667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360027174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.358797332 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.373394552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367871449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359589272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.378584615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.360059342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360925194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.36753791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.365540285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.388402511 seconds)
  done (took 76.98829706 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.359962533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.367566089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.3610598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.363700661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376549482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.36522455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.363034514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363973018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.374176555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364194532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360835982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.379131835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.37763487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.360727561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.378305296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.361991074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.360954043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.388654201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36810749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.364796144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362833812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.367098511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.36274191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360887701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.37361178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.363307988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.360925372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.370607463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374378413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374509798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.367226267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367342359 seconds)
  done (took 77.027931241 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.64144402 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.371375853 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.370675116 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.363686582 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370743607 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369604488 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364519315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.646068086 seconds)
  done (took 14.76078355 seconds)
done (took 252.182849991 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.361402873 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.589781879 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.39241323 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.363135994 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.418110263 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.392243883 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.591872188 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.409243282 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588101701 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.388662007 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.389345263 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.364141189 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.643897356 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521377474 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.293220096 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.362654933 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.72127551 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.385291497 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.638360385 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.639618479 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.393865259 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.372007569 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.276112707 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.73016384 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.374410561 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.457204704 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.473292208 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.585423034 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.526215381 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.449960277 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.588559033 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.36548591 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.370006986 seconds)
  done (took 61.682760956 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.372180366 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.490702961 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.372358993 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.374252317 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.495125597 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.373340451 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.371698774 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.373015074 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.372652496 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.373292143 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.373486133 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.374147258 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.373728661 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.418264413 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.496423335 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.389797702 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.37306189 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.489989423 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.373611878 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.366122957 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.414192 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.373447725 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.375912161 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.416816593 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.374470816 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.375018831 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.495753617 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.374494923 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.369523618 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.488693241 seconds)
  done (took 43.322843867 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375312325 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.620901164 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.804130292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.382491857 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.376140502 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.380006849 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.452775661 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.378143158 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377888171 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.378134331 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.542669821 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.379001151 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407935258 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.826630729 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.377273245 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376967479 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.376341585 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.375454109 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.631129224 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385349407 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.472761183 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.379493528 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.454217168 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.385556082 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.397385576 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.376302713 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380528375 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.968519012 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.384415945 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.543927784 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.150841183 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.453770795 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.918929643 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.813853714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.152226674 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.383265615 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.377194349 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.546670251 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380637932 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.378184872 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.453151841 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.378276675 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.808461616 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.044090536 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401415814 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.37898051 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.988977264 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.547932761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.618965959 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391261701 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.845925832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.385760859 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380472746 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380645684 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619707516 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.385967909 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.37948591 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.980570837 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.399717401 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.455887364 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.381841232 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.381276241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.637385709 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.381589548 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.629113807 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381647477 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.387628367 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.400383542 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.818090264 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382133093 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.062410514 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.398594529 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.380348702 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.545930851 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.626126269 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015657699 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.40087991 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.634872473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.916745263 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.457396908 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385780041 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.955188733 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.459768404 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.386597014 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383452989 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.386267158 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.382369331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.487234951 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.455004746 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.99141826 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.057841554 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.003183894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.475719921 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.389480494 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.38199563 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.989142218 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.400709607 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.383531933 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.812649805 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060845497 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.403257248 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.389497405 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.067933935 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.405978282 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.461721038 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.389396573 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.822204415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383787508 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.429810727 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.383225825 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.390157512 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.406694832 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.458966868 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.38832255 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383824726 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.052759194 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.574562412 seconds)
  done (took 182.241075219 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.378586537 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.39376517 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.377404071 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.397788761 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.377746611 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.387957107 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.377409076 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.37617055 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.383213292 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.376056013 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.378822509 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.386844953 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.386190922 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.378722931 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.378374726 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.378315769 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.378443693 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.385344223 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.378593677 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.378279383 seconds)
  done (took 44.910309494 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.386728505 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.940679858 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.518170314 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412781936 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.383323813 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.386671888 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.441032484 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.388595609 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384994357 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.681100603 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.556093273 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407102873 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.387172256 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.385073767 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.51600144 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.399023101 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.686563714 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.953492372 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.392242183 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.949020371 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.381158213 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.387320204 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.385431529 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.954551815 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.694459607 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.465179614 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445592538 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.955226623 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.389909164 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.386382288 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.956313898 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393263818 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.389702056 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.947042456 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409034836 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.392750315 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.386479831 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.446295259 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.449178403 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.693192158 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.037413393 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.465864319 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.402100718 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761638452 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.393747336 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.376653287 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.951952147 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.412798505 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.376295724 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.389762108 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.394272225 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.533940442 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.391983964 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.534897856 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.389326761 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389860772 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.95648559 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.538353731 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.522830861 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.584620753 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.409671267 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.463633165 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.388116031 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953496679 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.413189107 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39190756 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.389865538 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.562034608 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.96725143 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.465322026 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.690516918 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.689438744 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.391236759 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.447540532 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.410661989 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.757370369 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.450313443 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.841854588 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.693854411 seconds)
  done (took 123.327699228 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.633990616 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.504010519 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.54427557 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.994378979 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.387545702 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.514442877 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.501714856 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.649371513 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.385658793 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.477485695 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.601164677 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.46722663 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.101998795 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.462953914 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.486130552 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540674435 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.531945344 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.392024032 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.058570011 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.573118002 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.407689808 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.493652824 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.97419616 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.566998804 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.385638882 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.927503784 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.311506373 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.058429643 seconds)
  done (took 52.218147796 seconds)
done (took 508.964334728 seconds)
SAVING RESULT...
DONE!
