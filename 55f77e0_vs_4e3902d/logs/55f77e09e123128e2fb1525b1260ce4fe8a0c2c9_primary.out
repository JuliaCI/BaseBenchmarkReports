cset: moving following pidspec: 22050
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.941273199 seconds)
loading group "string"... done (took 0.551408172 seconds)
loading group "linalg"... done (took 8.982985448 seconds)
loading group "parallel"... done (took 0.172277926 seconds)
loading group "find"... done (took 1.458122305 seconds)
loading group "tuple"... done (took 2.114069467 seconds)
loading group "dates"... done (took 1.392881042 seconds)
loading group "micro"... done (took 0.218859329 seconds)
loading group "io"... done (took 0.635318716 seconds)
loading group "scalar"... done (took 44.438469796 seconds)
loading group "sparse"... done (took 14.069009557 seconds)
loading group "broadcast"... done (took 1.11559289 seconds)
loading group "union"... done (took 12.827729156 seconds)
loading group "simd"... done (took 2.72903051 seconds)
loading group "random"... done (took 10.998925857 seconds)
loading group "problem"... done (took 1832.763550401 seconds)
loading group "array"... done (took 26.044163409 seconds)
loading group "misc"... done (took 1.130101453 seconds)
loading group "sort"... done (took 3.798663241 seconds)
loading group "collection"... done (took 19.002240368 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.635093514 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119097432 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.167096339 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.255331982 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207791878 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146816381 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162588664 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.558087047 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.99273424 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231407952 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.129089323 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.548801035 seconds)
done (took 5.887904997 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.277562682 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.434366446 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113574743 seconds)
  done (took 1.215746245 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092611928 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182368891 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094468791 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110404259 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110468971 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10969232 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093395531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109730474 seconds)
  done (took 1.479885811 seconds)
done (took 3.74170206 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.479610875 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.839799219 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.526727401 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.13195974 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158318906 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.147641406 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321870812 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160079426 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.127360795 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.099493894 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.186034511 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.36209371 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.490199759 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.963826477 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096419103 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127794531 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083093311 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.7016875 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080595753 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133595936 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.524651286 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114636969 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118551285 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142675954 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190449037 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131016001 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178198704 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110206507 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674981139 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104872082 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186134969 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099611527 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162492715 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.249886936 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.0952983 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098873658 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685859049 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192618636 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113086427 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101128686 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685915475 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083201503 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194943516 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.115088873 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108655936 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18814357 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115020193 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07880383 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101520938 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103287598 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158039808 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.471778871 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108696851 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.145574808 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.10851377 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.684354588 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099712466 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158499366 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14206355 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103386586 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099603643 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107354991 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15559073 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110452765 seconds)
  done (took 19.693588302 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.120266739 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139763769 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094032294 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141198708 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139124416 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097101246 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083589143 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0945483 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125276038 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185286986 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.121152696 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142521146 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092342858 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080388856 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117402027 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247960499 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105184843 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122964792 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081126466 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106499378 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138559022 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095161042 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109320137 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109984816 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168005427 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204192062 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111391341 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125605349 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095801148 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100743096 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144092101 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164357944 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074701209 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094215833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182204507 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119962545 seconds)
  done (took 5.15923101 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201507736 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116214602 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192325338 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178782632 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.164676737 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147709114 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183366409 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117553003 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251518703 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.257071772 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183518782 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084726042 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131819395 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095489041 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094651209 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079508369 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095165312 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.678488302 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179400016 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148301592 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106163987 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105206593 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097012488 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375911347 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085231094 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096762441 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085660732 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088951315 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176260671 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099714418 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.297547812 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098189094 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110269619 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130741292 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19396781 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130901774 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123644006 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10286663 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079937014 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.233053115 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107489295 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078909271 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12440345 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131679687 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116149269 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101316262 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109501159 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222947338 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100990123 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118633087 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.09633195 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200818495 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098389691 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100171764 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.354377628 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117203171 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085547466 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101159853 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081213971 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.319481578 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133462096 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10040607 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080364616 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105017639 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079266321 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405611858 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109310958 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904264201 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098016699 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16133518 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100286011 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106618039 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087297422 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104561812 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103705821 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099833414 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080359576 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098647094 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080034931 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104116865 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117100048 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085208416 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095638033 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147553793 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119677739 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101175903 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125434496 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103495907 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080736303 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127488297 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080875412 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099752191 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145493924 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085765211 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11520308 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100298539 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142594482 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081326353 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206541968 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082250349 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125205904 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098886272 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112389008 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120321617 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096722589 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083372396 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09517444 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079646957 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161385772 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084930347 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097356481 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085296775 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098115812 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096092812 seconds)
  done (took 23.800866869 seconds)
done (took 49.322112792 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.470052357 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094059023 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112978935 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112977016 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111068347 seconds)
  done (took 1.646409278 seconds)
done (took 2.365874055 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.335427157 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193603336 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10165362 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195411717 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088006619 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201635133 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164040714 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117774285 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198170995 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099613854 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175462914 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099287185 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08827973 seconds)
  done (took 2.806003362 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096075273 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120514709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081549957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108896259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075073158 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107910328 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09145531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.128225385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090889908 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101159877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074893209 seconds)
  done (took 1.79079734 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092008321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115220497 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082491286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106866081 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074693014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088620584 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106366167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115367313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090311686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102411997 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075079342 seconds)
  done (took 1.762986187 seconds)
done (took 7.065423523 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.044685555 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.381114252 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11973992 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164898736 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.337466324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210107057 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.519625182 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131445295 seconds)
  done (took 11.811009436 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.133053514 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097377222 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079543874 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097393623 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080263915 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097604354 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082915771 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098475537 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082050293 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097230934 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082875219 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096005309 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082039627 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097004795 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.079812931 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09956304 seconds)
  done (took 2.259969043 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120646544 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116022261 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103276558 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107795345 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.083265468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100954065 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086281188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101948095 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082362108 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099781805 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105618244 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089395025 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104063647 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082152018 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102339028 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106134468 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082619553 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103042002 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086591205 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102648713 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090022923 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100046692 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104123291 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089294822 seconds)
  done (took 3.176675251 seconds)
done (took 17.964947224 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171593573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084023517 seconds)
  done (took 0.974650632 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104097333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122204582 seconds)
  done (took 0.952381006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109210019 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100255162 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138364994 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115206381 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081327483 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09620742 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112575041 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097499956 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081049388 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097767227 seconds)
  done (took 1.755216446 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087671589 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104216774 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089801306 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118433216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108202089 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082321527 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101626081 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084138318 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10369431 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078724829 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104786568 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116075223 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087296038 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118796124 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085887822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103478053 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10680143 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08481992 seconds)
  done (took 2.492706854 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083038618 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084456742 seconds)
  done (took 0.896143721 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085599166 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09834567 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084631607 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099822065 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078569992 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09589059 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078474474 seconds)
  done (took 1.349550742 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523971777 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.254261431 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336082354 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.098000239 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15228952 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.368157862 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135329355 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112520161 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112808852 seconds)
  done (took 2.862643693 seconds)
done (took 12.007983266 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09343153 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189252945 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.545232795 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117813561 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077991341 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158728708 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.259884216 seconds)
done (took 2.172099431 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36058901 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.127562645 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091626715 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081519049 seconds)
  done (took 1.38699826 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08144875 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105023256 seconds)
  done (took 0.918552388 seconds)
done (took 3.04205093 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081513012 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079995662 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.095651827 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080238786 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.095938786 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077784951 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097852628 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080127486 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.135468324 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.077734413 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096759684 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078232768 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096062354 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075779324 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076306454 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096131547 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075787464 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092823129 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075667604 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093648023 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07610024 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095286757 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.195811682 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075412015 seconds)
  done (took 2.971232501 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102405075 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099389908 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087329047 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104009919 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084588915 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104419524 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104667261 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081574397 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103565997 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084160965 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101825535 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084674331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100148859 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085178643 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10094046 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103140433 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085779438 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095985293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081168981 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100249778 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085006876 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096788152 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082969862 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101529835 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09928909 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08314063 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097973352 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079838482 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100712799 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083276056 seconds)
  done (took 3.539917242 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090086675 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076958923 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094969348 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087750156 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092891263 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080125292 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093323879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077094653 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095651256 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077233706 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095583716 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076299862 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093435771 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077021454 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078265314 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101612005 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111633483 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076320835 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076488925 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095356756 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082080123 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092931954 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079812935 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093317751 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0762985 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093238786 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077377451 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076691391 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094350432 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076227092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099612206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083525232 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094238168 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092140042 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103216365 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07944275 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105874251 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077379763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0956464 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076199626 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094212071 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077405092 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076873158 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105092299 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07975536 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094332851 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076964615 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09605957 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077711386 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097165723 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076410231 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093397645 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078961037 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095423502 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08264368 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09327397 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078531611 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076544243 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095042855 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076938243 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092777137 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077280809 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100514675 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077507459 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117165154 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087731817 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093610812 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07842124 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097483192 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085267286 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095462757 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095460444 seconds)
  done (took 7.057358869 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084452978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108067023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080377901 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096917597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075247191 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077265814 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101695092 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094167734 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078994994 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112831513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07724075 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096403059 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078549345 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098331297 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078110345 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096261415 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08817201 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092668421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077678984 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098588271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078841693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100796971 seconds)
  done (took 2.713599216 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226018609 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104243105 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142660929 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113585928 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097108687 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111369943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101917071 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085081685 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101124898 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087377154 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104058304 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084107768 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114638138 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104545991 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087623908 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104863509 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101584532 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089100347 seconds)
  done (took 2.702660833 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096187132 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10072274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105791504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097665866 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080080546 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100764648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085837748 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112435025 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099246647 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080405741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107716867 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08283807 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099882149 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080728392 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099968972 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080957439 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099416752 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08060549 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107211315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104273723 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087346577 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108002455 seconds)
  done (took 2.842304504 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099406299 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100272326 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110344985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100725065 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075583688 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096026087 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088115957 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097500298 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105818429 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082493276 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097860854 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079062194 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104899424 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080175956 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103720937 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081013328 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100075738 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080582518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099951848 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076903069 seconds)
  done (took 2.605463574 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127583406 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117627179 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099701166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126583047 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114365911 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097163339 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125357381 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114279 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097242313 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127503617 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09646477 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113767244 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126039446 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104337037 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113178887 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125204947 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107775059 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125028521 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114379763 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096908154 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1264897 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114361675 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108663273 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114757254 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099754662 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114791705 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114429064 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10466027 seconds)
  done (took 3.916470018 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083262866 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083036855 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095869447 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078002579 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095234515 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077398246 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095229722 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078003635 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079906679 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094585075 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080482462 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097389829 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080149236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098596145 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08022183 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097033823 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080144571 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076993527 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095036372 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078124761 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097323865 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0801667 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097291559 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077678263 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094791521 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081038967 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077750043 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094563448 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080225697 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095006242 seconds)
  done (took 3.349050894 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091384554 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107497373 seconds)
  done (took 0.948042827 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081428079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118742184 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078101352 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101155072 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086484738 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099106334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090880556 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104367112 seconds)
  done (took 1.511101537 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.109405415 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119642903 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08679377 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110108471 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100194573 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117031471 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166831321 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086804683 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106629884 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081254295 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118195436 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080728947 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109985511 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104962868 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089821598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113065736 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078827225 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108726012 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088688197 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101358667 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086267279 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114860697 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09247498 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105913445 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083838943 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109970559 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112896624 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.09268346 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104122429 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094072624 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106267372 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074998104 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103871089 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086761315 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096749124 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099724776 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116509404 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085535687 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108971685 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104733437 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09075782 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093588155 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092365112 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10633526 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093855735 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106718652 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08762769 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094513414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082069635 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102741331 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076608739 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10202327 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075650297 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108629135 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092038668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118112049 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083882306 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10428028 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086392357 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103136325 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0884738 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10389104 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109641976 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085460602 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109844053 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091754614 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107953483 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078225902 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092999849 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08008936 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109689655 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107028578 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111241781 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087617058 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105072091 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079142914 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105619389 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087377601 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10776355 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110431419 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086995453 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107434456 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092911774 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103556158 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086948987 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107156196 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084131299 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102585588 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082585981 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120125 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085378143 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097797663 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082811333 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110321625 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086684798 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103713887 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083062791 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109278398 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076839671 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104908449 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088611571 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106945392 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112290503 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08816032 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106772503 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090929694 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112766515 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08754106 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103027403 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078799799 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105379822 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084685797 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108467514 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076368457 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104247887 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086081321 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104786389 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093081381 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10146224 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086117619 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110250952 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092999756 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101344384 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077739586 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104049463 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085838273 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107948971 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110643604 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08391512 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076708546 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09549505 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089760129 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10406645 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106027595 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086898132 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105481222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07685389 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079790587 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105111388 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110321192 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085507724 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106219344 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091794668 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106756327 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084747789 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109920178 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08511589 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100041189 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091270963 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103566414 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077301426 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109272431 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085383142 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102404734 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086346208 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108388147 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104603687 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088091753 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083450942 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105173157 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105332629 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082143353 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104554221 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085057598 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120911316 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086089872 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095385728 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079372741 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106660708 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082947241 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085234933 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100058444 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086118681 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105824218 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080349557 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103041446 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085667169 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117329108 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113455461 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087829434 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107415101 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094273329 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104593546 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088506069 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10356763 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088740955 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105399256 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09167474 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107752836 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087717828 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104417118 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078632648 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106257101 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093280743 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100386222 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080438247 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100714877 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086878754 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111612842 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087259935 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105770362 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084639449 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107225816 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091613546 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105506435 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08664883 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101317773 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087070922 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111323085 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08848557 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106352183 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112321859 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088597772 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095463848 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091114264 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101956695 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092168236 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095606333 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083286996 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083180032 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107695763 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084987071 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104650688 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076036363 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110995976 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110325503 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088044336 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101173382 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086866045 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114081829 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085673655 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108384958 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087879766 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107838876 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100980057 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101108155 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086742112 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113119142 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104525704 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076567734 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107707149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085238163 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081371312 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103493451 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084657533 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106271526 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088976866 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106682032 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076456066 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104817784 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084809361 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100909119 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079286494 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110850554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087515334 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105626369 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114345959 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089767086 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105204666 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090243938 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104281745 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089378574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106258394 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091145268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105780032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085061383 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100986741 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08855053 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101257655 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080725112 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103476421 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087499453 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105905371 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089459664 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104040097 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092185886 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105332418 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088124042 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124179774 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102715395 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083639361 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106132324 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090120734 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104332096 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087208998 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096857785 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093137191 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10535105 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094514692 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104376212 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079551432 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106446189 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087051629 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107192314 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088918307 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106384907 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085600439 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104751225 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086779607 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1154043 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083816338 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112279167 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108848265 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090633968 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105765898 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088620732 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104756055 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084013679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106365851 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089681568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106928295 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086746551 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109126515 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08823321 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104522449 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085814548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107595512 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089042901 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107907691 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077666975 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101779351 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083707065 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105683225 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092339643 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107634036 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085684943 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104092966 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089872038 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104007826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080218318 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11032832 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090080148 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106796197 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096792318 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101142015 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088187287 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116349381 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07717719 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102920825 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081173161 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101816598 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093095863 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107303355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093487129 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106704081 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083968746 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098495366 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08909443 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103957505 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078178027 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099455382 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091436537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103478612 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086224444 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107023774 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090670529 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107546565 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09133921 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104697483 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087042089 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106456063 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07968839 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102235208 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083515181 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107628407 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088925385 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103329331 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081823628 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.1060423 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087530085 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106098128 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086972314 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105119811 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093186231 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105719035 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088279777 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111309673 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078209961 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10651551 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08729298 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105461114 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083890374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107515102 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08988528 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107791405 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092517319 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106209344 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089830509 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107252121 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081692962 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105613906 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087498435 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106926467 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08393148 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108238691 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094246779 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100008575 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088176226 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107399101 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084978285 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10800438 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088920932 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107680531 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110652117 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08863746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106212469 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092212706 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106610331 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090268963 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108351062 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086665481 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111645771 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084122618 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113466768 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089460011 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107444839 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087116316 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103262728 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087696842 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10627387 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086379224 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111950966 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089641809 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102430661 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084405916 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099624294 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088175945 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111781782 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094730211 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106749051 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088370703 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098775068 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080346824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108020408 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08472737 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105894728 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091140642 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111206923 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087239656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105533794 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086026386 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112107664 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111256285 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091640255 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103529583 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091710794 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107323951 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088301908 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104562826 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088442715 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107912409 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09069897 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105328403 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084375531 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115960272 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093201619 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109294886 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086268397 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10894523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086522284 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098579665 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088927856 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107936279 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109382338 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088801467 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10594657 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099224008 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102770009 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0876373 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111901463 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087595026 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113614299 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07958458 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108301936 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090308431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108996026 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080280346 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104091196 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085058904 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107782837 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085896551 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09848793 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099024326 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112651227 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088071301 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106215252 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086791892 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099260628 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080058148 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103139933 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09052671 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10582529 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097005257 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103264718 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084830428 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098718895 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088791143 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10819761 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091983089 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100476774 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080137919 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103981168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09004486 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114623283 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087202583 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107082815 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090104107 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107725091 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083187854 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112989295 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081452865 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109532681 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101007821 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10982073 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110347485 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093201656 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113859611 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09050464 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098744484 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090732308 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108275292 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090388383 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108955695 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091367035 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123805224 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090266973 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104990686 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0872107 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108141949 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085632211 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115250383 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108900698 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089887672 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109050896 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087544667 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109611831 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096141048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110002544 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09005348 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108335412 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087078749 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107336701 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086203266 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105636124 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091263175 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109136184 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088968413 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110492598 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085288641 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118614064 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095459158 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110843341 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080972543 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104672849 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084778247 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098940764 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090325891 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101799241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088142195 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105025617 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087082577 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.110298532 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092416915 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109323004 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091056658 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10797276 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079720894 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111474782 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090892344 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110364849 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083758264 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108533506 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091484516 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112854854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093560807 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106665595 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08899771 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107476195 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091394768 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099349584 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092682521 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106563069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087719735 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104532864 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08944446 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109076876 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091053985 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10937502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0914538 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108329495 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092813063 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112589564 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081456218 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10149574 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092661996 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102423803 seconds)
  done (took 58.823303603 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154921983 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087428133 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098781876 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080317311 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125646935 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081176985 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098658029 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081241339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100048932 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094309962 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100365056 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08045003 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121706658 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127585353 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124738149 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11458415 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081744949 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100286784 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081135689 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099870983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101058623 seconds)
  done (took 2.937788594 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110957161 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11888904 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116831264 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10200198 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111643532 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117241101 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096695019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118784076 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121158497 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111549706 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102789579 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117568577 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112222163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093809099 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112760763 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114478629 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102386515 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110871501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119352312 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09813935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115949847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116332205 seconds)
  done (took 3.242195899 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09931608 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.089562495 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113544444 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082426395 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10739281 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.08261761 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113029187 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084908268 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111837016 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089834215 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105004331 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088980022 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113078925 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083028512 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105997131 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08468582 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111820716 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088048463 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108532405 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.08308421 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127735729 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10146875 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083576085 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085374409 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117311153 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108254867 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.089021653 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087479467 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105997231 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088274814 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104209312 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090694948 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111446495 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086021231 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105481784 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088157436 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107780084 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083220896 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104542898 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091896034 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102925857 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090318639 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115595502 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085605801 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103955697 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090967355 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107468167 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08249017 seconds)
  done (took 5.494819613 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12736411 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158441022 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093997089 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156252328 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129800429 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119337197 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092896047 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149652326 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107340308 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088845758 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126364674 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12382565 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09053503 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117332473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089725582 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109048742 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113239664 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09379778 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119631656 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089415033 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117343987 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111470976 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102930168 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121847697 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112531395 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088850248 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107653749 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.099238356 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121177685 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114506615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094440396 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118197744 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12954751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097152501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111434727 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111341146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106093654 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109285342 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092014478 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107794784 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110513843 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098858923 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111789152 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125969242 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09210965 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110902853 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093108673 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111007734 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126033975 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096345602 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119661238 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12382524 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094753164 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109185423 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095586058 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127336675 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109240858 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088710948 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112703574 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120496708 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.090428457 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119052882 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108750583 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114393726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118061789 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103861256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111868348 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113078523 seconds)
  done (took 8.479724804 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102805667 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132966884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126090431 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105469081 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114794169 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11338569 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094797749 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113804912 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094945939 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12138751 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114042167 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16520094 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088266348 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119514383 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094205714 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114149545 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113658394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095259184 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114131894 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094597723 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114343134 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125848933 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094297768 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125520261 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127180029 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106861914 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095600437 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113605334 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104919367 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114702162 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127078442 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114651514 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09554688 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126032916 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128329613 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094771763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104126334 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09407774 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115038713 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11317575 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08881023 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126076118 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113688252 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088558244 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11384469 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095710302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125582159 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127716405 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120448314 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102524794 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114485404 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126115608 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095089669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114015772 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125121438 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133642891 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106480704 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125908034 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113647488 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106504213 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126302467 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133623784 seconds)
  done (took 7.804045472 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091156961 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085691374 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103923673 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.08324334 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105676986 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084484525 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105249318 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087182408 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084734212 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106917661 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085935024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103140368 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083567398 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104886597 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084009792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102720035 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084275677 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083109195 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105609929 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083660719 seconds)
  done (took 2.671446521 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101440547 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126766712 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087551571 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114154031 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089243129 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115007985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107899239 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089860398 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105929173 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090313186 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118411019 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099362209 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109318264 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112763502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099863194 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114390903 seconds)
  done (took 2.49958584 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11334552 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120215023 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132775066 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092230854 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104979649 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094493347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107077085 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083004142 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102429743 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095187029 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112598961 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098517408 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106334724 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085311622 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106690849 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092622949 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102796255 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091825262 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106274817 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112193754 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113068622 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109492709 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088406384 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109615563 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090272883 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114500411 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094522722 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105227326 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085388967 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107808903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08924914 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115698794 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082283933 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113346307 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084485947 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104771008 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085870271 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108368865 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0925865 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107594488 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084121274 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110779202 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085334501 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109037884 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082288712 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109127529 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081435909 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115071436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107883837 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090203882 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106280197 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095666682 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113243194 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099422037 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116710176 seconds)
  done (took 6.387808989 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106678944 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110140238 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091518463 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103682523 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08955512 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115431077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091039072 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108341429 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089101317 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104141182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089748848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110768441 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088709411 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110266542 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088932781 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11120944 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081416009 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108027858 seconds)
  done (took 2.617553145 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098548493 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10598206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094935542 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107272936 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087032123 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108333935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083663526 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084789507 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104992889 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086584342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107785062 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088182631 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104455131 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089455744 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106749619 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086890465 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108997622 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084553606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106729406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082758154 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108396519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085799686 seconds)
  done (took 2.943064159 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111528848 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140201038 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101726858 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150670132 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112183204 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091415089 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12244113 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091714515 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129859138 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110400977 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091067416 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110380744 seconds)
  done (took 2.189040996 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119336047 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14643988 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084771107 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111867659 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120601829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093646394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112486004 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092800821 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1250031 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126132758 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092948238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126252927 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125695394 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123819177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100876539 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122940088 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112953489 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092993933 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108353781 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134732643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093736452 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124477192 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11224744 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092946077 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112547274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123363363 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105248405 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127203136 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112378726 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10602424 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122506572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112671083 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104988051 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127582336 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110662804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125583568 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09372757 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134979609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121407823 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103830316 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111814117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1201236 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104720103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120100956 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124836476 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092439922 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119874255 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112020571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092456693 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141273576 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120454222 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123889665 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099791268 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126566832 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124981703 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140545304 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126752036 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123875547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100857537 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126352985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124016263 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121048639 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103618799 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12665861 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121271891 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124846254 seconds)
  done (took 8.441722706 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134805713 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108136736 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092332506 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128682333 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125165638 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11337951 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09278399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11324066 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092407183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110832583 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161387891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113286046 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104700961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124654604 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112724776 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093198284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113600269 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124151433 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089689446 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140955811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113362612 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124963546 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104463097 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125564694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127269695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121147249 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09386252 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113528764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092995542 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113896434 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120469553 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09375773 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125641787 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105985911 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104880357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114317997 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09260113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121951775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113383393 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100424112 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125737778 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135683995 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114248411 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094275912 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126641078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112944166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094234767 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109632108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093040315 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110402309 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127335305 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126731748 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107434605 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125913785 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114024464 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093320124 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114424341 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113189948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093890045 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120887775 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12532096 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094014097 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141448184 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113744811 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092985461 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125532787 seconds)
  done (took 8.288632848 seconds)
done (took 157.707228952 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.11370046 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145223242 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10301375 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173310734 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087548921 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144888241 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120545532 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125034917 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087440887 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109560611 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088329852 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111459104 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154196194 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109998567 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088469847 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111547474 seconds)
  done (took 2.70187539 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.188171966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288135063 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107328874 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113926799 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094831076 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112717039 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092065214 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116501935 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08963855 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122344586 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111071864 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091792845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122155748 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092006342 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110276834 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091058115 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121949873 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090006884 seconds)
  done (took 2.990447381 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120320044 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163680276 seconds)
  done (took 1.124222114 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129056257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189813875 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307982403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166144519 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118980787 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13297372 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166090302 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129552808 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196913183 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131630521 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110766003 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116780208 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140054094 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10103453 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119844268 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095357693 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143186919 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117239446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098000897 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116967435 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116856287 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117563827 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12088602 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09794806 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187620708 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131234973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116962344 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097267882 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117973298 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097375805 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121599961 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130290038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10880375 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193406605 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100386252 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189185504 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103527204 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115239209 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096739698 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117309059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119376157 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100003206 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132269423 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114825655 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.096849407 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123812735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096095023 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117014544 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102453134 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127162235 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123219237 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10012094 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.19056553 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124861699 seconds)
  done (took 7.808208349 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.843073116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159920867 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115960079 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.950880013 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147619152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130547917 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.840380579 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11709684 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268907876 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.077114007 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134319524 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129278461 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236159087 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260453333 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153931208 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343521948 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.71755977 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129758095 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122820857 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158733915 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122264531 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143996309 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11398154 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.447238173 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117802109 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114014143 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099707733 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128753934 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168140664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114648824 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098772627 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.208218722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.272349817 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187383484 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116556239 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091481902 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114619464 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175216567 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274357251 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224117978 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180287022 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089358166 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113492066 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105728373 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135334486 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110169804 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.171733174 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181001605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.201614245 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097955788 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128284673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10271558 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126217023 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168292423 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.113385445 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.347696333 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345136615 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093417486 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123031884 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111912067 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271657619 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114864634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208665738 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142258516 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220321638 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091840201 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789301869 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173388683 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113896628 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123058354 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100393065 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120103697 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103605961 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17582991 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388844228 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130385479 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117824197 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092622193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232812852 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09233915 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114750978 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171468331 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114618008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101884995 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130438566 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126246426 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.178795194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257308774 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128825595 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100253364 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119771127 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127069883 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093893403 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219023661 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224554074 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.185566313 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220790863 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127441275 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.173130537 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172906596 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125896032 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177732854 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122172981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132096548 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106387463 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222251891 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14839067 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093479606 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121420083 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121322084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152442852 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09607925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123317668 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17695755 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.474819934 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193935783 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08968977 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118820837 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100740512 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190555982 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101679028 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27010087 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122434133 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175274258 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099699644 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112468594 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099826386 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.19293633 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129017913 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103012213 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127702335 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101787354 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279662292 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225277482 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108650191 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244963049 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184204485 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103494902 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205043775 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101670418 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199209522 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103277623 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128078258 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115265182 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763150708 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128423736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122099987 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099239584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198441988 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113936464 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095330029 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113442857 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090961827 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820087067 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096408784 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112212777 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095366864 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124047502 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100729202 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120902381 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118339703 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169618012 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238597907 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105165814 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122941017 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113618596 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168713047 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094750488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114893936 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093494031 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115783044 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10202104 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119944409 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094407943 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202882383 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167345305 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226376239 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532798288 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115381909 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092241213 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235592792 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115037262 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29044257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123138249 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2330814 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1753001 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.113036074 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343193549 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178292681 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201632384 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096232975 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.20047077 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090635971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121272152 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169317164 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114603036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101775679 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165173318 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133567132 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129659928 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157519327 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094112375 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235932747 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113490744 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.178035765 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116908908 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105842851 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316231233 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115731216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114386809 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.192197267 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09786263 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116440339 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.782603889 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.117048023 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104471019 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125578338 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230173806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174829547 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123618184 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101190831 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130599067 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169608922 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.242635202 seconds)
  done (took 45.77699823 seconds)
done (took 61.232964791 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312181573 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273940867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.312364444 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203254276 seconds)
  done (took 2.039400756 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.189976429 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159731911 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130709954 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114936454 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161820572 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091363047 seconds)
  done (took 1.711279021 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.499406548 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384222185 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352135783 seconds)
  done (took 2.102097931 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271417185 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.29024027 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.369037679 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415838143 seconds)
  done (took 2.319418049 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213195709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131188634 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104554008 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14544202 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178922887 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.18276282 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14896803 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158799427 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135737816 seconds)
  done (took 2.307534062 seconds)
done (took 11.342266823 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.142667236 seconds)
    (2/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.329386377 seconds)
    (3/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.304443787 seconds)
    (4/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.167974382 seconds)
    (5/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.134366047 seconds)
    (6/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.282332611 seconds)
    (7/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.241053853 seconds)
    (8/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.161386749 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.112926979 seconds)
    (10/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.266003643 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095800101 seconds)
    (12/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11786447 seconds)
    (13/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.104259153 seconds)
    (14/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.137669509 seconds)
    (15/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.214273186 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.185572245 seconds)
    (17/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.258117925 seconds)
    (18/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094204897 seconds)
    (19/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.260008395 seconds)
    (20/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090404604 seconds)
    (21/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.242413744 seconds)
    (22/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.22008885 seconds)
    (23/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097895176 seconds)
    (24/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210707313 seconds)
    (25/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.185389935 seconds)
    (26/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.168665117 seconds)
    (27/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.195460315 seconds)
    (28/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205554023 seconds)
    (29/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.198714881 seconds)
    (30/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.208757401 seconds)
    (31/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126839626 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.106563574 seconds)
    (33/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.149391873 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.148091754 seconds)
    (35/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.210541033 seconds)
    (36/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078825476 seconds)
    (37/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.201764663 seconds)
    (38/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.196520267 seconds)
    (39/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.206747243 seconds)
    (40/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.105139506 seconds)
    (41/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131729333 seconds)
    (42/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.141427046 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.105033696 seconds)
    (44/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.154826285 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.148582743 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.124897653 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118422648 seconds)
    (48/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.152440878 seconds)
    (49/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114842853 seconds)
    (50/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.141519579 seconds)
    (51/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094929999 seconds)
    (52/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.211857278 seconds)
    (53/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.121012802 seconds)
    (54/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.14306139 seconds)
    (55/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.143450133 seconds)
    (56/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.13031132 seconds)
    (57/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.079441235 seconds)
    (58/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.183007419 seconds)
    (59/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.156981651 seconds)
    (60/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.106957196 seconds)
    (61/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128937488 seconds)
    (62/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.200516547 seconds)
    (63/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095406118 seconds)
    (64/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.192909406 seconds)
    (65/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132968696 seconds)
    (66/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.087795454 seconds)
    (67/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13938116 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098438871 seconds)
    (69/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.150978873 seconds)
    (70/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.243036895 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141376275 seconds)
    (72/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.086885343 seconds)
    (73/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.211145891 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12060446 seconds)
    (75/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.191864277 seconds)
    (76/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119374896 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150701 seconds)
    (78/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.192148591 seconds)
    (79/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091046059 seconds)
    (80/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181702922 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133430292 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099098307 seconds)
    (83/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.132810973 seconds)
    (84/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.234560833 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121426781 seconds)
    (86/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100163088 seconds)
    (87/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.226726517 seconds)
    (88/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.09594423 seconds)
    (89/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.102516684 seconds)
    (90/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09959906 seconds)
    (91/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167117171 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146271501 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099168272 seconds)
    (94/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129439911 seconds)
    (95/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.135478256 seconds)
    (96/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102416804 seconds)
    (97/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206124051 seconds)
    (98/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.13753135 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117455862 seconds)
    (100/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079442303 seconds)
    (101/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122668894 seconds)
    (102/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098161713 seconds)
    (103/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110868629 seconds)
    (104/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214015539 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.145694498 seconds)
    (106/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110709695 seconds)
    (107/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.170305292 seconds)
    (108/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119262436 seconds)
    (109/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.137684862 seconds)
    (110/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205955653 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121186779 seconds)
    (112/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081203105 seconds)
    (113/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128246152 seconds)
    (114/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.119370576 seconds)
    (115/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102808023 seconds)
    (116/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09760283 seconds)
    (117/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.10210757 seconds)
    (118/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080874223 seconds)
    (119/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116962223 seconds)
    (120/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10611296 seconds)
    (121/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079257729 seconds)
    (122/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.196974287 seconds)
    (123/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102836935 seconds)
    (124/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083376785 seconds)
    (125/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115005176 seconds)
    (126/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097498703 seconds)
    (127/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102305826 seconds)
    (128/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.096759493 seconds)
    (129/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079440535 seconds)
    (130/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103283065 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.153326272 seconds)
    (132/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114468253 seconds)
    (133/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.197894225 seconds)
    (134/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080365299 seconds)
    (135/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119871711 seconds)
    (136/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.07935171 seconds)
    (137/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130550753 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130615111 seconds)
    (139/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079990601 seconds)
    (140/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091556819 seconds)
    (141/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.101968115 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098694003 seconds)
    (143/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.102447061 seconds)
    (144/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113941466 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12132567 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098827382 seconds)
    (147/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.170497975 seconds)
    (148/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121318211 seconds)
    (149/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.088852214 seconds)
    (150/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078385103 seconds)
    (151/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116351463 seconds)
    (152/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.196534276 seconds)
    (153/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.091136438 seconds)
    (154/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133042139 seconds)
    (155/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.149895149 seconds)
    (156/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080459448 seconds)
    (157/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094827763 seconds)
    (158/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119112712 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121592105 seconds)
    (160/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.110103716 seconds)
    (161/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078366763 seconds)
    (162/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.10435493 seconds)
    (163/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080594566 seconds)
    (164/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.209046298 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122637076 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09914257 seconds)
    (167/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.103563556 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080674605 seconds)
    (169/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.103783814 seconds)
    (170/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108873015 seconds)
    (171/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12942013 seconds)
    (172/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096956477 seconds)
    (173/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.200493373 seconds)
    (174/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118257717 seconds)
    (175/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11669836 seconds)
    (176/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.110964481 seconds)
    (177/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080916255 seconds)
    (178/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079561129 seconds)
    (179/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.104582198 seconds)
    (180/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08038116 seconds)
    (181/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115577251 seconds)
    (182/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095197164 seconds)
    (183/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120767938 seconds)
    (184/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080608702 seconds)
    (185/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118799903 seconds)
    (186/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09321952 seconds)
    (187/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.103399428 seconds)
    (188/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080296792 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122494157 seconds)
    (190/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196578523 seconds)
    (191/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096651573 seconds)
    (192/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101220274 seconds)
    (193/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107648461 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135322584 seconds)
    (195/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.080019106 seconds)
    (196/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102693526 seconds)
    (197/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.111425132 seconds)
    (198/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095901825 seconds)
    (199/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115034948 seconds)
    (200/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095390042 seconds)
    (201/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101894664 seconds)
    (202/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100432223 seconds)
    (203/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.10313175 seconds)
    (204/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095913469 seconds)
    (205/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130050121 seconds)
    (206/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080262176 seconds)
    (207/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.101741391 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104201543 seconds)
    (209/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111293919 seconds)
    (210/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080657428 seconds)
    (211/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079387192 seconds)
    (212/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.102983846 seconds)
    (213/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079870725 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129811464 seconds)
    (215/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.079432541 seconds)
    (216/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135160053 seconds)
    (217/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100398729 seconds)
    (218/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118863913 seconds)
    (219/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081706361 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.103155836 seconds)
    (221/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080344895 seconds)
    (222/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.102041889 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080769307 seconds)
    (224/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092040369 seconds)
  done (took 30.571348681 seconds)
done (took 31.439488823 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13606813 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131142986 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102302484 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126590591 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146959371 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106890982 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.128213854 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.107268539 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125384226 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094647957 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.11669332 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.10442194 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.126562119 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.144959747 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106083014 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119126457 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096229751 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128267921 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10433977 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129666488 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147577145 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097186194 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.125185329 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.09561545 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147113072 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096727389 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127292398 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104608693 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125339069 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095461536 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127545393 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09556471 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128389265 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129529062 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094310709 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119221022 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094460364 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086897455 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120146554 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120715188 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103014934 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.118872075 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.105984207 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120119635 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098205204 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117813623 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094406746 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.129889658 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094521431 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127977308 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097477072 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130797781 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094377686 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118402803 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093679198 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121728708 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127234892 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096013331 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128401918 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095157252 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119311653 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095334568 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121967751 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095481556 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119321485 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096499061 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119930103 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097855706 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116486663 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097412364 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116582313 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096452992 seconds)
done (took 9.076694293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104751658 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190644203 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151959948 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156105256 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.1532246 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114135928 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130686662 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151104105 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.104369806 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148336711 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149699618 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141193792 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134120817 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.128264057 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136648055 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.103833449 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126852202 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136505688 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.138403743 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147659865 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152261975 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127884118 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124869249 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146943869 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124919736 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132639377 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129366453 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12611311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10663825 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133505059 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118885915 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130984717 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128466372 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114774988 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.133530784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100479984 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.139028247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122551884 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104019075 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127254463 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1389956 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114161394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123694311 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132789858 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.103961801 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.130284784 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.102607757 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12567077 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103752255 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121672916 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131432753 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141220212 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125117141 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128374017 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105578271 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128318665 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105376318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129797718 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127898658 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107770787 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.127413119 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128928405 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10945071 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143457774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12639019 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106515312 seconds)
  done (took 9.340589756 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119957333 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156924167 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133870338 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110715224 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129256724 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092208938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116479848 seconds)
  done (took 1.77626673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095875852 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147780452 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127367896 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151024404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139582495 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131278507 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134270295 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093501375 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142197225 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126609573 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123011326 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172964408 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118054125 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106554042 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153682441 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117325281 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130008679 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11693195 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102398265 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151141077 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12293128 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.116902202 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131204268 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094747059 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140213993 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096066348 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186691716 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129640938 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093867437 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124632256 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099492236 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213190099 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118578433 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128233504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09311929 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147537616 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.115936122 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124625798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.143174752 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099605708 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.14015002 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101495057 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125763413 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123166582 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.101866101 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.134429248 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106994903 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126658911 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099997141 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146958407 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13000265 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117823868 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119737245 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099761573 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128027873 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101107979 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133167896 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100048105 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147508478 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12542549 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121857444 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145160929 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139860995 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121498041 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136301686 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118037342 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.142585491 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124059854 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102926722 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125822069 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122864835 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121945855 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128684219 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110298649 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127065133 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123233337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146471888 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099397072 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131671238 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098415704 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122488444 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095240352 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137055968 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098316807 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121144187 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13570924 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107817911 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124287793 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099386367 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140802281 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122813622 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107284482 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130504093 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099161456 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134900833 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14751378 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105810453 seconds)
  done (took 12.947823387 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097560264 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096319922 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12650031 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121580929 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096958138 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096162587 seconds)
  done (took 1.56373229 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126908257 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122768154 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110981929 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126656427 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163842632 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.119547603 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145206635 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129007526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.116031774 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134557982 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.119809926 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145522556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150558382 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103348888 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143717113 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.102999794 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14462457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123409146 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.110639152 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123036695 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112000236 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128288404 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099822915 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143026198 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102658803 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128843838 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125771999 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.111031096 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133632422 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105511456 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12688559 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102915638 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12749617 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128890887 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121039429 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127655974 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098043715 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129520978 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126828093 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.104137183 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.145359886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100268249 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133396404 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.105487446 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129690961 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126433471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.105543562 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12566497 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.120719577 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129322172 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.105121014 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12783189 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102921412 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129295781 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103131008 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130646472 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128171024 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.120488801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.127018862 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103762289 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123894973 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103208543 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129443828 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127183445 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10305567 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128329888 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103670655 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123303094 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100526204 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.126401532 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.105560119 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12411893 seconds)
  done (took 9.677119817 seconds)
done (took 36.215864348 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.092016431 seconds)
  done (took 2.013897591 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.865325324 seconds)
  done (took 1.789644467 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.18234065 seconds)
  done (took 18.141844785 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.525371411 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.612230515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.97322436 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168506343 seconds)
  done (took 3.203362466 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964918533 seconds)
  done (took 1.90934653 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.319762933 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268804752 seconds)
  done (took 1.517208254 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.842109905 seconds)
  done (took 1.777189332 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.572857549 seconds)
  done (took 2.506401082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363205991 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204953329 seconds)
  done (took 1.515474086 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.588961983 seconds)
  done (took 1.526736043 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.134817197 seconds)
  done (took 16.078444109 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238716386 seconds)
  done (took 1.194096031 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31028926 seconds)
  done (took 1.250718412 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.553204071 seconds)
  done (took 4.493111534 seconds)
done (took 59.848557661 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110850141 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133596664 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11012092 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130933978 seconds)
  done (took 1.418881074 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11439659 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126651871 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106882242 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127572777 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.11215143 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128018359 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10184236 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.134941995 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103017381 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130779032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127484447 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103631892 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128013701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10298024 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125690859 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104423103 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130655932 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102760343 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127878881 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10373893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128337635 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128544124 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105841468 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127740602 seconds)
  done (took 3.776478428 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.110627808 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099979172 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127082061 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099017188 seconds)
  done (took 1.380929277 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11581426 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142615016 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117350941 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134243203 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142036933 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117864483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124594511 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100379298 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126744255 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112347987 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125333311 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118805406 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142581347 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118614649 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113391761 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11763681 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096908216 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142488373 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110459398 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136453743 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100213609 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.134686067 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107525238 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1399072 seconds)
  done (took 3.889312742 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179729621 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.139362995 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147752264 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172872917 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126206315 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122439324 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124859738 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132186343 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.127878525 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099551531 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124116953 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155550545 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130259815 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126077108 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.099893434 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129361612 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107068974 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129495177 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.10135972 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138521185 seconds)
  done (took 3.567593367 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.110581282 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12332167 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095422407 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122631606 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106550028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126440217 seconds)
  done (took 1.638411205 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100750136 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094653183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119581672 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094217989 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.12446457 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095602557 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118015873 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095451228 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09502018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119584586 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094395026 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118028119 seconds)
  done (took 2.218937062 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50271977 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123546008 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124968656 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100369986 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128435612 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09869286 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139415392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099777996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180515979 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125134676 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11404674 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.177337272 seconds)
  done (took 2.867744954 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220265083 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104656779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280307968 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379014804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165800512 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173369219 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280756844 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174656006 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193984989 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144414056 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212043705 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163134013 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135432283 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185445779 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147612411 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.191826336 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182152131 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207192815 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155716929 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245632948 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171894508 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147666567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220369961 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133823764 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144869033 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16534925 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124837349 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110369812 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178583582 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176021318 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179488179 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155569507 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145247191 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206341623 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245940963 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184524735 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308616664 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141049715 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198268463 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.198979559 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281009199 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147147558 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202578974 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162128281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11175529 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21137884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137815931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210937269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113962864 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148410857 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191156759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181938334 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186751684 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145160024 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305154117 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151521394 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15285509 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187909136 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197000993 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205203482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175247681 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129740854 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194103585 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197482833 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18670975 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151361168 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174928342 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131703336 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18458391 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211243019 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184372599 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174314204 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216078934 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114335684 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17093758 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185023332 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160812239 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186078412 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167393794 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127640585 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131400298 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144398659 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134514789 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166637147 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130956782 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22044698 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143074729 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.296963787 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238635691 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139123824 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168359413 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171376537 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174599479 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153743367 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126767921 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126989019 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.17898174 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164925369 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139343603 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165388595 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152596805 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107024014 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160438171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129683161 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140367118 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.141270923 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173545477 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171350224 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13603214 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170361654 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130675509 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166628862 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177659949 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201572543 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140164714 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13985568 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21121794 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16468977 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.117252232 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191566004 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228049228 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179151114 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118392758 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176973952 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22948795 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123485917 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203567354 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149815181 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140634174 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.15913596 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165287873 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163817876 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136552081 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136906725 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158314829 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211781751 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.136122101 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11701622 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181211404 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13350142 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134360111 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125181946 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144384878 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14922593 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130844651 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146551254 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161717426 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167153919 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161391249 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167021096 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149476844 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200355635 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138899366 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.140579241 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15457054 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124472155 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187150256 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200621813 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109451811 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221836986 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176016366 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204874555 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169682695 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136973876 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189517981 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110717334 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126827939 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174187144 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166926575 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169167056 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198947567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201183612 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173238103 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16143453 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156235799 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174160031 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19151385 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163755177 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.152843355 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168270425 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17337598 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103318885 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.130205664 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107226772 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148184271 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138157524 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114888823 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187958661 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170594813 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221278584 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168007619 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119527265 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1977726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133783569 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17174327 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178527148 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146358511 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200964486 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198168478 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174820842 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151294213 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17959622 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100116649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132096659 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138743841 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173481179 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114612158 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141815445 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150327458 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199433574 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183276487 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157400379 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211933309 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178525344 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212655141 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.131724687 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17213763 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187534814 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138122747 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.197211573 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140479131 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16760756 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195262519 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123816363 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228675009 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168693649 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174929553 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207211428 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164199749 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136792008 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130949517 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176093717 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14708926 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179282913 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153339255 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115540558 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162124833 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144103908 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132514909 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188644586 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149768237 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187897173 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174118674 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183068709 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133440739 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124026426 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167856233 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154284807 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.097625733 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177107118 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232041534 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165437426 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191864291 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11090211 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320772311 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230898215 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193121538 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144955948 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12263268 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169203927 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176980131 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17192032 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19044498 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151558282 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189364928 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166388165 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.123771726 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143045966 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155584116 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157882539 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158963901 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.114085812 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160991199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149740561 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191806881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151832737 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165228681 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171054575 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128151694 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163764505 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148326992 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218617464 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166319025 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186579777 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164330613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184732346 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197202495 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104803619 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136941559 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106704225 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191622379 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141902049 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166975236 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192450437 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229741734 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165860641 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177477239 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118912542 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.131376704 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166411871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129813626 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234014569 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14870007 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.117299389 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234640288 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131194546 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139486059 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172935281 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28870739 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151362676 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19157864 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.101153986 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28653069 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132622641 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111554432 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177231057 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177448252 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139844143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191440154 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172316908 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12614982 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179444696 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146934172 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197752357 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243096855 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178575246 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183310414 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149720164 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166021269 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16938962 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193487259 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122759863 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152424163 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169781945 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199552551 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201638836 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141044256 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170165956 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169613075 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139265908 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211473484 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113914778 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194795747 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139888276 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172733558 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14737916 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104071404 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164991134 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217062778 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114519282 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192750958 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166001387 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140065737 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106701052 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158818225 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166215061 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152211134 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.109269921 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212294462 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108882473 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16999813 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189102551 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11016906 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162031913 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15418724 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137331706 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122652575 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153159591 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142152961 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.153053707 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195386471 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140002741 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193245134 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179800505 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172232647 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165996832 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152075265 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671481231 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108362293 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198616373 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154823091 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195148037 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157160082 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1733282 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168535044 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156440096 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175727337 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129601853 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228982613 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172854139 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165483839 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140333443 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150799069 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125662873 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.140036968 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160433426 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168660032 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120674719 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144951356 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166077106 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153214095 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.125580835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148068252 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201489748 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156243723 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191357702 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194033575 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148108197 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172763937 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183567057 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13720804 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.140309189 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206263189 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122670987 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158000384 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13839886 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.115639418 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188016901 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132100695 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167503648 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139675448 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168600643 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169856759 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142366206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167313871 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148263327 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140345357 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136626333 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162935844 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164838438 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111220527 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136340636 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162205502 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168421225 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.138604021 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134531547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179218721 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200219439 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104781697 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142202724 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290090232 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167149805 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201936876 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160895699 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142028206 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123399961 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162054698 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160078009 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167313713 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109187607 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140465335 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137892293 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187487311 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145703755 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165493101 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193033302 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16855608 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197281742 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.145024527 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272855308 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118758418 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162929097 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139142841 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108393445 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148259309 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142544007 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153016111 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19997866 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187878168 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159588187 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125882378 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136063058 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104643119 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141876263 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181411835 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164093188 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165732482 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122476234 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.126567921 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151491068 seconds)
  done (took 80.792776945 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16506327 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150581424 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154473201 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207117104 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175357012 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264429493 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214226779 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236094109 seconds)
  done (took 2.607939911 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.112522386 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143567792 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149368019 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132714057 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131318111 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.353408099 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.11820034 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.13171097 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191416416 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143994109 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129522559 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.620482034 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102454436 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134191161 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121339166 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130940111 seconds)
  done (took 3.880379032 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.188501819 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.530251093 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.789331384 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.24986096 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.232455629 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.161480865 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.727926838 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191301987 seconds)
  done (took 12.107160561 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136011953 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148187763 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.14926759 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.175005388 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.159440512 seconds)
  done (took 1.812380337 seconds)
done (took 122.895842404 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10625966 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132018589 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105010833 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133973188 seconds)
  done (took 1.506254476 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.122379826 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089011016 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.121035111 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087345154 seconds)
  done (took 1.455663876 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44572125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118702913 seconds)
  done (took 1.642550486 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133526999 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143840471 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.126434093 seconds)
  done (took 1.453601125 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114961191 seconds)
  done (took 1.163041271 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116369713 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.109475509 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.149612777 seconds)
  done (took 1.422582673 seconds)
done (took 9.681331612 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143598883 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439265983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394612001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146631212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728351307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387744415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.086982797 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16307615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170809283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099570502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144862901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678898966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03722797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347963459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023337165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.442683949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709094767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101130899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133815571 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100530956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.065386233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098246537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128283374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101282465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707615472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403945766 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127948803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.481272929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099274179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131054728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389196054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126139832 seconds)
  done (took 17.377794162 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147030621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187986585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134372509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102781269 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130896043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101720096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136177123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11274372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18651907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126703074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118579646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126694697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104514481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127556285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121180241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12678618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102835683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129609904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106430241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12916486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119418921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125984462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101679586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128997603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098974189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141052079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100354679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138388849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099144917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132200903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132176467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102079628 seconds)
  done (took 5.025140493 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153135036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197029481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137237889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134693353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177524356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12802691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214055978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13603561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190325442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126908218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118834051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127232464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164542273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100485821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149091958 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099930344 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129398306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102379185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134176923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101451544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147288014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098725471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129803193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101324019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127194879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114101855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128261979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138934362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101445586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13137429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106923949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126534948 seconds)
  done (took 5.331849274 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11099636 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134554119 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1174347 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144222342 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102738164 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133255478 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107875954 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129436535 seconds)
  done (took 2.032123662 seconds)
done (took 30.816981179 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125798871 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140311736 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114941913 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.13685314 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136588935 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125262532 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112328216 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098180137 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138404319 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116292627 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128471271 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.100714186 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143447508 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105689586 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.144343694 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109656178 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150480694 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.144016385 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102329424 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109703681 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.130717137 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.148114687 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.107458728 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.128422596 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.118261434 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13024289 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118694539 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132297244 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.105102804 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101414005 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.144683112 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105059089 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.129811591 seconds)
  done (took 5.129938479 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.132053881 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.173058561 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.097158811 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.126723889 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.167807183 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098034382 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.155314079 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098828649 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125678875 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098366973 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097165774 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.153108304 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159317742 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.131253521 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.175480518 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.163257091 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.125098266 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.166311271 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.149942112 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.137475286 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.157069915 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.09660611 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.161158989 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.1610343 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.097339362 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.125364235 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.142899469 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157252534 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.170280689 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.132395465 seconds)
  done (took 5.191222661 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113300012 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144410039 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128727874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201578742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.170127424 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116433293 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142201163 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119153899 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157579995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100279922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140579157 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.160239262 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117574789 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13904517 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107019158 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142683815 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121513422 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.130904099 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108052543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148699519 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119428384 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14259126 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115726997 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139106989 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099625539 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138206576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106533914 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143335463 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136436293 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.11158904 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131376152 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105917336 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131548072 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111365672 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132070961 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109002924 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.151307812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11072115 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142967137 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.163457383 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111260977 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.132947155 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12278056 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1764255 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102873276 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136540681 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112141564 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139816235 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099615047 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148817941 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116203424 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129599094 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143536064 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.100794394 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.126812005 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108921951 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102007135 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131928139 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110314077 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.13589345 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149628557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110585537 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136873935 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.10334496 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135514716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101204534 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12722268 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107140712 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.153479446 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10686333 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162886589 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101794378 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.136390412 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.11006869 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136280803 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111096512 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129224755 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109430487 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137974438 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106887604 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138677101 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103555932 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133852809 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119050488 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144938808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137427171 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107091026 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135797161 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104235009 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131543856 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115879678 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.130829912 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105730951 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140135529 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102741554 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133258909 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108416933 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135366957 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100197332 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150081455 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106542154 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.128957496 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.119034694 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.129898767 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10453023 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139309244 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113201471 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129208144 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105854795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136364957 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100592293 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134851979 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105000917 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12884798 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.113592471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.14164655 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106167971 seconds)
  done (took 15.805774488 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.251949293 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.23084475 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201838993 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315214018 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154145666 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.127467445 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228063605 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.183010033 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.131334369 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17021551 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185794669 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.192344501 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101421581 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163767246 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.231257865 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.32261384 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163861846 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171662711 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.141405419 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.152429006 seconds)
  done (took 4.898044975 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120467771 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170561844 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159957807 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128309645 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133021063 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.115924242 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.132343124 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146331071 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103127641 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137751819 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.10160886 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139454369 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104063259 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133934514 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119043548 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147879356 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106231818 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.138560377 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147825716 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108098386 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13139819 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152332322 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111490156 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161561966 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110407553 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146322543 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.100679103 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138840196 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098770122 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132462935 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10723423 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14584664 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.137309595 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103515537 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136190439 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103306814 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127101741 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10507796 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132680826 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106287287 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147338524 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104640667 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131401417 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103067897 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.138806033 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099138219 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.134940229 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109215571 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135868095 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111418294 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136996939 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106714366 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.139528112 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.114132855 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.127472688 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112273723 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144042768 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135301782 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10992037 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129340192 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101458471 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105720211 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130406602 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107545048 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13705066 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147491936 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.11188243 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131249908 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107858471 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135621108 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.106121699 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148529903 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151408815 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100942818 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128157764 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124336653 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.127734263 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091353948 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111520649 seconds)
  done (took 10.944760383 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133085738 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131397318 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12162624 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.16730823 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117395009 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.140877794 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103115578 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.152465395 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.10916201 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.140532047 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109812116 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146652696 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158975186 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116587142 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131280177 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118980883 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136105008 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144225219 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151358428 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162800377 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114797021 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136970732 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115687118 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143477968 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.134598022 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.14444045 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163643307 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.108378134 seconds)
  done (took 4.838472167 seconds)
done (took 47.859710776 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.181744065 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.365247554 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.145218339 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.148498785 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.191461071 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.169265905 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.14551101 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.34094567 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.873413629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.140784807 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.14795587 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.148112011 seconds)
done (took 27.069839778 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.148576881 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.731533572 seconds)
    (2/2) benchmarking "String"...
    done (took 1.473069459 seconds)
  done (took 4.280217728 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.150249363 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.149893812 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.40414607 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.148914259 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.166117415 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.168477148 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.149238683 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.15367601 seconds)
  done (took 15.419005105 seconds)
done (took 25.077077262 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.210714434 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.330767211 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.404738846 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.167676959 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.148827307 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.151279689 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.154519529 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.17778247 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.160922744 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.154374171 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.148099092 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.412765995 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.172157171 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.522848019 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.151647766 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.173467477 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.17364688 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.363576255 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.150591647 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.187711832 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.146777028 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.136195417 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.174568877 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.184666391 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.166523569 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.156062199 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.222985742 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.158587723 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.337400023 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.155299049 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.194734934 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.151710751 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.20813552 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.153209616 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.25882719 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.185585849 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.328465377 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.158886194 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.143705438 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.156799003 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.332705884 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.536777208 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.150932463 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.171116628 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.156293592 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.194025486 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.144099192 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.849074779 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.156598534 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.168547582 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.191160195 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.529903726 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.161709394 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.153480536 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.182364415 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.375994629 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.175875122 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.173109479 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.181655027 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.157617464 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.161165617 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.162108971 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.196331775 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.154140138 seconds)
  done (took 140.1913515 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.149956547 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.153345709 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.152993034 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.214857623 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.153081543 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.154216898 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.150067224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.149559354 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.154300529 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.156105934 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.153280901 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.149791344 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.159221305 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.110084305 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.149902147 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.168357114 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.154529091 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.160596753 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.155603654 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.150678241 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.152924525 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.150999103 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.165807597 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.151256951 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.173644542 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.236607223 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.174957963 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.172798194 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.152931501 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.150976669 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.183099494 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.215341147 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.721149486 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.00738124 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.166348431 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.16006234 seconds)
  done (took 78.311918612 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.15091087 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.150790653 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.151650217 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.181771307 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.15405144 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.151510512 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.68146531 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.684390479 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.87569842 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.541949776 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.337067109 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.151612116 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.369296108 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.151572744 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245344467 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.167678486 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.152473509 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.167656924 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.179674107 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.153170899 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.15250142 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682370894 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.168608711 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.302864 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.319128365 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.168901762 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.184604962 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.551139348 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.153128593 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.183235793 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.480833637 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.199339608 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.15096374 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.453410383 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.131591488 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264133335 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.154243291 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.181637042 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.156667452 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.433878596 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.155539387 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.153006348 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.155199731 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.777923261 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.156401546 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.682821672 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.157605043 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.051118683 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.153665072 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.153948533 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.106387214 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.710805739 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.167396045 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.152245332 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.155617955 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.152709356 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.152631195 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.183692268 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.155743649 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.122702743 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.246641208 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.155317908 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.156076203 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.180467385 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.157420622 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.286648491 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.153056843 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.312882918 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.226267066 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.370407211 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.680001736 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.157500353 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248141286 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270823353 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.154994949 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.153955152 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.153957858 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.155137239 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.26140636 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.154416176 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.538814559 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.320678267 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.16858784 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.349786382 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.249568007 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.154889389 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.505629551 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.15747358 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.153766939 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893444933 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251357203 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.155363748 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.154253173 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.155104836 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.540816819 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678911374 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.348560422 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.15457526 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.336013402 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.15807428 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.550422157 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.658074747 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.76733324 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.15629095 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265011014 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.321458447 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.170805792 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.154673962 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.316672299 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.154167067 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.153977955 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.151866553 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.215879391 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.550507986 seconds)
  done (took 359.659692922 seconds)
done (took 579.237285813 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.869387135 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.82305716 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.955874175 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.845710242 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821528636 seconds)
  done (took 10.394783873 seconds)
done (took 11.469840902 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.333376071 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.335145117 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.211023424 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.336193251 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.18691569 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.352769649 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.319948941 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.176862705 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.256645482 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.232821819 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.255329848 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205515069 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19081651 seconds)
  done (took 17.473038692 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409411175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.159157027 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238145552 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387445452 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.197763101 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.410097445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457872467 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.161348623 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303227744 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.167416581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.168227277 seconds)
  done (took 17.140400455 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.420988435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.162330058 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.221658179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.395505157 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.198941289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419552409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.440124377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.155363406 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.308611193 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.171100876 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.171509518 seconds)
  done (took 17.144234643 seconds)
done (took 52.833474145 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.195214047 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.321940157 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.186483096 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.17027655 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.166500867 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.168574513 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.171659877 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.167500121 seconds)
  done (took 10.629631518 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.16257915 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.162623129 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.166366361 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.164822862 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.162155846 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.163265126 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.163367565 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.164411294 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.162750564 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.164144344 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.165380137 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.164391566 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.164517966 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.16060704 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.161189818 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.162378176 seconds)
  done (took 19.694325748 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.163313257 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.161512068 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.1607291 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.162538944 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.160799152 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.160633302 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.161982565 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.161289656 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.160630493 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.160694296 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.161475624 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.161269267 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.161121446 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.160725305 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.161471309 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.163190059 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.162842387 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.161588931 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.166654303 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.161511682 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.161146057 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.161722131 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.162777797 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.161411731 seconds)
  done (took 28.964919397 seconds)
done (took 60.367597029 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.157202166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.158121796 seconds)
  done (took 5.395951364 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224853061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225938563 seconds)
  done (took 3.534403206 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.165509037 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.165269564 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.166502491 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.164992316 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.165308154 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.16455866 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.166724914 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.167397467 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.164538692 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.164069485 seconds)
  done (took 12.735172497 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.165941791 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.16614646 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.163299847 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.166269827 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.16548419 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.162588001 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.16583317 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.165902311 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.166346943 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.163539481 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.165544088 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.163103158 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.166975287 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.163830606 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.166431835 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.164165881 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.163904973 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.163127384 seconds)
  done (took 22.05042494 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.179769979 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.188017633 seconds)
  done (took 3.449705816 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.304380675 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205865733 seconds)
    (3/7) benchmarking "month"...
    done (took 1.280519541 seconds)
    (4/7) benchmarking "year"...
    done (took 1.271229123 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.20452168 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.184976589 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.205955008 seconds)
  done (took 9.738881623 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.167066538 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.355180335 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.454457398 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.737604898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.168939149 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.172085262 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.069711135 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.170960264 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.17367522 seconds)
  done (took 13.553448086 seconds)
done (took 71.535660666 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.157531721 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.207395431 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.175819517 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.173520608 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.45951894 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.196051233 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.159428908 seconds)
done (took 15.610774941 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.148319337 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.161358918 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.151583878 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.170290836 seconds)
  done (took 9.714959479 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.135928022 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569193982 seconds)
  done (took 4.789458753 seconds)
done (took 15.585369646 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169274461 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.168780581 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.167181457 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.16958096 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.166213032 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.164809994 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.169700172 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.169676768 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.168187237 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.167973279 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.168157442 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169714934 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.16878507 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166826771 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166952679 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16887607 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.166193492 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.167600243 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167119237 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.167475851 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166203514 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169674532 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.167899022 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.16739485 seconds)
  done (took 29.11539784 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.170251094 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.16767148 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.169925274 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.169363337 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.168486492 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.170624972 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.170055378 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.167582142 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.170246538 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.170262249 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16851118 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.167123154 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.171484389 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.168922097 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169564878 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.168841074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.171188228 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168533841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171780624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.168197221 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.171903585 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169942725 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.169206166 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171071769 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.168919746 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169290216 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.17189359 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.168435731 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.172233244 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.168833508 seconds)
  done (took 36.175434793 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.1774002 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.180638426 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.171197363 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.172538384 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.171142219 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.172484602 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.172259774 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.171244133 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.17253389 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.173339902 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.171298379 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.173272353 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.172107887 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.172661692 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.173024153 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.173321885 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.173938708 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.173468322 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.174334585 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.173842741 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.172639077 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.174409383 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.173509933 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.174932209 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.17290599 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.173239023 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.175285133 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.17369328 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.175219202 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.173712151 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.17399599 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.173907023 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.174319718 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.174130427 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.174188701 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.174874076 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.178812972 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.182593067 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.17383052 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.174100487 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.17448214 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.174220686 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.173054828 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.176070553 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.175917736 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.175826591 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.175588136 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.174792433 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.175119183 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.175011212 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.17546177 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.175212672 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.174150865 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.174536683 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.175918228 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.176128413 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.175111301 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.175589308 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.177610739 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.17666625 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.176514992 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.176154946 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.176988727 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.175854135 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.175529541 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.175975061 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.175449799 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.175503105 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.178586436 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.175512943 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.175544256 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.177684441 seconds)
  done (took 85.672144356 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.176401854 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.174322481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.174200177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.174061782 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174947505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.17726632 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.175545237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176762681 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173580536 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.17860448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176654821 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.174618313 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175003945 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.178085345 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17737764 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.174479087 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.177609898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174965928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.176262195 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.179076637 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178172501 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.176503846 seconds)
  done (took 26.965739684 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177142001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.180626173 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.175965018 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.181136733 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.178058396 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.181411443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.178619609 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.179474335 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179481123 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176157987 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177283447 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179649571 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.178200339 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177306658 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176771855 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.17846924 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.179654108 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.178505722 seconds)
  done (took 22.308239178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.17859118 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.177011259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.180570206 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.177845554 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.176387668 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.179766098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177845984 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.180710296 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.180120604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.175765779 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.180428652 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180582481 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.180146913 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177095686 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180513198 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.178921616 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.18041697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177849113 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18121029 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.179169712 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.179050245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.180723217 seconds)
  done (took 27.034732539 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182066284 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.180308551 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.178559751 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.179393018 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.179531426 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.18025031 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.183775908 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.178392478 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.181972421 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.180547482 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.179377797 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.180646612 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.180613355 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.178818262 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.178913072 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178694473 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.181339284 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.180396273 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.182038773 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.1792068 seconds)
  done (took 24.699708345 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.183496026 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183720378 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.184793794 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183022385 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184633113 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.184449485 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183630234 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.183936217 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.183599436 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.185052044 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.185355691 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184546854 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18492485 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.184968432 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184027983 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.183931572 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.18448776 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.18454364 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184631724 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184289938 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185619563 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.1849841 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184556131 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.184237459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.185631618 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184353671 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185531155 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184398843 seconds)
  done (took 34.260408798 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.184865325 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.183649953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.18292986 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.181421623 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.182480444 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.181178532 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.181126393 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.180099344 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.184172417 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.182669625 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.184497506 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.18403366 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.184857144 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.184772995 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184198904 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.183625827 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183288019 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.181888825 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180939556 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182289575 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.186013239 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185205281 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.184777725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.182016739 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183178632 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.185088108 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18287001 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.182750672 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184412974 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.182848386 seconds)
  done (took 36.596462003 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.224485688 seconds)
    (2/2) benchmarking "in"...
    done (took 1.22928211 seconds)
  done (took 3.552392452 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.182684852 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185527621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.185662842 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.183155466 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.184288555 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.1863809 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.185318191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.184047291 seconds)
  done (took 10.57508773 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.185693866 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.186471578 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.185717524 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.186747072 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.18824966 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.186513231 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193893135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.203944256 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.187767857 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.18816673 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.194082697 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.194720107 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.188523104 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187962346 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.186522352 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188501233 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.187898016 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.187952723 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.187287921 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.187708979 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188575998 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189910075 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191326569 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.185494978 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.190245036 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.198377693 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.192618184 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.188938541 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188579876 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.190679337 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.187695717 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.186195207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.188477579 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.188410383 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.188600538 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.188881261 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.196771679 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20805219 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.194370785 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188620586 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190006617 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.185048106 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.190681215 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.190178061 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.191190157 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.190435397 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.190138797 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.185834792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.189982388 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.192965011 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.194042147 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190416633 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.188181542 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192761288 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.190895152 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197152726 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207736129 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.193973658 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.198376652 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.199936178 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.20277356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.2127332 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191508402 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.191457083 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202046032 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.216081751 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.197079516 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.207356643 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.187507481 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.190116154 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.197934945 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20380273 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.214966674 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.191250476 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19173172 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.191309555 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190515612 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191421002 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.197815189 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.211973026 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.192406212 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192919586 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.201656119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.215744062 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.192172106 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.191311637 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.192135071 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.193328965 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.192779582 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.202394744 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.209746579 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.191153095 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.190325685 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.192272141 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.192640293 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.194560755 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.192368291 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.193147239 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.190352948 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.191362706 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.192883294 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.196033029 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.201413412 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193118599 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19379181 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.19970489 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.192645298 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.193211064 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.19882734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.192081313 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.19496824 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.19682225 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.199450051 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.190694197 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.196977006 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.200386102 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.192582809 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.195605787 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.194721408 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.194449703 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.204379491 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.218812311 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.196229671 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.19449106 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.199623675 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.205954306 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195141492 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.198606956 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.194656127 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.190888048 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.191262691 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.196628828 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.196230471 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.195654469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.194802235 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196836711 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.192712615 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.196197986 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.19561442 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.196234492 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.196373037 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.195781269 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.19723523 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.19693759 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.19630448 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.199207316 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.204259866 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.196312051 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.197413331 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.197287119 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.192819945 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.196777799 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.196273756 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.197490916 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.198070744 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195510334 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.195320614 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.195747511 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196197684 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.196458411 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.196388851 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.197682501 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20086305 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.197245134 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.200099744 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.196868583 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.193455692 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.19669215 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.197960929 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.196793375 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.197168505 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.197072596 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.201890688 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.205397658 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.197277496 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.199645378 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.200879467 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197188873 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199007326 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198355083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.20216361 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.206020163 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.198599264 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.205131734 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.199720534 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198847084 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.198329003 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.200174258 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.198165499 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.199552019 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.201416906 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.204523957 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21100886 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.222848547 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.200938637 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.203262486 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.200281498 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.204514617 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.204681275 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.202047185 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.199016009 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199553998 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.20039606 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199954623 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.201474163 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.197860851 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.200319428 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.199927478 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.201143333 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.200034863 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200243782 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.201264738 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.201961346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.197397859 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199610484 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2008572 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.200268558 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.196620435 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.199505527 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.199970269 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.200930445 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.20099952 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.206954334 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.196912593 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20237001 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.203164879 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.20150498 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.199996239 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.199570781 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202630793 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.201898444 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208703807 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.219057362 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.202392907 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20976232 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.220869167 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.201266373 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.20425086 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.203027919 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.199536967 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.205058965 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.210338209 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.201868657 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.201646319 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.20324678 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202802479 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.201910253 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.209059666 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.200428616 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.203498343 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.202507502 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.202758802 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.19975414 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.205004889 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.203292266 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.203918651 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203948247 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20283313 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.203222126 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20517872 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.203052892 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.20356446 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.203534909 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207272317 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.212136 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.208426887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.204587235 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.204533851 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.204396532 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.207188453 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.203531131 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.204655691 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.204086875 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215696565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.227156025 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.209622043 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.222806226 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.20435292 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209328304 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.223146294 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.208807102 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205231842 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20470948 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.20468645 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.204331506 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.201358363 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205918198 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.205154543 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.207149739 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.207152464 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.208715662 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.204784524 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.205398012 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.206775875 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.205877476 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.205038191 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.206081808 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.20580162 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.207444156 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.207518009 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.206042417 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.206912575 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.213307165 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22439455 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.206243663 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.205701833 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.206175236 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.204788685 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.206616882 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.206714064 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.21129813 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.214183463 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.208964556 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.214916218 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.207377729 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214842541 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.207357049 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.210920037 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.214293281 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.204993957 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.206210323 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.207155826 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.207639173 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.214815325 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.22600254 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.209522263 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.212749641 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.20829685 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.208074941 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.207719852 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.210037954 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.210333058 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.207127143 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217382508 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.228274236 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.211746034 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.209470035 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.204468669 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.207896525 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.208776842 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.208028194 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210993109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.208270842 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.210648979 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.208939322 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.209524408 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.208114206 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.208870771 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.210107394 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.204902853 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.209318744 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21531167 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.229715464 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.214267888 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.209943337 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.21697062 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209803283 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218917732 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.228812913 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.210041068 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.210250551 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.210040103 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.21061026 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.210555434 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.211259376 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.210117166 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.211668596 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.212874347 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.210505339 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.21159569 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.211461305 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.211457622 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.211439473 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220872995 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236130279 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.212379981 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215870447 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.208680972 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.212909426 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.216548091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.212558168 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.212021223 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.214440114 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.698269631 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224757393 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.21215066 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.212227418 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211959691 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212657032 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.212783118 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.212319133 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.211791903 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.212618522 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.212472715 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.213327813 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.215489168 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.212188872 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.212872483 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.213113318 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.214386666 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.222307899 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.213100064 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.213389124 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.215308412 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.21358567 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.21327481 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.214802735 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.212937643 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.21492111 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213427209 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.21508009 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22102914 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.220515522 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.216525737 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.214220085 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.213313176 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.213530444 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.214418203 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215967641 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.21383169 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213923158 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.214660357 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.213172551 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.2147529 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.213929056 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.213941929 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.21370121 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21347154 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.215306473 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.223219321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.21376836 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.211106411 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.21328334 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.213642663 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.213241318 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.215593073 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.2203926 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.216910835 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.225683595 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.222698728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.219394041 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.214568727 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.217830969 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.223543619 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.214956986 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.216600188 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.214984902 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.216036228 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.215807242 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.219357144 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.215800973 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.221260115 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.216169298 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.214298952 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225129531 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.236318792 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216107785 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.217501033 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.220365672 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.215558671 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.213401343 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.215880178 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.21598658 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222771149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.236319629 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216375376 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218091856 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.215913824 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.218758499 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220518925 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216452868 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.216059453 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.214812009 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.217204456 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215767398 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.218457611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.214363836 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.217121042 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.216955472 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.22035191 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.226714632 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.216493011 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21972981 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.220572164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.219734615 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.219652467 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219955147 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.215999736 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.215646475 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.220561553 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22001096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.221809788 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.222432811 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.220840132 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.219746571 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.221140583 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.219494336 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225457881 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.231556721 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.22907509 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.217092575 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.219179707 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.218929932 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.222492548 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221336029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.22093823 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221769669 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.219980306 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.217476028 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221885448 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.221357726 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.22379349 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238255375 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.240664498 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219647296 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.221297368 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223347694 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.221891361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.218873259 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.222300795 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.221147648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.224883823 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.230465347 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.221937585 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.228569157 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239324892 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.222949412 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.226299631 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.225689892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.230817116 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.223994172 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222908593 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.224604784 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.229143998 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.239900891 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224405736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230637741 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253669679 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.238829526 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.224473004 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.224380812 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225073022 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.223577235 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.224337822 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.226174849 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.224433015 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.22254998 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.222088102 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.22415253 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230509992 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.22620238 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.225647883 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.225309304 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.223081765 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.223617807 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.221324934 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.222319589 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.225672558 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.22372325 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.22619815 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.225747513 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.225636264 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237429518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.249818231 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.224826408 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.223358185 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.222459187 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.226608637 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.229587888 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235290838 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.234038695 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.223821994 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.224269742 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.225453775 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225894799 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.225045848 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.222490881 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.225278916 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22853379 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.222778033 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.23730433 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249010657 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.232177061 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.226785005 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226581217 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.226884512 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227957075 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228332725 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226724879 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.228632997 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.228825443 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230257622 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.227195914 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.225738247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.229611125 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.235669166 seconds)
  done (took 721.997986987 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222067854 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221703778 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.22111125 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224148059 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226380469 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22577763 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226176431 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224487135 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.224786346 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22466081 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.225588259 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223730526 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223534345 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226321346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221259928 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223559635 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225203301 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22639462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224623901 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225618218 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224824728 seconds)
  done (took 26.847827904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.227695539 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.225323012 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227375817 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228612033 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22574239 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227509511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223027294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231326673 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230653299 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22477494 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229210099 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228896489 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.227437789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.227295934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227079308 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228932792 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229368822 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227627152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.230882326 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227813462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227976058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229272597 seconds)
  done (took 28.152369315 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.230409971 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.231822494 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.231562871 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.227424148 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.230376534 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.225548298 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.231439856 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.230088851 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.230447635 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.232831316 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.230063633 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.230411978 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.238634297 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.237899898 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.232971667 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.231977126 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.230182306 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.233536317 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.232995821 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.229408759 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.235828819 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.247094496 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.229281127 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.229483494 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.231582737 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.233347933 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.231297979 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.231447943 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.233353138 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.236629016 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.230203434 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.229450807 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.235136546 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.232834035 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.23476134 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.236897206 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.233007274 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.234771992 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.230545146 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.245165089 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.255006658 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.234325942 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.240797624 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.252268147 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.232586347 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.234227686 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.241653929 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.231226845 seconds)
  done (took 60.373075909 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.809992933 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.826351511 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824724938 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.829199524 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.830543199 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.832122849 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.835155874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.829067933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.8197144 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.817486034 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.826410901 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.820444939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822812665 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.824090997 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.822973338 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.824991323 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.82019629 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820420989 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.828926961 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.825556711 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.816890146 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.824373987 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.826086671 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.819190976 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821222441 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820355989 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822710158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.824640166 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.822861311 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.822305118 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.830996676 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835165639 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835159379 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.825494596 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821052955 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.822091341 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.828677748 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.822036315 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828335649 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.823037001 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.825508778 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.825422354 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.828153349 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.837774676 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837046536 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821820912 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.817972001 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.824170216 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.829233437 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.826706506 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.82660969 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.822217086 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83133347 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.830471721 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83205627 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.837788024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.833775532 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.832216855 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.831245971 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.825601024 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823051648 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826599093 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.827348261 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.825965276 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.82885514 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.833535308 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.829490297 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.831240858 seconds)
  done (took 125.329437058 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.235741716 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.235329744 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236996594 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235680437 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236105698 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.236235828 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237384485 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.236510706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.236524262 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237092316 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237720294 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.236728984 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.236219172 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.236808352 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.236244769 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236896226 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.236755438 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238349757 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236178032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238066729 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.238538813 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237554031 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23762157 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.23828751 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23821415 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.237892652 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237399914 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.236216327 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238566195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.238026698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237711697 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.238354519 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.237345787 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.237992861 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.238333931 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.238073082 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.238349791 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236790802 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.236931285 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238310316 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.239287625 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240038677 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238588984 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.238826539 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238574877 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237882075 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.240534806 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.239322447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.239184047 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238753178 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.240734609 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239731614 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238915105 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239276435 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.239742182 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.240136674 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240161308 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241874338 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239679991 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.240304414 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240175879 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.239965505 seconds)
  done (took 77.90818085 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238632796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239551169 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.237037525 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.23786354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240729135 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23756828 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241105323 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.240000614 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24072989 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.240339793 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241473428 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238616483 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239637856 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241050838 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238527519 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239294462 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237333217 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238342857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240847985 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237999655 seconds)
  done (took 25.934181843 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.238849542 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.242040817 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.238337948 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238547114 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.240767197 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.23835057 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.241356392 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242275326 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239135836 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241174955 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.24227848 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241837044 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238946406 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239441643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.24236999 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.237660986 seconds)
  done (took 20.991604883 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.240398088 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.243237237 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.242327808 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.242733976 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.239767742 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.239564153 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.241639319 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.239829038 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.240174825 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.2433722 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.243565209 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.243362875 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.243060704 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.243899916 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.242018121 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.243939479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.241283383 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.23891517 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.243337877 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.242794758 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.240257545 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.240117086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.24339636 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.241360187 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.239732971 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.240565052 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.240671562 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.239423017 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.240998178 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.243808596 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.241390681 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.240977314 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.240647239 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.241229706 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.243413573 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.239578504 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.244543801 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.243912999 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.244727868 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.244026287 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.244036017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.242399072 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.245761449 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.24409415 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.241620396 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.245127926 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.241717812 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.244046301 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.242110707 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.24320669 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.245629622 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.245507806 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.245322147 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.246985902 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.245666107 seconds)
  done (took 69.488770269 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246181447 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246004465 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242032652 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244950118 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.245775455 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.242584493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24620136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.245201095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244055012 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246283112 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243506673 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.247629015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244593459 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245208848 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243885102 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246306521 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24431597 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.244028062 seconds)
  done (took 23.561500206 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24456591 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246194758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.246501996 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.242939281 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.242947432 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246208216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24484406 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.246322773 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247490335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.244493609 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244738143 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.247500006 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246597759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.248429658 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245650357 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244887286 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.248655025 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246746136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244948975 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244361652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249951273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247332114 seconds)
  done (took 28.566117818 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.246889613 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.247563871 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.247836361 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.264204772 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.266179364 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.24737018 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.24845592 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.248211622 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.271375375 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.30155656 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.295526731 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.268933332 seconds)
  done (took 16.308638841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247255164 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247480683 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246500874 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24853938 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249136464 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247026504 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246228267 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246985303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249384576 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248242778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247337053 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250431113 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249941748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248856783 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250108779 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250456416 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248125668 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247074726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247263386 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250866984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246517263 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251126797 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24802594 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249091391 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248734323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248993579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251759753 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24895613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248068303 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251312909 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251036095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247757291 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251525616 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247728069 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250121032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250729796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247556086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251393818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250722243 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249685345 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251272719 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250699336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25186599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249492149 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250881015 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249757431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25055534 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24989608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248998123 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252434007 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251904011 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250972401 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252059401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252231141 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251687141 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252902608 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250896349 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250013916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252250087 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250755938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249205503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254359294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24994562 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250555264 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252919117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251008921 seconds)
  done (took 83.645600172 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252534843 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250037472 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250138979 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250877602 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251360847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250597524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250440574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248990649 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249906196 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250666659 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253846448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252637309 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251018506 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251306992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25115312 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251738423 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251771496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250657031 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250960391 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255076 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251339267 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25230118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252037445 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252411397 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251421661 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255777033 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253824615 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252427827 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251618772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252607114 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253080472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252540976 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253048542 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.250839163 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252943411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252698672 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25289337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254477071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25450867 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255014581 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253296306 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255066679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25212717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253110133 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253121868 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252600016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253861364 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254178835 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255701983 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253388856 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253629593 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25473013 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254654248 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254289915 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253714792 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254727189 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254059754 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254465232 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255097711 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257075814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254647695 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254095345 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257914153 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254680542 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255320688 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255094504 seconds)
  done (took 83.859647958 seconds)
done (took 1731.002641979 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.42111044 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.373128919 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.255599122 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.266950956 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.257685509 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.251355365 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.268623443 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.257427445 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.258441835 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.257127374 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.257264766 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.444488602 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.249609802 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.258586477 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.25813284 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.351195146 seconds)
  done (took 25.851638029 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.284418606 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.263974797 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.369037363 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.281799106 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.284829501 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.436443518 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317799083 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.266425852 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.423189588 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.305136135 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.25352633 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302036427 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.263269784 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.262897131 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.277776999 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.436639348 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.502750907 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.25535127 seconds)
  done (took 27.952203744 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.689926347 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.292833275 seconds)
  done (took 5.149116484 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.280853619 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262711347 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.264329797 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.263349433 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.263138497 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.252894358 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.261432896 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.256957072 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.265304492 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.385446052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.267352076 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.274262788 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.281972488 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.264907961 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.259459084 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.302444727 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.41629393 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.260533095 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.258991294 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.269952882 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.263217148 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.347608482 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.305046063 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.26243529 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.382467355 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.269496163 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.27019241 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.271708087 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.400021975 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.261443435 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.263071381 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.264518466 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.266658114 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.176864026 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.754314741 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.25674549 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.289874644 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.274653902 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.260489682 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.417901446 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.265493955 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.270402213 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.258705103 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.721547845 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.429106655 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.380446736 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.275378306 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.266624358 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.26761941 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.331923705 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.267717219 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268199295 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.309750466 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.093079708 seconds)
  done (took 81.45413634 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.273563799 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.259014965 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.438559455 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.279636635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258437576 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258698931 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.27808168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.531524898 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.28999764 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.258431533 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.584711283 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813939805 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.275942642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.303742951 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.110085393 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.319111556 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.258430219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.273937627 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.259605511 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.25932933 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799357206 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264384138 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.260032641 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.442922766 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.301092678 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766059781 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.260101551 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.258983067 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.260067881 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.261984256 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768259878 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282577107 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.316104561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.261999448 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.525200304 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625591416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588079802 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.268606503 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279377847 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.262890932 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.2738845 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749016215 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604860491 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.260835486 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.261311986 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761106581 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.262325542 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.269450609 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.269628138 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510388823 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.264972187 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.264548671 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.279262978 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.261243237 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.261758484 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.3804881 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.334982866 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767420812 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.262260068 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.262517772 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.308905814 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.264077705 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.266095441 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.265344077 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.263750866 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.612056997 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.405081357 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.272328686 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.609749702 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.765502112 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.27926654 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852354342 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.282940878 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.277530954 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.477227151 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.267828244 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.273881317 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758419743 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.274337904 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.263366827 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.593395247 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.267476307 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.585959847 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.282913576 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264848231 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811758802 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.273630913 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.352286122 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.26423442 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.280059762 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.263520606 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267095896 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.536523963 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.317919924 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.265872564 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.265022802 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.265582218 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.262572314 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.264939798 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.271031782 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.835617478 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.288512078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.264703091 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267027073 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264378618 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286465086 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.26650356 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.268426988 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531518285 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.267335584 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.266339073 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265233268 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.265586527 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.288005929 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.451315627 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.267234618 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.562277554 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.268947324 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265798342 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.269812758 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265694699 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.268848388 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26475338 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.272716705 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.145418141 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.565950567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.285578671 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.28321183 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267320748 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.265282403 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266210537 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.266798822 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.301844073 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.267296066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018699883 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.285620776 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.286115004 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.266311096 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.277029551 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266938608 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.268373246 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268679342 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.556853902 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.539986585 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.413063553 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.271192585 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.268509169 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.024376301 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.289972285 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447290206 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.28888832 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.268923355 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516732052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.494873304 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.270710478 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.268151275 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.269782991 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527463828 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.272211546 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586957021 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806733648 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.284950607 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.272578031 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023487771 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.967159271 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.273874697 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.275101883 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.593033664 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.286718331 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.268557572 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.269138213 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.268524584 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.269761515 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.289703396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.27186391 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.269405671 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.270547752 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.314834957 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460139877 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.288199164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.280950121 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766231287 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.279165937 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268775792 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.300506058 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.270355428 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.269932475 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330765519 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.272838726 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.282795947 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.271831675 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.273645437 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8213485 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.270313402 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.275883875 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460445292 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949319692 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.290681442 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.269698188 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286734672 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.168471014 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795833106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.317544397 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.570693969 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.27536608 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.310923314 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27061121 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296632772 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.791950185 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.272694298 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.286956852 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954504081 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.287749349 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.888116809 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.271055869 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.272965909 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867135659 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.287281575 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.275026499 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.270977271 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272974532 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567061207 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.277206945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.296703106 seconds)
  done (took 483.250829789 seconds)
done (took 624.81852652 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271337546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.278010721 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.2632667 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.279239529 seconds)
  done (took 10.274251943 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.28451256 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.280615653 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.280533045 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.281196924 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.27993246 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.281523527 seconds)
  done (took 8.87270497 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.274507608 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.279940806 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276938089 seconds)
  done (took 8.015042607 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.476886467 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.300015265 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.594074053 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.300413316 seconds)
  done (took 8.857807473 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.284293413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.28454255 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.285953755 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.286105016 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.287805382 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.287766469 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.287264241 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.287163109 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.288361023 seconds)
  done (took 12.76647615 seconds)
done (took 49.965577377 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.456549841 seconds)
    (2/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.452083158 seconds)
    (3/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.376736572 seconds)
    (4/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.295144625 seconds)
    (5/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.362458849 seconds)
    (6/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.267387343 seconds)
    (7/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.387252945 seconds)
    (8/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.302990947 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.322020359 seconds)
    (10/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.353828896 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.310048446 seconds)
    (12/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.288827456 seconds)
    (13/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.290197442 seconds)
    (14/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.351315805 seconds)
    (15/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.26547756 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.388641339 seconds)
    (17/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.146013183 seconds)
    (18/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.314102367 seconds)
    (19/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.022642558 seconds)
    (20/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.391647192 seconds)
    (21/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.394019459 seconds)
    (22/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.985107826 seconds)
    (23/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.323214851 seconds)
    (24/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.014693783 seconds)
    (25/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.292409927 seconds)
    (26/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.423415363 seconds)
    (27/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.932875975 seconds)
    (28/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.023256433 seconds)
    (29/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.346290756 seconds)
    (30/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.346005684 seconds)
    (31/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.378916384 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.290486531 seconds)
    (33/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.30338418 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.335813561 seconds)
    (35/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.366036558 seconds)
    (36/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.361051147 seconds)
    (37/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.302892062 seconds)
    (38/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.393301376 seconds)
    (39/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.297879649 seconds)
    (40/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.500998073 seconds)
    (41/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.302349722 seconds)
    (42/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.384394207 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.313731459 seconds)
    (44/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.306931884 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.346082079 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.331998979 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.29054226 seconds)
    (48/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.281397425 seconds)
    (49/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.494283068 seconds)
    (50/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.304368406 seconds)
    (51/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.294681874 seconds)
    (52/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.453027273 seconds)
    (53/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.438048066 seconds)
    (54/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.327241765 seconds)
    (55/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.47810492 seconds)
    (56/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.296179654 seconds)
    (57/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.300112786 seconds)
    (58/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.303482554 seconds)
    (59/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.292368799 seconds)
    (60/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.295721272 seconds)
    (61/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.378227226 seconds)
    (62/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.402947514 seconds)
    (63/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.295194826 seconds)
    (64/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.025957441 seconds)
    (65/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.419431618 seconds)
    (66/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.352157888 seconds)
    (67/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.490715339 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.35518001 seconds)
    (69/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.30738743 seconds)
    (70/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.933459231 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.286016544 seconds)
    (72/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.33342587 seconds)
    (73/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.947375926 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.343426471 seconds)
    (75/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.943148323 seconds)
    (76/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.301756473 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.440058087 seconds)
    (78/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.27394755 seconds)
    (79/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.426093005 seconds)
    (80/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.465984341 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.504073902 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.3335137 seconds)
    (83/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.294217016 seconds)
    (84/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.371542665 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.388207445 seconds)
    (86/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.283968445 seconds)
    (87/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.615959559 seconds)
    (88/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.412052854 seconds)
    (89/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.459432852 seconds)
    (90/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.384800835 seconds)
    (91/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.429452751 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.285616082 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.458034658 seconds)
    (94/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.313048213 seconds)
    (95/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.352898133 seconds)
    (96/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.269218703 seconds)
    (97/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.438220491 seconds)
    (98/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.364179288 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.295420469 seconds)
    (100/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.980343895 seconds)
    (101/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.289156011 seconds)
    (102/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.366343127 seconds)
    (103/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.427516291 seconds)
    (104/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.282380838 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.316741974 seconds)
    (106/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.284966119 seconds)
    (107/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.476132547 seconds)
    (108/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.30395054 seconds)
    (109/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.354107496 seconds)
    (110/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.424275955 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.387800121 seconds)
    (112/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.032928038 seconds)
    (113/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.336494053 seconds)
    (114/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.308318019 seconds)
    (115/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.372487267 seconds)
    (116/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.295640669 seconds)
    (117/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.610420339 seconds)
    (118/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.379421469 seconds)
    (119/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.316626579 seconds)
    (120/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.580233419 seconds)
    (121/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.945835556 seconds)
    (122/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.024381275 seconds)
    (123/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.301164082 seconds)
    (124/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.28023737 seconds)
    (125/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.377834733 seconds)
    (126/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.310525661 seconds)
    (127/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.419503984 seconds)
    (128/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.272377296 seconds)
    (129/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.353945236 seconds)
    (130/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.270538891 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.30643715 seconds)
    (132/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.28864342 seconds)
    (133/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.432896067 seconds)
    (134/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.285545707 seconds)
    (135/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.305549266 seconds)
    (136/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.348401957 seconds)
    (137/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.309467903 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.383185261 seconds)
    (139/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.277814521 seconds)
    (140/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.338812374 seconds)
    (141/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.335488282 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.337073546 seconds)
    (143/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.330173769 seconds)
    (144/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.388081274 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.384356524 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.378842809 seconds)
    (147/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.37780746 seconds)
    (148/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.305755474 seconds)
    (149/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.428087411 seconds)
    (150/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.411725344 seconds)
    (151/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.381817318 seconds)
    (152/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.984797138 seconds)
    (153/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.159147192 seconds)
    (154/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.318097658 seconds)
    (155/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.290975444 seconds)
    (156/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.392583922 seconds)
    (157/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29745389 seconds)
    (158/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.294581457 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.343827342 seconds)
    (160/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.492398954 seconds)
    (161/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.402579631 seconds)
    (162/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.36793259 seconds)
    (163/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.367523755 seconds)
    (164/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.271490952 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.364374102 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.39145721 seconds)
    (167/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.39420097 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.427377695 seconds)
    (169/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.430984826 seconds)
    (170/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.379293787 seconds)
    (171/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.308422961 seconds)
    (172/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.285701972 seconds)
    (173/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.517685665 seconds)
    (174/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.302310932 seconds)
    (175/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.6393184 seconds)
    (176/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.431168073 seconds)
    (177/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.029609068 seconds)
    (178/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.300072556 seconds)
    (179/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.938437775 seconds)
    (180/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.155330442 seconds)
    (181/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.36194347 seconds)
    (182/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.293880914 seconds)
    (183/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.29298155 seconds)
    (184/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.031462658 seconds)
    (185/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.321305375 seconds)
    (186/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.363829197 seconds)
    (187/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.933903919 seconds)
    (188/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.094965989 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.445244338 seconds)
    (190/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.10781303 seconds)
    (191/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.301136456 seconds)
    (192/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.272343562 seconds)
    (193/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.325910593 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.486766323 seconds)
    (195/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.338476332 seconds)
    (196/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.468230316 seconds)
    (197/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.430543661 seconds)
    (198/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.27897873 seconds)
    (199/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.3310373 seconds)
    (200/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.295326192 seconds)
    (201/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.367695002 seconds)
    (202/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.326369259 seconds)
    (203/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.46108395 seconds)
    (204/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.323554542 seconds)
    (205/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.327856511 seconds)
    (206/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.144854656 seconds)
    (207/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.45506626 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.388062228 seconds)
    (209/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.529794824 seconds)
    (210/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.49238228 seconds)
    (211/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.418535395 seconds)
    (212/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.005869001 seconds)
    (213/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.369625664 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.473256792 seconds)
    (215/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.308742945 seconds)
    (216/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.429321263 seconds)
    (217/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.322450562 seconds)
    (218/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.303464049 seconds)
    (219/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.286290728 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.948008512 seconds)
    (221/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.413756305 seconds)
    (222/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.427810552 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.291838046 seconds)
    (224/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.397994317 seconds)
  done (took 357.267281813 seconds)
done (took 358.453086939 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344295413 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.474461035 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.314613323 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.315825274 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340396969 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.287695295 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349078648 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.3053827 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.30155618 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.301022815 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.288655707 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323000903 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.318003589 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331922033 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.412236489 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.306076725 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.316818573 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.299316614 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.338658429 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.357985399 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342468786 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344052454 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.310559477 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.317983766 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345562587 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345820277 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.321460325 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.289041561 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.300494259 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.339000366 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.293852211 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.320505988 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.349642903 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350237604 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343116565 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.301425664 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343820908 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.475765482 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.335839728 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.334837671 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.303438414 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.350842883 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.309472437 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.311632016 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351621538 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.312665783 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347163571 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.424017092 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.293643381 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.298956001 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350715465 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.361847031 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.304295283 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.300397051 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.307341934 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.423131483 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.301906348 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348403778 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.303988346 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344823667 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41462124 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349835831 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.361901024 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347476551 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.304359743 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.323678627 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.303892736 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.360593826 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.299238591 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345580655 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346830427 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.308268148 seconds)
done (took 105.247583561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.363795124 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.29881344 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.403438627 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.300142441 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401177842 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40215397 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.297603158 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.298980975 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.300104397 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.680794624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.29985118 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.299496846 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.299669487 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.298644037 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.38556409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.301895216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.298608957 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.652469913 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.303368746 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.373439071 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.296203607 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.299334834 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.301925422 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.691780917 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.302093492 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.30055024 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.374704094 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.302292351 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.646473218 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.300021654 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.303122327 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.656206862 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.392444038 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.319997613 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.311685699 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.308759541 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.402407449 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.320311454 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.386572504 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.385105674 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.406738328 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.343345232 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.300075186 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.29672822 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.305059824 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.303908091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.301370161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.330843634 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.300990466 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.300774016 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.646199828 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.314025165 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.302170531 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.301015256 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.3010857 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.332567235 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.303113653 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.304640628 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.39407548 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.305511244 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.367911266 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.688419937 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.691088361 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.304676428 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.304187349 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.30348218 seconds)
  done (took 102.418960516 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.372065328 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.380162061 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.414135193 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.321447174 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.356670362 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.420632808 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.322642455 seconds)
  done (took 10.792512315 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.313205493 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.306082804 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354842737 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355599575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.305886573 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.524759624 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308274402 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.317476409 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.302520646 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38293346 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.306789525 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307034695 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.312464632 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.305028532 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357691921 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.319377657 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.422331512 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.309573923 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.30874277 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.462375067 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307170814 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.314981194 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.384311643 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.318891971 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.309124749 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.314312149 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.271985147 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308168613 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30479094 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.308021834 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305173928 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.419100801 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.311751508 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.309316415 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305644937 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467714712 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.309001579 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305524021 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.307731774 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.308022575 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.307829322 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.307062328 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.307828713 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.30425064 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.307247324 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.332356311 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.30983141 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.307419685 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.308871891 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.309892677 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.385693087 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311029106 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.309136109 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.309544295 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.389640543 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318405359 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.31176276 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.30787495 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.311720512 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307065361 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.46531897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358742812 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.310002399 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359516526 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309987695 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.310173475 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3104067 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.31045375 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402429249 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.310038838 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.359661338 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.307625381 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535504252 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.334976607 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312452365 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.313937957 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.314063186 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310855613 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.308703033 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.318966142 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.307879081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.31101079 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.317714905 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.30955508 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307779801 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.495579522 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468433293 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.309552378 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.32408794 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320757834 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310991589 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.390597765 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.311383383 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.309487531 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364068499 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428357841 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.390165729 seconds)
  done (took 135.789676035 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.317869097 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.320757201 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.317189889 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.334853008 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.314761151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.313150526 seconds)
  done (took 9.131442711 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315782053 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.314111953 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.31261653 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.313093291 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.314101718 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.31315809 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.312932881 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316573219 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31709851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.314069392 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.314100691 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.314596188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.315110784 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.314944112 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.31609402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.31463729 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.313460792 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.31179941 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.313650715 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314175435 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.314474588 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.314641857 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316414387 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317970165 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.320243869 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313769559 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.321652509 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.315322141 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.317366615 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.319586575 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.335139324 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.314755945 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.318025934 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.322617156 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.321223488 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.318876065 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318862032 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.316602311 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313071232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.315959624 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.317154379 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318442105 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.318019885 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.316988056 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.319131792 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.322966659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321087214 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.326535064 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.318168966 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.318006637 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.316954458 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.316549474 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.317318656 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.31730723 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.320845368 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337264704 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.320044546 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.318514975 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.317560154 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.319552338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.316851812 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.318306998 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321158208 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.322775811 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.315116951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.318503402 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.322796388 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.323951484 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318355601 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.317392031 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319678889 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.317256103 seconds)
  done (took 97.099345695 seconds)
done (took 356.430190609 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.11901175 seconds)
  done (took 4.33742242 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.387849493 seconds)
  done (took 3.606190317 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.562759087 seconds)
  done (took 22.78689673 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.356847698 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.347382588 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.330007017 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.318431265 seconds)
  done (took 10.571697101 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.564531177 seconds)
  done (took 3.782229999 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.321395518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.316545168 seconds)
  done (took 5.85914641 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.60545796 seconds)
  done (took 3.824011361 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.728322586 seconds)
  done (took 3.952453792 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.336330122 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.32625245 seconds)
  done (took 5.890060436 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.29817447 seconds)
  done (took 3.516773329 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.945082781 seconds)
  done (took 17.164937792 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.322135857 seconds)
  done (took 3.545675085 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.340083153 seconds)
  done (took 3.558252611 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.856559813 seconds)
  done (took 6.075049391 seconds)
done (took 99.686079968 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.314377875 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.314817712 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.312880296 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.31341839 seconds)
  done (took 10.475271759 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.372890341 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.373898855 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.373845637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.372055748 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.372458795 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.37154298 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345568044 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.346219763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.372311805 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.371838323 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.37309641 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.372217698 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.373388719 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.346632412 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.372313336 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.375740937 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.372913267 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.373150892 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.347915542 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.373158999 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321911977 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.375633639 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.372914083 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.323120824 seconds)
  done (took 33.968804196 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.841210019 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.394299514 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.476191167 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.376151605 seconds)
  done (took 7.308488985 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.398594968 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.399532557 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.412366444 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.451950894 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.463904545 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412234035 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.348891988 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.344844467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.330682112 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.401206756 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.45014998 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.392100638 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.480216325 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.322427496 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.52936782 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.323695076 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.323422183 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.400381733 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.450961345 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.463874838 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.323223476 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.401209208 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.400436217 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.393785473 seconds)
  done (took 34.841834163 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.331237416 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.337299748 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.322410358 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.336655559 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.322876893 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.32132436 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.324389538 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.328014952 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.32111357 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.323005864 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.322750908 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.336477935 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.327487219 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.321532619 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.333713703 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.325088941 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.32842685 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.326930499 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.323327182 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.330494228 seconds)
  done (took 27.76746857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.31637493 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.317180138 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.669345847 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.575090977 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.317480911 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.317715118 seconds)
  done (took 13.737130017 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.395940739 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.546527117 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.328556065 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.677004678 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.765544705 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.330612615 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.327289771 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.569702886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.886262422 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.865657552 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.385292561 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.396837985 seconds)
  done (took 19.699118017 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.321737534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.321465811 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.336858378 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.342646185 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.379396249 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.34779372 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.333682486 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.321292855 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.385364133 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.40235001 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.351089903 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.380893167 seconds)
  done (took 21.449689427 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417032555 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320801634 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328004432 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328616695 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319532602 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163671255 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343257398 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045150599 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.347449737 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596124655 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321431101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422622509 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577059572 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333611088 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3263369 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.306468591 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555812771 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806667837 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32396864 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32357032 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375092594 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322854053 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339705224 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537540132 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32688408 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322771554 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.584364291 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322596949 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604464752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341014179 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33465128 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323211297 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599452477 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978238356 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444900328 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533434686 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342627083 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32609904 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.321149065 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.32513717 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344747518 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328881845 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334691866 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323998459 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323640206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335235124 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038056044 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349387415 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.320940457 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324905248 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58185046 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425214759 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.328258612 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325298975 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356808887 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324870806 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.328727636 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419754223 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906703737 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324621392 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345313982 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.329157839 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327958397 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326354998 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934711083 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.332481796 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.328420236 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330678918 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326760604 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325857521 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362837944 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325591673 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.350440189 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324331247 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029629658 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343258959 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331072675 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881034431 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333380723 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.329800868 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559022006 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325982833 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326069186 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.326175947 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32656004 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03853436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338067671 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.313550671 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369416501 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051580203 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562326544 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354231165 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357818444 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551558111 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.31391589 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327541778 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.328553963 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33294096 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349763804 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.057443467 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349742365 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.334399865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586646268 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.539451727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329183288 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.336958701 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815824398 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358135396 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.348720382 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340074319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544492633 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.913844192 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343625569 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32796987 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350941431 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327774562 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064589064 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335575732 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.433683156 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330013205 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607010425 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.117878271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330770673 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397602715 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334378937 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331127652 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329908304 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335202749 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329957694 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.533643237 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365374639 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.344292154 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.332633619 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32970242 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.328265046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330916026 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.337322412 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.555540465 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3363281 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611173792 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331627491 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332000219 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333060355 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.554745342 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.3340757 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.671307028 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594096591 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342909535 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33458047 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367620648 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350918934 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436691567 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353081334 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.347211427 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592139155 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.335546751 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.339571761 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331281325 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337126923 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335007074 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.339772828 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339957565 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915586167 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308949335 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33764324 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22257117 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.348162721 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401324837 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339597386 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54781337 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.339437043 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344945823 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.339183964 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.334423329 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565345241 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344525201 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.331997163 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417808931 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.811433107 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936888237 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346311624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.334505015 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.332812508 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.33077838 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334743289 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33361787 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333684241 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546303242 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354179028 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33375673 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923884145 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336945388 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334226295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.345177471 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346156534 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.339381158 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336593112 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.333004832 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341568306 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348819924 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352292603 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479181863 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.348411321 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334595468 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.85268664 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341029646 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336604043 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334526682 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371043083 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336801634 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141574221 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598750983 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340794227 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595640766 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337685854 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.355167951 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.333874029 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344210632 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350539975 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.347611035 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367499191 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.348281972 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335536132 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34353308 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917762757 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061161733 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871888746 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339730831 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.349499511 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340712214 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046608599 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354472255 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337779554 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576638044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064628829 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355547912 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820491562 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.362699098 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097227809 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598457866 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570394028 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336961141 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.353024095 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604712009 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551766505 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375004291 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347200271 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343773214 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.32266291 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892353605 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358025307 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425585298 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051294221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366389665 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343310591 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.343979857 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339766062 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766355292 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361196664 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339327656 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340122412 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345125416 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149706133 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348187431 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339456727 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964107775 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351164255 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.829458749 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363083462 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.554406606 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.357729729 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.344737935 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.337526998 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.341491166 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.598042051 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602570119 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344989166 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344478688 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881179538 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.211991611 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.346727869 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341356802 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080438118 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348006846 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633478219 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.3553212 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.352472119 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346692189 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341213952 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34277412 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.339974479 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349189621 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318298584 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834351912 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.356110231 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342874736 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359328539 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346114303 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599533861 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.357806478 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929434486 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573862234 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355532044 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364881802 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.346566934 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344313025 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.335381305 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342130348 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342694245 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390444933 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568245457 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362290752 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.334094457 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380761435 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556294352 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343783986 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341377162 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593292622 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.34588811 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.363492941 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072899398 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378637856 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343821027 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352105118 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360476278 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36467959 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414804857 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5591692 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.361763644 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.356303246 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750460408 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374945237 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352469933 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.358796046 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442556715 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352358945 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.358706673 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.11931022 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935656085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075651568 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936900322 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606750052 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348035683 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353723075 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346983668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508713264 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346854157 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617711826 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345880731 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.361350273 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371415894 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345014093 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364619867 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562672245 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622566014 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346231092 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355918361 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35205151 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.347102409 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358685008 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.55930747 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840845571 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901162517 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350200852 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348105979 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100996756 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645541118 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347938061 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345056929 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34742966 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.367771865 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352749991 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.375159404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354837524 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497882517 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608574507 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016655354 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.381423971 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.376836784 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.864642695 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353132212 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608160846 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346614437 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564401184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944908168 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055081728 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61625515 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41937406 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565976188 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.353044161 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510927644 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.353163106 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348177263 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350737277 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349444929 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.346675963 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.360071806 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944015245 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615409574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.353842578 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.352243881 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379583312 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.360449456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573031193 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062534821 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573830143 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359373107 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355960474 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34951727 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942508013 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6129062 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352499341 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353545897 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607398202 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355345976 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372884031 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.868421222 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.349044341 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911494758 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.323806589 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37208209 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364981177 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065520362 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94360571 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.363778015 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848210078 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354734723 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360414419 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62986691 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.358164449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36227812 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637825125 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.355837672 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362639422 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574743056 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.944067191 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123288674 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.370935626 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361988245 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.35977385 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353014215 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384329777 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353493407 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364359054 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.77472148 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374744752 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353082754 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365467227 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.361522017 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354949336 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.354746382 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352326824 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.35850001 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.365376709 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.338750007 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363548697 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450406234 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91086996 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372008449 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.028585512 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.687259787 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609357133 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357211139 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.344039519 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.361138357 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356981356 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354973268 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354282307 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354698872 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927537191 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.366044243 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.369013883 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35807479 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.355953224 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566841922 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355552053 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575835156 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371248969 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373021735 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.340847718 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353764813 seconds)
  done (took 959.616407999 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358565978 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.403189986 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.381800456 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.446610664 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.379415928 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.452456884 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.398623867 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.476674603 seconds)
  done (took 20.554258643 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.355855408 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.365924051 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.364376943 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.366459444 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.360767242 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.826529097 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.378287866 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.365930924 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.373934771 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.372386402 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.361792673 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.342952289 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.369638087 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.360966921 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.350318149 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.367429707 seconds)
  done (took 32.548338622 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.274530282 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.486539417 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.196839177 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.38983843 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.396450813 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.358005258 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.573576196 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.374661922 seconds)
  done (took 26.308971981 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.369533295 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.370327471 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.369218808 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.368270638 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.37051223 seconds)
  done (took 8.10786208 seconds)
done (took 1217.6005321 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.36339901 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.364963247 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.363114979 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.364791744 seconds)
  done (took 6.716638985 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.343093113 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.343679341 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.346220297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.364251298 seconds)
  done (took 9.656944698 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.060498172 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.007245438 seconds)
  done (took 5.32691649 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.841828488 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.844975876 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.848254678 seconds)
  done (took 6.798647595 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.655291176 seconds)
  done (took 2.918698863 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.263474211 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.367098453 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.047124053 seconds)
  done (took 7.939279194 seconds)
done (took 40.615074338 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368699497 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.611789441 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.520373342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.362564841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.524387792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.517560861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.169150191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364438575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364498361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363261761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.370919203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525081718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.086498887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.621741325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.085718968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.705493827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.523896253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.363441741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378583381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.363379224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.187176292 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.376154945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.370144511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361842814 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.544232458 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.509023588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.364244301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.705132366 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373883148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364725403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.509028439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.364759065 seconds)
  done (took 82.484380094 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.364468177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.387447986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.376518295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.376907047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.365426597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.374731388 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.366389465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364080725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.363743452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363995055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.377430345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.365386821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.368175735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.365051928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.383264701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.363187335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.382207239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382788648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.381532128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.365092548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.365943657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.372154375 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.365396042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.378861552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.372397108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.366422515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385253734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.367897606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364518663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366349738 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.382797628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.376989897 seconds)
  done (took 77.169398007 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.367598692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.366464653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.382462489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36597987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.383763522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.367312055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.370688277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.373025147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.366964676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367325864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.367177901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.38433549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.367480803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.366693782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.370192713 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.366267959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.377189959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.375737413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.368964592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.367342517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.366625444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368710318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369357847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.368505625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.376333491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.37054722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.367030178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.368387723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.388690412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.385248959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.368024797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369135632 seconds)
  done (took 77.158817258 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.648694882 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.376421008 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.377561831 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.369157762 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.377005526 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.376636872 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.371623833 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.651625814 seconds)
  done (took 14.817791078 seconds)
done (took 252.891860427 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.377655568 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.578935597 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.398599746 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.378390282 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.397204184 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.401372906 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.595144026 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.40787909 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.591139012 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.38631173 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.395118901 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.367989277 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.649710774 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.52452038 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.296548104 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.370676147 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.728470478 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.38623023 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.637966165 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.648069576 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.396856999 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.374942091 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.289534757 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.735621835 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.377699986 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45764962 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.476288408 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.594626947 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.530180752 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.455299631 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.597837335 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.370459886 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.369537615 seconds)
  done (took 61.81422038 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.37789084 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.500816578 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.377229167 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.379956903 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.502189596 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.379148483 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.379234135 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.377940877 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.379727925 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.378517624 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.378543447 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.380865469 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.382014774 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.42347936 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.505910056 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.395386776 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.380507286 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.497447061 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.378364292 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.371615427 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.422540493 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.38080331 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.38172313 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.42596578 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.379273215 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.380787927 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.498214605 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.382336224 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.376805109 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.499762093 seconds)
  done (took 43.526736106 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.382344649 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.626416309 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.811520283 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.387795577 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380974332 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.38530692 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.459306025 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.383708582 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.386757877 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.384218333 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.553054376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.384702073 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416037578 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.83867839 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.387120248 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.382925935 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.382318198 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383632328 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.6352159 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394269429 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.480432762 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.383764164 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.461839785 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.393941914 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.406225048 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384880812 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.388637231 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.968355105 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.386196178 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.55193122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.17954299 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.463081588 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.911899555 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.823224702 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.1700224 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391055414 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.388742345 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.555447981 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.387044304 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.384183032 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.461916883 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.384754834 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.823498654 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.046927211 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.405579061 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.385309514 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.990479903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.556066889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.625753859 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39547729 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.852543138 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.39177467 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.386665086 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.386566521 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.626300513 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387284327 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.385644108 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.992970414 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.407921693 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.464139599 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.387287837 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.388163981 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.642376109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.391696665 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.631964274 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.389515553 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.394298228 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.405276817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.832609719 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.394399913 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.068442187 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.404570433 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.386997437 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.556919377 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.633627102 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.027555168 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.411893951 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.636464819 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923546403 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.463578719 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.394317069 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.962820341 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.465189684 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.394386276 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.389287159 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.389746095 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.387929453 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.43510493 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.46425998 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.99854619 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053898317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.014205065 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.482822986 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.402086348 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.387939136 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.998776557 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.406473889 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.389314089 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.829870007 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080730964 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.405737806 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395779361 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.075800918 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.410524883 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.469193822 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.395169458 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.840334762 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.391265737 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.437344633 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.390551448 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.397795024 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.413354318 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.469603801 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.39472283 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.39038273 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.055069658 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.583271197 seconds)
  done (took 183.058636067 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.384984508 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.399664477 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.382741982 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.402057396 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.383148968 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.39235877 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.38643974 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.384404252 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.39334208 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.385286495 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.384766502 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.395618912 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.392497372 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.387337101 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.384839514 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.386972081 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.384349082 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.389198846 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.386382822 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.383285957 seconds)
  done (took 45.052714293 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.38917709 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.946705464 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.524894678 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.416717478 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.391229814 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.392405714 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.447942578 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.390387891 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.390761946 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.689062751 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.565746373 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.40745621 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.388506207 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.390191757 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.524467897 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.405282254 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.691456815 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.949242421 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.392926218 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.947705213 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.384066334 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.392532992 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.392064978 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.947577002 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.691040955 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.469411407 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.451510487 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.948340793 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.391957936 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.392696887 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.949746292 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.395937238 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.394885527 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.941572585 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.411097073 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.397904384 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.39237635 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.45333923 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.453245499 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.697247151 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031608943 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.469862756 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.409505613 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.731962 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.396533762 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.383561948 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.951162231 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.413352566 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.382466406 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.392735399 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.399600243 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.539851217 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394645699 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.538570434 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.39312673 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.398809796 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.95338848 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.541340893 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.526683356 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.58661511 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.409847036 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.470953814 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.392537045 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.952820941 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41195883 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396492692 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.39585792 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.568125805 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.969728964 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.471647991 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.694770118 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.69760653 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.398098717 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.455002439 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.412472739 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.76432533 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.451746915 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.804297862 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.697026997 seconds)
  done (took 123.528585371 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.631686471 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.502893705 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.543621463 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.000924678 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.389386084 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520425891 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504584345 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.653424929 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.392820638 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.485277025 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.606592223 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.470171296 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.103356975 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.467422292 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.488483131 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540471559 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.533881899 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.392668814 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.029137027 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.584646162 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.413528133 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.520909865 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.982188863 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.564520018 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.392521832 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.928282185 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.316210201 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.05346135 seconds)
  done (took 52.300777898 seconds)
done (took 510.548906531 seconds)
SAVING RESULT...
DONE!
